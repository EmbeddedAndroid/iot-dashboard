/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/ 		if(moreModules[0]) {
/******/ 			installedModules[0] = 0;
/******/ 			return __webpack_require__(0);
/******/ 		}
/******/ 	};

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		2:0
/******/ 	};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}

/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);

/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;

/******/ 			script.src = __webpack_require__.p + "chunk." + chunkId + ".js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};

/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(20);
	__webpack_require__(43);
	__webpack_require__(70);
	__webpack_require__(40);
	__webpack_require__(45);
	__webpack_require__(44);
	__webpack_require__(103);
	__webpack_require__(102);
	__webpack_require__(89);
	__webpack_require__(12);
	__webpack_require__(2);
	__webpack_require__(13);
	__webpack_require__(15);
	__webpack_require__(25);
	__webpack_require__(26);
	__webpack_require__(182);
	__webpack_require__(21);
	__webpack_require__(30);
	__webpack_require__(65);
	module.exports = __webpack_require__(36);


/***/ },

/***/ 2:
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },

/***/ 4:
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },

/***/ 12:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery) { /*
	 * # Semantic UI - 2.1.7
	 * https://github.com/Semantic-Org/Semantic-UI
	 * http://www.semantic-ui.com/
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */
	/*!
	 * # Semantic UI 2.1.7 - Site
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */
	;(function ( $, window, document, undefined ) {

	$.site = $.fn.site = function(parameters) {
	  var
	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),

	    settings        = ( $.isPlainObject(parameters) )
	      ? $.extend(true, {}, $.site.settings, parameters)
	      : $.extend({}, $.site.settings),

	    namespace       = settings.namespace,
	    error           = settings.error,

	    eventNamespace  = '.' + namespace,
	    moduleNamespace = 'module-' + namespace,

	    $document       = $(document),
	    $module         = $document,
	    element         = this,
	    instance        = $module.data(moduleNamespace),

	    module,
	    returnedValue
	  ;
	  module = {

	    initialize: function() {
	      module.instantiate();
	    },

	    instantiate: function() {
	      module.verbose('Storing instance of site', module);
	      instance = module;
	      $module
	        .data(moduleNamespace, module)
	      ;
	    },

	    normalize: function() {
	      module.fix.console();
	      module.fix.requestAnimationFrame();
	    },

	    fix: {
	      console: function() {
	        module.debug('Normalizing window.console');
	        if (console === undefined || console.log === undefined) {
	          module.verbose('Console not available, normalizing events');
	          module.disable.console();
	        }
	        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {
	          module.verbose('Console group not available, normalizing events');
	          window.console.group = function() {};
	          window.console.groupEnd = function() {};
	          window.console.groupCollapsed = function() {};
	        }
	        if (typeof console.markTimeline == 'undefined') {
	          module.verbose('Mark timeline not available, normalizing events');
	          window.console.markTimeline = function() {};
	        }
	      },
	      consoleClear: function() {
	        module.debug('Disabling programmatic console clearing');
	        window.console.clear = function() {};
	      },
	      requestAnimationFrame: function() {
	        module.debug('Normalizing requestAnimationFrame');
	        if(window.requestAnimationFrame === undefined) {
	          module.debug('RequestAnimationFrame not available, normalizing event');
	          window.requestAnimationFrame = window.requestAnimationFrame
	            || window.mozRequestAnimationFrame
	            || window.webkitRequestAnimationFrame
	            || window.msRequestAnimationFrame
	            || function(callback) { setTimeout(callback, 0); }
	          ;
	        }
	      }
	    },

	    moduleExists: function(name) {
	      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);
	    },

	    enabled: {
	      modules: function(modules) {
	        var
	          enabledModules = []
	        ;
	        modules = modules || settings.modules;
	        $.each(modules, function(index, name) {
	          if(module.moduleExists(name)) {
	            enabledModules.push(name);
	          }
	        });
	        return enabledModules;
	      }
	    },

	    disabled: {
	      modules: function(modules) {
	        var
	          disabledModules = []
	        ;
	        modules = modules || settings.modules;
	        $.each(modules, function(index, name) {
	          if(!module.moduleExists(name)) {
	            disabledModules.push(name);
	          }
	        });
	        return disabledModules;
	      }
	    },

	    change: {
	      setting: function(setting, value, modules, modifyExisting) {
	        modules = (typeof modules === 'string')
	          ? (modules === 'all')
	            ? settings.modules
	            : [modules]
	          : modules || settings.modules
	        ;
	        modifyExisting = (modifyExisting !== undefined)
	          ? modifyExisting
	          : true
	        ;
	        $.each(modules, function(index, name) {
	          var
	            namespace = (module.moduleExists(name))
	              ? $.fn[name].settings.namespace || false
	              : true,
	            $existingModules
	          ;
	          if(module.moduleExists(name)) {
	            module.verbose('Changing default setting', setting, value, name);
	            $.fn[name].settings[setting] = value;
	            if(modifyExisting && namespace) {
	              $existingModules = $(':data(module-' + namespace + ')');
	              if($existingModules.length > 0) {
	                module.verbose('Modifying existing settings', $existingModules);
	                $existingModules[name]('setting', setting, value);
	              }
	            }
	          }
	        });
	      },
	      settings: function(newSettings, modules, modifyExisting) {
	        modules = (typeof modules === 'string')
	          ? [modules]
	          : modules || settings.modules
	        ;
	        modifyExisting = (modifyExisting !== undefined)
	          ? modifyExisting
	          : true
	        ;
	        $.each(modules, function(index, name) {
	          var
	            $existingModules
	          ;
	          if(module.moduleExists(name)) {
	            module.verbose('Changing default setting', newSettings, name);
	            $.extend(true, $.fn[name].settings, newSettings);
	            if(modifyExisting && namespace) {
	              $existingModules = $(':data(module-' + namespace + ')');
	              if($existingModules.length > 0) {
	                module.verbose('Modifying existing settings', $existingModules);
	                $existingModules[name]('setting', newSettings);
	              }
	            }
	          }
	        });
	      }
	    },

	    enable: {
	      console: function() {
	        module.console(true);
	      },
	      debug: function(modules, modifyExisting) {
	        modules = modules || settings.modules;
	        module.debug('Enabling debug for modules', modules);
	        module.change.setting('debug', true, modules, modifyExisting);
	      },
	      verbose: function(modules, modifyExisting) {
	        modules = modules || settings.modules;
	        module.debug('Enabling verbose debug for modules', modules);
	        module.change.setting('verbose', true, modules, modifyExisting);
	      }
	    },
	    disable: {
	      console: function() {
	        module.console(false);
	      },
	      debug: function(modules, modifyExisting) {
	        modules = modules || settings.modules;
	        module.debug('Disabling debug for modules', modules);
	        module.change.setting('debug', false, modules, modifyExisting);
	      },
	      verbose: function(modules, modifyExisting) {
	        modules = modules || settings.modules;
	        module.debug('Disabling verbose debug for modules', modules);
	        module.change.setting('verbose', false, modules, modifyExisting);
	      }
	    },

	    console: function(enable) {
	      if(enable) {
	        if(instance.cache.console === undefined) {
	          module.error(error.console);
	          return;
	        }
	        module.debug('Restoring console function');
	        window.console = instance.cache.console;
	      }
	      else {
	        module.debug('Disabling console function');
	        instance.cache.console = window.console;
	        window.console = {
	          clear          : function(){},
	          error          : function(){},
	          group          : function(){},
	          groupCollapsed : function(){},
	          groupEnd       : function(){},
	          info           : function(){},
	          log            : function(){},
	          markTimeline   : function(){},
	          warn           : function(){}
	        };
	      }
	    },

	    destroy: function() {
	      module.verbose('Destroying previous site for', $module);
	      $module
	        .removeData(moduleNamespace)
	      ;
	    },

	    cache: {},

	    setting: function(name, value) {
	      if( $.isPlainObject(name) ) {
	        $.extend(true, settings, name);
	      }
	      else if(value !== undefined) {
	        settings[name] = value;
	      }
	      else {
	        return settings[name];
	      }
	    },
	    internal: function(name, value) {
	      if( $.isPlainObject(name) ) {
	        $.extend(true, module, name);
	      }
	      else if(value !== undefined) {
	        module[name] = value;
	      }
	      else {
	        return module[name];
	      }
	    },
	    debug: function() {
	      if(settings.debug) {
	        if(settings.performance) {
	          module.performance.log(arguments);
	        }
	        else {
	          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	          module.debug.apply(console, arguments);
	        }
	      }
	    },
	    verbose: function() {
	      if(settings.verbose && settings.debug) {
	        if(settings.performance) {
	          module.performance.log(arguments);
	        }
	        else {
	          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	          module.verbose.apply(console, arguments);
	        }
	      }
	    },
	    error: function() {
	      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	      module.error.apply(console, arguments);
	    },
	    performance: {
	      log: function(message) {
	        var
	          currentTime,
	          executionTime,
	          previousTime
	        ;
	        if(settings.performance) {
	          currentTime   = new Date().getTime();
	          previousTime  = time || currentTime;
	          executionTime = currentTime - previousTime;
	          time          = currentTime;
	          performance.push({
	            'Element'        : element,
	            'Name'           : message[0],
	            'Arguments'      : [].slice.call(message, 1) || '',
	            'Execution Time' : executionTime
	          });
	        }
	        clearTimeout(module.performance.timer);
	        module.performance.timer = setTimeout(module.performance.display, 500);
	      },
	      display: function() {
	        var
	          title = settings.name + ':',
	          totalTime = 0
	        ;
	        time = false;
	        clearTimeout(module.performance.timer);
	        $.each(performance, function(index, data) {
	          totalTime += data['Execution Time'];
	        });
	        title += ' ' + totalTime + 'ms';
	        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	          console.groupCollapsed(title);
	          if(console.table) {
	            console.table(performance);
	          }
	          else {
	            $.each(performance, function(index, data) {
	              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	            });
	          }
	          console.groupEnd();
	        }
	        performance = [];
	      }
	    },
	    invoke: function(query, passedArguments, context) {
	      var
	        object = instance,
	        maxDepth,
	        found,
	        response
	      ;
	      passedArguments = passedArguments || queryArguments;
	      context         = element         || context;
	      if(typeof query == 'string' && object !== undefined) {
	        query    = query.split(/[\. ]/);
	        maxDepth = query.length - 1;
	        $.each(query, function(depth, value) {
	          var camelCaseValue = (depth != maxDepth)
	            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	            : query
	          ;
	          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	            object = object[camelCaseValue];
	          }
	          else if( object[camelCaseValue] !== undefined ) {
	            found = object[camelCaseValue];
	            return false;
	          }
	          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	            object = object[value];
	          }
	          else if( object[value] !== undefined ) {
	            found = object[value];
	            return false;
	          }
	          else {
	            module.error(error.method, query);
	            return false;
	          }
	        });
	      }
	      if ( $.isFunction( found ) ) {
	        response = found.apply(context, passedArguments);
	      }
	      else if(found !== undefined) {
	        response = found;
	      }
	      if($.isArray(returnedValue)) {
	        returnedValue.push(response);
	      }
	      else if(returnedValue !== undefined) {
	        returnedValue = [returnedValue, response];
	      }
	      else if(response !== undefined) {
	        returnedValue = response;
	      }
	      return found;
	    }
	  };

	  if(methodInvoked) {
	    if(instance === undefined) {
	      module.initialize();
	    }
	    module.invoke(query);
	  }
	  else {
	    if(instance !== undefined) {
	      module.destroy();
	    }
	    module.initialize();
	  }
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.site.settings = {

	  name        : 'Site',
	  namespace   : 'site',

	  error : {
	    console : 'Console cannot be restored, most likely it was overwritten outside of module',
	    method : 'The method you called is not defined.'
	  },

	  debug       : false,
	  verbose     : false,
	  performance : true,

	  modules: [
	    'accordion',
	    'api',
	    'checkbox',
	    'dimmer',
	    'dropdown',
	    'embed',
	    'form',
	    'modal',
	    'nag',
	    'popup',
	    'rating',
	    'shape',
	    'sidebar',
	    'state',
	    'sticky',
	    'tab',
	    'transition',
	    'visit',
	    'visibility'
	  ],

	  siteNamespace   : 'site',
	  namespaceStub   : {
	    cache     : {},
	    config    : {},
	    sections  : {},
	    section   : {},
	    utilities : {}
	  }

	};

	// allows for selection of elements with data attributes
	$.extend($.expr[ ":" ], {
	  data: ($.expr.createPseudo)
	    ? $.expr.createPseudo(function(dataName) {
	        return function(elem) {
	          return !!$.data(elem, dataName);
	        };
	      })
	    : function(elem, i, match) {
	      // support: jQuery < 1.8
	      return !!$.data(elem, match[ 3 ]);
	    }
	});


	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Form Validation
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.form = function(parameters) {
	  var
	    $allModules      = $(this),
	    moduleSelector   = $allModules.selector || '',

	    time             = new Date().getTime(),
	    performance      = [],

	    query            = arguments[0],
	    legacyParameters = arguments[1],
	    methodInvoked    = (typeof query == 'string'),
	    queryArguments   = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        $module     = $(this),
	        element     = this,

	        formErrors  = [],
	        keyHeldDown = false,

	        // set at run-time
	        $field,
	        $group,
	        $message,
	        $prompt,
	        $submit,
	        $clear,
	        $reset,

	        settings,
	        validation,

	        metadata,
	        selector,
	        className,
	        error,

	        namespace,
	        moduleNamespace,
	        eventNamespace,

	        instance,
	        module
	      ;

	      module      = {

	        initialize: function() {

	          // settings grabbed at run time
	          module.get.settings();
	          if(methodInvoked) {
	            if(instance === undefined) {
	              module.instantiate();
	            }
	            module.invoke(query);
	          }
	          else {
	            module.verbose('Initializing form validation', $module, settings);
	            module.bindEvents();
	            module.set.defaults();
	            module.instantiate();
	          }
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', instance);
	          module.removeEvents();
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $field      = $module.find(selector.field);
	          $group      = $module.find(selector.group);
	          $message    = $module.find(selector.message);
	          $prompt     = $module.find(selector.prompt);

	          $submit     = $module.find(selector.submit);
	          $clear      = $module.find(selector.clear);
	          $reset      = $module.find(selector.reset);
	        },

	        submit: function() {
	          module.verbose('Submitting form', $module);
	          $module
	            .submit()
	          ;
	        },

	        attachEvents: function(selector, action) {
	          action = action || 'submit';
	          $(selector)
	            .on('click' + eventNamespace, function(event) {
	              module[action]();
	              event.preventDefault();
	            })
	          ;
	        },

	        bindEvents: function() {
	          module.verbose('Attaching form events');
	          $module
	            .on('submit' + eventNamespace, module.validate.form)
	            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)
	            .on('click'  + eventNamespace, selector.submit, module.submit)
	            .on('click'  + eventNamespace, selector.reset, module.reset)
	            .on('click'  + eventNamespace, selector.clear, module.clear)
	          ;
	          if(settings.keyboardShortcuts) {
	            $module
	              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)
	            ;
	          }
	          $field
	            .each(function() {
	              var
	                $input     = $(this),
	                type       = $input.prop('type'),
	                inputEvent = module.get.changeEvent(type, $input)
	              ;
	              $(this)
	                .on(inputEvent + eventNamespace, module.event.field.change)
	              ;
	            })
	          ;
	        },

	        clear: function() {
	          $field
	            .each(function () {
	              var
	                $field       = $(this),
	                $element     = $field.parent(),
	                $fieldGroup  = $field.closest($group),
	                $prompt      = $fieldGroup.find(selector.prompt),
	                defaultValue = $field.data(metadata.defaultValue) || '',
	                isCheckbox   = $element.is(selector.uiCheckbox),
	                isDropdown   = $element.is(selector.uiDropdown),
	                isErrored    = $fieldGroup.hasClass(className.error)
	              ;
	              if(isErrored) {
	                module.verbose('Resetting error on field', $fieldGroup);
	                $fieldGroup.removeClass(className.error);
	                $prompt.remove();
	              }
	              if(isDropdown) {
	                module.verbose('Resetting dropdown value', $element, defaultValue);
	                $element.dropdown('clear');
	              }
	              else if(isCheckbox) {
	                $field.prop('checked', false);
	              }
	              else {
	                module.verbose('Resetting field value', $field, defaultValue);
	                $field.val('');
	              }
	            })
	          ;
	        },

	        reset: function() {
	          $field
	            .each(function () {
	              var
	                $field       = $(this),
	                $element     = $field.parent(),
	                $fieldGroup  = $field.closest($group),
	                $prompt      = $fieldGroup.find(selector.prompt),
	                defaultValue = $field.data(metadata.defaultValue),
	                isCheckbox   = $element.is(selector.uiCheckbox),
	                isDropdown   = $element.is(selector.uiDropdown),
	                isErrored    = $fieldGroup.hasClass(className.error)
	              ;
	              if(defaultValue === undefined) {
	                return;
	              }
	              if(isErrored) {
	                module.verbose('Resetting error on field', $fieldGroup);
	                $fieldGroup.removeClass(className.error);
	                $prompt.remove();
	              }
	              if(isDropdown) {
	                module.verbose('Resetting dropdown value', $element, defaultValue);
	                $element.dropdown('restore defaults');
	              }
	              else if(isCheckbox) {
	                module.verbose('Resetting checkbox value', $element, defaultValue);
	                $field.prop('checked', defaultValue);
	              }
	              else {
	                module.verbose('Resetting field value', $field, defaultValue);
	                $field.val(defaultValue);
	              }
	            })
	          ;
	        },

	        is: {
	          bracketedRule: function(rule) {
	            return (rule.type && rule.type.match(settings.regExp.bracket));
	          },
	          valid: function() {
	            var
	              allValid = true
	            ;
	            module.verbose('Checking if form is valid');
	            $.each(validation, function(fieldName, field) {
	              if( !( module.validate.field(field, fieldName) ) ) {
	                allValid = false;
	              }
	            });
	            return allValid;
	          }
	        },

	        removeEvents: function() {
	          $module
	            .off(eventNamespace)
	          ;
	          $field
	            .off(eventNamespace)
	          ;
	          $submit
	            .off(eventNamespace)
	          ;
	          $field
	            .off(eventNamespace)
	          ;
	        },

	        event: {
	          field: {
	            keydown: function(event) {
	              var
	                $field  = $(this),
	                key     = event.which,
	                keyCode = {
	                  enter  : 13,
	                  escape : 27
	                }
	              ;
	              if( key == keyCode.escape) {
	                module.verbose('Escape key pressed blurring field');
	                $field
	                  .blur()
	                ;
	              }
	              if(!event.ctrlKey && key == keyCode.enter && $field.is(selector.input) && $field.not(selector.checkbox).length > 0 ) {
	                if(!keyHeldDown) {
	                  $field
	                    .one('keyup' + eventNamespace, module.event.field.keyup)
	                  ;
	                  module.submit();
	                  module.debug('Enter pressed on input submitting form');
	                }
	                keyHeldDown = true;
	              }
	            },
	            keyup: function() {
	              keyHeldDown = false;
	            },
	            blur: function(event) {
	              var
	                $field          = $(this),
	                $fieldGroup     = $field.closest($group),
	                validationRules = module.get.validation($field)
	              ;
	              if( $fieldGroup.hasClass(className.error) ) {
	                module.debug('Revalidating field', $field, validationRules);
	                module.validate.form.call(module, event, true);
	              }
	              else if(settings.on == 'blur' || settings.on == 'change') {
	                if(validationRules) {
	                  module.validate.field( validationRules );
	                }
	              }
	            },
	            change: function(event) {
	              var
	                $field      = $(this),
	                $fieldGroup = $field.closest($group)
	              ;
	              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {
	                clearTimeout(module.timer);
	                module.timer = setTimeout(function() {
	                  module.debug('Revalidating field', $field,  module.get.validation($field));
	                  module.validate.form.call(module, event, true);
	                }, settings.delay);
	              }
	            }
	          }

	        },

	        get: {
	          ancillaryValue: function(rule) {
	            if(!rule.type || !module.is.bracketedRule(rule)) {
	              return false;
	            }
	            return rule.type.match(settings.regExp.bracket)[1] + '';
	          },
	          ruleName: function(rule) {
	            if( module.is.bracketedRule(rule) ) {
	              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');
	            }
	            return rule.type;
	          },
	          changeEvent: function(type, $input) {
	            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {
	              return 'change';
	            }
	            else {
	              return module.get.inputEvent();
	            }
	          },
	          inputEvent: function() {
	            return (document.createElement('input').oninput !== undefined)
	              ? 'input'
	              : (document.createElement('input').onpropertychange !== undefined)
	                ? 'propertychange'
	                : 'keyup'
	            ;
	          },
	          prompt: function(rule, field) {
	            var
	              ruleName      = module.get.ruleName(rule),
	              ancillary     = module.get.ancillaryValue(rule),
	              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,
	              requiresValue = (prompt.search('{value}') !== -1),
	              requiresName  = (prompt.search('{name}') !== -1),
	              $label,
	              $field,
	              name
	            ;
	            if(requiresName || requiresValue) {
	              $field = module.get.field(field.identifier);
	            }
	            if(requiresValue) {
	              prompt = prompt.replace('{value}', $field.val());
	            }
	            if(requiresName) {
	              $label = $field.closest(selector.group).find('label').eq(0);
	              name = ($label.size() == 1)
	                ? $label.text()
	                : $field.prop('placeholder') || settings.text.unspecifiedField
	              ;
	              prompt = prompt.replace('{name}', name);
	            }
	            prompt = prompt.replace('{identifier}', field.identifier);
	            prompt = prompt.replace('{ruleValue}', ancillary);
	            if(!rule.prompt) {
	              module.verbose('Using default validation prompt for type', prompt, ruleName);
	            }
	            return prompt;
	          },
	          settings: function() {
	            if($.isPlainObject(parameters)) {
	              var
	                keys     = Object.keys(parameters),
	                isLegacySettings = (keys.length > 0)
	                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)
	                  : false,
	                ruleKeys
	              ;
	              if(isLegacySettings) {
	                // 1.x (ducktyped)
	                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);
	                validation = $.extend({}, $.fn.form.settings.defaults, parameters);
	                module.error(settings.error.oldSyntax, element);
	                module.verbose('Extending settings from legacy parameters', validation, settings);
	              }
	              else {
	                // 2.x
	                if(parameters.fields) {
	                  ruleKeys = Object.keys(parameters.fields);
	                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {
	                    $.each(parameters.fields, function(name, rules) {
	                      if(typeof rules == 'string') {
	                        rules = [rules];
	                      }
	                      parameters.fields[name] = {
	                        rules: []
	                      };
	                      $.each(rules, function(index, rule) {
	                        parameters.fields[name].rules.push({ type: rule });
	                      });
	                    });
	                  }
	                }

	                settings   = $.extend(true, {}, $.fn.form.settings, parameters);
	                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);
	                module.verbose('Extending settings', validation, settings);
	              }
	            }
	            else {
	              settings   = $.fn.form.settings;
	              validation = $.fn.form.settings.defaults;
	              module.verbose('Using default form validation', validation, settings);
	            }

	            // shorthand
	            namespace       = settings.namespace;
	            metadata        = settings.metadata;
	            selector        = settings.selector;
	            className       = settings.className;
	            error           = settings.error;
	            moduleNamespace = 'module-' + namespace;
	            eventNamespace  = '.' + namespace;

	            // grab instance
	            instance = $module.data(moduleNamespace);

	            // refresh selector cache
	            module.refresh();
	          },
	          field: function(identifier) {
	            module.verbose('Finding field with identifier', identifier);
	            if( $field.filter('#' + identifier).length > 0 ) {
	              return $field.filter('#' + identifier);
	            }
	            else if( $field.filter('[name="' + identifier +'"]').length > 0 ) {
	              return $field.filter('[name="' + identifier +'"]');
	            }
	            else if( $field.filter('[name="' + identifier +'[]"]').length > 0 ) {
	              return $field.filter('[name="' + identifier +'[]"]');
	            }
	            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').length > 0 ) {
	              return $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]');
	            }
	            return $('<input/>');
	          },
	          fields: function(fields) {
	            var
	              $fields = $()
	            ;
	            $.each(fields, function(index, name) {
	              $fields = $fields.add( module.get.field(name) );
	            });
	            return $fields;
	          },
	          validation: function($field) {
	            var
	              fieldValidation,
	              identifier
	            ;
	            if(!validation) {
	              return false;
	            }
	            $.each(validation, function(fieldName, field) {
	              identifier = field.identifier || fieldName;
	              if( module.get.field(identifier)[0] == $field[0] ) {
	                field.identifier = identifier;
	                fieldValidation = field;
	              }
	            });
	            return fieldValidation || false;
	          },
	          value: function (field) {
	            var
	              fields = [],
	              results
	            ;
	            fields.push(field);
	            results = module.get.values.call(element, fields);
	            return results[field];
	          },
	          values: function (fields) {
	            var
	              $fields = $.isArray(fields)
	                ? module.get.fields(fields)
	                : $field,
	              values = {}
	            ;
	            $fields.each(function(index, field) {
	              var
	                $field     = $(field),
	                type       = $field.prop('type'),
	                name       = $field.prop('name'),
	                value      = $field.val(),
	                isCheckbox = $field.is(selector.checkbox),
	                isRadio    = $field.is(selector.radio),
	                isMultiple = (name.indexOf('[]') !== -1),
	                isChecked  = (isCheckbox)
	                  ? $field.is(':checked')
	                  : false
	              ;
	              if(name) {
	                if(isMultiple) {
	                  name = name.replace('[]', '');
	                  if(!values[name]) {
	                    values[name] = [];
	                  }
	                  if(isCheckbox) {
	                    if(isChecked) {
	                      values[name].push(value || true);
	                    }
	                    else {
	                      values[name].push(false);
	                    }
	                  }
	                  else {
	                    values[name].push(value);
	                  }
	                }
	                else {
	                  if(isRadio) {
	                    if(isChecked) {
	                      values[name] = value;
	                    }
	                  }
	                  else if(isCheckbox) {
	                    if(isChecked) {
	                      values[name] = value || true;
	                    }
	                    else {
	                      values[name] = false;
	                    }
	                  }
	                  else {
	                    values[name] = value;
	                  }
	                }
	              }
	            });
	            return values;
	          }
	        },

	        has: {

	          field: function(identifier) {
	            module.verbose('Checking for existence of a field with identifier', identifier);
	            if(typeof identifier !== 'string') {
	              module.error(error.identifier, identifier);
	            }
	            if( $field.filter('#' + identifier).length > 0 ) {
	              return true;
	            }
	            else if( $field.filter('[name="' + identifier +'"]').length > 0 ) {
	              return true;
	            }
	            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').length > 0 ) {
	              return true;
	            }
	            return false;
	          }

	        },

	        add: {
	          prompt: function(identifier, errors) {
	            var
	              $field       = module.get.field(identifier),
	              $fieldGroup  = $field.closest($group),
	              $prompt      = $fieldGroup.children(selector.prompt),
	              promptExists = ($prompt.length !== 0)
	            ;
	            errors = (typeof errors == 'string')
	              ? [errors]
	              : errors
	            ;
	            module.verbose('Adding field error state', identifier);
	            $fieldGroup
	              .addClass(className.error)
	            ;
	            if(settings.inline) {
	              if(!promptExists) {
	                $prompt = settings.templates.prompt(errors);
	                $prompt
	                  .appendTo($fieldGroup)
	                ;
	              }
	              $prompt
	                .html(errors[0])
	              ;
	              if(!promptExists) {
	                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	                  module.verbose('Displaying error with css transition', settings.transition);
	                  $prompt.transition(settings.transition + ' in', settings.duration);
	                }
	                else {
	                  module.verbose('Displaying error with fallback javascript animation');
	                  $prompt
	                    .fadeIn(settings.duration)
	                  ;
	                }
	              }
	              else {
	                module.verbose('Inline errors are disabled, no inline error added', identifier);
	              }
	            }
	          },
	          errors: function(errors) {
	            module.debug('Adding form error messages', errors);
	            module.set.error();
	            $message
	              .html( settings.templates.error(errors) )
	            ;
	          }
	        },

	        remove: {
	          prompt: function(identifier) {
	            var
	              $field      = module.get.field(identifier),
	              $fieldGroup = $field.closest($group),
	              $prompt     = $fieldGroup.children(selector.prompt)
	            ;
	            $fieldGroup
	              .removeClass(className.error)
	            ;
	            if(settings.inline && $prompt.is(':visible')) {
	              module.verbose('Removing prompt for field', identifier);
	              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	                $prompt.transition(settings.transition + ' out', settings.duration, function() {
	                  $prompt.remove();
	                });
	              }
	              else {
	                $prompt
	                  .fadeOut(settings.duration, function(){
	                    $prompt.remove();
	                  })
	                ;
	              }
	            }
	          }
	        },

	        set: {
	          success: function() {
	            $module
	              .removeClass(className.error)
	              .addClass(className.success)
	            ;
	          },
	          defaults: function () {
	            $field
	              .each(function () {
	                var
	                  $field     = $(this),
	                  isCheckbox = ($field.filter(selector.checkbox).length > 0),
	                  value      = (isCheckbox)
	                    ? $field.is(':checked')
	                    : $field.val()
	                ;
	                $field.data(metadata.defaultValue, value);
	              })
	            ;
	          },
	          error: function() {
	            $module
	              .removeClass(className.success)
	              .addClass(className.error)
	            ;
	          },
	          value: function (field, value) {
	            var
	              fields = {}
	            ;
	            fields[field] = value;
	            return module.set.values.call(element, fields);
	          },
	          values: function (fields) {
	            if($.isEmptyObject(fields)) {
	              return;
	            }
	            $.each(fields, function(key, value) {
	              var
	                $field      = module.get.field(key),
	                $element    = $field.parent(),
	                isMultiple  = $.isArray(value),
	                isCheckbox  = $element.is(selector.uiCheckbox),
	                isDropdown  = $element.is(selector.uiDropdown),
	                isRadio     = ($field.is(selector.radio) && isCheckbox),
	                fieldExists = ($field.length > 0),
	                $multipleField
	              ;
	              if(fieldExists) {
	                if(isMultiple && isCheckbox) {
	                  module.verbose('Selecting multiple', value, $field);
	                  $element.checkbox('uncheck');
	                  $.each(value, function(index, value) {
	                    $multipleField = $field.filter('[value="' + value + '"]');
	                    $element       = $multipleField.parent();
	                    if($multipleField.length > 0) {
	                      $element.checkbox('check');
	                    }
	                  });
	                }
	                else if(isRadio) {
	                  module.verbose('Selecting radio value', value, $field);
	                  $field.filter('[value="' + value + '"]')
	                    .parent(selector.uiCheckbox)
	                      .checkbox('check')
	                  ;
	                }
	                else if(isCheckbox) {
	                  module.verbose('Setting checkbox value', value, $element);
	                  if(value === true) {
	                    $element.checkbox('check');
	                  }
	                  else {
	                    $element.checkbox('uncheck');
	                  }
	                }
	                else if(isDropdown) {
	                  module.verbose('Setting dropdown value', value, $element);
	                  $element.dropdown('set selected', value);
	                }
	                else {
	                  module.verbose('Setting field value', value, $field);
	                  $field.val(value);
	                }
	              }
	            });
	          }
	        },

	        validate: {

	          form: function(event, ignoreCallbacks) {
	            var
	              values = module.get.values(),
	              apiRequest
	            ;

	            // input keydown event will fire submit repeatedly by browser default
	            if(keyHeldDown) {
	              return false;
	            }

	            // reset errors
	            formErrors = [];
	            if( module.is.valid() ) {
	              module.debug('Form has no validation errors, submitting');
	              module.set.success();
	              if(ignoreCallbacks !== true) {
	                return settings.onSuccess.call(element, event, values);
	              }
	            }
	            else {
	              module.debug('Form has errors');
	              module.set.error();
	              if(!settings.inline) {
	                module.add.errors(formErrors);
	              }
	              // prevent ajax submit
	              if($module.data('moduleApi') !== undefined) {
	                event.stopImmediatePropagation();
	              }
	              if(ignoreCallbacks !== true) {
	                return settings.onFailure.call(element, formErrors, values);
	              }
	            }
	          },

	          // takes a validation object and returns whether field passes validation
	          field: function(field, fieldName) {
	            var
	              identifier  = field.identifier || fieldName,
	              $field      = module.get.field(identifier),
	              fieldValid  = true,
	              fieldErrors = []
	            ;
	            if(!field.identifier) {
	              module.debug('Using field name as identifier', identifier);
	              field.identifier = identifier;
	            }
	            if($field.prop('disabled')) {
	              module.debug('Field is disabled. Skipping', identifier);
	              fieldValid = true;
	            }
	            else if(field.optional && $.trim($field.val()) === ''){
	              module.debug('Field is optional and empty. Skipping', identifier);
	              fieldValid = true;
	            }
	            else if(field.rules !== undefined) {
	              $.each(field.rules, function(index, rule) {
	                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {
	                  module.debug('Field is invalid', identifier, rule.type);
	                  fieldErrors.push(module.get.prompt(rule, field));
	                  fieldValid = false;
	                }
	              });
	            }
	            if(fieldValid) {
	              module.remove.prompt(identifier, fieldErrors);
	              settings.onValid.call($field);
	            }
	            else {
	              formErrors = formErrors.concat(fieldErrors);
	              module.add.prompt(identifier, fieldErrors);
	              settings.onInvalid.call($field, fieldErrors);
	              return false;
	            }
	            return true;
	          },

	          // takes validation rule and returns whether field passes rule
	          rule: function(field, rule) {
	            var
	              $field       = module.get.field(field.identifier),
	              type         = rule.type,
	              value        = $field.val(),
	              isValid      = true,
	              ancillary    = module.get.ancillaryValue(rule),
	              ruleName     = module.get.ruleName(rule),
	              ruleFunction = settings.rules[ruleName]
	            ;
	            if( !$.isFunction(ruleFunction) ) {
	              module.error(error.noRule, ruleName);
	              return;
	            }
	            // cast to string avoiding encoding special values
	            value = (value === undefined || value === '' || value === null)
	              ? ''
	              : $.trim(value + '')
	            ;
	            return ruleFunction.call($field, value, ancillary);
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      module.initialize();
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.form.settings = {

	  name              : 'Form',
	  namespace         : 'form',

	  debug             : false,
	  verbose           : false,
	  performance       : true,

	  fields            : false,

	  keyboardShortcuts : true,
	  on                : 'submit',
	  inline            : false,

	  delay             : 200,
	  revalidate        : true,

	  transition        : 'scale',
	  duration          : 200,

	  onValid           : function() {},
	  onInvalid         : function() {},
	  onSuccess         : function() { return true; },
	  onFailure         : function() { return false; },

	  metadata : {
	    defaultValue : 'default',
	    validate     : 'validate'
	  },

	  regExp: {
	    bracket : /\[(.*)\]/i,
	    decimal : /^\d*(\.)\d+/,
	    email   : "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
	    escape  : /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
	    flags   : /^\/(.*)\/(.*)?/,
	    integer : /^\-?\d+$/,
	    number  : /^\-?\d*(\.\d+)?$/,
	    url     : /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i
	  },

	  text: {
	    unspecifiedRule  : 'Please enter a valid value',
	    unspecifiedField : 'This field'
	  },

	  prompt: {
	    empty                : '{name} must have a value',
	    checked              : '{name} must be checked',
	    email                : '{name} must be a valid e-mail',
	    url                  : '{name} must be a valid url',
	    regExp               : '{name} is not formatted correctly',
	    integer              : '{name} must be an integer',
	    decimal              : '{name} must be a decimal number',
	    number               : '{name} must be set to a number',
	    is                   : '{name} must be "{ruleValue}"',
	    isExactly            : '{name} must be exactly "{ruleValue}"',
	    not                  : '{name} cannot be set to "{ruleValue}"',
	    notExactly           : '{name} cannot be set to exactly "{ruleValue}"',
	    contain              : '{name} cannot contain "{ruleValue}"',
	    containExactly       : '{name} cannot contain exactly "{ruleValue}"',
	    doesntContain        : '{name} must contain  "{ruleValue}"',
	    doesntContainExactly : '{name} must contain exactly "{ruleValue}"',
	    minLength            : '{name} must be at least {ruleValue} characters',
	    length               : '{name} must be at least {ruleValue} characters',
	    exactLength          : '{name} must be exactly {ruleValue} characters',
	    maxLength            : '{name} cannot be longer than {ruleValue} characters',
	    match                : '{name} must match {ruleValue} field',
	    different            : '{name} must have a different value than {ruleValue} field',
	    creditCard           : '{name} must be a valid credit card number',
	    minCount             : '{name} must have at least {ruleValue} choices',
	    exactCount           : '{name} must have exactly {ruleValue} choices',
	    maxCount             : '{name} must have {ruleValue} or less choices'
	  },

	  selector : {
	    checkbox   : 'input[type="checkbox"], input[type="radio"]',
	    clear      : '.clear',
	    field      : 'input, textarea, select',
	    group      : '.field',
	    input      : 'input',
	    message    : '.error.message',
	    prompt     : '.prompt.label',
	    radio      : 'input[type="radio"]',
	    reset      : '.reset:not([type="reset"])',
	    submit     : '.submit:not([type="submit"])',
	    uiCheckbox : '.ui.checkbox',
	    uiDropdown : '.ui.dropdown'
	  },

	  className : {
	    error   : 'error',
	    label   : 'ui prompt label',
	    pressed : 'down',
	    success : 'success'
	  },

	  error: {
	    identifier : 'You must specify a string identifier for each field',
	    method     : 'The method you called is not defined.',
	    noRule     : 'There is no rule matching the one you specified',
	    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'
	  },

	  templates: {

	    // template that produces error message
	    error: function(errors) {
	      var
	        html = '<ul class="list">'
	      ;
	      $.each(errors, function(index, value) {
	        html += '<li>' + value + '</li>';
	      });
	      html += '</ul>';
	      return $(html);
	    },

	    // template that produces label
	    prompt: function(errors) {
	      return $('<div/>')
	        .addClass('ui basic red pointing prompt label')
	        .html(errors[0])
	      ;
	    }
	  },

	  rules: {

	    // is not empty or blank string
	    empty: function(value) {
	      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);
	    },

	    // checkbox checked
	    checked: function() {
	      return ($(this).filter(':checked').length > 0);
	    },

	    // is most likely an email
	    email: function(value){
	      var
	        emailRegExp = new RegExp($.fn.form.settings.regExp.email, 'i')
	      ;
	      return emailRegExp.test(value);
	    },

	    // value is most likely url
	    url: function(value) {
	      return $.fn.form.settings.regExp.url.test(value);
	    },

	    // matches specified regExp
	    regExp: function(value, regExp) {
	      var
	        regExpParts = regExp.match($.fn.form.settings.regExp.flags),
	        flags
	      ;
	      // regular expression specified as /baz/gi (flags)
	      if(regExpParts) {
	        regExp = (regExpParts.length >= 2)
	          ? regExpParts[1]
	          : regExp
	        ;
	        flags = (regExpParts.length >= 3)
	          ? regExpParts[2]
	          : ''
	        ;
	      }
	      return value.match( new RegExp(regExp, flags) );
	    },

	    // is valid integer or matches range
	    integer: function(value, range) {
	      var
	        intRegExp = $.fn.form.settings.regExp.integer,
	        min,
	        max,
	        parts
	      ;
	      if( !range || ['', '..'].indexOf(range) !== -1) {
	        // do nothing
	      }
	      else if(range.indexOf('..') == -1) {
	        if(intRegExp.test(range)) {
	          min = max = range - 0;
	        }
	      }
	      else {
	        parts = range.split('..', 2);
	        if(intRegExp.test(parts[0])) {
	          min = parts[0] - 0;
	        }
	        if(intRegExp.test(parts[1])) {
	          max = parts[1] - 0;
	        }
	      }
	      return (
	        intRegExp.test(value) &&
	        (min === undefined || value >= min) &&
	        (max === undefined || value <= max)
	      );
	    },

	    // is valid number (with decimal)
	    decimal: function(value) {
	      return $.fn.form.settings.regExp.decimal.test(value);
	    },

	    // is valid number
	    number: function(value) {
	      return $.fn.form.settings.regExp.number.test(value);
	    },

	    // is value (case insensitive)
	    is: function(value, text) {
	      text = (typeof text == 'string')
	        ? text.toLowerCase()
	        : text
	      ;
	      value = (typeof value == 'string')
	        ? value.toLowerCase()
	        : value
	      ;
	      return (value == text);
	    },

	    // is value
	    isExactly: function(value, text) {
	      return (value == text);
	    },

	    // value is not another value (case insensitive)
	    not: function(value, notValue) {
	      value = (typeof value == 'string')
	        ? value.toLowerCase()
	        : value
	      ;
	      notValue = (typeof notValue == 'string')
	        ? notValue.toLowerCase()
	        : notValue
	      ;
	      return (value != notValue);
	    },

	    // value is not another value (case sensitive)
	    notExactly: function(value, notValue) {
	      return (value != notValue);
	    },

	    // value contains text (insensitive)
	    contains: function(value, text) {
	      // escape regex characters
	      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");
	      return (value.search( new RegExp(text, 'i') ) !== -1);
	    },

	    // value contains text (case sensitive)
	    containsExactly: function(value, text) {
	      // escape regex characters
	      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");
	      return (value.search( new RegExp(text) ) !== -1);
	    },

	    // value contains text (insensitive)
	    doesntContain: function(value, text) {
	      // escape regex characters
	      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");
	      return (value.search( new RegExp(text, 'i') ) === -1);
	    },

	    // value contains text (case sensitive)
	    doesntContainExactly: function(value, text) {
	      // escape regex characters
	      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");
	      return (value.search( new RegExp(text) ) === -1);
	    },

	    // is at least string length
	    minLength: function(value, requiredLength) {
	      return (value !== undefined)
	        ? (value.length >= requiredLength)
	        : false
	      ;
	    },

	    // see rls notes for 2.0.6 (this is a duplicate of minLength)
	    length: function(value, requiredLength) {
	      return (value !== undefined)
	        ? (value.length >= requiredLength)
	        : false
	      ;
	    },

	    // is exactly length
	    exactLength: function(value, requiredLength) {
	      return (value !== undefined)
	        ? (value.length == requiredLength)
	        : false
	      ;
	    },

	    // is less than length
	    maxLength: function(value, maxLength) {
	      return (value !== undefined)
	        ? (value.length <= maxLength)
	        : false
	      ;
	    },

	    // matches another field
	    match: function(value, identifier) {
	      var
	        $form = $(this),
	        matchingValue
	      ;
	      if( $('[data-validate="'+ identifier +'"]').length > 0 ) {
	        matchingValue = $('[data-validate="'+ identifier +'"]').val();
	      }
	      else if($('#' + identifier).length > 0) {
	        matchingValue = $('#' + identifier).val();
	      }
	      else if($('[name="' + identifier +'"]').length > 0) {
	        matchingValue = $('[name="' + identifier + '"]').val();
	      }
	      else if( $('[name="' + identifier +'[]"]').length > 0 ) {
	        matchingValue = $('[name="' + identifier +'[]"]');
	      }
	      return (matchingValue !== undefined)
	        ? ( value.toString() == matchingValue.toString() )
	        : false
	      ;
	    },

	    // different than another field
	    different: function(value, identifier) {
	      // use either id or name of field
	      var
	        $form = $(this),
	        matchingValue
	      ;
	      if( $('[data-validate="'+ identifier +'"]').length > 0 ) {
	        matchingValue = $('[data-validate="'+ identifier +'"]').val();
	      }
	      else if($('#' + identifier).length > 0) {
	        matchingValue = $('#' + identifier).val();
	      }
	      else if($('[name="' + identifier +'"]').length > 0) {
	        matchingValue = $('[name="' + identifier + '"]').val();
	      }
	      else if( $('[name="' + identifier +'[]"]').length > 0 ) {
	        matchingValue = $('[name="' + identifier +'[]"]');
	      }
	      return (matchingValue !== undefined)
	        ? ( value.toString() !== matchingValue.toString() )
	        : false
	      ;
	    },

	    creditCard: function(cardNumber, cardTypes) {
	      var
	        cards = {
	          visa: {
	            pattern : /^4/,
	            length  : [16]
	          },
	          amex: {
	            pattern : /^3[47]/,
	            length  : [15]
	          },
	          mastercard: {
	            pattern : /^5[1-5]/,
	            length  : [16]
	          },
	          discover: {
	            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
	            length  : [16]
	          },
	          unionPay: {
	            pattern : /^(62|88)/,
	            length  : [16, 17, 18, 19]
	          },
	          jcb: {
	            pattern : /^35(2[89]|[3-8][0-9])/,
	            length  : [16]
	          },
	          maestro: {
	            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,
	            length  : [12, 13, 14, 15, 16, 17, 18, 19]
	          },
	          dinersClub: {
	            pattern : /^(30[0-5]|^36)/,
	            length  : [14]
	          },
	          laser: {
	            pattern : /^(6304|670[69]|6771)/,
	            length  : [16, 17, 18, 19]
	          },
	          visaElectron: {
	            pattern : /^(4026|417500|4508|4844|491(3|7))/,
	            length  : [16]
	          }
	        },
	        valid         = {},
	        validCard     = false,
	        requiredTypes = (typeof cardTypes == 'string')
	          ? cardTypes.split(',')
	          : false,
	        unionPay,
	        validation
	      ;

	      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {
	        return;
	      }

	      // verify card types
	      if(requiredTypes) {
	        $.each(requiredTypes, function(index, type){
	          // verify each card type
	          validation = cards[type];
	          if(validation) {
	            valid = {
	              length  : ($.inArray(cardNumber.length, validation.length) !== -1),
	              pattern : (cardNumber.search(validation.pattern) !== -1)
	            };
	            if(valid.length && valid.pattern) {
	              validCard = true;
	            }
	          }
	        });

	        if(!validCard) {
	          return false;
	        }
	      }

	      // skip luhn for UnionPay
	      unionPay = {
	        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),
	        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)
	      };
	      if(unionPay.number && unionPay.pattern) {
	        return true;
	      }

	      // verify luhn, adapted from  <https://gist.github.com/2134376>
	      var
	        length        = cardNumber.length,
	        multiple      = 0,
	        producedValue = [
	          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
	          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]
	        ],
	        sum           = 0
	      ;
	      while (length--) {
	        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];
	        multiple ^= 1;
	      }
	      return (sum % 10 === 0 && sum > 0);
	    },

	    minCount: function(value, minCount) {
	      if(minCount == 0) {
	        return true;
	      }
	      if(minCount == 1) {
	        return (value !== '');
	      }
	      return (value.split(',').length >= minCount);
	    },

	    exactCount: function(value, exactCount) {
	      if(exactCount == 0) {
	        return (value === '');
	      }
	      if(exactCount == 1) {
	        return (value !== '' && value.search(',') === -1);
	      }
	      return (value.split(',').length == exactCount);
	    },

	    maxCount: function(value, maxCount) {
	      if(maxCount == 0) {
	        return false;
	      }
	      if(maxCount == 1) {
	        return (value.search(',') === -1);
	      }
	      return (value.split(',').length <= maxCount);
	    }
	  }

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Accordion
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.accordion = function(parameters) {
	  var
	    $allModules     = $(this),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.accordion.settings, parameters)
	          : $.extend({}, $.fn.accordion.settings),

	        className       = settings.className,
	        namespace       = settings.namespace,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,
	        moduleSelector  = $allModules.selector || '',

	        $module  = $(this),
	        $title   = $module.find(selector.title),
	        $content = $module.find(selector.content),

	        element  = this,
	        instance = $module.data(moduleNamespace),
	        observer,
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing', $module);
	          module.bind.events();
	          if(settings.observeChanges) {
	            module.observeChanges();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.debug('Destroying previous instance', $module);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          $title   = $module.find(selector.title);
	          $content = $module.find(selector.content);
	        },

	        observeChanges: function() {
	          if('MutationObserver' in window) {
	            observer = new MutationObserver(function(mutations) {
	              module.debug('DOM tree modified, updating selector cache');
	              module.refresh();
	            });
	            observer.observe(element, {
	              childList : true,
	              subtree   : true
	            });
	            module.debug('Setting up mutation observer', observer);
	          }
	        },

	        bind: {
	          events: function() {
	            module.debug('Binding delegated events');
	            $module
	              .on(settings.on + eventNamespace, selector.trigger, module.event.click)
	            ;
	          }
	        },

	        event: {
	          click: function() {
	            module.toggle.call(this);
	          }
	        },

	        toggle: function(query) {
	          var
	            $activeTitle = (query !== undefined)
	              ? (typeof query === 'number')
	                ? $title.eq(query)
	                : $(query).closest(selector.title)
	              : $(this).closest(selector.title),
	            $activeContent = $activeTitle.next($content),
	            isAnimating = $activeContent.hasClass(className.animating),
	            isActive    = $activeContent.hasClass(className.active),
	            isOpen      = (isActive && !isAnimating),
	            isOpening   = (!isActive && isAnimating)
	          ;
	          module.debug('Toggling visibility of content', $activeTitle);
	          if(isOpen || isOpening) {
	            if(settings.collapsible) {
	              module.close.call($activeTitle);
	            }
	            else {
	              module.debug('Cannot close accordion content collapsing is disabled');
	            }
	          }
	          else {
	            module.open.call($activeTitle);
	          }
	        },

	        open: function(query) {
	          var
	            $activeTitle = (query !== undefined)
	              ? (typeof query === 'number')
	                ? $title.eq(query)
	                : $(query).closest(selector.title)
	              : $(this).closest(selector.title),
	            $activeContent = $activeTitle.next($content),
	            isAnimating = $activeContent.hasClass(className.animating),
	            isActive    = $activeContent.hasClass(className.active),
	            isOpen      = (isActive || isAnimating)
	          ;
	          if(isOpen) {
	            module.debug('Accordion already open, skipping', $activeContent);
	            return;
	          }
	          module.debug('Opening accordion content', $activeTitle);
	          settings.onOpening.call($activeContent);
	          if(settings.exclusive) {
	            module.closeOthers.call($activeTitle);
	          }
	          $activeTitle
	            .addClass(className.active)
	          ;
	          $activeContent
	            .stop(true, true)
	            .addClass(className.animating)
	          ;
	          if(settings.animateChildren) {
	            if($.fn.transition !== undefined && $module.transition('is supported')) {
	              $activeContent
	                .children()
	                  .transition({
	                    animation   : 'fade in',
	                    queue       : false,
	                    useFailSafe : true,
	                    debug       : settings.debug,
	                    verbose     : settings.verbose,
	                    duration    : settings.duration
	                  })
	              ;
	            }
	            else {
	              $activeContent
	                .children()
	                  .stop(true, true)
	                  .animate({
	                    opacity: 1
	                  }, settings.duration, module.resetOpacity)
	              ;
	            }
	          }
	          $activeContent
	            .slideDown(settings.duration, settings.easing, function() {
	              $activeContent
	                .removeClass(className.animating)
	                .addClass(className.active)
	              ;
	              module.reset.display.call(this);
	              settings.onOpen.call(this);
	              settings.onChange.call(this);
	            })
	          ;
	        },

	        close: function(query) {
	          var
	            $activeTitle = (query !== undefined)
	              ? (typeof query === 'number')
	                ? $title.eq(query)
	                : $(query).closest(selector.title)
	              : $(this).closest(selector.title),
	            $activeContent = $activeTitle.next($content),
	            isAnimating    = $activeContent.hasClass(className.animating),
	            isActive       = $activeContent.hasClass(className.active),
	            isOpening      = (!isActive && isAnimating),
	            isClosing      = (isActive && isAnimating)
	          ;
	          if((isActive || isOpening) && !isClosing) {
	            module.debug('Closing accordion content', $activeContent);
	            settings.onClosing.call($activeContent);
	            $activeTitle
	              .removeClass(className.active)
	            ;
	            $activeContent
	              .stop(true, true)
	              .addClass(className.animating)
	            ;
	            if(settings.animateChildren) {
	              if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $activeContent
	                  .children()
	                    .transition({
	                      animation   : 'fade out',
	                      queue       : false,
	                      useFailSafe : true,
	                      debug       : settings.debug,
	                      verbose     : settings.verbose,
	                      duration    : settings.duration
	                    })
	                ;
	              }
	              else {
	                $activeContent
	                  .children()
	                    .stop(true, true)
	                    .animate({
	                      opacity: 0
	                    }, settings.duration, module.resetOpacity)
	                ;
	              }
	            }
	            $activeContent
	              .slideUp(settings.duration, settings.easing, function() {
	                $activeContent
	                  .removeClass(className.animating)
	                  .removeClass(className.active)
	                ;
	                module.reset.display.call(this);
	                settings.onClose.call(this);
	                settings.onChange.call(this);
	              })
	            ;
	          }
	        },

	        closeOthers: function(index) {
	          var
	            $activeTitle = (index !== undefined)
	              ? $title.eq(index)
	              : $(this).closest(selector.title),
	            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),
	            $activeAccordion = $activeTitle.closest(selector.accordion),
	            activeSelector   = selector.title + '.' + className.active + ':visible',
	            activeContent    = selector.content + '.' + className.active + ':visible',
	            $openTitles,
	            $nestedTitles,
	            $openContents
	          ;
	          if(settings.closeNested) {
	            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);
	            $openContents = $openTitles.next($content);
	          }
	          else {
	            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);
	            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);
	            $openTitles   = $openTitles.not($nestedTitles);
	            $openContents = $openTitles.next($content);
	          }
	          if( ($openTitles.length > 0) ) {
	            module.debug('Exclusive enabled, closing other content', $openTitles);
	            $openTitles
	              .removeClass(className.active)
	            ;
	            $openContents
	              .removeClass(className.animating)
	              .stop(true, true)
	            ;
	            if(settings.animateChildren) {
	              if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $openContents
	                  .children()
	                    .transition({
	                      animation   : 'fade out',
	                      useFailSafe : true,
	                      debug       : settings.debug,
	                      verbose     : settings.verbose,
	                      duration    : settings.duration
	                    })
	                ;
	              }
	              else {
	                $openContents
	                  .children()
	                    .stop(true, true)
	                    .animate({
	                      opacity: 0
	                    }, settings.duration, module.resetOpacity)
	                ;
	              }
	            }
	            $openContents
	              .slideUp(settings.duration , settings.easing, function() {
	                $(this).removeClass(className.active);
	                module.reset.display.call(this);
	              })
	            ;
	          }
	        },

	        reset: {

	          display: function() {
	            module.verbose('Removing inline display from element', this);
	            $(this).css('display', '');
	            if( $(this).attr('style') === '') {
	              $(this)
	                .attr('style', '')
	                .removeAttr('style')
	              ;
	            }
	          },

	          opacity: function() {
	            module.verbose('Removing inline opacity from element', this);
	            $(this).css('opacity', '');
	            if( $(this).attr('style') === '') {
	              $(this)
	                .attr('style', '')
	                .removeAttr('style')
	              ;
	            }
	          },

	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          module.debug('Changing internal', name, value);
	          if(value !== undefined) {
	            if( $.isPlainObject(name) ) {
	              $.extend(true, module, name);
	            }
	            else {
	              module[name] = value;
	            }
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.accordion.settings = {

	  name            : 'Accordion',
	  namespace       : 'accordion',

	  debug           : false,
	  verbose         : false,
	  performance     : true,

	  on              : 'click', // event on title that opens accordion

	  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion

	  exclusive       : true,  // whether a single accordion content panel should be open at once
	  collapsible     : true,  // whether accordion content can be closed
	  closeNested     : false, // whether nested content should be closed when a panel is closed
	  animateChildren : true,  // whether children opacity should be animated

	  duration        : 350, // duration of animation
	  easing          : 'easeOutQuad', // easing equation for animation


	  onOpening       : function(){}, // callback before open animation
	  onOpen          : function(){}, // callback after open animation
	  onClosing       : function(){}, // callback before closing animation
	  onClose         : function(){}, // callback after closing animation
	  onChange        : function(){}, // callback after closing or opening animation

	  error: {
	    method : 'The method you called is not defined'
	  },

	  className   : {
	    active    : 'active',
	    animating : 'animating'
	  },

	  selector    : {
	    accordion : '.accordion',
	    title     : '.title',
	    trigger   : '.title',
	    content   : '.content'
	  }

	};

	// Adds easing
	$.extend( $.easing, {
	  easeOutQuad: function (x, t, b, c, d) {
	    return -c *(t/=d)*(t-2) + b;
	  }
	});

	})( jQuery, window, document );


	/*!
	 * # Semantic UI 2.1.7 - Checkbox
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.checkbox = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),

	        className       = settings.className,
	        namespace       = settings.namespace,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $label          = $(this).children(selector.label),
	        $input          = $(this).children(selector.input),
	        input           = $input[0],

	        initialLoad     = false,
	        shortcutPressed = false,
	        instance        = $module.data(moduleNamespace),

	        observer,
	        element         = this,
	        module
	      ;

	      module      = {

	        initialize: function() {
	          module.verbose('Initializing checkbox', settings);

	          module.create.label();
	          module.bind.events();

	          module.set.tabbable();
	          module.hide.input();

	          module.observeChanges();
	          module.instantiate();
	          module.setup();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying module');
	          module.unbind.events();
	          module.show.input();
	          $module.removeData(moduleNamespace);
	        },

	        fix: {
	          reference: function() {
	            if( $module.is(selector.input) ) {
	              module.debug('Behavior called on <input> adjusting invoked element');
	              $module = $module.closest(selector.checkbox);
	              module.refresh();
	            }
	          }
	        },

	        setup: function() {
	          module.set.initialLoad();
	          if( module.is.indeterminate() ) {
	            module.debug('Initial value is indeterminate');
	            module.indeterminate();
	          }
	          else if( module.is.checked() ) {
	            module.debug('Initial value is checked');
	            module.check();
	          }
	          else {
	            module.debug('Initial value is unchecked');
	            module.uncheck();
	          }
	          module.remove.initialLoad();
	        },

	        refresh: function() {
	          $label = $module.children(selector.label);
	          $input = $module.children(selector.input);
	          input  = $input[0];
	        },

	        hide: {
	          input: function() {
	            module.verbose('Modfying <input> z-index to be unselectable');
	            $input.addClass(className.hidden);
	          }
	        },
	        show: {
	          input: function() {
	            module.verbose('Modfying <input> z-index to be selectable');
	            $input.removeClass(className.hidden);
	          }
	        },

	        observeChanges: function() {
	          if('MutationObserver' in window) {
	            observer = new MutationObserver(function(mutations) {
	              module.debug('DOM tree modified, updating selector cache');
	              module.refresh();
	            });
	            observer.observe(element, {
	              childList : true,
	              subtree   : true
	            });
	            module.debug('Setting up mutation observer', observer);
	          }
	        },

	        attachEvents: function(selector, event) {
	          var
	            $element = $(selector)
	          ;
	          event = $.isFunction(module[event])
	            ? module[event]
	            : module.toggle
	          ;
	          if($element.length > 0) {
	            module.debug('Attaching checkbox events to element', selector, event);
	            $element
	              .on('click' + eventNamespace, event)
	            ;
	          }
	          else {
	            module.error(error.notFound);
	          }
	        },

	        event: {
	          click: function(event) {
	            var
	              $target = $(event.target)
	            ;
	            if( $target.is(selector.input) ) {
	              module.verbose('Using default check action on initialized checkbox');
	              return;
	            }
	            if( $target.is(selector.link) ) {
	              module.debug('Clicking link inside checkbox, skipping toggle');
	              return;
	            }
	            module.toggle();
	            $input.focus();
	            event.preventDefault();
	          },
	          keydown: function(event) {
	            var
	              key     = event.which,
	              keyCode = {
	                enter  : 13,
	                space  : 32,
	                escape : 27
	              }
	            ;
	            if(key == keyCode.escape) {
	              module.verbose('Escape key pressed blurring field');
	              $input.blur();
	              shortcutPressed = true;
	            }
	            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {
	              module.verbose('Enter/space key pressed, toggling checkbox');
	              module.toggle();
	              shortcutPressed = true;
	            }
	            else {
	              shortcutPressed = false;
	            }
	          },
	          keyup: function(event) {
	            if(shortcutPressed) {
	              event.preventDefault();
	            }
	          }
	        },

	        check: function() {
	          if( !module.should.allowCheck() ) {
	            return;
	          }
	          module.debug('Checking checkbox', $input);
	          module.set.checked();
	          if( !module.should.ignoreCallbacks() ) {
	            settings.onChecked.call(input);
	            settings.onChange.call(input);
	          }
	        },

	        uncheck: function() {
	          if( !module.should.allowUncheck() ) {
	            return;
	          }
	          module.debug('Unchecking checkbox');
	          module.set.unchecked();
	          if( !module.should.ignoreCallbacks() ) {
	            settings.onUnchecked.call(input);
	            settings.onChange.call(input);
	          }
	        },

	        indeterminate: function() {
	          if( module.should.allowIndeterminate() ) {
	            module.debug('Checkbox is already indeterminate');
	            return;
	          }
	          module.debug('Making checkbox indeterminate');
	          module.set.indeterminate();
	          if( !module.should.ignoreCallbacks() ) {
	            settings.onIndeterminate.call(input);
	            settings.onChange.call(input);
	          }
	        },

	        determinate: function() {
	          if( module.should.allowDeterminate() ) {
	            module.debug('Checkbox is already determinate');
	            return;
	          }
	          module.debug('Making checkbox determinate');
	          module.set.determinate();
	          if( !module.should.ignoreCallbacks() ) {
	            settings.onDeterminate.call(input);
	            settings.onChange.call(input);
	          }
	        },

	        enable: function() {
	          if( module.is.enabled() ) {
	            module.debug('Checkbox is already enabled');
	            return;
	          }
	          module.debug('Enabling checkbox');
	          module.set.enabled();
	          settings.onEnabled.call(input);
	        },

	        disable: function() {
	          if( module.is.disabled() ) {
	            module.debug('Checkbox is already disabled');
	            return;
	          }
	          module.debug('Disabling checkbox');
	          module.set.disabled();
	          settings.onDisabled.call(input);
	        },

	        get: {
	          radios: function() {
	            var
	              name = module.get.name()
	            ;
	            return $('input[name="' + name + '"]').closest(selector.checkbox);
	          },
	          otherRadios: function() {
	            return module.get.radios().not($module);
	          },
	          name: function() {
	            return $input.attr('name');
	          }
	        },

	        is: {
	          initialLoad: function() {
	            return initialLoad;
	          },
	          radio: function() {
	            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');
	          },
	          indeterminate: function() {
	            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');
	          },
	          checked: function() {
	            return $input.prop('checked') !== undefined && $input.prop('checked');
	          },
	          disabled: function() {
	            return $input.prop('disabled') !== undefined && $input.prop('disabled');
	          },
	          enabled: function() {
	            return !module.is.disabled();
	          },
	          determinate: function() {
	            return !module.is.indeterminate();
	          },
	          unchecked: function() {
	            return !module.is.checked();
	          }
	        },

	        should: {
	          allowCheck: function() {
	            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {
	              module.debug('Should not allow check, checkbox is already checked');
	              return false;
	            }
	            if(settings.beforeChecked.apply(input) === false) {
	              module.debug('Should not allow check, beforeChecked cancelled');
	              return false;
	            }
	            return true;
	          },
	          allowUncheck: function() {
	            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {
	              module.debug('Should not allow uncheck, checkbox is already unchecked');
	              return false;
	            }
	            if(settings.beforeUnchecked.apply(input) === false) {
	              module.debug('Should not allow uncheck, beforeUnchecked cancelled');
	              return false;
	            }
	            return true;
	          },
	          allowIndeterminate: function() {
	            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {
	              module.debug('Should not allow indeterminate, checkbox is already indeterminate');
	              return false;
	            }
	            if(settings.beforeIndeterminate.apply(input) === false) {
	              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');
	              return false;
	            }
	            return true;
	          },
	          allowDeterminate: function() {
	            if(module.is.determinate() && !module.should.forceCallbacks() ) {
	              module.debug('Should not allow determinate, checkbox is already determinate');
	              return false;
	            }
	            if(settings.beforeDeterminate.apply(input) === false) {
	              module.debug('Should not allow determinate, beforeDeterminate cancelled');
	              return false;
	            }
	            return true;
	          },
	          forceCallbacks: function() {
	            return (module.is.initialLoad() && settings.fireOnInit);
	          },
	          ignoreCallbacks: function() {
	            return (initialLoad && !settings.fireOnInit);
	          }
	        },

	        can: {
	          change: function() {
	            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );
	          },
	          uncheck: function() {
	            return (typeof settings.uncheckable === 'boolean')
	              ? settings.uncheckable
	              : !module.is.radio()
	            ;
	          }
	        },

	        set: {
	          initialLoad: function() {
	            initialLoad = true;
	          },
	          checked: function() {
	            module.verbose('Setting class to checked');
	            $module
	              .removeClass(className.indeterminate)
	              .addClass(className.checked)
	            ;
	            if( module.is.radio() ) {
	              module.uncheckOthers();
	            }
	            if(!module.is.indeterminate() && module.is.checked()) {
	              module.debug('Input is already checked, skipping input property change');
	              return;
	            }
	            module.verbose('Setting state to checked', input);
	            $input
	              .prop('indeterminate', false)
	              .prop('checked', true)
	            ;
	            module.trigger.change();
	          },
	          unchecked: function() {
	            module.verbose('Removing checked class');
	            $module
	              .removeClass(className.indeterminate)
	              .removeClass(className.checked)
	            ;
	            if(!module.is.indeterminate() &&  module.is.unchecked() ) {
	              module.debug('Input is already unchecked');
	              return;
	            }
	            module.debug('Setting state to unchecked');
	            $input
	              .prop('indeterminate', false)
	              .prop('checked', false)
	            ;
	            module.trigger.change();
	          },
	          indeterminate: function() {
	            module.verbose('Setting class to indeterminate');
	            $module
	              .addClass(className.indeterminate)
	            ;
	            if( module.is.indeterminate() ) {
	              module.debug('Input is already indeterminate, skipping input property change');
	              return;
	            }
	            module.debug('Setting state to indeterminate');
	            $input
	              .prop('indeterminate', true)
	            ;
	            module.trigger.change();
	          },
	          determinate: function() {
	            module.verbose('Removing indeterminate class');
	            $module
	              .removeClass(className.indeterminate)
	            ;
	            if( module.is.determinate() ) {
	              module.debug('Input is already determinate, skipping input property change');
	              return;
	            }
	            module.debug('Setting state to determinate');
	            $input
	              .prop('indeterminate', false)
	            ;
	          },
	          disabled: function() {
	            module.verbose('Setting class to disabled');
	            $module
	              .addClass(className.disabled)
	            ;
	            if( module.is.disabled() ) {
	              module.debug('Input is already disabled, skipping input property change');
	              return;
	            }
	            module.debug('Setting state to disabled');
	            $input
	              .prop('disabled', 'disabled')
	            ;
	            module.trigger.change();
	          },
	          enabled: function() {
	            module.verbose('Removing disabled class');
	            $module.removeClass(className.disabled);
	            if( module.is.enabled() ) {
	              module.debug('Input is already enabled, skipping input property change');
	              return;
	            }
	            module.debug('Setting state to enabled');
	            $input
	              .prop('disabled', false)
	            ;
	            module.trigger.change();
	          },
	          tabbable: function() {
	            module.verbose('Adding tabindex to checkbox');
	            if( $input.attr('tabindex') === undefined) {
	              $input.attr('tabindex', 0);
	            }
	          }
	        },

	        remove: {
	          initialLoad: function() {
	            initialLoad = false;
	          }
	        },

	        trigger: {
	          change: function() {
	            var
	              events       = document.createEvent('HTMLEvents'),
	              inputElement = $input[0]
	            ;
	            if(inputElement) {
	              module.verbose('Triggering native change event');
	              events.initEvent('change', true, false);
	              inputElement.dispatchEvent(events);
	            }
	          }
	        },


	        create: {
	          label: function() {
	            if($input.prevAll(selector.label).length > 0) {
	              $input.prev(selector.label).detach().insertAfter($input);
	              module.debug('Moving existing label', $label);
	            }
	            else if( !module.has.label() ) {
	              $label = $('<label>').insertAfter($input);
	              module.debug('Creating label', $label);
	            }
	          }
	        },

	        has: {
	          label: function() {
	            return ($label.length > 0);
	          }
	        },

	        bind: {
	          events: function() {
	            module.verbose('Attaching checkbox events');
	            $module
	              .on('click'   + eventNamespace, module.event.click)
	              .on('keydown' + eventNamespace, selector.input, module.event.keydown)
	              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)
	            ;
	          }
	        },

	        unbind: {
	          events: function() {
	            module.debug('Removing events');
	            $module
	              .off(eventNamespace)
	            ;
	          }
	        },

	        uncheckOthers: function() {
	          var
	            $radios = module.get.otherRadios()
	          ;
	          module.debug('Unchecking other radios', $radios);
	          $radios.removeClass(className.checked);
	        },

	        toggle: function() {
	          if( !module.can.change() ) {
	            if(!module.is.radio()) {
	              module.debug('Checkbox is read-only or disabled, ignoring toggle');
	            }
	            return;
	          }
	          if( module.is.indeterminate() || module.is.unchecked() ) {
	            module.debug('Currently unchecked');
	            module.check();
	          }
	          else if( module.is.checked() && module.can.uncheck() ) {
	            module.debug('Currently checked');
	            module.uncheck();
	          }
	        },
	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.checkbox.settings = {

	  name                : 'Checkbox',
	  namespace           : 'checkbox',

	  debug               : false,
	  verbose             : true,
	  performance         : true,

	  // delegated event context
	  uncheckable         : 'auto',
	  fireOnInit          : false,

	  onChange            : function(){},

	  beforeChecked       : function(){},
	  beforeUnchecked     : function(){},
	  beforeDeterminate   : function(){},
	  beforeIndeterminate : function(){},

	  onChecked           : function(){},
	  onUnchecked         : function(){},

	  onDeterminate       : function() {},
	  onIndeterminate     : function() {},

	  onEnable            : function(){},
	  onDisable           : function(){},

	  className       : {
	    checked       : 'checked',
	    indeterminate : 'indeterminate',
	    disabled      : 'disabled',
	    hidden        : 'hidden',
	    radio         : 'radio',
	    readOnly      : 'read-only'
	  },

	  error     : {
	    method       : 'The method you called is not defined'
	  },

	  selector : {
	    checkbox : '.ui.checkbox',
	    label    : 'label, .box',
	    input    : 'input[type="checkbox"], input[type="radio"]',
	    link     : 'a[href]'
	  }

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Dimmer
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.dimmer = function(parameters) {
	  var
	    $allModules     = $(this),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)
	          : $.extend({}, $.fn.dimmer.settings),

	        selector        = settings.selector,
	        namespace       = settings.namespace,
	        className       = settings.className,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,
	        moduleSelector  = $allModules.selector || '',

	        clickEvent      = ('ontouchstart' in document.documentElement)
	          ? 'touchstart'
	          : 'click',

	        $module = $(this),
	        $dimmer,
	        $dimmable,

	        element   = this,
	        instance  = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        preinitialize: function() {
	          if( module.is.dimmer() ) {

	            $dimmable = $module.parent();
	            $dimmer   = $module;
	          }
	          else {
	            $dimmable = $module;
	            if( module.has.dimmer() ) {
	              if(settings.dimmerName) {
	                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);
	              }
	              else {
	                $dimmer = $dimmable.find(selector.dimmer);
	              }
	            }
	            else {
	              $dimmer = module.create();
	            }
	          }
	        },

	        initialize: function() {
	          module.debug('Initializing dimmer', settings);

	          module.bind.events();
	          module.set.dimmable();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', $dimmer);
	          module.unbind.events();
	          module.remove.variation();
	          $dimmable
	            .off(eventNamespace)
	          ;
	        },

	        bind: {
	          events: function() {
	            if(settings.on == 'hover') {
	              $dimmable
	                .on('mouseenter' + eventNamespace, module.show)
	                .on('mouseleave' + eventNamespace, module.hide)
	              ;
	            }
	            else if(settings.on == 'click') {
	              $dimmable
	                .on(clickEvent + eventNamespace, module.toggle)
	              ;
	            }
	            if( module.is.page() ) {
	              module.debug('Setting as a page dimmer', $dimmable);
	              module.set.pageDimmer();
	            }

	            if( module.is.closable() ) {
	              module.verbose('Adding dimmer close event', $dimmer);
	              $dimmable
	                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)
	              ;
	            }
	          }
	        },

	        unbind: {
	          events: function() {
	            $module
	              .removeData(moduleNamespace)
	            ;
	          }
	        },

	        event: {
	          click: function(event) {
	            module.verbose('Determining if event occured on dimmer', event);
	            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {
	              module.hide();
	              event.stopImmediatePropagation();
	            }
	          }
	        },

	        addContent: function(element) {
	          var
	            $content = $(element)
	          ;
	          module.debug('Add content to dimmer', $content);
	          if($content.parent()[0] !== $dimmer[0]) {
	            $content.detach().appendTo($dimmer);
	          }
	        },

	        create: function() {
	          var
	            $element = $( settings.template.dimmer() )
	          ;
	          if(settings.variation) {
	            module.debug('Creating dimmer with variation', settings.variation);
	            $element.addClass(settings.variation);
	          }
	          if(settings.dimmerName) {
	            module.debug('Creating named dimmer', settings.dimmerName);
	            $element.addClass(settings.dimmerName);
	          }
	          $element
	            .appendTo($dimmable)
	          ;
	          return $element;
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.debug('Showing dimmer', $dimmer, settings);
	          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {
	            module.animate.show(callback);
	            settings.onShow.call(element);
	            settings.onChange.call(element);
	          }
	          else {
	            module.debug('Dimmer is already shown or disabled');
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.is.dimmed() || module.is.animating() ) {
	            module.debug('Hiding dimmer', $dimmer);
	            module.animate.hide(callback);
	            settings.onHide.call(element);
	            settings.onChange.call(element);
	          }
	          else {
	            module.debug('Dimmer is not visible');
	          }
	        },

	        toggle: function() {
	          module.verbose('Toggling dimmer visibility', $dimmer);
	          if( !module.is.dimmed() ) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        animate: {
	          show: function(callback) {
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {
	              if(settings.opacity !== 'auto') {
	                module.set.opacity();
	              }
	              $dimmer
	                .transition({
	                  animation   : settings.transition + ' in',
	                  queue       : false,
	                  duration    : module.get.duration(),
	                  useFailSafe : true,
	                  onStart     : function() {
	                    module.set.dimmed();
	                  },
	                  onComplete  : function() {
	                    module.set.active();
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.verbose('Showing dimmer animation with javascript');
	              module.set.dimmed();
	              if(settings.opacity == 'auto') {
	                settings.opacity = 0.8;
	              }
	              $dimmer
	                .stop()
	                .css({
	                  opacity : 0,
	                  width   : '100%',
	                  height  : '100%'
	                })
	                .fadeTo(module.get.duration(), settings.opacity, function() {
	                  $dimmer.removeAttr('style');
	                  module.set.active();
	                  callback();
	                })
	              ;
	            }
	          },
	          hide: function(callback) {
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {
	              module.verbose('Hiding dimmer with css');
	              $dimmer
	                .transition({
	                  animation   : settings.transition + ' out',
	                  queue       : false,
	                  duration    : module.get.duration(),
	                  useFailSafe : true,
	                  onStart     : function() {
	                    module.remove.dimmed();
	                  },
	                  onComplete  : function() {
	                    module.remove.active();
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.verbose('Hiding dimmer with javascript');
	              module.remove.dimmed();
	              $dimmer
	                .stop()
	                .fadeOut(module.get.duration(), function() {
	                  module.remove.active();
	                  $dimmer.removeAttr('style');
	                  callback();
	                })
	              ;
	            }
	          }
	        },

	        get: {
	          dimmer: function() {
	            return $dimmer;
	          },
	          duration: function() {
	            if(typeof settings.duration == 'object') {
	              if( module.is.active() ) {
	                return settings.duration.hide;
	              }
	              else {
	                return settings.duration.show;
	              }
	            }
	            return settings.duration;
	          }
	        },

	        has: {
	          dimmer: function() {
	            if(settings.dimmerName) {
	              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);
	            }
	            else {
	              return ( $module.find(selector.dimmer).length > 0 );
	            }
	          }
	        },

	        is: {
	          active: function() {
	            return $dimmer.hasClass(className.active);
	          },
	          animating: function() {
	            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );
	          },
	          closable: function() {
	            if(settings.closable == 'auto') {
	              if(settings.on == 'hover') {
	                return false;
	              }
	              return true;
	            }
	            return settings.closable;
	          },
	          dimmer: function() {
	            return $module.hasClass(className.dimmer);
	          },
	          dimmable: function() {
	            return $module.hasClass(className.dimmable);
	          },
	          dimmed: function() {
	            return $dimmable.hasClass(className.dimmed);
	          },
	          disabled: function() {
	            return $dimmable.hasClass(className.disabled);
	          },
	          enabled: function() {
	            return !module.is.disabled();
	          },
	          page: function () {
	            return $dimmable.is('body');
	          },
	          pageDimmer: function() {
	            return $dimmer.hasClass(className.pageDimmer);
	          }
	        },

	        can: {
	          show: function() {
	            return !$dimmer.hasClass(className.disabled);
	          }
	        },

	        set: {
	          opacity: function(opacity) {
	            var
	              color      = $dimmer.css('background-color'),
	              colorArray = color.split(','),
	              isRGBA     = (colorArray && colorArray.length == 4)
	            ;
	            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;
	            if(isRGBA) {
	              colorArray[3] = opacity + ')';
	              color         = colorArray.join(',');
	            }
	            else {
	              color = 'rgba(0, 0, 0, ' + opacity + ')';
	            }
	            module.debug('Setting opacity to', opacity);
	            $dimmer.css('background-color', color);
	          },
	          active: function() {
	            $dimmer.addClass(className.active);
	          },
	          dimmable: function() {
	            $dimmable.addClass(className.dimmable);
	          },
	          dimmed: function() {
	            $dimmable.addClass(className.dimmed);
	          },
	          pageDimmer: function() {
	            $dimmer.addClass(className.pageDimmer);
	          },
	          disabled: function() {
	            $dimmer.addClass(className.disabled);
	          },
	          variation: function(variation) {
	            variation = variation || settings.variation;
	            if(variation) {
	              $dimmer.addClass(variation);
	            }
	          }
	        },

	        remove: {
	          active: function() {
	            $dimmer
	              .removeClass(className.active)
	            ;
	          },
	          dimmed: function() {
	            $dimmable.removeClass(className.dimmed);
	          },
	          disabled: function() {
	            $dimmer.removeClass(className.disabled);
	          },
	          variation: function(variation) {
	            variation = variation || settings.variation;
	            if(variation) {
	              $dimmer.removeClass(variation);
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      module.preinitialize();

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.dimmer.settings = {

	  name        : 'Dimmer',
	  namespace   : 'dimmer',

	  debug       : false,
	  verbose     : false,
	  performance : true,

	  // name to distinguish between multiple dimmers in context
	  dimmerName  : false,

	  // whether to add a variation type
	  variation   : false,

	  // whether to bind close events
	  closable    : 'auto',

	  // whether to use css animations
	  useCSS      : true,

	  // css animation to use
	  transition  : 'fade',

	  // event to bind to
	  on          : false,

	  // overriding opacity value
	  opacity     : 'auto',

	  // transition durations
	  duration    : {
	    show : 500,
	    hide : 500
	  },

	  onChange    : function(){},
	  onShow      : function(){},
	  onHide      : function(){},

	  error   : {
	    method   : 'The method you called is not defined.'
	  },

	  className : {
	    active     : 'active',
	    animating  : 'animating',
	    dimmable   : 'dimmable',
	    dimmed     : 'dimmed',
	    dimmer     : 'dimmer',
	    disabled   : 'disabled',
	    hide       : 'hide',
	    pageDimmer : 'page',
	    show       : 'show'
	  },

	  selector: {
	    dimmer   : '> .ui.dimmer',
	    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'
	  },

	  template: {
	    dimmer: function() {
	     return $('<div />').attr('class', 'ui dimmer');
	    }
	  }

	};

	})( jQuery, window, document );
	/*!
	 * # Semantic UI 2.1.7 - Dropdown
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.dropdown = function(parameters) {
	  var
	    $allModules    = $(this),
	    $document      = $(document),

	    moduleSelector = $allModules.selector || '',

	    hasTouch       = ('ontouchstart' in document.documentElement),
	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function(elementIndex) {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)
	          : $.extend({}, $.fn.dropdown.settings),

	        className       = settings.className,
	        message         = settings.message,
	        fields          = settings.fields,
	        keys            = settings.keys,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,
	        regExp          = settings.regExp,
	        selector        = settings.selector,
	        error           = settings.error,
	        templates       = settings.templates,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $context        = $(settings.context),
	        $text           = $module.find(selector.text),
	        $search         = $module.find(selector.search),
	        $input          = $module.find(selector.input),
	        $icon           = $module.find(selector.icon),

	        $combo = ($module.prev().find(selector.text).length > 0)
	          ? $module.prev().find(selector.text)
	          : $module.prev(),

	        $menu           = $module.children(selector.menu),
	        $item           = $menu.find(selector.item),

	        activated       = false,
	        itemActivated   = false,
	        internalChange  = false,
	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        initialLoad,
	        pageLostFocus,
	        elementNamespace,
	        id,
	        selectObserver,
	        menuObserver,
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing dropdown', settings);

	          if( module.is.alreadySetup() ) {
	            module.setup.reference();
	          }
	          else {
	            module.setup.layout();
	            module.refreshData();

	            module.save.defaults();
	            module.restore.selected();

	            module.create.id();
	            module.bind.events();

	            module.observeChanges();
	            module.instantiate();
	          }

	        },

	        instantiate: function() {
	          module.verbose('Storing instance of dropdown', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous dropdown', $module);
	          module.remove.tabbable();
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	          $menu
	            .off(eventNamespace)
	          ;
	          $document
	            .off(elementNamespace)
	          ;
	          if(selectObserver) {
	            selectObserver.disconnect();
	          }
	          if(menuObserver) {
	            menuObserver.disconnect();
	          }
	        },

	        observeChanges: function() {
	          if('MutationObserver' in window) {
	            selectObserver = new MutationObserver(function(mutations) {
	              module.debug('<select> modified, recreating menu');
	              module.setup.select();
	            });
	            menuObserver = new MutationObserver(function(mutations) {
	              module.debug('Menu modified, updating selector cache');
	              module.refresh();
	            });
	            if(module.has.input()) {
	              selectObserver.observe($input[0], {
	                childList : true,
	                subtree   : true
	              });
	            }
	            if(module.has.menu()) {
	              menuObserver.observe($menu[0], {
	                childList : true,
	                subtree   : true
	              });
	            }
	            module.debug('Setting up mutation observer', selectObserver, menuObserver);
	          }
	        },

	        create: {
	          id: function() {
	            id = (Math.random().toString(16) + '000000000').substr(2, 8);
	            elementNamespace = '.' + id;
	            module.verbose('Creating unique id for element', id);
	          },
	          userChoice: function(values) {
	            var
	              $userChoices,
	              $userChoice,
	              isUserValue,
	              html
	            ;
	            values = values || module.get.userValues();
	            if(!values) {
	              return false;
	            }
	            values = $.isArray(values)
	              ? values
	              : [values]
	            ;
	            $.each(values, function(index, value) {
	              if(module.get.item(value) === false) {
	                html         = settings.templates.addition( module.add.variables(message.addResult, value) );
	                $userChoice  = $('<div />')
	                  .html(html)
	                  .attr('data-' + metadata.value, value)
	                  .attr('data-' + metadata.text, value)
	                  .addClass(className.addition)
	                  .addClass(className.item)
	                ;
	                $userChoices = ($userChoices === undefined)
	                  ? $userChoice
	                  : $userChoices.add($userChoice)
	                ;
	                module.verbose('Creating user choices for value', value, $userChoice);
	              }
	            });
	            return $userChoices;
	          },
	          userLabels: function(value) {
	            var
	              userValues = module.get.userValues()
	            ;
	            if(userValues) {
	              module.debug('Adding user labels', userValues);
	              $.each(userValues, function(index, value) {
	                module.verbose('Adding custom user value');
	                module.add.label(value, value);
	              });
	            }
	          },
	          menu: function() {
	            $menu = $('<div />')
	              .addClass(className.menu)
	              .appendTo($module)
	            ;
	          }
	        },

	        search: function(query) {
	          query = (query !== undefined)
	            ? query
	            : module.get.query()
	          ;
	          module.verbose('Searching for query', query);
	          module.filter(query);
	        },

	        select: {
	          firstUnfiltered: function() {
	            module.verbose('Selecting first non-filtered element');
	            module.remove.selectedItem();
	            $item
	              .not(selector.unselectable)
	                .eq(0)
	                .addClass(className.selected)
	            ;
	          },
	          nextAvailable: function($selected) {
	            $selected = $selected.eq(0);
	            var
	              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),
	              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),
	              hasNext        = ($nextAvailable.length > 0)
	            ;
	            if(hasNext) {
	              module.verbose('Moving selection to', $nextAvailable);
	              $nextAvailable.addClass(className.selected);
	            }
	            else {
	              module.verbose('Moving selection to', $prevAvailable);
	              $prevAvailable.addClass(className.selected);
	            }
	          }
	        },

	        setup: {
	          api: function() {
	            var
	              apiSettings = {
	                debug : settings.debug,
	                on    : false
	              }
	            ;
	            module.verbose('First request, initializing API');
	            $module
	              .api(apiSettings)
	            ;
	          },
	          layout: function() {
	            if( $module.is('select') ) {
	              module.setup.select();
	              module.setup.returnedObject();
	            }
	            if( !module.has.menu() ) {
	              module.create.menu();
	            }
	            if( module.is.search() && !module.has.search() ) {
	              module.verbose('Adding search input');
	              $search = $('<input />')
	                .addClass(className.search)
	                .prop('autocomplete', 'off')
	                .insertBefore($text)
	              ;
	            }
	            if(settings.allowTab) {
	              module.set.tabbable();
	            }
	          },
	          select: function() {
	            var
	              selectValues  = module.get.selectValues()
	            ;
	            module.debug('Dropdown initialized on a select', selectValues);
	            if( $module.is('select') ) {
	              $input = $module;
	            }
	            // see if select is placed correctly already
	            if($input.parent(selector.dropdown).length > 0) {
	              module.debug('UI dropdown already exists. Creating dropdown menu only');
	              $module = $input.closest(selector.dropdown);
	              if( !module.has.menu() ) {
	                module.create.menu();
	              }
	              $menu = $module.children(selector.menu);
	              module.setup.menu(selectValues);
	            }
	            else {
	              module.debug('Creating entire dropdown from select');
	              $module = $('<div />')
	                .attr('class', $input.attr('class') )
	                .addClass(className.selection)
	                .addClass(className.dropdown)
	                .html( templates.dropdown(selectValues) )
	                .insertBefore($input)
	              ;
	              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {
	                module.error(error.missingMultiple);
	                $input.prop('multiple', true);
	              }
	              if($input.is('[multiple]')) {
	                module.set.multiple();
	              }
	              if ($input.prop('disabled')) {
	                module.debug('Disabling dropdown')
	                $module.addClass(className.disabled)
	              }
	              $input
	                .removeAttr('class')
	                .detach()
	                .prependTo($module)
	              ;
	            }
	            module.refresh();
	          },
	          menu: function(values) {
	            $menu.html( templates.menu(values, fields));
	            $item = $menu.find(selector.item);
	          },
	          reference: function() {
	            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');
	            // replace module reference
	            $module = $module.parent(selector.dropdown);
	            module.refresh();
	            module.setup.returnedObject();
	            // invoke method in context of current instance
	            if(methodInvoked) {
	              instance = module;
	              module.invoke(query);
	            }
	          },
	          returnedObject: function() {
	            var
	              $firstModules = $allModules.slice(0, elementIndex),
	              $lastModules = $allModules.slice(elementIndex + 1)
	            ;
	            // adjust all modules to use correct reference
	            $allModules = $firstModules.add($module).add($lastModules);
	          }
	        },

	        refresh: function() {
	          module.refreshSelectors();
	          module.refreshData();
	        },

	        refreshSelectors: function() {
	          module.verbose('Refreshing selector cache');
	          $text   = $module.find(selector.text);
	          $search = $module.find(selector.search);
	          $input  = $module.find(selector.input);
	          $icon   = $module.find(selector.icon);
	          $combo  = ($module.prev().find(selector.text).length > 0)
	            ? $module.prev().find(selector.text)
	            : $module.prev()
	          ;
	          $menu    = $module.children(selector.menu);
	          $item    = $menu.find(selector.item);
	        },

	        refreshData: function() {
	          module.verbose('Refreshing cached metadata');
	          $item
	            .removeData(metadata.text)
	            .removeData(metadata.value)
	          ;
	          $module
	            .removeData(metadata.defaultText)
	            .removeData(metadata.defaultValue)
	            .removeData(metadata.placeholderText)
	          ;
	        },

	        toggle: function() {
	          module.verbose('Toggling menu visibility');
	          if( !module.is.active() ) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.can.show() && !module.is.active() ) {
	            module.debug('Showing dropdown');
	            if(module.is.multiple() && !module.has.search() && module.is.allFiltered()) {
	              return true;
	            }
	            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {
	              module.remove.message();
	            }
	            if(settings.onShow.call(element) !== false) {
	              module.animate.show(function() {
	                if( module.can.click() ) {
	                  module.bind.intent();
	                }
	                module.set.visible();
	                callback.call(element);
	              });
	            }
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.is.active() ) {
	            module.debug('Hiding dropdown');
	            if(settings.onHide.call(element) !== false) {
	              module.animate.hide(function() {
	                module.remove.visible();
	                callback.call(element);
	              });
	            }
	          }
	        },

	        hideOthers: function() {
	          module.verbose('Finding other dropdowns to hide');
	          $allModules
	            .not($module)
	              .has(selector.menu + '.' + className.visible)
	                .dropdown('hide')
	          ;
	        },

	        hideMenu: function() {
	          module.verbose('Hiding menu  instantaneously');
	          module.remove.active();
	          module.remove.visible();
	          $menu.transition('hide');
	        },

	        hideSubMenus: function() {
	          var
	            $subMenus = $menu.children(selector.item).find(selector.menu)
	          ;
	          module.verbose('Hiding sub menus', $subMenus);
	          $subMenus.transition('hide');
	        },

	        bind: {
	          events: function() {
	            if(hasTouch) {
	              module.bind.touchEvents();
	            }
	            module.bind.keyboardEvents();
	            module.bind.inputEvents();
	            module.bind.mouseEvents();
	          },
	          touchEvents: function() {
	            module.debug('Touch device detected binding additional touch events');
	            if( module.is.searchSelection() ) {
	              // do nothing special yet
	            }
	            else if( module.is.single() ) {
	              $module
	                .on('touchstart' + eventNamespace, module.event.test.toggle)
	              ;
	            }
	            $menu
	              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)
	            ;
	          },
	          keyboardEvents: function() {
	            module.verbose('Binding keyboard events');
	            $module
	              .on('keydown' + eventNamespace, module.event.keydown)
	            ;
	            if( module.has.search() ) {
	              $module
	                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)
	              ;
	            }
	            if( module.is.multiple() ) {
	              $document
	                .on('keydown' + elementNamespace, module.event.document.keydown)
	              ;
	            }
	          },
	          inputEvents: function() {
	            module.verbose('Binding input change events');
	            $module
	              .on('change' + eventNamespace, selector.input, module.event.change)
	            ;
	          },
	          mouseEvents: function() {
	            module.verbose('Binding mouse events');
	            if(module.is.multiple()) {
	              $module
	                .on('click'   + eventNamespace, selector.label,  module.event.label.click)
	                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)
	              ;
	            }
	            if( module.is.searchSelection() ) {
	              $module
	                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)
	                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)
	                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)
	                .on('click'     + eventNamespace, selector.search, module.show)
	                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)
	                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)
	                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)
	              ;
	              if(module.is.multiple()) {
	                $module
	                  .on('click' + eventNamespace, module.event.click)
	                ;
	              }
	            }
	            else {
	              if(settings.on == 'click') {
	                $module
	                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)
	                  .on('click' + eventNamespace, module.event.test.toggle)
	                ;
	              }
	              else if(settings.on == 'hover') {
	                $module
	                  .on('mouseenter' + eventNamespace, module.delay.show)
	                  .on('mouseleave' + eventNamespace, module.delay.hide)
	                ;
	              }
	              else {
	                $module
	                  .on(settings.on + eventNamespace, module.toggle)
	                ;
	              }
	              $module
	                .on('mousedown' + eventNamespace, module.event.mousedown)
	                .on('mouseup'   + eventNamespace, module.event.mouseup)
	                .on('focus'     + eventNamespace, module.event.focus)
	                .on('blur'      + eventNamespace, module.event.blur)
	              ;
	            }
	            $menu
	              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)
	              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)
	              .on('click'      + eventNamespace, selector.item, module.event.item.click)
	            ;
	          },
	          intent: function() {
	            module.verbose('Binding hide intent event to document');
	            if(hasTouch) {
	              $document
	                .on('touchstart' + elementNamespace, module.event.test.touch)
	                .on('touchmove'  + elementNamespace, module.event.test.touch)
	              ;
	            }
	            $document
	              .on('click' + elementNamespace, module.event.test.hide)
	            ;
	          }
	        },

	        unbind: {
	          intent: function() {
	            module.verbose('Removing hide intent event from document');
	            if(hasTouch) {
	              $document
	                .off('touchstart' + elementNamespace)
	                .off('touchmove' + elementNamespace)
	              ;
	            }
	            $document
	              .off('click' + elementNamespace)
	            ;
	          }
	        },

	        filter: function(query) {
	          var
	            searchTerm = (query !== undefined)
	              ? query
	              : module.get.query(),
	            afterFiltered = function() {
	              if(module.is.multiple()) {
	                module.filterActive();
	              }
	              module.select.firstUnfiltered();
	              if( module.has.allResultsFiltered() ) {
	                if( settings.onNoResults.call(element, searchTerm) ) {
	                  if(!settings.allowAdditions) {
	                    module.verbose('All items filtered, showing message', searchTerm);
	                    module.add.message(message.noResults);
	                  }
	                }
	                else {
	                  module.verbose('All items filtered, hiding dropdown', searchTerm);
	                  module.hideMenu();
	                }
	              }
	              else {
	                module.remove.message();
	              }
	              if(settings.allowAdditions) {
	                module.add.userSuggestion(query);
	              }
	              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {
	                module.show();
	              }
	            }
	          ;
	          if(settings.useLabels && module.has.maxSelections()) {
	            return;
	          }
	          if(settings.apiSettings) {
	            if( module.can.useAPI() ) {
	              module.queryRemote(searchTerm, function() {
	                afterFiltered();
	              });
	            }
	            else {
	              module.error(error.noAPI);
	            }
	          }
	          else {
	            module.filterItems(searchTerm);
	            afterFiltered();
	          }
	        },

	        queryRemote: function(query, callback) {
	          var
	            apiSettings = {
	              errorDuration        : false,
	              throttle             : settings.throttle,
	              urlData              : {
	                query: query
	              },
	              onError: function() {
	                module.add.message(message.serverError);
	                callback();
	              },
	              onFailure: function() {
	                module.add.message(message.serverError);
	                callback();
	              },
	              onSuccess : function(response) {
	                module.remove.message();
	                module.setup.menu({
	                  values: response[fields.remoteValues]
	                });
	                callback();
	              }
	            }
	          ;
	          if( !$module.api('get request') ) {
	            module.setup.api();
	          }
	          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);
	          $module
	            .api('setting', apiSettings)
	            .api('query')
	          ;
	        },

	        filterItems: function(query) {
	          var
	            searchTerm = (query !== undefined)
	              ? query
	              : module.get.query(),
	            results          =  null,
	            escapedTerm      = module.escape.regExp(searchTerm),
	            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')
	          ;
	          // avoid loop if we're matching nothing
	          if( module.has.query() ) {
	            results = [];

	            module.verbose('Searching for matching values', searchTerm);
	            $item
	              .each(function(){
	                var
	                  $choice = $(this),
	                  text,
	                  value
	                ;
	                if(settings.match == 'both' || settings.match == 'text') {
	                  text = String(module.get.choiceText($choice, false));
	                  if(text.search(beginsWithRegExp) !== -1) {
	                    results.push(this);
	                    return true;
	                  }
	                  else if(settings.fullTextSearch && module.fuzzySearch(searchTerm, text)) {
	                    results.push(this);
	                    return true;
	                  }
	                }
	                if(settings.match == 'both' || settings.match == 'value') {
	                  value = String(module.get.choiceValue($choice, text));

	                  if(value.search(beginsWithRegExp) !== -1) {
	                    results.push(this);
	                    return true;
	                  }
	                  else if(settings.fullTextSearch && module.fuzzySearch(searchTerm, value)) {
	                    results.push(this);
	                    return true;
	                  }
	                }
	              })
	            ;
	          }
	          module.debug('Showing only matched items', searchTerm);
	          module.remove.filteredItem();
	          if(results) {
	            $item
	              .not(results)
	              .addClass(className.filtered)
	            ;
	          }
	        },

	        fuzzySearch: function(query, term) {
	          var
	            termLength  = term.length,
	            queryLength = query.length
	          ;
	          query = query.toLowerCase();
	          term  = term.toLowerCase();
	          if(queryLength > termLength) {
	            return false;
	          }
	          if(queryLength === termLength) {
	            return (query === term);
	          }
	          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {
	            var
	              queryCharacter = query.charCodeAt(characterIndex)
	            ;
	            while(nextCharacterIndex < termLength) {
	              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {
	                continue search;
	              }
	            }
	            return false;
	          }
	          return true;
	        },

	        filterActive: function() {
	          if(settings.useLabels) {
	            $item.filter('.' + className.active)
	              .addClass(className.filtered)
	            ;
	          }
	        },

	        focusSearch: function() {
	          if( module.is.search() && !module.is.focusedOnSearch() ) {
	            $search[0].focus();
	          }
	        },

	        forceSelection: function() {
	          var
	            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),
	            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),
	            $selectedItem      = ($currentlySelected.length > 0)
	              ? $currentlySelected
	              : $activeItem,
	            hasSelected = ($selectedItem.size() > 0)
	          ;
	          if( module.has.query() ) {
	            if(hasSelected) {
	              module.debug('Forcing partial selection to selected item', $selectedItem);
	              module.event.item.click.call($selectedItem);
	              return;
	            }
	            else {
	              module.remove.searchTerm();
	            }
	          }
	          module.hide();
	        },

	        event: {
	          change: function() {
	            if(!internalChange) {
	              module.debug('Input changed, updating selection');
	              module.set.selected();
	            }
	          },
	          focus: function() {
	            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {
	              module.show();
	            }
	          },
	          click: function(event) {
	            var
	              $target = $(event.target)
	            ;
	            // focus search
	            if($target.is($module) && !module.is.focusedOnSearch()) {
	              module.focusSearch();
	            }
	          },
	          blur: function(event) {
	            pageLostFocus = (document.activeElement === this);
	            if(!activated && !pageLostFocus) {
	              module.remove.activeLabel();
	              module.hide();
	            }
	          },
	          // prevents focus callback from occurring on mousedown
	          mousedown: function() {
	            activated = true;
	          },
	          mouseup: function() {
	            activated = false;
	          },
	          search: {
	            focus: function() {
	              activated = true;
	              if(module.is.multiple()) {
	                module.remove.activeLabel();
	              }
	              if(settings.showOnFocus) {
	                module.search();
	                module.show();
	              }
	            },
	            blur: function(event) {
	              pageLostFocus = (document.activeElement === this);
	              if(!itemActivated && !pageLostFocus) {
	                if(module.is.multiple()) {
	                  module.remove.activeLabel();
	                  module.hide();
	                }
	                else if(settings.forceSelection) {
	                  module.forceSelection();
	                }
	                else {
	                  module.hide();
	                }
	              }
	              else if(pageLostFocus) {
	                if(settings.forceSelection) {
	                  module.forceSelection();
	                }
	              }
	            }
	          },
	          icon: {
	            click: function(event) {
	              module.toggle();
	              event.stopPropagation();
	            }
	          },
	          text: {
	            focus: function(event) {
	              activated = true;
	              module.focusSearch();
	            }
	          },
	          input: function(event) {
	            if(module.is.multiple() || module.is.searchSelection()) {
	              module.set.filtered();
	            }
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.search, settings.delay.search);
	          },
	          label: {
	            click: function(event) {
	              var
	                $label        = $(this),
	                $labels       = $module.find(selector.label),
	                $activeLabels = $labels.filter('.' + className.active),
	                $nextActive   = $label.nextAll('.' + className.active),
	                $prevActive   = $label.prevAll('.' + className.active),
	                $range = ($nextActive.length > 0)
	                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)
	                  : $label.prevUntil($prevActive).add($activeLabels).add($label)
	              ;
	              if(event.shiftKey) {
	                $activeLabels.removeClass(className.active);
	                $range.addClass(className.active);
	              }
	              else if(event.ctrlKey) {
	                $label.toggleClass(className.active);
	              }
	              else {
	                $activeLabels.removeClass(className.active);
	                $label.addClass(className.active);
	              }
	              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));
	            }
	          },
	          remove: {
	            click: function() {
	              var
	                $label = $(this).parent()
	              ;
	              if( $label.hasClass(className.active) ) {
	                // remove all selected labels
	                module.remove.activeLabels();
	              }
	              else {
	                // remove this label only
	                module.remove.activeLabels( $label );
	              }
	            }
	          },
	          test: {
	            toggle: function(event) {
	              var
	                toggleBehavior = (module.is.multiple())
	                  ? module.show
	                  : module.toggle
	              ;
	              if( module.determine.eventOnElement(event, toggleBehavior) ) {
	                event.preventDefault();
	              }
	            },
	            touch: function(event) {
	              module.determine.eventOnElement(event, function() {
	                if(event.type == 'touchstart') {
	                  module.timer = setTimeout(function() {
	                    module.hide();
	                  }, settings.delay.touch);
	                }
	                else if(event.type == 'touchmove') {
	                  clearTimeout(module.timer);
	                }
	              });
	              event.stopPropagation();
	            },
	            hide: function(event) {
	              module.determine.eventInModule(event, module.hide);
	            }
	          },
	          menu: {
	            mousedown: function() {
	              itemActivated = true;
	            },
	            mouseup: function() {
	              itemActivated = false;
	            }
	          },
	          item: {
	            mouseenter: function(event) {
	              var
	                $subMenu    = $(this).children(selector.menu),
	                $otherMenus = $(this).siblings(selector.item).children(selector.menu)
	              ;
	              if( $subMenu.length > 0 ) {
	                clearTimeout(module.itemTimer);
	                module.itemTimer = setTimeout(function() {
	                  module.verbose('Showing sub-menu', $subMenu);
	                  $.each($otherMenus, function() {
	                    module.animate.hide(false, $(this));
	                  });
	                  module.animate.show(false,  $subMenu);
	                }, settings.delay.show);
	                event.preventDefault();
	              }
	            },
	            mouseleave: function(event) {
	              var
	                $subMenu = $(this).children(selector.menu)
	              ;
	              if($subMenu.length > 0) {
	                clearTimeout(module.itemTimer);
	                module.itemTimer = setTimeout(function() {
	                  module.verbose('Hiding sub-menu', $subMenu);
	                  module.animate.hide(false,  $subMenu);
	                }, settings.delay.hide);
	              }
	            },
	            touchend: function() {
	            },
	            click: function (event) {
	              var
	                $choice        = $(this),
	                $target        = (event)
	                  ? $(event.target)
	                  : $(''),
	                $subMenu       = $choice.find(selector.menu),
	                text           = module.get.choiceText($choice),
	                value          = module.get.choiceValue($choice, text),
	                hasSubMenu     = ($subMenu.length > 0),
	                isBubbledEvent = ($subMenu.find($target).length > 0)
	              ;
	              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {
	                if(!settings.useLabels) {
	                  module.remove.filteredItem();
	                  module.remove.searchTerm();
	                  module.set.scrollPosition($choice);
	                }
	                module.determine.selectAction.call(this, text, value);
	              }
	            }
	          },

	          document: {
	            // label selection should occur even when element has no focus
	            keydown: function(event) {
	              var
	                pressedKey    = event.which,
	                isShortcutKey = module.is.inObject(pressedKey, keys)
	              ;
	              if(isShortcutKey) {
	                var
	                  $label            = $module.find(selector.label),
	                  $activeLabel      = $label.filter('.' + className.active),
	                  activeValue       = $activeLabel.data(metadata.value),
	                  labelIndex        = $label.index($activeLabel),
	                  labelCount        = $label.length,
	                  hasActiveLabel    = ($activeLabel.length > 0),
	                  hasMultipleActive = ($activeLabel.length > 1),
	                  isFirstLabel      = (labelIndex === 0),
	                  isLastLabel       = (labelIndex + 1 == labelCount),
	                  isSearch          = module.is.searchSelection(),
	                  isFocusedOnSearch = module.is.focusedOnSearch(),
	                  isFocused         = module.is.focused(),
	                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),
	                  $nextLabel
	                ;
	                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {
	                  return;
	                }

	                if(pressedKey == keys.leftArrow) {
	                  // activate previous label
	                  if((isFocused || caretAtStart) && !hasActiveLabel) {
	                    module.verbose('Selecting previous label');
	                    $label.last().addClass(className.active);
	                  }
	                  else if(hasActiveLabel) {
	                    if(!event.shiftKey) {
	                      module.verbose('Selecting previous label');
	                      $label.removeClass(className.active);
	                    }
	                    else {
	                      module.verbose('Adding previous label to selection');
	                    }
	                    if(isFirstLabel && !hasMultipleActive) {
	                      $activeLabel.addClass(className.active);
	                    }
	                    else {
	                      $activeLabel.prev(selector.siblingLabel)
	                        .addClass(className.active)
	                        .end()
	                      ;
	                    }
	                    event.preventDefault();
	                  }
	                }
	                else if(pressedKey == keys.rightArrow) {
	                  // activate first label
	                  if(isFocused && !hasActiveLabel) {
	                    $label.first().addClass(className.active);
	                  }
	                  // activate next label
	                  if(hasActiveLabel) {
	                    if(!event.shiftKey) {
	                      module.verbose('Selecting next label');
	                      $label.removeClass(className.active);
	                    }
	                    else {
	                      module.verbose('Adding next label to selection');
	                    }
	                    if(isLastLabel) {
	                      if(isSearch) {
	                        if(!isFocusedOnSearch) {
	                          module.focusSearch();
	                        }
	                        else {
	                          $label.removeClass(className.active);
	                        }
	                      }
	                      else if(hasMultipleActive) {
	                        $activeLabel.next(selector.siblingLabel).addClass(className.active);
	                      }
	                      else {
	                        $activeLabel.addClass(className.active);
	                      }
	                    }
	                    else {
	                      $activeLabel.next(selector.siblingLabel).addClass(className.active);
	                    }
	                    event.preventDefault();
	                  }
	                }
	                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {
	                  if(hasActiveLabel) {
	                    module.verbose('Removing active labels');
	                    if(isLastLabel) {
	                      if(isSearch && !isFocusedOnSearch) {
	                        module.focusSearch();
	                      }
	                    }
	                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);
	                    module.remove.activeLabels($activeLabel);
	                    event.preventDefault();
	                  }
	                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {
	                    module.verbose('Removing last label on input backspace');
	                    $activeLabel = $label.last().addClass(className.active);
	                    module.remove.activeLabels($activeLabel);
	                  }
	                }
	                else {
	                  $activeLabel.removeClass(className.active);
	                }
	              }
	            }
	          },

	          keydown: function(event) {
	            var
	              pressedKey    = event.which,
	              isShortcutKey = module.is.inObject(pressedKey, keys)
	            ;
	            if(isShortcutKey) {
	              var
	                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),
	                $activeItem        = $menu.children('.' + className.active).eq(0),
	                $selectedItem      = ($currentlySelected.length > 0)
	                  ? $currentlySelected
	                  : $activeItem,
	                $visibleItems = ($selectedItem.length > 0)
	                  ? $selectedItem.siblings(':not(.' + className.filtered +')').andSelf()
	                  : $menu.children(':not(.' + className.filtered +')'),
	                $subMenu             = $selectedItem.children(selector.menu),
	                $parentMenu          = $selectedItem.closest(selector.menu),
	                inVisibleMenu        = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),
	                hasSubMenu           = ($subMenu.length> 0),
	                hasSelectedItem      = ($selectedItem.length > 0),
	                selectedIsSelectable = ($selectedItem.not(selector.unselectable).length > 0),
	                delimiterPressed     = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),
	                $nextItem,
	                isSubMenuItem,
	                newIndex
	              ;
	              // visible menu keyboard shortcuts
	              if( module.is.visible() ) {

	                // enter (select or open sub-menu)
	                if(pressedKey == keys.enter || delimiterPressed) {
	                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {
	                    module.verbose('Pressed enter on unselectable category, opening sub menu');
	                    pressedKey = keys.rightArrow;
	                  }
	                  else if(selectedIsSelectable) {
	                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);
	                    module.event.item.click.call($selectedItem, event);
	                    if(module.is.searchSelection()) {
	                      module.remove.searchTerm();
	                    }
	                  }
	                  event.preventDefault();
	                }

	                // left arrow (hide sub-menu)
	                if(pressedKey == keys.leftArrow) {

	                  isSubMenuItem = ($parentMenu[0] !== $menu[0]);

	                  if(isSubMenuItem) {
	                    module.verbose('Left key pressed, closing sub-menu');
	                    module.animate.hide(false,  $parentMenu);
	                    $selectedItem
	                      .removeClass(className.selected)
	                    ;
	                    $parentMenu
	                      .closest(selector.item)
	                        .addClass(className.selected)
	                    ;
	                    event.preventDefault();
	                  }
	                }

	                // right arrow (show sub-menu)
	                if(pressedKey == keys.rightArrow) {
	                  if(hasSubMenu) {
	                    module.verbose('Right key pressed, opening sub-menu');
	                    module.animate.show(false,  $subMenu);
	                    $selectedItem
	                      .removeClass(className.selected)
	                    ;
	                    $subMenu
	                      .find(selector.item).eq(0)
	                        .addClass(className.selected)
	                    ;
	                    event.preventDefault();
	                  }
	                }

	                // up arrow (traverse menu up)
	                if(pressedKey == keys.upArrow) {
	                  $nextItem = (hasSelectedItem && inVisibleMenu)
	                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)
	                    : $item.eq(0)
	                  ;
	                  if($visibleItems.index( $nextItem ) < 0) {
	                    module.verbose('Up key pressed but reached top of current menu');
	                    event.preventDefault();
	                    return;
	                  }
	                  else {
	                    module.verbose('Up key pressed, changing active item');
	                    $selectedItem
	                      .removeClass(className.selected)
	                    ;
	                    $nextItem
	                      .addClass(className.selected)
	                    ;
	                    module.set.scrollPosition($nextItem);
	                  }
	                  event.preventDefault();
	                }

	                // down arrow (traverse menu down)
	                if(pressedKey == keys.downArrow) {
	                  $nextItem = (hasSelectedItem && inVisibleMenu)
	                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)
	                    : $item.eq(0)
	                  ;
	                  if($nextItem.length === 0) {
	                    module.verbose('Down key pressed but reached bottom of current menu');
	                    event.preventDefault();
	                    return;
	                  }
	                  else {
	                    module.verbose('Down key pressed, changing active item');
	                    $item
	                      .removeClass(className.selected)
	                    ;
	                    $nextItem
	                      .addClass(className.selected)
	                    ;
	                    module.set.scrollPosition($nextItem);
	                  }
	                  event.preventDefault();
	                }

	                // page down (show next page)
	                if(pressedKey == keys.pageUp) {
	                  module.scrollPage('up');
	                  event.preventDefault();
	                }
	                if(pressedKey == keys.pageDown) {
	                  module.scrollPage('down');
	                  event.preventDefault();
	                }

	                // escape (close menu)
	                if(pressedKey == keys.escape) {
	                  module.verbose('Escape key pressed, closing dropdown');
	                  module.hide();
	                }

	              }
	              else {
	                // delimiter key
	                if(delimiterPressed) {
	                  event.preventDefault();
	                }
	                // down arrow (open menu)
	                if(pressedKey == keys.downArrow) {
	                  module.verbose('Down key pressed, showing dropdown');
	                  module.show();
	                  event.preventDefault();
	                }
	              }
	            }
	            else {
	              if( module.is.selection() && !module.is.search() ) {
	                module.set.selectedLetter( String.fromCharCode(pressedKey) );
	              }
	            }
	          }
	        },

	        trigger: {
	          change: function() {
	            var
	              events       = document.createEvent('HTMLEvents'),
	              inputElement = $input[0]
	            ;
	            if(inputElement) {
	              module.verbose('Triggering native change event');
	              events.initEvent('change', true, false);
	              inputElement.dispatchEvent(events);
	            }
	          }
	        },

	        determine: {
	          selectAction: function(text, value) {
	            module.verbose('Determining action', settings.action);
	            if( $.isFunction( module.action[settings.action] ) ) {
	              module.verbose('Triggering preset action', settings.action, text, value);
	              module.action[ settings.action ].call(this, text, value);
	            }
	            else if( $.isFunction(settings.action) ) {
	              module.verbose('Triggering user action', settings.action, text, value);
	              settings.action.call(this, text, value);
	            }
	            else {
	              module.error(error.action, settings.action);
	            }
	          },
	          eventInModule: function(event, callback) {
	            var
	              $target    = $(event.target),
	              inDocument = ($target.closest(document.documentElement).length > 0),
	              inModule   = ($target.closest($module).length > 0)
	            ;
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if(inDocument && !inModule) {
	              module.verbose('Triggering event', callback);
	              callback();
	              return true;
	            }
	            else {
	              module.verbose('Event occurred in dropdown, canceling callback');
	              return false;
	            }
	          },
	          eventOnElement: function(event, callback) {
	            var
	              $target    = $(event.target),
	              $label     = $target.closest(selector.siblingLabel),
	              notOnLabel = ($module.find($label).length === 0),
	              notInMenu  = ($target.closest($menu).length === 0)
	            ;
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if(notOnLabel && notInMenu) {
	              module.verbose('Triggering event', callback);
	              callback();
	              return true;
	            }
	            else {
	              module.verbose('Event occurred in dropdown menu, canceling callback');
	              return false;
	            }
	          }
	        },

	        action: {

	          nothing: function() {},

	          activate: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            if( module.can.activate( $(this) ) ) {
	              module.set.selected(value, $(this));
	              if(module.is.multiple() && !module.is.allFiltered()) {
	                return;
	              }
	              else {
	                module.hideAndClear();
	              }
	            }
	          },

	          select: function(text, value) {
	            // mimics action.activate but does not select text
	            module.action.activate.call(this);
	          },

	          combo: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            module.set.selected(value, $(this));
	            module.hideAndClear();
	          },

	          hide: function(text, value) {
	            module.set.value(value);
	            module.hideAndClear();
	          }

	        },

	        get: {
	          id: function() {
	            return id;
	          },
	          defaultText: function() {
	            return $module.data(metadata.defaultText);
	          },
	          defaultValue: function() {
	            return $module.data(metadata.defaultValue);
	          },
	          placeholderText: function() {
	            return $module.data(metadata.placeholderText) || '';
	          },
	          text: function() {
	            return $text.text();
	          },
	          query: function() {
	            return $.trim($search.val());
	          },
	          searchWidth: function(characterCount) {
	            return (characterCount * settings.glyphWidth) + 'em';
	          },
	          selectionCount: function() {
	            var
	              values = module.get.values(),
	              count
	            ;
	            count = ( module.is.multiple() )
	              ? $.isArray(values)
	                ? values.length
	                : 0
	              : (module.get.value() !== '')
	                ? 1
	                : 0
	            ;
	            return count;
	          },
	          transition: function($subMenu) {
	            return (settings.transition == 'auto')
	              ? module.is.upward($subMenu)
	                ? 'slide up'
	                : 'slide down'
	              : settings.transition
	            ;
	          },
	          userValues: function() {
	            var
	              values = module.get.values()
	            ;
	            if(!values) {
	              return false;
	            }
	            values = $.isArray(values)
	              ? values
	              : [values]
	            ;
	            return $.grep(values, function(value) {
	              return (module.get.item(value) === false);
	            });
	          },
	          uniqueArray: function(array) {
	            return $.grep(array, function (value, index) {
	                return $.inArray(value, array) === index;
	            });
	          },
	          caretPosition: function() {
	            var
	              input = $search.get(0),
	              range,
	              rangeLength
	            ;
	            if('selectionStart' in input) {
	              return input.selectionStart;
	            }
	            else if (document.selection) {
	              input.focus();
	              range       = document.selection.createRange();
	              rangeLength = range.text.length;
	              range.moveStart('character', -input.value.length);
	              return range.text.length - rangeLength;
	            }
	          },
	          value: function() {
	            var
	              value = ($input.length > 0)
	                ? $input.val()
	                : $module.data(metadata.value)
	            ;
	            // prevents placeholder element from being selected when multiple
	            if($.isArray(value) && value.length === 1 && value[0] === '') {
	              return '';
	            }
	            return value;
	          },
	          values: function() {
	            var
	              value = module.get.value()
	            ;
	            if(value === '') {
	              return '';
	            }
	            return ( !module.has.selectInput() && module.is.multiple() )
	              ? (typeof value == 'string') // delimited string
	                ? value.split(settings.delimiter)
	                : ''
	              : value
	            ;
	          },
	          remoteValues: function() {
	            var
	              values = module.get.values(),
	              remoteValues = false
	            ;
	            if(values) {
	              if(typeof values == 'string') {
	                values = [values];
	              }
	              remoteValues = {};
	              $.each(values, function(index, value) {
	                var
	                  name = module.read.remoteData(value)
	                ;
	                module.verbose('Restoring value from session data', name, value);
	                remoteValues[value] = (name)
	                  ? name
	                  : value
	                ;
	              });
	            }
	            return remoteValues;
	          },
	          choiceText: function($choice, preserveHTML) {
	            preserveHTML = (preserveHTML !== undefined)
	              ? preserveHTML
	              : settings.preserveHTML
	            ;
	            if($choice) {
	              if($choice.find(selector.menu).length > 0) {
	                module.verbose('Retreiving text of element with sub-menu');
	                $choice = $choice.clone();
	                $choice.find(selector.menu).remove();
	                $choice.find(selector.menuIcon).remove();
	              }
	              return ($choice.data(metadata.text) !== undefined)
	                ? $choice.data(metadata.text)
	                : (preserveHTML)
	                  ? $.trim($choice.html())
	                  : $.trim($choice.text())
	              ;
	            }
	          },
	          choiceValue: function($choice, choiceText) {
	            choiceText = choiceText || module.get.choiceText($choice);
	            if(!$choice) {
	              return false;
	            }
	            return ($choice.data(metadata.value) !== undefined)
	              ? String( $choice.data(metadata.value) )
	              : (typeof choiceText === 'string')
	                ? $.trim(choiceText.toLowerCase())
	                : String(choiceText)
	            ;
	          },
	          inputEvent: function() {
	            var
	              input = $search[0]
	            ;
	            if(input) {
	              return (input.oninput !== undefined)
	                ? 'input'
	                : (input.onpropertychange !== undefined)
	                  ? 'propertychange'
	                  : 'keyup'
	              ;
	            }
	            return false;
	          },
	          selectValues: function() {
	            var
	              select = {}
	            ;
	            select.values = [];
	            $module
	              .find('option')
	                .each(function() {
	                  var
	                    $option  = $(this),
	                    name     = $option.html(),
	                    disabled = $option.attr('disabled'),
	                    value    = ( $option.attr('value') !== undefined )
	                      ? $option.attr('value')
	                      : name
	                  ;
	                  if(settings.placeholder === 'auto' && value === '') {
	                    select.placeholder = name;
	                  }
	                  else {
	                    select.values.push({
	                      name     : name,
	                      value    : value,
	                      disabled : disabled
	                    });
	                  }
	                })
	            ;
	            if(settings.placeholder && settings.placeholder !== 'auto') {
	              module.debug('Setting placeholder value to', settings.placeholder);
	              select.placeholder = settings.placeholder;
	            }
	            if(settings.sortSelect) {
	              select.values.sort(function(a, b) {
	                return (a.name > b.name)
	                  ? 1
	                  : -1
	                ;
	              });
	              module.debug('Retrieved and sorted values from select', select);
	            }
	            else {
	              module.debug('Retreived values from select', select);
	            }
	            return select;
	          },
	          activeItem: function() {
	            return $item.filter('.'  + className.active);
	          },
	          selectedItem: function() {
	            var
	              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)
	            ;
	            return ($selectedItem.length > 0)
	              ? $selectedItem
	              : $item.eq(0)
	            ;
	          },
	          itemWithAdditions: function(value) {
	            var
	              $items       = module.get.item(value),
	              $userItems   = module.create.userChoice(value),
	              hasUserItems = ($userItems && $userItems.length > 0)
	            ;
	            if(hasUserItems) {
	              $items = ($items.length > 0)
	                ? $items.add($userItems)
	                : $userItems
	              ;
	            }
	            return $items;
	          },
	          item: function(value, strict) {
	            var
	              $selectedItem = false,
	              shouldSearch,
	              isMultiple
	            ;
	            value = (value !== undefined)
	              ? value
	              : ( module.get.values() !== undefined)
	                ? module.get.values()
	                : module.get.text()
	            ;
	            shouldSearch = (isMultiple)
	              ? (value.length > 0)
	              : (value !== undefined && value !== null)
	            ;
	            isMultiple = (module.is.multiple() && $.isArray(value));
	            strict     = (value === '' || value === 0)
	              ? true
	              : strict || false
	            ;
	            if(shouldSearch) {
	              $item
	                .each(function() {
	                  var
	                    $choice       = $(this),
	                    optionText    = module.get.choiceText($choice),
	                    optionValue   = module.get.choiceValue($choice, optionText)
	                  ;
	                  // safe early exit
	                  if(optionValue === null || optionValue === undefined) {
	                    return;
	                  }
	                  if(isMultiple) {
	                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {
	                      $selectedItem = ($selectedItem)
	                        ? $selectedItem.add($choice)
	                        : $choice
	                      ;
	                    }
	                  }
	                  else if(strict) {
	                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);
	                    if( optionValue === value || optionText === value) {
	                      $selectedItem = $choice;
	                      return true;
	                    }
	                  }
	                  else {
	                    if( String(optionValue) == String(value) || optionText == value) {
	                      module.verbose('Found select item by value', optionValue, value);
	                      $selectedItem = $choice;
	                      return true;
	                    }
	                  }
	                })
	              ;
	            }
	            return $selectedItem;
	          }
	        },

	        check: {
	          maxSelections: function(selectionCount) {
	            if(settings.maxSelections) {
	              selectionCount = (selectionCount !== undefined)
	                ? selectionCount
	                : module.get.selectionCount()
	              ;
	              if(selectionCount >= settings.maxSelections) {
	                module.debug('Maximum selection count reached');
	                if(settings.useLabels) {
	                  $item.addClass(className.filtered);
	                  module.add.message(message.maxSelections);
	                }
	                return true;
	              }
	              else {
	                module.verbose('No longer at maximum selection count');
	                module.remove.message();
	                module.remove.filteredItem();
	                if(module.is.searchSelection()) {
	                  module.filterItems();
	                }
	                return false;
	              }
	            }
	            return true;
	          }
	        },

	        restore: {
	          defaults: function() {
	            module.clear();
	            module.restore.defaultText();
	            module.restore.defaultValue();
	          },
	          defaultText: function() {
	            var
	              defaultText     = module.get.defaultText(),
	              placeholderText = module.get.placeholderText
	            ;
	            if(defaultText === placeholderText) {
	              module.debug('Restoring default placeholder text', defaultText);
	              module.set.placeholderText(defaultText);
	            }
	            else {
	              module.debug('Restoring default text', defaultText);
	              module.set.text(defaultText);
	            }
	          },
	          defaultValue: function() {
	            var
	              defaultValue = module.get.defaultValue()
	            ;
	            if(defaultValue !== undefined) {
	              module.debug('Restoring default value', defaultValue);
	              if(defaultValue !== '') {
	                module.set.value(defaultValue);
	                module.set.selected();
	              }
	              else {
	                module.remove.activeItem();
	                module.remove.selectedItem();
	              }
	            }
	          },
	          labels: function() {
	            if(settings.allowAdditions) {
	              if(!settings.useLabels) {
	                module.error(error.labels);
	                settings.useLabels = true;
	              }
	              module.debug('Restoring selected values');
	              module.create.userLabels();
	            }
	            module.check.maxSelections();
	          },
	          selected: function() {
	            module.restore.values();
	            if(module.is.multiple()) {
	              module.debug('Restoring previously selected values and labels');
	              module.restore.labels();
	            }
	            else {
	              module.debug('Restoring previously selected values');
	            }
	          },
	          values: function() {
	            // prevents callbacks from occuring on initial load
	            module.set.initialLoad();
	            if(settings.apiSettings) {
	              if(settings.saveRemoteData) {
	                module.restore.remoteValues();
	              }
	              else {
	                module.clearValue();
	              }
	            }
	            else {
	              module.set.selected();
	            }
	            module.remove.initialLoad();
	          },
	          remoteValues: function() {
	            var
	              values = module.get.remoteValues()
	            ;
	            module.debug('Recreating selected from session data', values);
	            if(values) {
	              if( module.is.single() ) {
	                $.each(values, function(value, name) {
	                  module.set.text(name);
	                });
	              }
	              else {
	                $.each(values, function(value, name) {
	                  module.add.label(value, name);
	                });
	              }
	            }
	          }
	        },

	        read: {
	          remoteData: function(value) {
	            var
	              name
	            ;
	            if(window.Storage === undefined) {
	              module.error(error.noStorage);
	              return;
	            }
	            name = sessionStorage.getItem(value);
	            return (name !== undefined)
	              ? name
	              : false
	            ;
	          }
	        },

	        save: {
	          defaults: function() {
	            module.save.defaultText();
	            module.save.placeholderText();
	            module.save.defaultValue();
	          },
	          defaultValue: function() {
	            var
	              value = module.get.value()
	            ;
	            module.verbose('Saving default value as', value);
	            $module.data(metadata.defaultValue, value);
	          },
	          defaultText: function() {
	            var
	              text = module.get.text()
	            ;
	            module.verbose('Saving default text as', text);
	            $module.data(metadata.defaultText, text);
	          },
	          placeholderText: function() {
	            var
	              text
	            ;
	            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {
	              text = module.get.text();
	              module.verbose('Saving placeholder text as', text);
	              $module.data(metadata.placeholderText, text);
	            }
	          },
	          remoteData: function(name, value) {
	            if(window.Storage === undefined) {
	              module.error(error.noStorage);
	              return;
	            }
	            module.verbose('Saving remote data to session storage', value, name);
	            sessionStorage.setItem(value, name);
	          }
	        },

	        clear: function() {
	          if(module.is.multiple()) {
	            module.remove.labels();
	          }
	          else {
	            module.remove.activeItem();
	            module.remove.selectedItem();
	          }
	          module.set.placeholderText();
	          module.clearValue();
	        },

	        clearValue: function() {
	          module.set.value('');
	        },

	        scrollPage: function(direction, $selectedItem) {
	          var
	            $currentItem  = $selectedItem || module.get.selectedItem(),
	            $menu         = $currentItem.closest(selector.menu),
	            menuHeight    = $menu.outerHeight(),
	            currentScroll = $menu.scrollTop(),
	            itemHeight    = $item.eq(0).outerHeight(),
	            itemsPerPage  = Math.floor(menuHeight / itemHeight),
	            maxScroll     = $menu.prop('scrollHeight'),
	            newScroll     = (direction == 'up')
	              ? currentScroll - (itemHeight * itemsPerPage)
	              : currentScroll + (itemHeight * itemsPerPage),
	            $selectableItem = $item.not(selector.unselectable),
	            isWithinRange,
	            $nextSelectedItem,
	            elementIndex
	          ;
	          elementIndex      = (direction == 'up')
	            ? $selectableItem.index($currentItem) - itemsPerPage
	            : $selectableItem.index($currentItem) + itemsPerPage
	          ;
	          isWithinRange = (direction == 'up')
	            ? (elementIndex >= 0)
	            : (elementIndex < $selectableItem.length)
	          ;
	          $nextSelectedItem = (isWithinRange)
	            ? $selectableItem.eq(elementIndex)
	            : (direction == 'up')
	              ? $selectableItem.first()
	              : $selectableItem.last()
	          ;
	          if($nextSelectedItem.length > 0) {
	            module.debug('Scrolling page', direction, $nextSelectedItem);
	            $currentItem
	              .removeClass(className.selected)
	            ;
	            $nextSelectedItem
	              .addClass(className.selected)
	            ;
	            $menu
	              .scrollTop(newScroll)
	            ;
	          }
	        },

	        set: {
	          filtered: function() {
	            var
	              isMultiple       = module.is.multiple(),
	              isSearch         = module.is.searchSelection(),
	              isSearchMultiple = (isMultiple && isSearch),
	              searchValue      = (isSearch)
	                ? module.get.query()
	                : '',
	              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),
	              searchWidth      = module.get.searchWidth(searchValue.length),
	              valueIsSet       = searchValue !== ''
	            ;
	            if(isMultiple && hasSearchValue) {
	              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);
	              $search.css('width', searchWidth);
	            }
	            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {
	              module.verbose('Hiding placeholder text');
	              $text.addClass(className.filtered);
	            }
	            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {
	              module.verbose('Showing placeholder text');
	              $text.removeClass(className.filtered);
	            }
	          },
	          loading: function() {
	            $module.addClass(className.loading);
	          },
	          placeholderText: function(text) {
	            text = text || module.get.placeholderText();
	            module.debug('Setting placeholder text', text);
	            module.set.text(text);
	            $text.addClass(className.placeholder);
	          },
	          tabbable: function() {
	            if( module.has.search() ) {
	              module.debug('Added tabindex to searchable dropdown');
	              $search
	                .val('')
	                .attr('tabindex', 0)
	              ;
	              $menu
	                .attr('tabindex', -1)
	              ;
	            }
	            else {
	              module.debug('Added tabindex to dropdown');
	              if( $module.attr('tabindex') === undefined) {
	                $module
	                  .attr('tabindex', 0)
	                ;
	                $menu
	                  .attr('tabindex', -1)
	                ;
	              }
	            }
	          },
	          initialLoad: function() {
	            module.verbose('Setting initial load');
	            initialLoad = true;
	          },
	          activeItem: function($item) {
	            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {
	              $item.addClass(className.filtered);
	            }
	            else {
	              $item.addClass(className.active);
	            }
	          },
	          scrollPosition: function($item, forceScroll) {
	            var
	              edgeTolerance = 5,
	              $menu,
	              hasActive,
	              offset,
	              itemHeight,
	              itemOffset,
	              menuOffset,
	              menuScroll,
	              menuHeight,
	              abovePage,
	              belowPage
	            ;

	            $item       = $item || module.get.selectedItem();
	            $menu       = $item.closest(selector.menu);
	            hasActive   = ($item && $item.length > 0);
	            forceScroll = (forceScroll !== undefined)
	              ? forceScroll
	              : false
	            ;
	            if($item && $menu.length > 0 && hasActive) {
	              itemOffset = $item.position().top;

	              $menu.addClass(className.loading);
	              menuScroll = $menu.scrollTop();
	              menuOffset = $menu.offset().top;
	              itemOffset = $item.offset().top;
	              offset     = menuScroll - menuOffset + itemOffset;
	              if(!forceScroll) {
	                menuHeight = $menu.height();
	                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);
	                abovePage  = ((offset - edgeTolerance) < menuScroll);
	              }
	              module.debug('Scrolling to active item', offset);
	              if(forceScroll || abovePage || belowPage) {
	                $menu.scrollTop(offset);
	              }
	              $menu.removeClass(className.loading);
	            }
	          },
	          text: function(text) {
	            if(settings.action !== 'select') {
	              if(settings.action == 'combo') {
	                module.debug('Changing combo button text', text, $combo);
	                if(settings.preserveHTML) {
	                  $combo.html(text);
	                }
	                else {
	                  $combo.text(text);
	                }
	              }
	              else {
	                if(text !== module.get.placeholderText()) {
	                  $text.removeClass(className.placeholder);
	                }
	                module.debug('Changing text', text, $text);
	                $text
	                  .removeClass(className.filtered)
	                ;
	                if(settings.preserveHTML) {
	                  $text.html(text);
	                }
	                else {
	                  $text.text(text);
	                }
	              }
	            }
	          },
	          selectedLetter: function(letter) {
	            var
	              $selectedItem         = $item.filter('.' + className.selected),
	              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),
	              $nextValue            = false,
	              $nextItem
	            ;
	            // check next of same letter
	            if(alreadySelectedLetter) {
	              $nextItem = $selectedItem.nextAll($item).eq(0);
	              if( module.has.firstLetter($nextItem, letter) ) {
	                $nextValue  = $nextItem;
	              }
	            }
	            // check all values
	            if(!$nextValue) {
	              $item
	                .each(function(){
	                  if(module.has.firstLetter($(this), letter)) {
	                    $nextValue = $(this);
	                    return false;
	                  }
	                })
	              ;
	            }
	            // set next value
	            if($nextValue) {
	              module.verbose('Scrolling to next value with letter', letter);
	              module.set.scrollPosition($nextValue);
	              $selectedItem.removeClass(className.selected);
	              $nextValue.addClass(className.selected);
	            }
	          },
	          direction: function($menu) {
	            if(settings.direction == 'auto') {
	              if(module.is.onScreen($menu)) {
	                module.remove.upward($menu);
	              }
	              else {
	                module.set.upward($menu);
	              }
	            }
	            else if(settings.direction == 'upward') {
	              module.set.upward($menu);
	            }
	          },
	          upward: function($menu) {
	            var $element = $menu || $module;
	            $element.addClass(className.upward);
	          },
	          value: function(value, text, $selected) {
	            var
	              hasInput     = ($input.length > 0),
	              isAddition   = !module.has.value(value),
	              currentValue = module.get.values(),
	              stringValue  = (value !== undefined)
	                ? String(value)
	                : value,
	              newValue
	            ;
	            if(hasInput) {
	              if(stringValue == currentValue) {
	                module.verbose('Skipping value update already same value', value, currentValue);
	                if(!module.is.initialLoad()) {
	                  return;
	                }
	              }

	              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {
	                module.debug('Adding user option', value);
	                module.add.optionValue(value);
	              }
	              module.debug('Updating input value', value, currentValue);
	              internalChange = true;
	              $input
	                .val(value)
	              ;
	              if(settings.fireOnInit === false && module.is.initialLoad()) {
	                module.debug('Input native change event ignored on initial load');
	              }
	              else {
	                module.trigger.change();
	              }
	              internalChange = false;
	            }
	            else {
	              module.verbose('Storing value in metadata', value, $input);
	              if(value !== currentValue) {
	                $module.data(metadata.value, stringValue);
	              }
	            }
	            if(settings.fireOnInit === false && module.is.initialLoad()) {
	              module.verbose('No callback on initial load', settings.onChange);
	            }
	            else {
	              settings.onChange.call(element, value, text, $selected);
	            }
	          },
	          active: function() {
	            $module
	              .addClass(className.active)
	            ;
	          },
	          multiple: function() {
	            $module.addClass(className.multiple);
	          },
	          visible: function() {
	            $module.addClass(className.visible);
	          },
	          exactly: function(value, $selectedItem) {
	            module.debug('Setting selected to exact values');
	            module.clear();
	            module.set.selected(value, $selectedItem);
	          },
	          selected: function(value, $selectedItem) {
	            var
	              isMultiple = module.is.multiple(),
	              $userSelectedItem
	            ;
	            $selectedItem = (settings.allowAdditions)
	              ? $selectedItem || module.get.itemWithAdditions(value)
	              : $selectedItem || module.get.item(value)
	            ;
	            if(!$selectedItem) {
	              return;
	            }
	            module.debug('Setting selected menu item to', $selectedItem);
	            if(module.is.single()) {
	              module.remove.activeItem();
	              module.remove.selectedItem();
	            }
	            else if(settings.useLabels) {
	              module.remove.selectedItem();
	            }
	            // select each item
	            $selectedItem
	              .each(function() {
	                var
	                  $selected      = $(this),
	                  selectedText   = module.get.choiceText($selected),
	                  selectedValue  = module.get.choiceValue($selected, selectedText),

	                  isFiltered     = $selected.hasClass(className.filtered),
	                  isActive       = $selected.hasClass(className.active),
	                  isUserValue    = $selected.hasClass(className.addition),
	                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)
	                ;
	                if(isMultiple) {
	                  if(!isActive || isUserValue) {
	                    if(settings.apiSettings && settings.saveRemoteData) {
	                      module.save.remoteData(selectedText, selectedValue);
	                    }
	                    if(settings.useLabels) {
	                      module.add.value(selectedValue, selectedText, $selected);
	                      module.add.label(selectedValue, selectedText, shouldAnimate);
	                      module.set.activeItem($selected);
	                      module.filterActive();
	                      module.select.nextAvailable($selectedItem);
	                    }
	                    else {
	                      module.add.value(selectedValue, selectedText, $selected);
	                      module.set.text(module.add.variables(message.count));
	                      module.set.activeItem($selected);
	                    }
	                  }
	                  else if(!isFiltered) {
	                    module.debug('Selected active value, removing label');
	                    module.remove.selected(selectedValue);
	                  }
	                }
	                else {
	                  if(settings.apiSettings && settings.saveRemoteData) {
	                    module.save.remoteData(selectedText, selectedValue);
	                  }
	                  module.set.text(selectedText);
	                  module.set.value(selectedValue, selectedText, $selected);
	                  $selected
	                    .addClass(className.active)
	                    .addClass(className.selected)
	                  ;
	                }
	              })
	            ;
	          }
	        },

	        add: {
	          label: function(value, text, shouldAnimate) {
	            var
	              $next  = module.is.searchSelection()
	                ? $search
	                : $text,
	              $label
	            ;
	            $label =  $('<a />')
	              .addClass(className.label)
	              .attr('data-value', value)
	              .html(templates.label(value, text))
	            ;
	            $label = settings.onLabelCreate.call($label, value, text);

	            if(module.has.label(value)) {
	              module.debug('Label already exists, skipping', value);
	              return;
	            }
	            if(settings.label.variation) {
	              $label.addClass(settings.label.variation);
	            }
	            if(shouldAnimate === true) {
	              module.debug('Animating in label', $label);
	              $label
	                .addClass(className.hidden)
	                .insertBefore($next)
	                .transition(settings.label.transition, settings.label.duration)
	              ;
	            }
	            else {
	              module.debug('Adding selection label', $label);
	              $label
	                .insertBefore($next)
	              ;
	            }
	          },
	          message: function(message) {
	            var
	              $message = $menu.children(selector.message),
	              html     = settings.templates.message(module.add.variables(message))
	            ;
	            if($message.length > 0) {
	              $message
	                .html(html)
	              ;
	            }
	            else {
	              $message = $('<div/>')
	                .html(html)
	                .addClass(className.message)
	                .appendTo($menu)
	              ;
	            }
	          },
	          optionValue: function(value) {
	            var
	              $option   = $input.find('option[value="' + value + '"]'),
	              hasOption = ($option.length > 0)
	            ;
	            if(hasOption) {
	              return;
	            }
	            // temporarily disconnect observer
	            if(selectObserver) {
	              selectObserver.disconnect();
	              module.verbose('Temporarily disconnecting mutation observer', value);
	            }
	            if( module.is.single() ) {
	              module.verbose('Removing previous user addition');
	              $input.find('option.' + className.addition).remove();
	            }
	            $('<option/>')
	              .prop('value', value)
	              .addClass(className.addition)
	              .html(value)
	              .appendTo($input)
	            ;
	            module.verbose('Adding user addition as an <option>', value);
	            if(selectObserver) {
	              selectObserver.observe($input[0], {
	                childList : true,
	                subtree   : true
	              });
	            }
	          },
	          userSuggestion: function(value) {
	            var
	              $addition         = $menu.children(selector.addition),
	              $existingItem     = module.get.item(value),
	              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,
	              hasUserSuggestion = $addition.length > 0,
	              html
	            ;
	            if(settings.useLabels && module.has.maxSelections()) {
	              return;
	            }
	            if(value === '' || alreadyHasValue) {
	              $addition.remove();
	              return;
	            }
	            $item
	              .removeClass(className.selected)
	            ;
	            if(hasUserSuggestion) {
	              html = settings.templates.addition( module.add.variables(message.addResult, value) );
	              $addition
	                .html(html)
	                .attr('data-' + metadata.value, value)
	                .attr('data-' + metadata.text, value)
	                .removeClass(className.filtered)
	                .addClass(className.selected)
	              ;
	              module.verbose('Replacing user suggestion with new value', $addition);
	            }
	            else {
	              $addition = module.create.userChoice(value);
	              $addition
	                .prependTo($menu)
	                .addClass(className.selected)
	              ;
	              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);
	            }
	          },
	          variables: function(message, term) {
	            var
	              hasCount    = (message.search('{count}') !== -1),
	              hasMaxCount = (message.search('{maxCount}') !== -1),
	              hasTerm     = (message.search('{term}') !== -1),
	              values,
	              count,
	              query
	            ;
	            module.verbose('Adding templated variables to message', message);
	            if(hasCount) {
	              count  = module.get.selectionCount();
	              message = message.replace('{count}', count);
	            }
	            if(hasMaxCount) {
	              count  = module.get.selectionCount();
	              message = message.replace('{maxCount}', settings.maxSelections);
	            }
	            if(hasTerm) {
	              query   = term || module.get.query();
	              message = message.replace('{term}', query);
	            }
	            return message;
	          },
	          value: function(addedValue, addedText, $selectedItem) {
	            var
	              currentValue = module.get.values(),
	              newValue
	            ;
	            if(addedValue === '') {
	              module.debug('Cannot select blank values from multiselect');
	              return;
	            }
	            // extend current array
	            if($.isArray(currentValue)) {
	              newValue = currentValue.concat([addedValue]);
	              newValue = module.get.uniqueArray(newValue);
	            }
	            else {
	              newValue = [addedValue];
	            }
	            // add values
	            if( module.has.selectInput() ) {
	              if(module.can.extendSelect()) {
	                module.debug('Adding value to select', addedValue, newValue, $input);
	                module.add.optionValue(addedValue);
	              }
	            }
	            else {
	              newValue = newValue.join(settings.delimiter);
	              module.debug('Setting hidden input to delimited value', newValue, $input);
	            }

	            if(settings.fireOnInit === false && module.is.initialLoad()) {
	              module.verbose('Skipping onadd callback on initial load', settings.onAdd);
	            }
	            else {
	              settings.onAdd.call(element, addedValue, addedText, $selectedItem);
	            }
	            module.set.value(newValue, addedValue, addedText, $selectedItem);
	            module.check.maxSelections();
	          }
	        },

	        remove: {
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          activeLabel: function() {
	            $module.find(selector.label).removeClass(className.active);
	          },
	          loading: function() {
	            $module.removeClass(className.loading);
	          },
	          initialLoad: function() {
	            initialLoad = false;
	          },
	          upward: function($menu) {
	            var $element = $menu || $module;
	            $element.removeClass(className.upward);
	          },
	          visible: function() {
	            $module.removeClass(className.visible);
	          },
	          activeItem: function() {
	            $item.removeClass(className.active);
	          },
	          filteredItem: function() {
	            if(settings.useLabels && module.has.maxSelections() ) {
	              return;
	            }
	            if(settings.useLabels && module.is.multiple()) {
	              $item.not('.' + className.active).removeClass(className.filtered);
	            }
	            else {
	              $item.removeClass(className.filtered);
	            }
	          },
	          optionValue: function(value) {
	            var
	              $option   = $input.find('option[value="' + value + '"]'),
	              hasOption = ($option.length > 0)
	            ;
	            if(!hasOption || !$option.hasClass(className.addition)) {
	              return;
	            }
	            // temporarily disconnect observer
	            if(selectObserver) {
	              selectObserver.disconnect();
	              module.verbose('Temporarily disconnecting mutation observer', value);
	            }
	            $option.remove();
	            module.verbose('Removing user addition as an <option>', value);
	            if(selectObserver) {
	              selectObserver.observe($input[0], {
	                childList : true,
	                subtree   : true
	              });
	            }
	          },
	          message: function() {
	            $menu.children(selector.message).remove();
	          },
	          searchTerm: function() {
	            module.verbose('Cleared search term');
	            $search.val('');
	            module.set.filtered();
	          },
	          selected: function(value, $selectedItem) {
	            $selectedItem = (settings.allowAdditions)
	              ? $selectedItem || module.get.itemWithAdditions(value)
	              : $selectedItem || module.get.item(value)
	            ;

	            if(!$selectedItem) {
	              return false;
	            }

	            $selectedItem
	              .each(function() {
	                var
	                  $selected     = $(this),
	                  selectedText  = module.get.choiceText($selected),
	                  selectedValue = module.get.choiceValue($selected, selectedText)
	                ;
	                if(module.is.multiple()) {
	                  if(settings.useLabels) {
	                    module.remove.value(selectedValue, selectedText, $selected);
	                    module.remove.label(selectedValue);
	                  }
	                  else {
	                    module.remove.value(selectedValue, selectedText, $selected);
	                    if(module.get.selectionCount() === 0) {
	                      module.set.placeholderText();
	                    }
	                    else {
	                      module.set.text(module.add.variables(message.count));
	                    }
	                  }
	                }
	                else {
	                  module.remove.value(selectedValue, selectedText, $selected);
	                }
	                $selected
	                  .removeClass(className.filtered)
	                  .removeClass(className.active)
	                ;
	                if(settings.useLabels) {
	                  $selected.removeClass(className.selected);
	                }
	              })
	            ;
	          },
	          selectedItem: function() {
	            $item.removeClass(className.selected);
	          },
	          value: function(removedValue, removedText, $removedItem) {
	            var
	              values = module.get.values(),
	              newValue
	            ;
	            if( module.has.selectInput() ) {
	              module.verbose('Input is <select> removing selected option', removedValue);
	              newValue = module.remove.arrayValue(removedValue, values);
	              module.remove.optionValue(removedValue);
	            }
	            else {
	              module.verbose('Removing from delimited values', removedValue);
	              newValue = module.remove.arrayValue(removedValue, values);
	              newValue = newValue.join(settings.delimiter);
	            }
	            if(settings.fireOnInit === false && module.is.initialLoad()) {
	              module.verbose('No callback on initial load', settings.onRemove);
	            }
	            else {
	              settings.onRemove.call(element, removedValue, removedText, $removedItem);
	            }
	            module.set.value(newValue, removedText, $removedItem);
	            module.check.maxSelections();
	          },
	          arrayValue: function(removedValue, values) {
	            if( !$.isArray(values) ) {
	              values = [values];
	            }
	            values = $.grep(values, function(value){
	              return (removedValue != value);
	            });
	            module.verbose('Removed value from delimited string', removedValue, values);
	            return values;
	          },
	          label: function(value, shouldAnimate) {
	            var
	              $labels       = $module.find(selector.label),
	              $removedLabel = $labels.filter('[data-value="' + value +'"]')
	            ;
	            module.verbose('Removing label', $removedLabel);
	            $removedLabel.remove();
	          },
	          activeLabels: function($activeLabels) {
	            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);
	            module.verbose('Removing active label selections', $activeLabels);
	            module.remove.labels($activeLabels);
	          },
	          labels: function($labels) {
	            $labels = $labels || $module.find(selector.label);
	            module.verbose('Removing labels', $labels);
	            $labels
	              .each(function(){
	                var
	                  $label      = $(this),
	                  value       = $label.data(metadata.value),
	                  stringValue = (value !== undefined)
	                    ? String(value)
	                    : value,
	                  isUserValue = module.is.userValue(stringValue)
	                ;
	                if(settings.onLabelRemove.call($label, value) === false) {
	                  module.debug('Label remove callback cancelled removal');
	                  return;
	                }
	                if(isUserValue) {
	                  module.remove.value(stringValue);
	                  module.remove.label(stringValue);
	                }
	                else {
	                  // selected will also remove label
	                  module.remove.selected(stringValue);
	                }
	              })
	            ;
	          },
	          tabbable: function() {
	            if( module.has.search() ) {
	              module.debug('Searchable dropdown initialized');
	              $search
	                .removeAttr('tabindex')
	              ;
	              $menu
	                .removeAttr('tabindex')
	              ;
	            }
	            else {
	              module.debug('Simple selection dropdown initialized');
	              $module
	                .removeAttr('tabindex')
	              ;
	              $menu
	                .removeAttr('tabindex')
	              ;
	            }
	          }
	        },

	        has: {
	          search: function() {
	            return ($search.length > 0);
	          },
	          selectInput: function() {
	            return ( $input.is('select') );
	          },
	          firstLetter: function($item, letter) {
	            var
	              text,
	              firstLetter
	            ;
	            if(!$item || $item.length === 0 || typeof letter !== 'string') {
	              return false;
	            }
	            text        = module.get.choiceText($item, false);
	            letter      = letter.toLowerCase();
	            firstLetter = String(text).charAt(0).toLowerCase();
	            return (letter == firstLetter);
	          },
	          input: function() {
	            return ($input.length > 0);
	          },
	          items: function() {
	            return ($item.length > 0);
	          },
	          menu: function() {
	            return ($menu.length > 0);
	          },
	          message: function() {
	            return ($menu.children(selector.message).length !== 0);
	          },
	          label: function(value) {
	            var
	              $labels = $module.find(selector.label)
	            ;
	            return ($labels.filter('[data-value="' + value +'"]').length > 0);
	          },
	          maxSelections: function() {
	            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);
	          },
	          allResultsFiltered: function() {
	            return ($item.filter(selector.unselectable).length === $item.length);
	          },
	          query: function() {
	            return (module.get.query() !== '');
	          },
	          value: function(value) {
	            var
	              values   = module.get.values(),
	              hasValue = $.isArray(values)
	               ? values && ($.inArray(value, values) !== -1)
	               : (values == value)
	            ;
	            return (hasValue)
	              ? true
	              : false
	            ;
	          }
	        },

	        is: {
	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          alreadySetup: function() {
	            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);
	          },
	          animating: function($subMenu) {
	            return ($subMenu)
	              ? $subMenu.transition && $subMenu.transition('is animating')
	              : $menu.transition    && $menu.transition('is animating')
	            ;
	          },
	          disabled: function() {
	            return $module.hasClass(className.disabled);
	          },
	          focused: function() {
	            return (document.activeElement === $module[0]);
	          },
	          focusedOnSearch: function() {
	            return (document.activeElement === $search[0]);
	          },
	          allFiltered: function() {
	            return( (module.is.multiple() || module.has.search()) && !module.has.message() && module.has.allResultsFiltered() );
	          },
	          hidden: function($subMenu) {
	            return !module.is.visible($subMenu);
	          },
	          initialLoad: function() {
	            return initialLoad;
	          },
	          onScreen: function($subMenu) {
	            var
	              $currentMenu   = $subMenu || $menu,
	              canOpenDownward = true,
	              onScreen = {},
	              calculations
	            ;
	            $currentMenu.addClass(className.loading);
	            calculations = {
	              context: {
	                scrollTop : $context.scrollTop(),
	                height    : $context.outerHeight()
	              },
	              menu : {
	                offset: $currentMenu.offset(),
	                height: $currentMenu.outerHeight()
	              }
	            };
	            onScreen = {
	              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,
	              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height
	            };
	            if(onScreen.below) {
	              module.verbose('Dropdown can fit in context downward', onScreen);
	              canOpenDownward = true;
	            }
	            else if(!onScreen.below && !onScreen.above) {
	              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);
	              canOpenDownward = true;
	            }
	            else {
	              module.verbose('Dropdown cannot fit below, opening upward', onScreen);
	              canOpenDownward = false;
	            }
	            $currentMenu.removeClass(className.loading);
	            return canOpenDownward;
	          },
	          inObject: function(needle, object) {
	            var
	              found = false
	            ;
	            $.each(object, function(index, property) {
	              if(property == needle) {
	                found = true;
	                return true;
	              }
	            });
	            return found;
	          },
	          multiple: function() {
	            return $module.hasClass(className.multiple);
	          },
	          single: function() {
	            return !module.is.multiple();
	          },
	          selectMutation: function(mutations) {
	            var
	              selectChanged = false
	            ;
	            $.each(mutations, function(index, mutation) {
	              if(mutation.target && $(mutation.target).is('select')) {
	                selectChanged = true;
	                return true;
	              }
	            });
	            return selectChanged;
	          },
	          search: function() {
	            return $module.hasClass(className.search);
	          },
	          searchSelection: function() {
	            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );
	          },
	          selection: function() {
	            return $module.hasClass(className.selection);
	          },
	          userValue: function(value) {
	            return ($.inArray(value, module.get.userValues()) !== -1);
	          },
	          upward: function($menu) {
	            var $element = $menu || $module;
	            return $element.hasClass(className.upward);
	          },
	          visible: function($subMenu) {
	            return ($subMenu)
	              ? $subMenu.hasClass(className.visible)
	              : $menu.hasClass(className.visible)
	            ;
	          }
	        },

	        can: {
	          activate: function($item) {
	            if(settings.useLabels) {
	              return true;
	            }
	            if(!module.has.maxSelections()) {
	              return true;
	            }
	            if(module.has.maxSelections() && $item.hasClass(className.active)) {
	              return true;
	            }
	            return false;
	          },
	          click: function() {
	            return (hasTouch || settings.on == 'click');
	          },
	          extendSelect: function() {
	            return settings.allowAdditions || settings.apiSettings;
	          },
	          show: function() {
	            return !module.is.disabled() && (module.has.items() || module.has.message());
	          },
	          useAPI: function() {
	            return $.fn.api !== undefined;
	          }
	        },

	        animate: {
	          show: function(callback, $subMenu) {
	            var
	              $currentMenu = $subMenu || $menu,
	              start = ($subMenu)
	                ? function() {}
	                : function() {
	                  module.hideSubMenus();
	                  module.hideOthers();
	                  module.set.active();
	                },
	              transition
	            ;
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            module.verbose('Doing menu show animation', $currentMenu);
	            module.set.direction($subMenu);
	            transition = module.get.transition($subMenu);
	            if( module.is.selection() ) {
	              module.set.scrollPosition(module.get.selectedItem(), true);
	            }
	            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {
	              if(transition == 'none') {
	                start();
	                $currentMenu.transition('show');
	                callback.call(element);
	              }
	              else if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $currentMenu
	                  .transition({
	                    animation  : transition + ' in',
	                    debug      : settings.debug,
	                    verbose    : settings.verbose,
	                    duration   : settings.duration,
	                    queue      : true,
	                    onStart    : start,
	                    onComplete : function() {
	                      callback.call(element);
	                    }
	                  })
	                ;
	              }
	              else {
	                module.error(error.noTransition, transition);
	              }
	            }
	          },
	          hide: function(callback, $subMenu) {
	            var
	              $currentMenu = $subMenu || $menu,
	              duration = ($subMenu)
	                ? (settings.duration * 0.9)
	                : settings.duration,
	              start = ($subMenu)
	                ? function() {}
	                : function() {
	                  if( module.can.click() ) {
	                    module.unbind.intent();
	                  }
	                  module.remove.active();
	                },
	              transition = module.get.transition($subMenu)
	            ;
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {
	              module.verbose('Doing menu hide animation', $currentMenu);

	              if(transition == 'none') {
	                start();
	                $currentMenu.transition('hide');
	                callback.call(element);
	              }
	              else if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $currentMenu
	                  .transition({
	                    animation  : transition + ' out',
	                    duration   : settings.duration,
	                    debug      : settings.debug,
	                    verbose    : settings.verbose,
	                    queue      : true,
	                    onStart    : start,
	                    onComplete : function() {
	                      if(settings.direction == 'auto') {
	                        module.remove.upward($subMenu);
	                      }
	                      callback.call(element);
	                    }
	                  })
	                ;
	              }
	              else {
	                module.error(error.transition);
	              }
	            }
	          }
	        },

	        hideAndClear: function() {
	          module.remove.searchTerm();
	          if( module.has.maxSelections() ) {
	            return;
	          }
	          if(module.has.search()) {
	            module.hide(function() {
	              module.remove.filteredItem();
	            });
	          }
	          else {
	            module.hide();
	          }
	        },

	        delay: {
	          show: function() {
	            module.verbose('Delaying show event to ensure user intent');
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.show, settings.delay.show);
	          },
	          hide: function() {
	            module.verbose('Delaying hide event to ensure user intent');
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.hide, settings.delay.hide);
	          }
	        },

	        escape: {
	          regExp: function(text) {
	            text =  String(text);
	            return text.replace(regExp.escape, '\\$&');
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : $allModules
	  ;
	};

	$.fn.dropdown.settings = {

	  debug                  : false,
	  verbose                : false,
	  performance            : true,

	  on                     : 'click',    // what event should show menu action on item selection
	  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})


	  apiSettings            : false,
	  saveRemoteData         : true,      // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh
	  throttle               : 200,       // How long to wait after last user input to search remotely

	  context                : window,      // Context to use when determining if on screen
	  direction              : 'auto',     // Whether dropdown should always open in one direction
	  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing

	  match                  : 'both',     // what to match against with search selection (both, text, or label)
	  fullTextSearch         : false,      // search anywhere in value

	  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text
	  preserveHTML           : true,       // preserve html when selecting value
	  sortSelect             : false,      // sort selection on init

	  forceSelection         : true,       // force a choice on blur with search selection
	  allowAdditions         : false,      // whether multiple select should allow user added values

	  maxSelections          : false,      // When set to a number limits the number of selections to this count
	  useLabels              : true,       // whether multiple select should filter currently active selections from choices
	  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character

	  showOnFocus            : true,       // show menu on focus
	  allowTab               : true,       // add tabindex to element
	  allowCategorySelection : false,      // allow elements with sub-menus to be selected

	  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values

	  transition             : 'auto',     // auto transition will slide down or up based on direction
	  duration               : 200,        // duration of transition

	  glyphWidth             : 1.0714,     // widest glyph width in em (W is 1.0714 em) used to calculate multiselect input width

	  // label settings on multi-select
	  label: {
	    transition : 'scale',
	    duration   : 200,
	    variation  : false
	  },

	  // delay before event
	  delay : {
	    hide   : 300,
	    show   : 200,
	    search : 20,
	    touch  : 50
	  },

	  /* Callbacks */
	  onChange      : function(value, text, $selected){},
	  onAdd         : function(value, text, $selected){},
	  onRemove      : function(value, text, $selected){},

	  onLabelSelect : function($selectedLabels){},
	  onLabelCreate : function(value, text) { return $(this); },
	  onLabelRemove : function(value) { return true; },
	  onNoResults   : function(searchTerm) { return true; },
	  onShow        : function(){},
	  onHide        : function(){},

	  /* Component */
	  name           : 'Dropdown',
	  namespace      : 'dropdown',

	  message: {
	    addResult     : 'Add <b>{term}</b>',
	    count         : '{count} selected',
	    maxSelections : 'Max {maxCount} selections',
	    noResults     : 'No results found.',
	    serverError   : 'There was an error contacting the server'
	  },

	  error : {
	    action          : 'You called a dropdown action that was not defined',
	    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',
	    labels          : 'Allowing user additions currently requires the use of labels.',
	    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',
	    method          : 'The method you called is not defined.',
	    noAPI           : 'The API module is required to load resources remotely',
	    noStorage       : 'Saving remote data requires session storage',
	    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'
	  },

	  regExp : {
	    escape   : /[-[\]{}()*+?.,\\^$|#\s]/g,
	  },

	  metadata : {
	    defaultText     : 'defaultText',
	    defaultValue    : 'defaultValue',
	    placeholderText : 'placeholder',
	    text            : 'text',
	    value           : 'value'
	  },

	  // property names for remote query
	  fields: {
	    remoteValues : 'results', // grouping for api results
	    values       : 'values', // grouping for all dropdown values
	    name         : 'name',   // displayed dropdown text
	    value        : 'value'   // actual dropdown value
	  },

	  keys : {
	    backspace  : 8,
	    delimiter  : 188, // comma
	    deleteKey  : 46,
	    enter      : 13,
	    escape     : 27,
	    pageUp     : 33,
	    pageDown   : 34,
	    leftArrow  : 37,
	    upArrow    : 38,
	    rightArrow : 39,
	    downArrow  : 40
	  },

	  selector : {
	    addition     : '.addition',
	    dropdown     : '.ui.dropdown',
	    icon         : '> .dropdown.icon',
	    input        : '> input[type="hidden"], > select',
	    item         : '.item',
	    label        : '> .label',
	    remove       : '> .label > .delete.icon',
	    siblingLabel : '.label',
	    menu         : '.menu',
	    message      : '.message',
	    menuIcon     : '.dropdown.icon',
	    search       : 'input.search, .menu > .search > input',
	    text         : '> .text:not(.icon)',
	    unselectable : '.disabled, .filtered'
	  },

	  className : {
	    active      : 'active',
	    addition    : 'addition',
	    animating   : 'animating',
	    disabled    : 'disabled',
	    dropdown    : 'ui dropdown',
	    filtered    : 'filtered',
	    hidden      : 'hidden transition',
	    item        : 'item',
	    label       : 'ui label',
	    loading     : 'loading',
	    menu        : 'menu',
	    message     : 'message',
	    multiple    : 'multiple',
	    placeholder : 'default',
	    search      : 'search',
	    selected    : 'selected',
	    selection   : 'selection',
	    upward      : 'upward',
	    visible     : 'visible'
	  }

	};

	/* Templates */
	$.fn.dropdown.settings.templates = {

	  // generates dropdown from select values
	  dropdown: function(select) {
	    var
	      placeholder = select.placeholder || false,
	      values      = select.values || {},
	      html        = ''
	    ;
	    html +=  '<i class="dropdown icon"></i>';
	    if(select.placeholder) {
	      html += '<div class="default text">' + placeholder + '</div>';
	    }
	    else {
	      html += '<div class="text"></div>';
	    }
	    html += '<div class="menu">';
	    $.each(select.values, function(index, option) {
	      html += (option.disabled)
	        ? '<div class="disabled item" data-value="' + option.value + '">' + option.name + '</div>'
	        : '<div class="item" data-value="' + option.value + '">' + option.name + '</div>'
	      ;
	    });
	    html += '</div>';
	    return html;
	  },

	  // generates just menu from select
	  menu: function(response, fields) {
	    var
	      values = response[fields.values] || {},
	      html   = ''
	    ;
	    $.each(values, function(index, option) {
	      html += '<div class="item" data-value="' + option[fields.value] + '">' + option[fields.name] + '</div>';
	    });
	    return html;
	  },

	  // generates label for multiselect
	  label: function(value, text) {
	    return text + '<i class="delete icon"></i>';
	  },


	  // generates messages like "No results"
	  message: function(message) {
	    return message;
	  },

	  // generates user addition to selection menu
	  addition: function(choice) {
	    return choice;
	  }

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Video
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.embed = function(parameters) {

	  var
	    $allModules     = $(this),

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.embed.settings, parameters)
	          : $.extend({}, $.fn.embed.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        sources         = settings.sources,
	        error           = settings.error,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,
	        templates       = settings.templates,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $window         = $(window),
	        $module         = $(this),
	        $placeholder    = $module.find(selector.placeholder),
	        $icon           = $module.find(selector.icon),
	        $embed          = $module.find(selector.embed),

	        element         = this,
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing embed');
	          module.determine.autoplay();
	          module.create();
	          module.bind.events();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous instance of embed');
	          module.reset();
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $placeholder = $module.find(selector.placeholder);
	          $icon        = $module.find(selector.icon);
	          $embed       = $module.find(selector.embed);
	        },

	        bind: {
	          events: function() {
	            if( module.has.placeholder() ) {
	              module.debug('Adding placeholder events');
	              $module
	                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)
	                .on('click' + eventNamespace, selector.icon, module.createAndShow)
	              ;
	            }
	          }
	        },

	        create: function() {
	          var
	            placeholder = module.get.placeholder()
	          ;
	          if(placeholder) {
	            module.createPlaceholder();
	          }
	          else {
	            module.createAndShow();
	          }
	        },

	        createPlaceholder: function(placeholder) {
	          var
	            icon  = module.get.icon(),
	            url   = module.get.url(),
	            embed = module.generate.embed(url)
	          ;
	          placeholder = placeholder || module.get.placeholder();
	          $module.html( templates.placeholder(placeholder, icon) );
	          module.debug('Creating placeholder for embed', placeholder, icon);
	        },

	        createEmbed: function(url) {
	          module.refresh();
	          url = url || module.get.url();
	          $embed = $('<div/>')
	            .addClass(className.embed)
	            .html( module.generate.embed(url) )
	            .appendTo($module)
	          ;
	          settings.onCreate.call(element, url);
	          module.debug('Creating embed object', $embed);
	        },

	        createAndShow: function() {
	          module.createEmbed();
	          module.show();
	        },

	        // sets new embed
	        change: function(source, id, url) {
	          module.debug('Changing video to ', source, id, url);
	          $module
	            .data(metadata.source, source)
	            .data(metadata.id, id)
	            .data(metadata.url, url)
	          ;
	          module.create();
	        },

	        // clears embed
	        reset: function() {
	          module.debug('Clearing embed and showing placeholder');
	          module.remove.active();
	          module.remove.embed();
	          module.showPlaceholder();
	          settings.onReset.call(element);
	        },

	        // shows current embed
	        show: function() {
	          module.debug('Showing embed');
	          module.set.active();
	          settings.onDisplay.call(element);
	        },

	        hide: function() {
	          module.debug('Hiding embed');
	          module.showPlaceholder();
	        },

	        showPlaceholder: function() {
	          module.debug('Showing placeholder image');
	          module.remove.active();
	          settings.onPlaceholderDisplay.call(element);
	        },

	        get: {
	          id: function() {
	            return settings.id || $module.data(metadata.id);
	          },
	          placeholder: function() {
	            return settings.placeholder || $module.data(metadata.placeholder);
	          },
	          icon: function() {
	            return (settings.icon)
	              ? settings.icon
	              : ($module.data(metadata.icon) !== undefined)
	                ? $module.data(metadata.icon)
	                : module.determine.icon()
	            ;
	          },
	          source: function(url) {
	            return (settings.source)
	              ? settings.source
	              : ($module.data(metadata.source) !== undefined)
	                ? $module.data(metadata.source)
	                : module.determine.source()
	            ;
	          },
	          type: function() {
	            var source = module.get.source();
	            return (sources[source] !== undefined)
	              ? sources[source].type
	              : false
	            ;
	          },
	          url: function() {
	            return (settings.url)
	              ? settings.url
	              : ($module.data(metadata.url) !== undefined)
	                ? $module.data(metadata.url)
	                : module.determine.url()
	            ;
	          }
	        },

	        determine: {
	          autoplay: function() {
	            if(module.should.autoplay()) {
	              settings.autoplay = true;
	            }
	          },
	          source: function(url) {
	            var
	              matchedSource = false
	            ;
	            url = url || module.get.url();
	            if(url) {
	              $.each(sources, function(name, source) {
	                if(url.search(source.domain) !== -1) {
	                  matchedSource = name;
	                  return false;
	                }
	              });
	            }
	            return matchedSource;
	          },
	          icon: function() {
	            var
	              source = module.get.source()
	            ;
	            return (sources[source] !== undefined)
	              ? sources[source].icon
	              : false
	            ;
	          },
	          url: function() {
	            var
	              id     = settings.id     || $module.data(metadata.id),
	              source = settings.source || $module.data(metadata.source),
	              url
	            ;
	            url = (sources[source] !== undefined)
	              ? sources[source].url.replace('{id}', id)
	              : false
	            ;
	            if(url) {
	              $module.data(metadata.url, url);
	            }
	            return url;
	          }
	        },


	        set: {
	          active: function() {
	            $module.addClass(className.active);
	          }
	        },

	        remove: {
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          embed: function() {
	            $embed.empty();
	          }
	        },

	        encode: {
	          parameters: function(parameters) {
	            var
	              urlString = [],
	              index
	            ;
	            for (index in parameters) {
	              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );
	            }
	            return urlString.join('&amp;');
	          }
	        },

	        generate: {
	          embed: function(url) {
	            module.debug('Generating embed html');
	            var
	              source = module.get.source(),
	              html,
	              parameters
	            ;
	            url = module.get.url(url);
	            if(url) {
	              parameters = module.generate.parameters(source);
	              html       = templates.iframe(url, parameters);
	            }
	            else {
	              module.error(error.noURL, $module);
	            }
	            return html;
	          },
	          parameters: function(source, extraParameters) {
	            var
	              parameters = (sources[source] && sources[source].parameters !== undefined)
	                ? sources[source].parameters(settings)
	                : {}
	            ;
	            extraParameters = extraParameters || settings.parameters;
	            if(extraParameters) {
	              parameters = $.extend({}, parameters, extraParameters);
	            }
	            parameters = settings.onEmbed(parameters);
	            return module.encode.parameters(parameters);
	          }
	        },

	        has: {
	          placeholder: function() {
	            return settings.placeholder || $module.data(metadata.placeholder);
	          }
	        },

	        should: {
	          autoplay: function() {
	            return (settings.autoplay === 'auto')
	              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)
	              : settings.autoplay
	            ;
	          }
	        },

	        is: {
	          video: function() {
	            return module.get.type() == 'video';
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.embed.settings = {

	  name        : 'Embed',
	  namespace   : 'embed',

	  debug       : false,
	  verbose     : false,
	  performance : true,

	  icon     : false,
	  source   : false,
	  url      : false,
	  id       : false,

	  // standard video settings
	  autoplay  : 'auto',
	  color     : '#444444',
	  hd        : true,
	  brandedUI : false,

	  // additional parameters to include with the embed
	  parameters: false,

	  onDisplay            : function() {},
	  onPlaceholderDisplay : function() {},
	  onReset              : function() {},
	  onCreate             : function(url) {},
	  onEmbed              : function(parameters) {
	    return parameters;
	  },

	  metadata    : {
	    id          : 'id',
	    icon        : 'icon',
	    placeholder : 'placeholder',
	    source      : 'source',
	    url         : 'url'
	  },

	  error : {
	    noURL  : 'No URL specified',
	    method : 'The method you called is not defined'
	  },

	  className : {
	    active : 'active',
	    embed  : 'embed'
	  },

	  selector : {
	    embed       : '.embed',
	    placeholder : '.placeholder',
	    icon        : '.icon'
	  },

	  sources: {
	    youtube: {
	      name   : 'youtube',
	      type   : 'video',
	      icon   : 'video play',
	      domain : 'youtube.com',
	      url    : '//www.youtube.com/embed/{id}',
	      parameters: function(settings) {
	        return {
	          autohide       : !settings.brandedUI,
	          autoplay       : settings.autoplay,
	          color          : settings.colors || undefined,
	          hq             : settings.hd,
	          jsapi          : settings.api,
	          modestbranding : !settings.brandedUI
	        };
	      }
	    },
	    vimeo: {
	      name   : 'vimeo',
	      type   : 'video',
	      icon   : 'video play',
	      domain : 'vimeo.com',
	      url    : '//player.vimeo.com/video/{id}',
	      parameters: function(settings) {
	        return {
	          api      : settings.api,
	          autoplay : settings.autoplay,
	          byline   : settings.brandedUI,
	          color    : settings.colors || undefined,
	          portrait : settings.brandedUI,
	          title    : settings.brandedUI
	        };
	      }
	    }
	  },

	  templates: {
	    iframe : function(url, parameters) {
	      return ''
	        + '<iframe src="' + url + '?' + parameters + '"'
	        + ' width="100%" height="100%"'
	        + ' frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
	      ;
	    },
	    placeholder : function(image, icon) {
	      var
	        html = ''
	      ;
	      if(icon) {
	        html += '<i class="' + icon + ' icon"></i>';
	      }
	      if(image) {
	        html += '<img class="placeholder" src="' + image + '">';
	      }
	      return html;
	    }
	  },

	  // NOT YET IMPLEMENTED
	  api     : true,
	  onPause : function() {},
	  onPlay  : function() {},
	  onStop  : function() {}

	};



	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Modal
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.modal = function(parameters) {
	  var
	    $allModules    = $(this),
	    $window        = $(window),
	    $document      = $(document),
	    $body          = $('body'),

	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings    = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.modal.settings, parameters)
	          : $.extend({}, $.fn.modal.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        namespace       = settings.namespace,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $context        = $(settings.context),
	        $close          = $module.find(selector.close),

	        $allModals,
	        $otherModals,
	        $focusedElement,
	        $dimmable,
	        $dimmer,

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        elementNamespace,
	        id,
	        observer,
	        module
	      ;
	      module  = {

	        initialize: function() {
	          module.verbose('Initializing dimmer', $context);

	          module.create.id();
	          module.create.dimmer();
	          module.refreshModals();

	          module.bind.events();
	          if(settings.observeChanges) {
	            module.observeChanges();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of modal');
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        create: {
	          dimmer: function() {
	            var
	              defaultSettings = {
	                debug      : settings.debug,
	                dimmerName : 'modals',
	                duration   : {
	                  show     : settings.duration,
	                  hide     : settings.duration
	                }
	              },
	              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)
	            ;
	            if(settings.inverted) {
	              dimmerSettings.variation = (dimmerSettings.variation !== undefined)
	                ? dimmerSettings.variation + ' inverted'
	                : 'inverted'
	              ;
	            }
	            if($.fn.dimmer === undefined) {
	              module.error(error.dimmer);
	              return;
	            }
	            module.debug('Creating dimmer with settings', dimmerSettings);
	            $dimmable = $context.dimmer(dimmerSettings);
	            if(settings.detachable) {
	              module.verbose('Modal is detachable, moving content into dimmer');
	              $dimmable.dimmer('add content', $module);
	            }
	            else {
	              module.set.undetached();
	            }
	            if(settings.blurring) {
	              $dimmable.addClass(className.blurring);
	            }
	            $dimmer = $dimmable.dimmer('get dimmer');
	          },
	          id: function() {
	            id = (Math.random().toString(16) + '000000000').substr(2,8);
	            elementNamespace = '.' + id;
	            module.verbose('Creating unique id for element', id);
	          }
	        },

	        destroy: function() {
	          module.verbose('Destroying previous modal');
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	          $window.off(elementNamespace);
	          $close.off(eventNamespace);
	          $context.dimmer('destroy');
	        },

	        observeChanges: function() {
	          if('MutationObserver' in window) {
	            observer = new MutationObserver(function(mutations) {
	              module.debug('DOM tree modified, refreshing');
	              module.refresh();
	            });
	            observer.observe(element, {
	              childList : true,
	              subtree   : true
	            });
	            module.debug('Setting up mutation observer', observer);
	          }
	        },

	        refresh: function() {
	          module.remove.scrolling();
	          module.cacheSizes();
	          module.set.screenHeight();
	          module.set.type();
	          module.set.position();
	        },

	        refreshModals: function() {
	          $otherModals = $module.siblings(selector.modal);
	          $allModals   = $otherModals.add($module);
	        },

	        attachEvents: function(selector, event) {
	          var
	            $toggle = $(selector)
	          ;
	          event = $.isFunction(module[event])
	            ? module[event]
	            : module.toggle
	          ;
	          if($toggle.length > 0) {
	            module.debug('Attaching modal events to element', selector, event);
	            $toggle
	              .off(eventNamespace)
	              .on('click' + eventNamespace, event)
	            ;
	          }
	          else {
	            module.error(error.notFound, selector);
	          }
	        },

	        bind: {
	          events: function() {
	            module.verbose('Attaching events');
	            $module
	              .on('click' + eventNamespace, selector.close, module.event.close)
	              .on('click' + eventNamespace, selector.approve, module.event.approve)
	              .on('click' + eventNamespace, selector.deny, module.event.deny)
	            ;
	            $window
	              .on('resize' + elementNamespace, module.event.resize)
	            ;
	          }
	        },

	        get: {
	          id: function() {
	            return (Math.random().toString(16) + '000000000').substr(2,8);
	          }
	        },

	        event: {
	          approve: function() {
	            if(settings.onApprove.call(element, $(this)) === false) {
	              module.verbose('Approve callback returned false cancelling hide');
	              return;
	            }
	            module.hide();
	          },
	          deny: function() {
	            if(settings.onDeny.call(element, $(this)) === false) {
	              module.verbose('Deny callback returned false cancelling hide');
	              return;
	            }
	            module.hide();
	          },
	          close: function() {
	            module.hide();
	          },
	          click: function(event) {
	            var
	              $target   = $(event.target),
	              isInModal = ($target.closest(selector.modal).length > 0),
	              isInDOM   = $.contains(document.documentElement, event.target)
	            ;
	            if(!isInModal && isInDOM) {
	              module.debug('Dimmer clicked, hiding all modals');
	              if( module.is.active() ) {
	                module.remove.clickaway();
	                if(settings.allowMultiple) {
	                  module.hide();
	                }
	                else {
	                  module.hideAll();
	                }
	              }
	            }
	          },
	          debounce: function(method, delay) {
	            clearTimeout(module.timer);
	            module.timer = setTimeout(method, delay);
	          },
	          keyboard: function(event) {
	            var
	              keyCode   = event.which,
	              escapeKey = 27
	            ;
	            if(keyCode == escapeKey) {
	              if(settings.closable) {
	                module.debug('Escape key pressed hiding modal');
	                module.hide();
	              }
	              else {
	                module.debug('Escape key pressed, but closable is set to false');
	              }
	              event.preventDefault();
	            }
	          },
	          resize: function() {
	            if( $dimmable.dimmer('is active') ) {
	              requestAnimationFrame(module.refresh);
	            }
	          }
	        },

	        toggle: function() {
	          if( module.is.active() || module.is.animating() ) {
	            module.hide();
	          }
	          else {
	            module.show();
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.refreshModals();
	          module.showModal(callback);
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.refreshModals();
	          module.hideModal(callback);
	        },

	        showModal: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.is.animating() || !module.is.active() ) {

	            module.showDimmer();
	            module.cacheSizes();
	            module.set.position();
	            module.set.screenHeight();
	            module.set.type();
	            module.set.clickaway();

	            if( !settings.allowMultiple && module.others.active() ) {
	              module.hideOthers(module.showModal);
	            }
	            else {
	              settings.onShow.call(element);
	              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	                module.debug('Showing modal with css animations');
	                $module
	                  .transition({
	                    debug       : settings.debug,
	                    animation   : settings.transition + ' in',
	                    queue       : settings.queue,
	                    duration    : settings.duration,
	                    useFailSafe : true,
	                    onComplete : function() {
	                      settings.onVisible.apply(element);
	                      module.add.keyboardShortcuts();
	                      module.save.focus();
	                      module.set.active();
	                      if(settings.autofocus) {
	                        module.set.autofocus();
	                      }
	                      callback();
	                    }
	                  })
	                ;
	              }
	              else {
	                module.error(error.noTransition);
	              }
	            }
	          }
	          else {
	            module.debug('Modal is already visible');
	          }
	        },

	        hideModal: function(callback, keepDimmed) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.debug('Hiding modal');
	          if(settings.onHide.call(element, $(this)) === false) {
	            module.verbose('Hide callback returned false cancelling hide');
	            return;
	          }

	          if( module.is.animating() || module.is.active() ) {
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              module.remove.active();
	              $module
	                .transition({
	                  debug       : settings.debug,
	                  animation   : settings.transition + ' out',
	                  queue       : settings.queue,
	                  duration    : settings.duration,
	                  useFailSafe : true,
	                  onStart     : function() {
	                    if(!module.others.active() && !keepDimmed) {
	                      module.hideDimmer();
	                    }
	                    module.remove.keyboardShortcuts();
	                  },
	                  onComplete : function() {
	                    settings.onHidden.call(element);
	                    module.restore.focus();
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.error(error.noTransition);
	            }
	          }
	        },

	        showDimmer: function() {
	          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {
	            module.debug('Showing dimmer');
	            $dimmable.dimmer('show');
	          }
	          else {
	            module.debug('Dimmer already visible');
	          }
	        },

	        hideDimmer: function() {
	          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {
	            $dimmable.dimmer('hide', function() {
	              module.remove.clickaway();
	              module.remove.screenHeight();
	            });
	          }
	          else {
	            module.debug('Dimmer is not visible cannot hide');
	            return;
	          }
	        },

	        hideAll: function(callback) {
	          var
	            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)
	          ;
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( $visibleModals.length > 0 ) {
	            module.debug('Hiding all visible modals');
	            module.hideDimmer();
	            $visibleModals
	              .modal('hide modal', callback)
	            ;
	          }
	        },

	        hideOthers: function(callback) {
	          var
	            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)
	          ;
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( $visibleModals.length > 0 ) {
	            module.debug('Hiding other modals', $otherModals);
	            $visibleModals
	              .modal('hide modal', callback, true)
	            ;
	          }
	        },

	        others: {
	          active: function() {
	            return ($otherModals.filter('.' + className.active).length > 0);
	          },
	          animating: function() {
	            return ($otherModals.filter('.' + className.animating).length > 0);
	          }
	        },


	        add: {
	          keyboardShortcuts: function() {
	            module.verbose('Adding keyboard shortcuts');
	            $document
	              .on('keyup' + eventNamespace, module.event.keyboard)
	            ;
	          }
	        },

	        save: {
	          focus: function() {
	            $focusedElement = $(document.activeElement).blur();
	          }
	        },

	        restore: {
	          focus: function() {
	            if($focusedElement && $focusedElement.length > 0) {
	              $focusedElement.focus();
	            }
	          }
	        },

	        remove: {
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          clickaway: function() {
	            if(settings.closable) {
	              $dimmer
	                .off('click' + elementNamespace)
	              ;
	            }
	          },
	          bodyStyle: function() {
	            if($body.attr('style') === '') {
	              module.verbose('Removing style attribute');
	              $body.removeAttr('style');
	            }
	          },
	          screenHeight: function() {
	            module.debug('Removing page height');
	            $body
	              .css('height', '')
	            ;
	          },
	          keyboardShortcuts: function() {
	            module.verbose('Removing keyboard shortcuts');
	            $document
	              .off('keyup' + eventNamespace)
	            ;
	          },
	          scrolling: function() {
	            $dimmable.removeClass(className.scrolling);
	            $module.removeClass(className.scrolling);
	          }
	        },

	        cacheSizes: function() {
	          var
	            modalHeight = $module.outerHeight()
	          ;
	          if(module.cache === undefined || modalHeight !== 0) {
	            module.cache = {
	              pageHeight    : $(document).outerHeight(),
	              height        : modalHeight + settings.offset,
	              contextHeight : (settings.context == 'body')
	                ? $(window).height()
	                : $dimmable.height()
	            };
	          }
	          module.debug('Caching modal and container sizes', module.cache);
	        },

	        can: {
	          fit: function() {
	            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);
	          }
	        },

	        is: {
	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          animating: function() {
	            return $module.transition('is supported')
	              ? $module.transition('is animating')
	              : $module.is(':visible')
	            ;
	          },
	          scrolling: function() {
	            return $dimmable.hasClass(className.scrolling);
	          },
	          modernBrowser: function() {
	            // appName for IE11 reports 'Netscape' can no longer use
	            return !(window.ActiveXObject || "ActiveXObject" in window);
	          }
	        },

	        set: {
	          autofocus: function() {
	            var
	              $inputs    = $module.find(':input').filter(':visible'),
	              $autofocus = $inputs.filter('[autofocus]'),
	              $input     = ($autofocus.length > 0)
	                ? $autofocus.first()
	                : $inputs.first()
	            ;
	            if($input.length > 0) {
	              $input.focus();
	            }
	          },
	          clickaway: function() {
	            if(settings.closable) {
	              $dimmer
	                .on('click' + elementNamespace, module.event.click)
	              ;
	            }
	          },
	          screenHeight: function() {
	            if( module.can.fit() ) {
	              $body.css('height', '');
	            }
	            else {
	              module.debug('Modal is taller than page content, resizing page height');
	              $body
	                .css('height', module.cache.height + (settings.padding * 2) )
	              ;
	            }
	          },
	          active: function() {
	            $module.addClass(className.active);
	          },
	          scrolling: function() {
	            $dimmable.addClass(className.scrolling);
	            $module.addClass(className.scrolling);
	          },
	          type: function() {
	            if(module.can.fit()) {
	              module.verbose('Modal fits on screen');
	              if(!module.others.active() && !module.others.animating()) {
	                module.remove.scrolling();
	              }
	            }
	            else {
	              module.verbose('Modal cannot fit on screen setting to scrolling');
	              module.set.scrolling();
	            }
	          },
	          position: function() {
	            module.verbose('Centering modal on page', module.cache);
	            if(module.can.fit()) {
	              $module
	                .css({
	                  top: '',
	                  marginTop: -(module.cache.height / 2)
	                })
	              ;
	            }
	            else {
	              $module
	                .css({
	                  marginTop : '',
	                  top       : $document.scrollTop()
	                })
	              ;
	            }
	          },
	          undetached: function() {
	            $dimmable.addClass(className.undetached);
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.modal.settings = {

	  name           : 'Modal',
	  namespace      : 'modal',

	  debug          : false,
	  verbose        : false,
	  performance    : true,

	  observeChanges : false,

	  allowMultiple  : false,
	  detachable     : true,
	  closable       : true,
	  autofocus      : true,

	  inverted       : false,
	  blurring       : false,

	  dimmerSettings : {
	    closable : false,
	    useCSS   : true
	  },


	  context    : 'body',

	  queue      : false,
	  duration   : 500,
	  offset     : 0,
	  transition : 'scale',

	  // padding with edge of page
	  padding    : 50,

	  // called before show animation
	  onShow     : function(){},

	  // called after show animation
	  onVisible  : function(){},

	  // called before hide animation
	  onHide     : function(){ return true; },

	  // called after hide animation
	  onHidden   : function(){},

	  // called after approve selector match
	  onApprove  : function(){ return true; },

	  // called after deny selector match
	  onDeny     : function(){ return true; },

	  selector    : {
	    close    : '> .close',
	    approve  : '.actions .positive, .actions .approve, .actions .ok',
	    deny     : '.actions .negative, .actions .deny, .actions .cancel',
	    modal    : '.ui.modal'
	  },
	  error : {
	    dimmer    : 'UI Dimmer, a required component is not included in this page',
	    method    : 'The method you called is not defined.',
	    notFound  : 'The element you specified could not be found'
	  },
	  className : {
	    active     : 'active',
	    animating  : 'animating',
	    blurring   : 'blurring',
	    scrolling  : 'scrolling',
	    undetached : 'undetached'
	  }
	};


	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Nag
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.nag = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.nag.settings, parameters)
	          : $.extend({}, $.fn.nag.settings),

	        className       = settings.className,
	        selector        = settings.selector,
	        error           = settings.error,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = namespace + '-module',

	        $module         = $(this),

	        $close          = $module.find(selector.close),
	        $context        = (settings.context)
	          ? $(settings.context)
	          : $('body'),

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        moduleOffset,
	        moduleHeight,

	        contextWidth,
	        contextHeight,
	        contextOffset,

	        yOffset,
	        yPosition,

	        timer,
	        module,

	        requestAnimationFrame = window.requestAnimationFrame
	          || window.mozRequestAnimationFrame
	          || window.webkitRequestAnimationFrame
	          || window.msRequestAnimationFrame
	          || function(callback) { setTimeout(callback, 0); }
	      ;
	      module = {

	        initialize: function() {
	          module.verbose('Initializing element');

	          $module
	            .on('click' + eventNamespace, selector.close, module.dismiss)
	            .data(moduleNamespace, module)
	          ;

	          if(settings.detachable && $module.parent()[0] !== $context[0]) {
	            $module
	              .detach()
	              .prependTo($context)
	            ;
	          }

	          if(settings.displayTime > 0) {
	            setTimeout(module.hide, settings.displayTime);
	          }
	          module.show();
	        },

	        destroy: function() {
	          module.verbose('Destroying instance');
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        show: function() {
	          if( module.should.show() && !$module.is(':visible') ) {
	            module.debug('Showing nag', settings.animation.show);
	            if(settings.animation.show == 'fade') {
	              $module
	                .fadeIn(settings.duration, settings.easing)
	              ;
	            }
	            else {
	              $module
	                .slideDown(settings.duration, settings.easing)
	              ;
	            }
	          }
	        },

	        hide: function() {
	          module.debug('Showing nag', settings.animation.hide);
	          if(settings.animation.show == 'fade') {
	            $module
	              .fadeIn(settings.duration, settings.easing)
	            ;
	          }
	          else {
	            $module
	              .slideUp(settings.duration, settings.easing)
	            ;
	          }
	        },

	        onHide: function() {
	          module.debug('Removing nag', settings.animation.hide);
	          $module.remove();
	          if (settings.onHide) {
	            settings.onHide();
	          }
	        },

	        dismiss: function(event) {
	          if(settings.storageMethod) {
	            module.storage.set(settings.key, settings.value);
	          }
	          module.hide();
	          event.stopImmediatePropagation();
	          event.preventDefault();
	        },

	        should: {
	          show: function() {
	            if(settings.persist) {
	              module.debug('Persistent nag is set, can show nag');
	              return true;
	            }
	            if( module.storage.get(settings.key) != settings.value.toString() ) {
	              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));
	              return true;
	            }
	            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));
	            return false;
	          }
	        },

	        get: {
	          storageOptions: function() {
	            var
	              options = {}
	            ;
	            if(settings.expires) {
	              options.expires = settings.expires;
	            }
	            if(settings.domain) {
	              options.domain = settings.domain;
	            }
	            if(settings.path) {
	              options.path = settings.path;
	            }
	            return options;
	          }
	        },

	        clear: function() {
	          module.storage.remove(settings.key);
	        },

	        storage: {
	          set: function(key, value) {
	            var
	              options = module.get.storageOptions()
	            ;
	            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {
	              window.localStorage.setItem(key, value);
	              module.debug('Value stored using local storage', key, value);
	            }
	            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {
	              window.sessionStorage.setItem(key, value);
	              module.debug('Value stored using session storage', key, value);
	            }
	            else if($.cookie !== undefined) {
	              $.cookie(key, value, options);
	              module.debug('Value stored using cookie', key, value, options);
	            }
	            else {
	              module.error(error.noCookieStorage);
	              return;
	            }
	          },
	          get: function(key, value) {
	            var
	              storedValue
	            ;
	            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {
	              storedValue = window.localStorage.getItem(key);
	            }
	            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {
	              storedValue = window.sessionStorage.getItem(key);
	            }
	            // get by cookie
	            else if($.cookie !== undefined) {
	              storedValue = $.cookie(key);
	            }
	            else {
	              module.error(error.noCookieStorage);
	            }
	            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {
	              storedValue = undefined;
	            }
	            return storedValue;
	          },
	          remove: function(key) {
	            var
	              options = module.get.storageOptions()
	            ;
	            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {
	              window.localStorage.removeItem(key);
	            }
	            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {
	              window.sessionStorage.removeItem(key);
	            }
	            // store by cookie
	            else if($.cookie !== undefined) {
	              $.removeCookie(key, options);
	            }
	            else {
	              module.error(error.noStorage);
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.nag.settings = {

	  name        : 'Nag',

	  debug       : false,
	  verbose     : false,
	  performance : true,

	  namespace   : 'Nag',

	  // allows cookie to be overriden
	  persist     : false,

	  // set to zero to require manually dismissal, otherwise hides on its own
	  displayTime : 0,

	  animation   : {
	    show : 'slide',
	    hide : 'slide'
	  },

	  context       : false,
	  detachable    : false,

	  expires       : 30,
	  domain        : false,
	  path          : '/',

	  // type of storage to use
	  storageMethod : 'cookie',

	  // value to store in dismissed localstorage/cookie
	  key           : 'nag',
	  value         : 'dismiss',

	  error: {
	    noCookieStorage : '$.cookie is not included. A storage solution is required.',
	    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',
	    method          : 'The method you called is not defined.'
	  },

	  className     : {
	    bottom : 'bottom',
	    fixed  : 'fixed'
	  },

	  selector      : {
	    close : '.close.icon'
	  },

	  speed         : 500,
	  easing        : 'easeOutQuad',

	  onHide: function() {}

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Popup
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.popup = function(parameters) {
	  var
	    $allModules    = $(this),
	    $document      = $(document),
	    $window        = $(window),
	    $body          = $('body'),

	    moduleSelector = $allModules.selector || '',

	    hasTouch       = (true),
	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),

	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.popup.settings, parameters)
	          : $.extend({}, $.fn.popup.settings),

	        selector           = settings.selector,
	        className          = settings.className,
	        error              = settings.error,
	        metadata           = settings.metadata,
	        namespace          = settings.namespace,

	        eventNamespace     = '.' + settings.namespace,
	        moduleNamespace    = 'module-' + namespace,

	        $module            = $(this),
	        $context           = $(settings.context),
	        $target            = (settings.target)
	          ? $(settings.target)
	          : $module,

	        $popup,
	        $offsetParent,

	        searchDepth        = 0,
	        triedPositions     = false,
	        openedWithTouch    = false,

	        element            = this,
	        instance           = $module.data(moduleNamespace),

	        elementNamespace,
	        id,
	        module
	      ;

	      module = {

	        // binds events
	        initialize: function() {
	          module.debug('Initializing', $module);
	          module.createID();
	          module.bind.events();
	          if( !module.exists() && settings.preserve) {
	            module.create();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        refresh: function() {
	          if(settings.popup) {
	            $popup = $(settings.popup).eq(0);
	          }
	          else {
	            if(settings.inline) {
	              $popup = $target.nextAll(selector.popup).eq(0);
	              settings.popup = $popup;
	            }
	          }
	          if(settings.popup) {
	            $popup.addClass(className.loading);
	            $offsetParent = module.get.offsetParent();
	            $popup.removeClass(className.loading);
	            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {
	              module.debug('Moving popup to the same offset parent as activating element');
	              $popup
	                .detach()
	                .appendTo($offsetParent)
	              ;
	            }
	          }
	          else {
	            $offsetParent = (settings.inline)
	              ? module.get.offsetParent($target)
	              : module.has.popup()
	                ? module.get.offsetParent($popup)
	                : $body
	            ;
	          }
	          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {
	            module.debug('Setting page as offset parent');
	            $offsetParent = $body;
	          }
	          if( module.get.variation() ) {
	            module.set.variation();
	          }
	        },

	        reposition: function() {
	          module.refresh();
	          module.set.position();
	        },

	        destroy: function() {
	          module.debug('Destroying previous module');
	          // remove element only if was created dynamically
	          if($popup && !settings.preserve) {
	            module.removePopup();
	          }
	          // clear all timeouts
	          clearTimeout(module.hideTimer);
	          clearTimeout(module.showTimer);
	          // remove events
	          $window.off(elementNamespace);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        event: {
	          start:  function(event) {
	            var
	              delay = ($.isPlainObject(settings.delay))
	                ? settings.delay.show
	                : settings.delay
	            ;
	            clearTimeout(module.hideTimer);
	            if(!openedWithTouch) {
	              module.showTimer = setTimeout(module.show, delay);
	            }
	          },
	          end:  function() {
	            var
	              delay = ($.isPlainObject(settings.delay))
	                ? settings.delay.hide
	                : settings.delay
	            ;
	            clearTimeout(module.showTimer);
	            module.hideTimer = setTimeout(module.hide, delay);
	          },
	          touchstart: function(event) {
	            openedWithTouch = true;
	            module.show();
	          },
	          resize: function() {
	            if( module.is.visible() ) {
	              module.set.position();
	            }
	          },
	          hideGracefully: function(event) {
	            // don't close on clicks inside popup
	            if(event && $(event.target).closest(selector.popup).length === 0) {
	              module.debug('Click occurred outside popup hiding popup');
	              module.hide();
	            }
	            else {
	              module.debug('Click was inside popup, keeping popup open');
	            }
	          }
	        },

	        // generates popup html from metadata
	        create: function() {
	          var
	            html      = module.get.html(),
	            title     = module.get.title(),
	            content   = module.get.content()
	          ;

	          if(html || content || title) {
	            module.debug('Creating pop-up html');
	            if(!html) {
	              html = settings.templates.popup({
	                title   : title,
	                content : content
	              });
	            }
	            $popup = $('<div/>')
	              .addClass(className.popup)
	              .data(metadata.activator, $module)
	              .html(html)
	            ;
	            if(settings.inline) {
	              module.verbose('Inserting popup element inline', $popup);
	              $popup
	                .insertAfter($module)
	              ;
	            }
	            else {
	              module.verbose('Appending popup element to body', $popup);
	              $popup
	                .appendTo( $context )
	              ;
	            }
	            module.refresh();
	            module.set.variation();

	            if(settings.hoverable) {
	              module.bind.popup();
	            }
	            settings.onCreate.call($popup, element);
	          }
	          else if($target.next(selector.popup).length !== 0) {
	            module.verbose('Pre-existing popup found');
	            settings.inline = true;
	            settings.popups  = $target.next(selector.popup).data(metadata.activator, $module);
	            module.refresh();
	            if(settings.hoverable) {
	              module.bind.popup();
	            }
	          }
	          else if(settings.popup) {
	            $(settings.popup).data(metadata.activator, $module);
	            module.verbose('Used popup specified in settings');
	            module.refresh();
	            if(settings.hoverable) {
	              module.bind.popup();
	            }
	          }
	          else {
	            module.debug('No content specified skipping display', element);
	          }
	        },

	        createID: function() {
	          id = (Math.random().toString(16) + '000000000').substr(2,8);
	          elementNamespace = '.' + id;
	          module.verbose('Creating unique id for element', id);
	        },

	        // determines popup state
	        toggle: function() {
	          module.debug('Toggling pop-up');
	          if( module.is.hidden() ) {
	            module.debug('Popup is hidden, showing pop-up');
	            module.unbind.close();
	            module.show();
	          }
	          else {
	            module.debug('Popup is visible, hiding pop-up');
	            module.hide();
	          }
	        },

	        show: function(callback) {
	          callback = callback || function(){};
	          module.debug('Showing pop-up', settings.transition);
	          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {
	            if( !module.exists() ) {
	              module.create();
	            }
	            if(settings.onShow.call($popup, element) === false) {
	              module.debug('onShow callback returned false, cancelling popup animation');
	              return;
	            }
	            else if(!settings.preserve && !settings.popup) {
	              module.refresh();
	            }
	            if( $popup && module.set.position() ) {
	              module.save.conditions();
	              if(settings.exclusive) {
	                module.hideAll();
	              }
	              module.animate.show(callback);
	            }
	          }
	        },


	        hide: function(callback) {
	          callback = callback || function(){};
	          if( module.is.visible() || module.is.animating() ) {
	            if(settings.onHide.call($popup, element) === false) {
	              module.debug('onHide callback returned false, cancelling popup animation');
	              return;
	            }
	            module.remove.visible();
	            module.unbind.close();
	            module.restore.conditions();
	            module.animate.hide(callback);
	          }
	        },

	        hideAll: function() {
	          $(selector.popup)
	            .filter('.' + className.visible)
	            .each(function() {
	              $(this)
	                .data(metadata.activator)
	                .popup('hide')
	              ;
	            })
	          ;
	        },
	        exists: function() {
	          if(!$popup) {
	            return false;
	          }
	          if(settings.inline || settings.popup) {
	            return ( module.has.popup() );
	          }
	          else {
	            return ( $popup.closest($context).length >= 1 )
	              ? true
	              : false
	            ;
	          }
	        },

	        removePopup: function() {
	          if( module.has.popup() && !settings.popup) {
	            module.debug('Removing popup', $popup);
	            $popup.remove();
	            $popup = undefined;
	            settings.onRemove.call($popup, element);
	          }
	        },

	        save: {
	          conditions: function() {
	            module.cache = {
	              title: $module.attr('title')
	            };
	            if (module.cache.title) {
	              $module.removeAttr('title');
	            }
	            module.verbose('Saving original attributes', module.cache.title);
	          }
	        },
	        restore: {
	          conditions: function() {
	            if(module.cache && module.cache.title) {
	              $module.attr('title', module.cache.title);
	              module.verbose('Restoring original attributes', module.cache.title);
	            }
	            return true;
	          }
	        },
	        animate: {
	          show: function(callback) {
	            callback = $.isFunction(callback) ? callback : function(){};
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              module.set.visible();
	              $popup
	                .transition({
	                  animation  : settings.transition + ' in',
	                  queue      : false,
	                  debug      : settings.debug,
	                  verbose    : settings.verbose,
	                  duration   : settings.duration,
	                  onComplete : function() {
	                    module.bind.close();
	                    callback.call($popup, element);
	                    settings.onVisible.call($popup, element);
	                  }
	                })
	              ;
	            }
	            else {
	              module.error(error.noTransition);
	            }
	          },
	          hide: function(callback) {
	            callback = $.isFunction(callback) ? callback : function(){};
	            module.debug('Hiding pop-up');
	            if(settings.onHide.call($popup, element) === false) {
	              module.debug('onHide callback returned false, cancelling popup animation');
	              return;
	            }
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              $popup
	                .transition({
	                  animation  : settings.transition + ' out',
	                  queue      : false,
	                  duration   : settings.duration,
	                  debug      : settings.debug,
	                  verbose    : settings.verbose,
	                  onComplete : function() {
	                    module.reset();
	                    callback.call($popup, element);
	                    settings.onHidden.call($popup, element);
	                  }
	                })
	              ;
	            }
	            else {
	              module.error(error.noTransition);
	            }
	          }
	        },

	        change: {
	          content: function(html) {
	            $popup.html(html);
	          }
	        },

	        get: {
	          html: function() {
	            $module.removeData(metadata.html);
	            return $module.data(metadata.html) || settings.html;
	          },
	          title: function() {
	            $module.removeData(metadata.title);
	            return $module.data(metadata.title) || settings.title;
	          },
	          content: function() {
	            $module.removeData(metadata.content);
	            return $module.data(metadata.content) || $module.attr('title') || settings.content;
	          },
	          variation: function() {
	            $module.removeData(metadata.variation);
	            return $module.data(metadata.variation) || settings.variation;
	          },
	          popup: function() {
	            return $popup;
	          },
	          popupOffset: function() {
	            return $popup.offset();
	          },
	          calculations: function() {
	            var
	              targetElement  = $target[0],
	              targetPosition = (settings.inline || (settings.popup && settings.movePopup))
	                ? $target.position()
	                : $target.offset(),
	              calculations = {},
	              screen
	            ;
	            calculations = {
	              // element which is launching popup
	              target : {
	                element : $target[0],
	                width   : $target.outerWidth(),
	                height  : $target.outerHeight(),
	                top     : targetPosition.top,
	                left    : targetPosition.left,
	                margin  : {}
	              },
	              // popup itself
	              popup : {
	                width  : $popup.outerWidth(),
	                height : $popup.outerHeight()
	              },
	              // offset container (or 3d context)
	              parent : {
	                width  : $offsetParent.outerWidth(),
	                height : $offsetParent.outerHeight()
	              },
	              // screen boundaries
	              screen : {
	                scroll: {
	                  top  : $window.scrollTop(),
	                  left : $window.scrollLeft()
	                },
	                width  : $window.width(),
	                height : $window.height()
	              }
	            };

	            // add in container calcs if fluid
	            if( settings.setFluidWidth && module.is.fluid() ) {
	              calculations.container = {
	                width: $popup.parent().outerWidth()
	              };
	              calculations.popup.width = calculations.container.width;
	            }

	            // add in margins if inline
	            calculations.target.margin.top = (settings.inline)
	              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)
	              : 0
	            ;
	            calculations.target.margin.left = (settings.inline)
	              ? module.is.rtl()
	                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)
	                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left') , 10)
	              : 0
	            ;
	            // calculate screen boundaries
	            screen = calculations.screen;
	            calculations.boundary = {
	              top    : screen.scroll.top,
	              bottom : screen.scroll.top + screen.height,
	              left   : screen.scroll.left,
	              right  : screen.scroll.left + screen.width
	            };
	            return calculations;
	          },
	          id: function() {
	            return id;
	          },
	          startEvent: function() {
	            if(settings.on == 'hover') {
	              return 'mouseenter';
	            }
	            else if(settings.on == 'focus') {
	              return 'focus';
	            }
	            return false;
	          },
	          scrollEvent: function() {
	            return 'scroll';
	          },
	          endEvent: function() {
	            if(settings.on == 'hover') {
	              return 'mouseleave';
	            }
	            else if(settings.on == 'focus') {
	              return 'blur';
	            }
	            return false;
	          },
	          distanceFromBoundary: function(offset, calculations) {
	            var
	              distanceFromBoundary = {},
	              popup,
	              boundary
	            ;
	            offset       = offset       || module.get.offset();
	            calculations = calculations || module.get.calculations();

	            // shorthand
	            popup        = calculations.popup;
	            boundary     = calculations.boundary;

	            if(offset) {
	              distanceFromBoundary = {
	                top    : (offset.top - boundary.top),
	                left   : (offset.left - boundary.left),
	                right  : (boundary.right - (offset.left + popup.width) ),
	                bottom : (boundary.bottom - (offset.top + popup.height) )
	              };
	              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);
	            }
	            return distanceFromBoundary;
	          },
	          offsetParent: function($target) {
	            var
	              element = ($target !== undefined)
	                ? $target[0]
	                : $module[0],
	              parentNode = element.parentNode,
	              $node    = $(parentNode)
	            ;
	            if(parentNode) {
	              var
	                is2D     = ($node.css('transform') === 'none'),
	                isStatic = ($node.css('position') === 'static'),
	                isHTML   = $node.is('html')
	              ;
	              while(parentNode && !isHTML && isStatic && is2D) {
	                parentNode = parentNode.parentNode;
	                $node    = $(parentNode);
	                is2D     = ($node.css('transform') === 'none');
	                isStatic = ($node.css('position') === 'static');
	                isHTML   = $node.is('html');
	              }
	            }
	            return ($node && $node.length > 0)
	              ? $node
	              : $()
	            ;
	          },
	          positions: function() {
	            return {
	              'top left'      : false,
	              'top center'    : false,
	              'top right'     : false,
	              'bottom left'   : false,
	              'bottom center' : false,
	              'bottom right'  : false,
	              'left center'   : false,
	              'right center'  : false
	            };
	          },
	          nextPosition: function(position) {
	            var
	              positions          = position.split(' '),
	              verticalPosition   = positions[0],
	              horizontalPosition = positions[1],
	              opposite = {
	                top    : 'bottom',
	                bottom : 'top',
	                left   : 'right',
	                right  : 'left'
	              },
	              adjacent = {
	                left   : 'center',
	                center : 'right',
	                right  : 'left'
	              },
	              backup = {
	                'top left'      : 'top center',
	                'top center'    : 'top right',
	                'top right'     : 'right center',
	                'right center'  : 'bottom right',
	                'bottom right'  : 'bottom center',
	                'bottom center' : 'bottom left',
	                'bottom left'   : 'left center',
	                'left center'   : 'top left'
	              },
	              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),
	              oppositeTried = false,
	              adjacentTried = false,
	              nextPosition  = false
	            ;
	            if(!triedPositions) {
	              module.verbose('All available positions available');
	              triedPositions = module.get.positions();
	            }

	            module.debug('Recording last position tried', position);
	            triedPositions[position] = true;

	            if(settings.prefer === 'opposite') {
	              nextPosition  = [opposite[verticalPosition], horizontalPosition];
	              nextPosition  = nextPosition.join(' ');
	              oppositeTried = (triedPositions[nextPosition] === true);
	              module.debug('Trying opposite strategy', nextPosition);
	            }
	            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {
	              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];
	              nextPosition  = nextPosition.join(' ');
	              adjacentTried = (triedPositions[nextPosition] === true);
	              module.debug('Trying adjacent strategy', nextPosition);
	            }
	            if(adjacentTried || oppositeTried) {
	              module.debug('Using backup position', nextPosition);
	              nextPosition = backup[position];
	            }
	            return nextPosition;
	          }
	        },

	        set: {
	          position: function(position, calculations) {

	            // exit conditions
	            if($target.length === 0 || $popup.length === 0) {
	              module.error(error.notFound);
	              return;
	            }
	            var
	              offset,
	              distanceAway,
	              target,
	              popup,
	              parent,
	              positioning,
	              popupOffset,
	              distanceFromBoundary
	            ;

	            calculations = calculations || module.get.calculations();
	            position     = position     || $module.data(metadata.position) || settings.position;

	            offset       = $module.data(metadata.offset) || settings.offset;
	            distanceAway = settings.distanceAway;

	            // shorthand
	            target = calculations.target;
	            popup  = calculations.popup;
	            parent = calculations.parent;

	            if(target.width === 0 && target.height === 0 && !(target.element instanceof SVGGraphicsElement)) {
	              module.debug('Popup target is hidden, no action taken');
	              return false;
	            }

	            if(settings.inline) {
	              module.debug('Adding margin to calculation', target.margin);
	              if(position == 'left center' || position == 'right center') {
	                offset       +=  target.margin.top;
	                distanceAway += -target.margin.left;
	              }
	              else if (position == 'top left' || position == 'top center' || position == 'top right') {
	                offset       += target.margin.left;
	                distanceAway -= target.margin.top;
	              }
	              else {
	                offset       += target.margin.left;
	                distanceAway += target.margin.top;
	              }
	            }

	            module.debug('Determining popup position from calculations', position, calculations);

	            if (module.is.rtl()) {
	              position = position.replace(/left|right/g, function (match) {
	                return (match == 'left')
	                  ? 'right'
	                  : 'left'
	                ;
	              });
	              module.debug('RTL: Popup position updated', position);
	            }

	            // if last attempt use specified last resort position
	            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {
	              position = settings.lastResort;
	            }

	            switch (position) {
	              case 'top left':
	                positioning = {
	                  top    : 'auto',
	                  bottom : parent.height - target.top + distanceAway,
	                  left   : target.left + offset,
	                  right  : 'auto'
	                };
	              break;
	              case 'top center':
	                positioning = {
	                  bottom : parent.height - target.top + distanceAway,
	                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,
	                  top    : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'top right':
	                positioning = {
	                  bottom :  parent.height - target.top + distanceAway,
	                  right  :  parent.width - target.left - target.width - offset,
	                  top    : 'auto',
	                  left   : 'auto'
	                };
	              break;
	              case 'left center':
	                positioning = {
	                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,
	                  right  : parent.width - target.left + distanceAway,
	                  left   : 'auto',
	                  bottom : 'auto'
	                };
	              break;
	              case 'right center':
	                positioning = {
	                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,
	                  left   : target.left + target.width + distanceAway,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'bottom left':
	                positioning = {
	                  top    : target.top + target.height + distanceAway,
	                  left   : target.left + offset,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'bottom center':
	                positioning = {
	                  top    : target.top + target.height + distanceAway,
	                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'bottom right':
	                positioning = {
	                  top    : target.top + target.height + distanceAway,
	                  right  : parent.width - target.left  - target.width - offset,
	                  left   : 'auto',
	                  bottom : 'auto'
	                };
	              break;
	            }
	            if(positioning === undefined) {
	              module.error(error.invalidPosition, position);
	            }

	            module.debug('Calculated popup positioning values', positioning);

	            // tentatively place on stage
	            $popup
	              .css(positioning)
	              .removeClass(className.position)
	              .addClass(position)
	              .addClass(className.loading)
	            ;

	            popupOffset = module.get.popupOffset();

	            // see if any boundaries are surpassed with this tentative position
	            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);

	            if( module.is.offstage(distanceFromBoundary, position) ) {
	              module.debug('Position is outside viewport', position);
	              if(searchDepth < settings.maxSearchDepth) {
	                searchDepth++;
	                position = module.get.nextPosition(position);
	                module.debug('Trying new position', position);
	                return ($popup)
	                  ? module.set.position(position, calculations)
	                  : false
	                ;
	              }
	              else {
	                if(settings.lastResort) {
	                  module.debug('No position found, showing with last position');
	                }
	                else {
	                  module.debug('Popup could not find a position to display', $popup);
	                  module.error(error.cannotPlace, element);
	                  module.remove.attempts();
	                  module.remove.loading();
	                  module.reset();
	                  settings.onUnplaceable.call($popup, element);
	                  return false;
	                }
	              }
	            }
	            module.debug('Position is on stage', position);
	            module.remove.attempts();
	            module.remove.loading();
	            if( settings.setFluidWidth && module.is.fluid() ) {
	              module.set.fluidWidth(calculations);
	            }
	            return true;
	          },

	          fluidWidth: function(calculations) {
	            calculations = calculations || module.get.calculations();
	            module.debug('Automatically setting element width to parent width', calculations.parent.width);
	            $popup.css('width', calculations.container.width);
	          },

	          variation: function(variation) {
	            variation = variation || module.get.variation();
	            if(variation && module.has.popup() ) {
	              module.verbose('Adding variation to popup', variation);
	              $popup.addClass(variation);
	            }
	          },

	          visible: function() {
	            $module.addClass(className.visible);
	          }
	        },

	        remove: {
	          loading: function() {
	            $popup.removeClass(className.loading);
	          },
	          variation: function(variation) {
	            variation = variation || module.get.variation();
	            if(variation) {
	              module.verbose('Removing variation', variation);
	              $popup.removeClass(variation);
	            }
	          },
	          visible: function() {
	            $module.removeClass(className.visible);
	          },
	          attempts: function() {
	            module.verbose('Resetting all searched positions');
	            searchDepth    = 0;
	            triedPositions = false;
	          }
	        },

	        bind: {
	          events: function() {
	            module.debug('Binding popup events to module');
	            if(settings.on == 'click') {
	              $module
	                .on('click' + eventNamespace, module.toggle)
	              ;
	            }
	            if(settings.on == 'hover' && hasTouch) {
	              $module
	                .on('touchstart' + eventNamespace, module.event.touchstart)
	              ;
	            }
	            if( module.get.startEvent() ) {
	              $module
	                .on(module.get.startEvent() + eventNamespace, module.event.start)
	                .on(module.get.endEvent() + eventNamespace, module.event.end)
	              ;
	            }
	            if(settings.target) {
	              module.debug('Target set to element', $target);
	            }
	            $window.on('resize' + elementNamespace, module.event.resize);
	          },
	          popup: function() {
	            module.verbose('Allowing hover events on popup to prevent closing');
	            if( $popup && module.has.popup() ) {
	              $popup
	                .on('mouseenter' + eventNamespace, module.event.start)
	                .on('mouseleave' + eventNamespace, module.event.end)
	              ;
	            }
	          },
	          close: function() {
	            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click'))   {
	              $document
	                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)
	              ;
	              $context
	                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)
	              ;
	            }
	            if(settings.on == 'hover' && openedWithTouch) {
	              module.verbose('Binding popup close event to document');
	              $document
	                .on('touchstart' + elementNamespace, function(event) {
	                  module.verbose('Touched away from popup');
	                  module.event.hideGracefully.call(element, event);
	                })
	              ;
	            }
	            if(settings.on == 'click' && settings.closable) {
	              module.verbose('Binding popup close event to document');
	              $document
	                .on('click' + elementNamespace, function(event) {
	                  module.verbose('Clicked away from popup');
	                  module.event.hideGracefully.call(element, event);
	                })
	              ;
	            }
	          }
	        },

	        unbind: {
	          close: function() {
	            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {
	              $document
	                .off('scroll' + elementNamespace, module.hide)
	              ;
	              $context
	                .off('scroll' + elementNamespace, module.hide)
	              ;
	            }
	            if(settings.on == 'hover' && openedWithTouch) {
	              $document
	                .off('touchstart' + elementNamespace)
	              ;
	              openedWithTouch = false;
	            }
	            if(settings.on == 'click' && settings.closable) {
	              module.verbose('Removing close event from document');
	              $document
	                .off('click' + elementNamespace)
	              ;
	            }
	          }
	        },

	        has: {
	          popup: function() {
	            return ($popup && $popup.length > 0);
	          }
	        },

	        is: {
	          offstage: function(distanceFromBoundary, position) {
	            var
	              offstage = []
	            ;
	            // return boundaries that have been surpassed
	            $.each(distanceFromBoundary, function(direction, distance) {
	              if(distance < -settings.jitter) {
	                module.debug('Position exceeds allowable distance from edge', direction, distance, position);
	                offstage.push(direction);
	              }
	            });
	            if(offstage.length > 0) {
	              return true;
	            }
	            else {
	              return false;
	            }
	          },
	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          animating: function() {
	            return ($popup !== undefined && $popup.hasClass(className.animating) );
	          },
	          fluid: function() {
	            return ($popup !== undefined && $popup.hasClass(className.fluid));
	          },
	          visible: function() {
	            return ($popup !== undefined && $popup.hasClass(className.visible));
	          },
	          dropdown: function() {
	            return $module.hasClass(className.dropdown);
	          },
	          hidden: function() {
	            return !module.is.visible();
	          },
	          rtl: function () {
	            return $module.css('direction') == 'rtl';
	          }
	        },

	        reset: function() {
	          module.remove.visible();
	          if(settings.preserve) {
	            if($.fn.transition !== undefined) {
	              $popup
	                .transition('remove transition')
	              ;
	            }
	          }
	          else {
	            module.removePopup();
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.popup.settings = {

	  name         : 'Popup',

	  // module settings
	  debug        : false,
	  verbose      : false,
	  performance  : true,
	  namespace    : 'popup',

	  // callback only when element added to dom
	  onCreate     : function(){},

	  // callback before element removed from dom
	  onRemove     : function(){},

	  // callback before show animation
	  onShow       : function(){},

	  // callback after show animation
	  onVisible    : function(){},

	  // callback before hide animation
	  onHide       : function(){},

	  // callback when popup cannot be positioned in visible screen
	  onUnplaceable: function(){},

	  // callback after hide animation
	  onHidden     : function(){},

	  // when to show popup
	  on           : 'hover',

	  // whether to add touchstart events when using hover
	  addTouchEvents : true,

	  // default position relative to element
	  position     : 'top left',

	  // name of variation to use
	  variation    : '',

	  // whether popup should be moved to context
	  movePopup      : true,

	  // element which popup should be relative to
	  target         : false,

	  // jq selector or element that should be used as popup
	  popup          : false,

	  // popup should remain inline next to activator
	  inline         : false,

	  // popup should be removed from page on hide
	  preserve       : false,

	  // popup should not close when being hovered on
	  hoverable      : false,

	  // explicitly set content
	  content      : false,

	  // explicitly set html
	  html         : false,

	  // explicitly set title
	  title        : false,

	  // whether automatically close on clickaway when on click
	  closable     : true,

	  // automatically hide on scroll
	  hideOnScroll : 'auto',

	  // hide other popups on show
	  exclusive    : false,

	  // context to attach popups
	  context      : 'body',

	  // position to prefer when calculating new position
	  prefer       : 'opposite',

	  // specify position to appear even if it doesn't fit
	  lastResort   : false,

	  // delay used to prevent accidental refiring of animations due to user error
	  delay        : {
	    show : 50,
	    hide : 70
	  },

	  // whether fluid variation should assign width explicitly
	  setFluidWidth  : true,

	  // transition settings
	  duration       : 200,
	  transition     : 'scale',

	  // distance away from activating element in px
	  distanceAway   : 0,

	  // number of pixels an element is allowed to be "offstage" for a position to be chosen (allows for rounding)
	  jitter         : 2,

	  // offset on aligning axis from calculated position
	  offset         : 0,

	  // maximum times to look for a position before failing (9 positions total)
	  maxSearchDepth : 15,

	  error: {
	    invalidPosition : 'The position you specified is not a valid position',
	    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',
	    method          : 'The method you called is not defined.',
	    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',
	    notFound        : 'The target or popup you specified does not exist on the page'
	  },

	  metadata: {
	    activator : 'activator',
	    content   : 'content',
	    html      : 'html',
	    offset    : 'offset',
	    position  : 'position',
	    title     : 'title',
	    variation : 'variation'
	  },

	  className   : {
	    active    : 'active',
	    animating : 'animating',
	    dropdown  : 'dropdown',
	    fluid     : 'fluid',
	    loading   : 'loading',
	    popup     : 'ui popup',
	    position  : 'top left center bottom right',
	    visible   : 'visible'
	  },

	  selector    : {
	    popup    : '.ui.popup'
	  },

	  templates: {
	    escape: function(string) {
	      var
	        badChars     = /[&<>"'`]/g,
	        shouldEscape = /[&<>"'`]/,
	        escape       = {
	          "&": "&amp;",
	          "<": "&lt;",
	          ">": "&gt;",
	          '"': "&quot;",
	          "'": "&#x27;",
	          "`": "&#x60;"
	        },
	        escapedChar  = function(chr) {
	          return escape[chr];
	        }
	      ;
	      if(shouldEscape.test(string)) {
	        return string.replace(badChars, escapedChar);
	      }
	      return string;
	    },
	    popup: function(text) {
	      var
	        html   = '',
	        escape = $.fn.popup.settings.templates.escape
	      ;
	      if(typeof text !== undefined) {
	        if(typeof text.title !== undefined && text.title) {
	          text.title = escape(text.title);
	          html += '<div class="header">' + text.title + '</div>';
	        }
	        if(typeof text.content !== undefined && text.content) {
	          text.content = escape(text.content);
	          html += '<div class="content">' + text.content + '</div>';
	        }
	      }
	      return html;
	    }
	  }

	};


	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Progress
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.progress = function(parameters) {
	  var
	    $allModules    = $(this),

	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.progress.settings, parameters)
	          : $.extend({}, $.fn.progress.settings),

	        className       = settings.className,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $bar            = $(this).find(selector.bar),
	        $progress       = $(this).find(selector.progress),
	        $label          = $(this).find(selector.label),

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        animating = false,
	        transitionEnd,
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing progress bar', settings);

	          module.set.duration();
	          module.set.transitionEvent();

	          module.read.metadata();
	          module.read.settings();

	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of progress', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },
	        destroy: function() {
	          module.verbose('Destroying previous progress for', $module);
	          clearInterval(instance.interval);
	          module.remove.state();
	          $module.removeData(moduleNamespace);
	          instance = undefined;
	        },

	        reset: function() {
	          module.set.percent(0);
	          module.set.value(0);
	        },

	        complete: function() {
	          if(module.percent === undefined || module.percent < 100) {
	            module.set.percent(100);
	          }
	        },

	        read: {
	          metadata: function() {
	            var
	              data = {
	                percent : $module.data(metadata.percent),
	                total   : $module.data(metadata.total),
	                value   : $module.data(metadata.value)
	              }
	            ;
	            if(data.percent) {
	              module.debug('Current percent value set from metadata', data.percent);
	              module.set.percent(data.percent);
	            }
	            if(data.total) {
	              module.debug('Total value set from metadata', data.total);
	              module.set.total(data.total);
	            }
	            if(data.value) {
	              module.debug('Current value set from metadata', data.value);
	              module.set.value(data.value);
	              module.set.progress(data.value);
	            }
	          },
	          settings: function() {
	            if(settings.total !== false) {
	              module.debug('Current total set in settings', settings.total);
	              module.set.total(settings.total);
	            }
	            if(settings.value !== false) {
	              module.debug('Current value set in settings', settings.value);
	              module.set.value(settings.value);
	              module.set.progress(module.value);
	            }
	            if(settings.percent !== false) {
	              module.debug('Current percent set in settings', settings.percent);
	              module.set.percent(settings.percent);
	            }
	          }
	        },

	        increment: function(incrementValue) {
	          var
	            maxValue,
	            startValue,
	            newValue
	          ;
	          if( module.has.total() ) {
	            startValue     = module.get.value();
	            incrementValue = incrementValue || 1;

	            newValue       = startValue + incrementValue;
	            maxValue       = module.get.total();

	            module.debug('Incrementing value', startValue, newValue, maxValue);
	            if(newValue > maxValue ) {
	              module.debug('Value cannot increment above total', maxValue);
	              newValue = maxValue;
	            }
	          }
	          else {
	            startValue     = module.get.percent();
	            incrementValue = incrementValue || module.get.randomValue();

	            newValue       = startValue + incrementValue;
	            maxValue       = 100;

	            module.debug('Incrementing percentage by', startValue, newValue);
	            if(newValue > maxValue ) {
	              module.debug('Value cannot increment above 100 percent');
	              newValue = maxValue;
	            }
	          }
	          module.set.progress(newValue);
	        },
	        decrement: function(decrementValue) {
	          var
	            total     = module.get.total(),
	            startValue,
	            newValue
	          ;
	          if(total) {
	            startValue     =  module.get.value();
	            decrementValue =  decrementValue || 1;
	            newValue       =  startValue - decrementValue;
	            module.debug('Decrementing value by', decrementValue, startValue);
	          }
	          else {
	            startValue     =  module.get.percent();
	            decrementValue =  decrementValue || module.get.randomValue();
	            newValue       =  startValue - decrementValue;
	            module.debug('Decrementing percentage by', decrementValue, startValue);
	          }

	          if(newValue < 0) {
	            module.debug('Value cannot decrement below 0');
	            newValue = 0;
	          }
	          module.set.progress(newValue);
	        },

	        has: {
	          total: function() {
	            return (module.get.total() !== false);
	          }
	        },

	        get: {
	          text: function(templateText) {
	            var
	              value   = module.value                || 0,
	              total   = module.total                || 0,
	              percent = (animating)
	                ? module.get.displayPercent()
	                : module.percent || 0,
	              left = (module.total > 0)
	                ? (total - value)
	                : (100 - percent)
	            ;
	            templateText = templateText || '';
	            templateText = templateText
	              .replace('{value}', value)
	              .replace('{total}', total)
	              .replace('{left}', left)
	              .replace('{percent}', percent)
	            ;
	            module.debug('Adding variables to progress bar text', templateText);
	            return templateText;
	          },


	          randomValue: function() {
	            module.debug('Generating random increment percentage');
	            return Math.floor((Math.random() * settings.random.max) + settings.random.min);
	          },

	          numericValue: function(value) {
	            return (typeof value === 'string')
	              ? (value.replace(/[^\d.]/g, '') !== '')
	                ? +(value.replace(/[^\d.]/g, ''))
	                : false
	              : value
	            ;
	          },

	          transitionEnd: function() {
	            var
	              element     = document.createElement('element'),
	              transitions = {
	                'transition'       :'transitionend',
	                'OTransition'      :'oTransitionEnd',
	                'MozTransition'    :'transitionend',
	                'WebkitTransition' :'webkitTransitionEnd'
	              },
	              transition
	            ;
	            for(transition in transitions){
	              if( element.style[transition] !== undefined ){
	                return transitions[transition];
	              }
	            }
	          },

	          // gets current displayed percentage (if animating values this is the intermediary value)
	          displayPercent: function() {
	            var
	              barWidth       = $bar.width(),
	              totalWidth     = $module.width(),
	              minDisplay     = parseInt($bar.css('min-width'), 10),
	              displayPercent = (barWidth > minDisplay)
	                ? (barWidth / totalWidth * 100)
	                : module.percent
	            ;
	            return (settings.precision > 0)
	              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)
	              : Math.round(displayPercent)
	            ;
	          },

	          percent: function() {
	            return module.percent || 0;
	          },
	          value: function() {
	            return module.value || 0;
	          },
	          total: function() {
	            return module.total || false;
	          }
	        },

	        is: {
	          success: function() {
	            return $module.hasClass(className.success);
	          },
	          warning: function() {
	            return $module.hasClass(className.warning);
	          },
	          error: function() {
	            return $module.hasClass(className.error);
	          },
	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          visible: function() {
	            return $module.is(':visible');
	          }
	        },

	        remove: {
	          state: function() {
	            module.verbose('Removing stored state');
	            delete module.total;
	            delete module.percent;
	            delete module.value;
	          },
	          active: function() {
	            module.verbose('Removing active state');
	            $module.removeClass(className.active);
	          },
	          success: function() {
	            module.verbose('Removing success state');
	            $module.removeClass(className.success);
	          },
	          warning: function() {
	            module.verbose('Removing warning state');
	            $module.removeClass(className.warning);
	          },
	          error: function() {
	            module.verbose('Removing error state');
	            $module.removeClass(className.error);
	          }
	        },

	        set: {
	          barWidth: function(value) {
	            if(value > 100) {
	              module.error(error.tooHigh, value);
	            }
	            else if (value < 0) {
	              module.error(error.tooLow, value);
	            }
	            else {
	              $bar
	                .css('width', value + '%')
	              ;
	              $module
	                .attr('data-percent', parseInt(value, 10))
	              ;
	            }
	          },
	          duration: function(duration) {
	            duration = duration || settings.duration;
	            duration = (typeof duration == 'number')
	              ? duration + 'ms'
	              : duration
	            ;
	            module.verbose('Setting progress bar transition duration', duration);
	            $bar
	              .css({
	                'transition-duration':  duration
	              })
	            ;
	          },
	          percent: function(percent) {
	            percent = (typeof percent == 'string')
	              ? +(percent.replace('%', ''))
	              : percent
	            ;
	            // round display percentage
	            percent = (settings.precision > 0)
	              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)
	              : Math.round(percent)
	            ;
	            module.percent = percent;
	            if( !module.has.total() ) {
	              module.value = (settings.precision > 0)
	                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)
	                : Math.round( (percent / 100) * module.total * 10) / 10
	              ;
	              if(settings.limitValues) {
	                module.value = (module.value > 100)
	                  ? 100
	                  : (module.value < 0)
	                    ? 0
	                    : module.value
	                ;
	              }
	            }
	            module.set.barWidth(percent);
	            module.set.labelInterval();
	            module.set.labels();
	            settings.onChange.call(element, percent, module.value, module.total);
	          },
	          labelInterval: function() {
	            var
	              animationCallback = function() {
	                module.verbose('Bar finished animating, removing continuous label updates');
	                clearInterval(module.interval);
	                animating = false;
	                module.set.labels();
	              }
	            ;
	            clearInterval(module.interval);
	            $bar.one(transitionEnd + eventNamespace, animationCallback);
	            module.timer = setTimeout(animationCallback, settings.duration + 100);
	            animating = true;
	            module.interval = setInterval(module.set.labels, settings.framerate);
	          },
	          labels: function() {
	            module.verbose('Setting both bar progress and outer label text');
	            module.set.barLabel();
	            module.set.state();
	          },
	          label: function(text) {
	            text = text || '';
	            if(text) {
	              text = module.get.text(text);
	              module.debug('Setting label to text', text);
	              $label.text(text);
	            }
	          },
	          state: function(percent) {
	            percent = (percent !== undefined)
	              ? percent
	              : module.percent
	            ;
	            if(percent === 100) {
	              if(settings.autoSuccess && !(module.is.warning() || module.is.error())) {
	                module.set.success();
	                module.debug('Automatically triggering success at 100%');
	              }
	              else {
	                module.verbose('Reached 100% removing active state');
	                module.remove.active();
	              }
	            }
	            else if(percent > 0) {
	              module.verbose('Adjusting active progress bar label', percent);
	              module.set.active();
	            }
	            else {
	              module.remove.active();
	              module.set.label(settings.text.active);
	            }
	          },
	          barLabel: function(text) {
	            if(text !== undefined) {
	              $progress.text( module.get.text(text) );
	            }
	            else if(settings.label == 'ratio' && module.total) {
	              module.debug('Adding ratio to bar label');
	              $progress.text( module.get.text(settings.text.ratio) );
	            }
	            else if(settings.label == 'percent') {
	              module.debug('Adding percentage to bar label');
	              $progress.text( module.get.text(settings.text.percent) );
	            }
	          },
	          active: function(text) {
	            text = text || settings.text.active;
	            module.debug('Setting active state');
	            if(settings.showActivity && !module.is.active() ) {
	              $module.addClass(className.active);
	            }
	            module.remove.warning();
	            module.remove.error();
	            module.remove.success();
	            if(text) {
	              module.set.label(text);
	            }
	            settings.onActive.call(element, module.value, module.total);
	          },
	          success : function(text) {
	            text = text || settings.text.success;
	            module.debug('Setting success state');
	            $module.addClass(className.success);
	            module.remove.active();
	            module.remove.warning();
	            module.remove.error();
	            module.complete();
	            if(text) {
	              module.set.label(text);
	            }
	            settings.onSuccess.call(element, module.total);
	          },
	          warning : function(text) {
	            text = text || settings.text.warning;
	            module.debug('Setting warning state');
	            $module.addClass(className.warning);
	            module.remove.active();
	            module.remove.success();
	            module.remove.error();
	            module.complete();
	            if(text) {
	              module.set.label(text);
	            }
	            settings.onWarning.call(element, module.value, module.total);
	          },
	          error : function(text) {
	            text = text || settings.text.error;
	            module.debug('Setting error state');
	            $module.addClass(className.error);
	            module.remove.active();
	            module.remove.success();
	            module.remove.warning();
	            module.complete();
	            if(text) {
	              module.set.label(text);
	            }
	            settings.onError.call(element, module.value, module.total);
	          },
	          transitionEvent: function() {
	            transitionEnd = module.get.transitionEnd();
	          },
	          total: function(totalValue) {
	            module.total = totalValue;
	          },
	          value: function(value) {
	            module.value = value;
	          },
	          progress: function(value) {
	            var
	              numericValue = module.get.numericValue(value),
	              percentComplete
	            ;
	            if(numericValue === false) {
	              module.error(error.nonNumeric, value);
	            }
	            if( module.has.total() ) {
	              module.set.value(numericValue);
	              percentComplete = (numericValue / module.total) * 100;
	              module.debug('Calculating percent complete from total', percentComplete);
	              module.set.percent( percentComplete );
	            }
	            else {
	              percentComplete = numericValue;
	              module.debug('Setting value to exact percentage value', percentComplete);
	              module.set.percent( percentComplete );
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.progress.settings = {

	  name         : 'Progress',
	  namespace    : 'progress',

	  debug        : false,
	  verbose      : false,
	  performance  : true,

	  random       : {
	    min : 2,
	    max : 5
	  },

	  duration     : 300,

	  autoSuccess  : true,
	  showActivity : true,
	  limitValues  : true,

	  label        : 'percent',
	  precision    : 0,
	  framerate    : (1000 / 30), /// 30 fps

	  percent      : false,
	  total        : false,
	  value        : false,

	  onChange     : function(percent, value, total){},
	  onSuccess    : function(total){},
	  onActive     : function(value, total){},
	  onError      : function(value, total){},
	  onWarning    : function(value, total){},

	  error    : {
	    method     : 'The method you called is not defined.',
	    nonNumeric : 'Progress value is non numeric',
	    tooHigh    : 'Value specified is above 100%',
	    tooLow     : 'Value specified is below 0%'
	  },

	  regExp: {
	    variable: /\{\$*[A-z0-9]+\}/g
	  },

	  metadata: {
	    percent : 'percent',
	    total   : 'total',
	    value   : 'value'
	  },

	  selector : {
	    bar      : '> .bar',
	    label    : '> .label',
	    progress : '.bar > .progress'
	  },

	  text : {
	    active  : false,
	    error   : false,
	    success : false,
	    warning : false,
	    percent : '{percent}%',
	    ratio   : '{value} of {total}'
	  },

	  className : {
	    active  : 'active',
	    error   : 'error',
	    success : 'success',
	    warning : 'warning'
	  }

	};


	})( jQuery, window, document );
	/*!
	 * # Semantic UI 2.1.7 - Rating
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.rating = function(parameters) {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.rating.settings, parameters)
	          : $.extend({}, $.fn.rating.settings),

	        namespace       = settings.namespace,
	        className       = settings.className,
	        metadata        = settings.metadata,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        element         = this,
	        instance        = $(this).data(moduleNamespace),

	        $module         = $(this),
	        $icon           = $module.find(selector.icon),

	        module
	      ;

	      module = {

	        initialize: function() {
	          module.verbose('Initializing rating module', settings);

	          if($icon.length === 0) {
	            module.setup.layout();
	          }

	          if(settings.interactive) {
	            module.enable();
	          }
	          else {
	            module.disable();
	          }
	          module.set.rating( module.get.initialRating() );
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Instantiating module', settings);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous instance', instance);
	          module.remove.events();
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          $icon   = $module.find(selector.icon);
	        },

	        setup: {
	          layout: function() {
	            var
	              maxRating = module.get.maxRating(),
	              html      = $.fn.rating.settings.templates.icon(maxRating)
	            ;
	            module.debug('Generating icon html dynamically');
	            $module
	              .html(html)
	            ;
	            module.refresh();
	          }
	        },

	        event: {
	          mouseenter: function() {
	            var
	              $activeIcon = $(this)
	            ;
	            $activeIcon
	              .nextAll()
	                .removeClass(className.selected)
	            ;
	            $module
	              .addClass(className.selected)
	            ;
	            $activeIcon
	              .addClass(className.selected)
	                .prevAll()
	                .addClass(className.selected)
	            ;
	          },
	          mouseleave: function() {
	            $module
	              .removeClass(className.selected)
	            ;
	            $icon
	              .removeClass(className.selected)
	            ;
	          },
	          click: function() {
	            var
	              $activeIcon   = $(this),
	              currentRating = module.get.rating(),
	              rating        = $icon.index($activeIcon) + 1,
	              canClear      = (settings.clearable == 'auto')
	               ? ($icon.length === 1)
	               : settings.clearable
	            ;
	            if(canClear && currentRating == rating) {
	              module.clearRating();
	            }
	            else {
	              module.set.rating( rating );
	            }
	          }
	        },

	        clearRating: function() {
	          module.debug('Clearing current rating');
	          module.set.rating(0);
	        },

	        bind: {
	          events: function() {
	            module.verbose('Binding events');
	            $module
	              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)
	              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)
	              .on('click'      + eventNamespace, selector.icon, module.event.click)
	            ;
	          }
	        },

	        remove: {
	          events: function() {
	            module.verbose('Removing events');
	            $module
	              .off(eventNamespace)
	            ;
	          }
	        },

	        enable: function() {
	          module.debug('Setting rating to interactive mode');
	          module.bind.events();
	          $module
	            .removeClass(className.disabled)
	          ;
	        },

	        disable: function() {
	          module.debug('Setting rating to read-only mode');
	          module.remove.events();
	          $module
	            .addClass(className.disabled)
	          ;
	        },

	        get: {
	          initialRating: function() {
	            if($module.data(metadata.rating) !== undefined) {
	              $module.removeData(metadata.rating);
	              return $module.data(metadata.rating);
	            }
	            return settings.initialRating;
	          },
	          maxRating: function() {
	            if($module.data(metadata.maxRating) !== undefined) {
	              $module.removeData(metadata.maxRating);
	              return $module.data(metadata.maxRating);
	            }
	            return settings.maxRating;
	          },
	          rating: function() {
	            var
	              currentRating = $icon.filter('.' + className.active).length
	            ;
	            module.verbose('Current rating retrieved', currentRating);
	            return currentRating;
	          }
	        },

	        set: {
	          rating: function(rating) {
	            var
	              ratingIndex = (rating - 1 >= 0)
	                ? (rating - 1)
	                : 0,
	              $activeIcon = $icon.eq(ratingIndex)
	            ;
	            $module
	              .removeClass(className.selected)
	            ;
	            $icon
	              .removeClass(className.selected)
	              .removeClass(className.active)
	            ;
	            if(rating > 0) {
	              module.verbose('Setting current rating to', rating);
	              $activeIcon
	                .prevAll()
	                .andSelf()
	                  .addClass(className.active)
	              ;
	            }
	            settings.onRate.call(element, rating);
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.rating.settings = {

	  name          : 'Rating',
	  namespace     : 'rating',

	  debug         : false,
	  verbose       : false,
	  performance   : true,

	  initialRating : 0,
	  interactive   : true,
	  maxRating     : 4,
	  clearable     : 'auto',

	  onRate        : function(rating){},

	  error         : {
	    method    : 'The method you called is not defined',
	    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'
	  },


	  metadata: {
	    rating    : 'rating',
	    maxRating : 'maxRating'
	  },

	  className : {
	    active   : 'active',
	    disabled : 'disabled',
	    selected : 'selected',
	    loading  : 'loading'
	  },

	  selector  : {
	    icon : '.icon'
	  },

	  templates: {
	    icon: function(maxRating) {
	      var
	        icon = 1,
	        html = ''
	      ;
	      while(icon <= maxRating) {
	        html += '<i class="icon"></i>';
	        icon++;
	      }
	      return html;
	    }
	  }

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Search
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.search = function(parameters) {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $(this)
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.search.settings, parameters)
	          : $.extend({}, $.fn.search.settings),

	        className       = settings.className,
	        metadata        = settings.metadata,
	        regExp          = settings.regExp,
	        fields          = settings.fields,
	        selector        = settings.selector,
	        error           = settings.error,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = namespace + '-module',

	        $module         = $(this),
	        $prompt         = $module.find(selector.prompt),
	        $searchButton   = $module.find(selector.searchButton),
	        $results        = $module.find(selector.results),
	        $result         = $module.find(selector.result),
	        $category       = $module.find(selector.category),

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        module
	      ;

	      module = {

	        initialize: function() {
	          module.verbose('Initializing module');
	          module.determine.searchFields();
	          module.bind.events();
	          module.set.type();
	          module.create.results();
	          module.instantiate();
	        },
	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },
	        destroy: function() {
	          module.verbose('Destroying instance');
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        bind: {
	          events: function() {
	            module.verbose('Binding events to search');
	            if(settings.automatic) {
	              $module
	                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)
	              ;
	              $prompt
	                .attr('autocomplete', 'off')
	              ;
	            }
	            $module
	              // prompt
	              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)
	              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)
	              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)
	              // search button
	              .on('click'     + eventNamespace, selector.searchButton, module.query)
	              // results
	              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)
	              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)
	              .on('click'     + eventNamespace, selector.result,  module.event.result.click)
	            ;
	          }
	        },

	        determine: {
	          searchFields: function() {
	            // this makes sure $.extend does not add specified search fields to default fields
	            // this is the only setting which should not extend defaults
	            if(parameters && parameters.searchFields !== undefined) {
	              settings.searchFields = parameters.searchFields;
	            }
	          }
	        },

	        event: {
	          input: function() {
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.query, settings.searchDelay);
	          },
	          focus: function() {
	            module.set.focus();
	            if( module.has.minimumCharacters() ) {
	              module.query();
	              if( module.can.show() ) {
	                module.showResults();
	              }
	            }
	          },
	          blur: function(event) {
	            var
	              pageLostFocus = (document.activeElement === this),
	              callback      = function() {
	                module.cancel.query();
	                module.remove.focus();
	                module.timer = setTimeout(module.hideResults, settings.hideDelay);
	              }
	            ;
	            if(pageLostFocus) {
	              return;
	            }
	            if(module.resultsClicked) {
	              module.debug('Determining if user action caused search to close');
	              $module
	                .one('click', selector.results, function(event) {
	                  if( !module.is.animating() && !module.is.hidden() ) {
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.debug('Input blurred without user action, closing results');
	              callback();
	            }
	          },
	          result: {
	            mousedown: function() {
	              module.resultsClicked = true;
	            },
	            mouseup: function() {
	              module.resultsClicked = false;
	            },
	            click: function(event) {
	              module.debug('Search result selected');
	              var
	                $result = $(this),
	                $title  = $result.find(selector.title).eq(0),
	                $link   = $result.find('a[href]').eq(0),
	                href    = $link.attr('href')   || false,
	                target  = $link.attr('target') || false,
	                title   = $title.html(),
	                // title is used for result lookup
	                value   = ($title.length > 0)
	                  ? $title.text()
	                  : false,
	                results = module.get.results(),
	                result  = $result.data(metadata.result) || module.get.result(value, results),
	                returnedValue
	              ;
	              if( $.isFunction(settings.onSelect) ) {
	                if(settings.onSelect.call(element, result, results) === false) {
	                  module.debug('Custom onSelect callback cancelled default select action');
	                  return;
	                }
	              }
	              module.hideResults();
	              if(value) {
	                module.set.value(value);
	              }
	              if(href) {
	                module.verbose('Opening search link found in result', $link);
	                if(target == '_blank' || event.ctrlKey) {
	                  window.open(href);
	                }
	                else {
	                  window.location.href = (href);
	                }
	              }
	            }
	          }
	        },
	        handleKeyboard: function(event) {
	          var
	            // force selector refresh
	            $result      = $module.find(selector.result),
	            $category    = $module.find(selector.category),
	            currentIndex = $result.index( $result.filter('.' + className.active) ),
	            resultSize   = $result.length,

	            keyCode      = event.which,
	            keys         = {
	              backspace : 8,
	              enter     : 13,
	              escape    : 27,
	              upArrow   : 38,
	              downArrow : 40
	            },
	            newIndex
	          ;
	          // search shortcuts
	          if(keyCode == keys.escape) {
	            module.verbose('Escape key pressed, blurring search field');
	            module.trigger.blur();
	          }
	          if( module.is.visible() ) {
	            if(keyCode == keys.enter) {
	              module.verbose('Enter key pressed, selecting active result');
	              if( $result.filter('.' + className.active).length > 0 ) {
	                module.event.result.click.call($result.filter('.' + className.active), event);
	                event.preventDefault();
	                return false;
	              }
	            }
	            else if(keyCode == keys.upArrow) {
	              module.verbose('Up key pressed, changing active result');
	              newIndex = (currentIndex - 1 < 0)
	                ? currentIndex
	                : currentIndex - 1
	              ;
	              $category
	                .removeClass(className.active)
	              ;
	              $result
	                .removeClass(className.active)
	                .eq(newIndex)
	                  .addClass(className.active)
	                  .closest($category)
	                    .addClass(className.active)
	              ;
	              event.preventDefault();
	            }
	            else if(keyCode == keys.downArrow) {
	              module.verbose('Down key pressed, changing active result');
	              newIndex = (currentIndex + 1 >= resultSize)
	                ? currentIndex
	                : currentIndex + 1
	              ;
	              $category
	                .removeClass(className.active)
	              ;
	              $result
	                .removeClass(className.active)
	                .eq(newIndex)
	                  .addClass(className.active)
	                  .closest($category)
	                    .addClass(className.active)
	              ;
	              event.preventDefault();
	            }
	          }
	          else {
	            // query shortcuts
	            if(keyCode == keys.enter) {
	              module.verbose('Enter key pressed, executing query');
	              module.query();
	              module.set.buttonPressed();
	              $prompt.one('keyup', module.remove.buttonFocus);
	            }
	          }
	        },

	        setup: {
	          api: function() {
	            var
	              apiSettings = {
	                debug     : settings.debug,
	                on        : false,
	                cache     : 'local',
	                action    : 'search',
	                onError   : module.error
	              },
	              searchHTML
	            ;
	            module.verbose('First request, initializing API');
	            $module.api(apiSettings);
	          }
	        },

	        can: {
	          useAPI: function() {
	            return $.fn.api !== undefined;
	          },
	          show: function() {
	            return module.is.focused() && !module.is.visible() && !module.is.empty();
	          },
	          transition: function() {
	            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');
	          }
	        },

	        is: {
	          animating: function() {
	            return $results.hasClass(className.animating);
	          },
	          hidden: function() {
	            return $results.hasClass(className.hidden);
	          },
	          empty: function() {
	            return ($results.html() === '');
	          },
	          visible: function() {
	            return ($results.filter(':visible').length > 0);
	          },
	          focused: function() {
	            return ($prompt.filter(':focus').length > 0);
	          }
	        },

	        trigger: {
	          blur: function() {
	            var
	              events        = document.createEvent('HTMLEvents'),
	              promptElement = $prompt[0]
	            ;
	            if(promptElement) {
	              module.verbose('Triggering native blur event');
	              events.initEvent('blur', false, false);
	              promptElement.dispatchEvent(events);
	            }
	          }
	        },

	        get: {
	          inputEvent: function() {
	            var
	              prompt = $prompt[0],
	              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)
	                ? 'input'
	                : (prompt !== undefined && prompt.onpropertychange !== undefined)
	                  ? 'propertychange'
	                  : 'keyup'
	            ;
	            return inputEvent;
	          },
	          value: function() {
	            return $prompt.val();
	          },
	          results: function() {
	            var
	              results = $module.data(metadata.results)
	            ;
	            return results;
	          },
	          result: function(value, results) {
	            var
	              lookupFields = ['title', 'id'],
	              result       = false
	            ;
	            value = (value !== undefined)
	              ? value
	              : module.get.value()
	            ;
	            results = (results !== undefined)
	              ? results
	              : module.get.results()
	            ;
	            if(settings.type === 'category') {
	              module.debug('Finding result that matches', value);
	              $.each(results, function(index, category) {
	                if($.isArray(category.results)) {
	                  result = module.search.object(value, category.results, lookupFields)[0];
	                  // don't continue searching if a result is found
	                  if(result) {
	                    return false;
	                  }
	                }
	              });
	            }
	            else {
	              module.debug('Finding result in results object', value);
	              result = module.search.object(value, results, lookupFields)[0];
	            }
	            return result || false;
	          },
	        },

	        set: {
	          focus: function() {
	            $module.addClass(className.focus);
	          },
	          loading: function() {
	            $module.addClass(className.loading);
	          },
	          value: function(value) {
	            module.verbose('Setting search input value', value);
	            $prompt
	              .val(value)
	            ;
	          },
	          type: function(type) {
	            type = type || settings.type;
	            if(settings.type == 'category') {
	              $module.addClass(settings.type);
	            }
	          },
	          buttonPressed: function() {
	            $searchButton.addClass(className.pressed);
	          }
	        },

	        remove: {
	          loading: function() {
	            $module.removeClass(className.loading);
	          },
	          focus: function() {
	            $module.removeClass(className.focus);
	          },
	          buttonPressed: function() {
	            $searchButton.removeClass(className.pressed);
	          }
	        },

	        query: function() {
	          var
	            searchTerm = module.get.value(),
	            cache = module.read.cache(searchTerm)
	          ;
	          if( module.has.minimumCharacters() )  {
	            if(cache) {
	              module.debug('Reading result from cache', searchTerm);
	              module.save.results(cache.results);
	              module.addResults(cache.html);
	              module.inject.id(cache.results);
	            }
	            else {
	              module.debug('Querying for', searchTerm);
	              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {
	                module.search.local(searchTerm);
	              }
	              else if( module.can.useAPI() ) {
	                module.search.remote(searchTerm);
	              }
	              else {
	                module.error(error.source);
	              }
	            }
	            settings.onSearchQuery.call(element, searchTerm);
	          }
	          else {
	            module.hideResults();
	          }
	        },

	        search: {
	          local: function(searchTerm) {
	            var
	              results = module.search.object(searchTerm, settings.content),
	              searchHTML
	            ;
	            module.set.loading();
	            module.save.results(results);
	            module.debug('Returned local search results', results);

	            searchHTML = module.generateResults({
	              results: results
	            });
	            module.remove.loading();
	            module.addResults(searchHTML);
	            module.inject.id(results);
	            module.write.cache(searchTerm, {
	              html    : searchHTML,
	              results : results
	            });
	          },
	          remote: function(searchTerm) {
	            var
	              apiSettings = {
	                onSuccess : function(response) {
	                  module.parse.response.call(element, response, searchTerm);
	                },
	                onFailure: function() {
	                  module.displayMessage(error.serverError);
	                },
	                urlData: {
	                  query: searchTerm
	                }
	              }
	            ;
	            if( !$module.api('get request') ) {
	              module.setup.api();
	            }
	            $.extend(true, apiSettings, settings.apiSettings);
	            module.debug('Executing search', apiSettings);
	            module.cancel.query();
	            $module
	              .api('setting', apiSettings)
	              .api('query')
	            ;
	          },
	          object: function(searchTerm, source, searchFields) {
	            var
	              results      = [],
	              fuzzyResults = [],
	              searchExp    = searchTerm.toString().replace(regExp.escape, '\\$&'),
	              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),

	              // avoid duplicates when pushing results
	              addResult = function(array, result) {
	                var
	                  notResult      = ($.inArray(result, results) == -1),
	                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)
	                ;
	                if(notResult && notFuzzyResult) {
	                  array.push(result);
	                }
	              }
	            ;
	            source = source || settings.source;
	            searchFields = (searchFields !== undefined)
	              ? searchFields
	              : settings.searchFields
	            ;

	            // search fields should be array to loop correctly
	            if(!$.isArray(searchFields)) {
	              searchFields = [searchFields];
	            }

	            // exit conditions if no source
	            if(source === undefined || source === false) {
	              module.error(error.source);
	              return [];
	            }

	            // iterate through search fields looking for matches
	            $.each(searchFields, function(index, field) {
	              $.each(source, function(label, content) {
	                var
	                  fieldExists = (typeof content[field] == 'string')
	                ;
	                if(fieldExists) {
	                  if( content[field].search(matchRegExp) !== -1) {
	                    // content starts with value (first in results)
	                    addResult(results, content);
	                  }
	                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {
	                    // content fuzzy matches (last in results)
	                    addResult(fuzzyResults, content);
	                  }
	                }
	              });
	            });
	            return $.merge(results, fuzzyResults);
	          }
	        },

	        fuzzySearch: function(query, term) {
	          var
	            termLength  = term.length,
	            queryLength = query.length
	          ;
	          if(typeof query !== 'string') {
	            return false;
	          }
	          query = query.toLowerCase();
	          term  = term.toLowerCase();
	          if(queryLength > termLength) {
	            return false;
	          }
	          if(queryLength === termLength) {
	            return (query === term);
	          }
	          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {
	            var
	              queryCharacter = query.charCodeAt(characterIndex)
	            ;
	            while(nextCharacterIndex < termLength) {
	              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {
	                continue search;
	              }
	            }
	            return false;
	          }
	          return true;
	        },

	        parse: {
	          response: function(response, searchTerm) {
	            var
	              searchHTML = module.generateResults(response)
	            ;
	            module.verbose('Parsing server response', response);
	            if(response !== undefined) {
	              if(searchTerm !== undefined && response[fields.results] !== undefined) {
	                module.addResults(searchHTML);
	                module.inject.id(response[fields.results]);
	                module.write.cache(searchTerm, {
	                  html    : searchHTML,
	                  results : response[fields.results]
	                });
	                module.save.results(response[fields.results]);
	              }
	            }
	          }
	        },

	        cancel: {
	          query: function() {
	            if( module.can.useAPI() ) {
	              $module.api('abort');
	            }
	          }
	        },

	        has: {
	          minimumCharacters: function() {
	            var
	              searchTerm    = module.get.value(),
	              numCharacters = searchTerm.length
	            ;
	            return (numCharacters >= settings.minCharacters);
	          }
	        },

	        clear: {
	          cache: function(value) {
	            var
	              cache = $module.data(metadata.cache)
	            ;
	            if(!value) {
	              module.debug('Clearing cache', value);
	              $module.removeData(metadata.cache);
	            }
	            else if(value && cache && cache[value]) {
	              module.debug('Removing value from cache', value);
	              delete cache[value];
	              $module.data(metadata.cache, cache);
	            }
	          }
	        },

	        read: {
	          cache: function(name) {
	            var
	              cache = $module.data(metadata.cache)
	            ;
	            if(settings.cache) {
	              module.verbose('Checking cache for generated html for query', name);
	              return (typeof cache == 'object') && (cache[name] !== undefined)
	                ? cache[name]
	                : false
	              ;
	            }
	            return false;
	          }
	        },

	        create: {
	          id: function(resultIndex, categoryIndex) {
	            var
	              resultID      = (resultIndex + 1), // not zero indexed
	              categoryID    = (categoryIndex + 1),
	              firstCharCode,
	              letterID,
	              id
	            ;
	            if(categoryIndex !== undefined) {
	              // start char code for "A"
	              letterID = String.fromCharCode(97 + categoryIndex);
	              id          = letterID + resultID;
	              module.verbose('Creating category result id', id);
	            }
	            else {
	              id = resultID;
	              module.verbose('Creating result id', id);
	            }
	            return id;
	          },
	          results: function() {
	            if($results.length === 0) {
	              $results = $('<div />')
	                .addClass(className.results)
	                .appendTo($module)
	              ;
	            }
	          }
	        },

	        inject: {
	          result: function(result, resultIndex, categoryIndex) {
	            module.verbose('Injecting result into results');
	            var
	              $selectedResult = (categoryIndex !== undefined)
	                ? $results
	                    .children().eq(categoryIndex)
	                      .children(selector.result).eq(resultIndex)
	                : $results
	                    .children(selector.result).eq(resultIndex)
	            ;
	            module.verbose('Injecting results metadata', $selectedResult);
	            $selectedResult
	              .data(metadata.result, result)
	            ;
	          },
	          id: function(results) {
	            module.debug('Injecting unique ids into results');
	            var
	              // since results may be object, we must use counters
	              categoryIndex = 0,
	              resultIndex   = 0
	            ;
	            if(settings.type === 'category') {
	              // iterate through each category result
	              $.each(results, function(index, category) {
	                resultIndex = 0;
	                $.each(category.results, function(index, value) {
	                  var
	                    result = category.results[index]
	                  ;
	                  if(result.id === undefined) {
	                    result.id = module.create.id(resultIndex, categoryIndex);
	                  }
	                  module.inject.result(result, resultIndex, categoryIndex);
	                  resultIndex++;
	                });
	                categoryIndex++;
	              });
	            }
	            else {
	              // top level
	              $.each(results, function(index, value) {
	                var
	                  result = results[index]
	                ;
	                if(result.id === undefined) {
	                  result.id = module.create.id(resultIndex);
	                }
	                module.inject.result(result, resultIndex);
	                resultIndex++;
	              });
	            }
	            return results;
	          }
	        },

	        save: {
	          results: function(results) {
	            module.verbose('Saving current search results to metadata', results);
	            $module.data(metadata.results, results);
	          }
	        },

	        write: {
	          cache: function(name, value) {
	            var
	              cache = ($module.data(metadata.cache) !== undefined)
	                ? $module.data(metadata.cache)
	                : {}
	            ;
	            if(settings.cache) {
	              module.verbose('Writing generated html to cache', name, value);
	              cache[name] = value;
	              $module
	                .data(metadata.cache, cache)
	              ;
	            }
	          }
	        },

	        addResults: function(html) {
	          if( $.isFunction(settings.onResultsAdd) ) {
	            if( settings.onResultsAdd.call($results, html) === false ) {
	              module.debug('onResultsAdd callback cancelled default action');
	              return false;
	            }
	          }
	          $results
	            .html(html)
	          ;
	          if( module.can.show() ) {
	            module.showResults();
	          }
	        },

	        showResults: function() {
	          if(!module.is.visible()) {
	            if( module.can.transition() ) {
	              module.debug('Showing results with css animations');
	              $results
	                .transition({
	                  animation  : settings.transition + ' in',
	                  debug      : settings.debug,
	                  verbose    : settings.verbose,
	                  duration   : settings.duration,
	                  queue      : true
	                })
	              ;
	            }
	            else {
	              module.debug('Showing results with javascript');
	              $results
	                .stop()
	                .fadeIn(settings.duration, settings.easing)
	              ;
	            }
	            settings.onResultsOpen.call($results);
	          }
	        },
	        hideResults: function() {
	          if( module.is.visible() ) {
	            if( module.can.transition() ) {
	              module.debug('Hiding results with css animations');
	              $results
	                .transition({
	                  animation  : settings.transition + ' out',
	                  debug      : settings.debug,
	                  verbose    : settings.verbose,
	                  duration   : settings.duration,
	                  queue      : true
	                })
	              ;
	            }
	            else {
	              module.debug('Hiding results with javascript');
	              $results
	                .stop()
	                .fadeOut(settings.duration, settings.easing)
	              ;
	            }
	            settings.onResultsClose.call($results);
	          }
	        },

	        generateResults: function(response) {
	          module.debug('Generating html from response', response);
	          var
	            template       = settings.templates[settings.type],
	            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),
	            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),
	            html           = ''
	          ;
	          if(isProperObject || isProperArray ) {
	            if(settings.maxResults > 0) {
	              if(isProperObject) {
	                if(settings.type == 'standard') {
	                  module.error(error.maxResults);
	                }
	              }
	              else {
	                response[fields.results] = response[fields.results].slice(0, settings.maxResults);
	              }
	            }
	            if($.isFunction(template)) {
	              html = template(response, fields);
	            }
	            else {
	              module.error(error.noTemplate, false);
	            }
	          }
	          else {
	            html = module.displayMessage(error.noResults, 'empty');
	          }
	          settings.onResults.call(element, response);
	          return html;
	        },

	        displayMessage: function(text, type) {
	          type = type || 'standard';
	          module.debug('Displaying message', text, type);
	          module.addResults( settings.templates.message(text, type) );
	          return settings.templates.message(text, type);
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }

	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.search.settings = {

	  name           : 'Search',
	  namespace      : 'search',

	  debug          : false,
	  verbose        : false,
	  performance    : true,

	  type           : 'standard',
	  // template to use (specified in settings.templates)

	  minCharacters  : 1,
	  // minimum characters required to search

	  apiSettings    : false,
	  // API config

	  source         : false,
	  // object to search

	  searchFields   : [
	    'title',
	    'description'
	  ],
	  // fields to search

	  displayField   : '',
	  // field to display in standard results template

	  searchFullText : true,
	  // whether to include fuzzy results in local search

	  automatic      : true,
	  // whether to add events to prompt automatically

	  hideDelay      : 0,
	  // delay before hiding menu after blur

	  searchDelay    : 200,
	  // delay before searching

	  maxResults     : 7,
	  // maximum results returned from local

	  cache          : true,
	  // whether to store lookups in local cache

	  // transition settings
	  transition     : 'scale',
	  duration       : 200,
	  easing         : 'easeOutExpo',

	  // callbacks
	  onSelect       : false,
	  onResultsAdd   : false,

	  onSearchQuery  : function(query){},
	  onResults      : function(response){},

	  onResultsOpen  : function(){},
	  onResultsClose : function(){},

	  className: {
	    animating : 'animating',
	    active    : 'active',
	    empty     : 'empty',
	    focus     : 'focus',
	    hidden    : 'hidden',
	    loading   : 'loading',
	    results   : 'results',
	    pressed   : 'down'
	  },

	  error : {
	    source      : 'Cannot search. No source used, and Semantic API module was not included',
	    noResults   : 'Your search returned no results',
	    logging     : 'Error in debug logging, exiting.',
	    noEndpoint  : 'No search endpoint was specified',
	    noTemplate  : 'A valid template name was not specified.',
	    serverError : 'There was an issue querying the server.',
	    maxResults  : 'Results must be an array to use maxResults setting',
	    method      : 'The method you called is not defined.'
	  },

	  metadata: {
	    cache   : 'cache',
	    results : 'results',
	    result  : 'result'
	  },

	  regExp: {
	    escape     : /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
	    beginsWith : '(?:\s|^)'
	  },

	  // maps api response attributes to internal representation
	  fields: {
	    categories      : 'results',     // array of categories (category view)
	    categoryName    : 'name',        // name of category (category view)
	    categoryResults : 'results',     // array of results (category view)
	    description     : 'description', // result description
	    image           : 'image',       // result image
	    price           : 'price',       // result price
	    results         : 'results',     // array of results (standard)
	    title           : 'title',       // result title
	    url             : 'url',         // result url
	    action          : 'action',      // "view more" object name
	    actionText      : 'text',        // "view more" text
	    actionURL       : 'url'          // "view more" url
	  },

	  selector : {
	    prompt       : '.prompt',
	    searchButton : '.search.button',
	    results      : '.results',
	    category     : '.category',
	    result       : '.result',
	    title        : '.title, .name'
	  },

	  templates: {
	    escape: function(string) {
	      var
	        badChars     = /[&<>"'`]/g,
	        shouldEscape = /[&<>"'`]/,
	        escape       = {
	          "&": "&amp;",
	          "<": "&lt;",
	          ">": "&gt;",
	          '"': "&quot;",
	          "'": "&#x27;",
	          "`": "&#x60;"
	        },
	        escapedChar  = function(chr) {
	          return escape[chr];
	        }
	      ;
	      if(shouldEscape.test(string)) {
	        return string.replace(badChars, escapedChar);
	      }
	      return string;
	    },
	    message: function(message, type) {
	      var
	        html = ''
	      ;
	      if(message !== undefined && type !== undefined) {
	        html +=  ''
	          + '<div class="message ' + type + '">'
	        ;
	        // message type
	        if(type == 'empty') {
	          html += ''
	            + '<div class="header">No Results</div class="header">'
	            + '<div class="description">' + message + '</div class="description">'
	          ;
	        }
	        else {
	          html += ' <div class="description">' + message + '</div>';
	        }
	        html += '</div>';
	      }
	      return html;
	    },
	    category: function(response, fields) {
	      var
	        html = '',
	        escape = $.fn.search.settings.templates.escape
	      ;
	      if(response[fields.categoryResults] !== undefined) {

	        // each category
	        $.each(response[fields.categoryResults], function(index, category) {
	          if(category[fields.results] !== undefined && category.results.length > 0) {

	            html  += '<div class="category">';

	            if(category[fields.categoryName] !== undefined) {
	              html += '<div class="name">' + category[fields.categoryName] + '</div>';
	            }

	            // each item inside category
	            $.each(category.results, function(index, result) {
	              if(result[fields.url]) {
	                html  += '<a class="result" href="' + result[fields.url] + '">';
	              }
	              else {
	                html  += '<a class="result">';
	              }
	              if(result[fields.image] !== undefined) {
	                html += ''
	                  + '<div class="image">'
	                  + ' <img src="' + result[fields.image] + '">'
	                  + '</div>'
	                ;
	              }
	              html += '<div class="content">';
	              if(result[fields.price] !== undefined) {
	                html += '<div class="price">' + result[fields.price] + '</div>';
	              }
	              if(result[fields.title] !== undefined) {
	                html += '<div class="title">' + result[fields.title] + '</div>';
	              }
	              if(result[fields.description] !== undefined) {
	                html += '<div class="description">' + result[fields.description] + '</div>';
	              }
	              html  += ''
	                + '</div>'
	              ;
	              html += '</a>';
	            });
	            html  += ''
	              + '</div>'
	            ;
	          }
	        });
	        if(response[fields.action]) {
	          html += ''
	          + '<a href="' + response[fields.action][fields.actionURL] + '" class="action">'
	          +   response[fields.action][fields.actionText]
	          + '</a>';
	        }
	        return html;
	      }
	      return false;
	    },
	    standard: function(response, fields) {
	      var
	        html = ''
	      ;
	      if(response[fields.results] !== undefined) {

	        // each result
	        $.each(response[fields.results], function(index, result) {
	          if(result[fields.url]) {
	            html  += '<a class="result" href="' + result[fields.url] + '">';
	          }
	          else {
	            html  += '<a class="result">';
	          }
	          if(result[fields.image] !== undefined) {
	            html += ''
	              + '<div class="image">'
	              + ' <img src="' + result[fields.image] + '">'
	              + '</div>'
	            ;
	          }
	          html += '<div class="content">';
	          if(result[fields.price] !== undefined) {
	            html += '<div class="price">' + result[fields.price] + '</div>';
	          }
	          if(result[fields.title] !== undefined) {
	            html += '<div class="title">' + result[fields.title] + '</div>';
	          }
	          if(result[fields.description] !== undefined) {
	            html += '<div class="description">' + result[fields.description] + '</div>';
	          }
	          html  += ''
	            + '</div>'
	          ;
	          html += '</a>';
	        });

	        if(response[fields.action]) {
	          html += ''
	          + '<a href="' + response[fields.action][fields.actionURL] + '" class="action">'
	          +   response[fields.action][fields.actionText]
	          + '</a>';
	        }
	        return html;
	      }
	      return false;
	    }
	  }
	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Shape
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.shape = function(parameters) {
	  var
	    $allModules     = $(this),
	    $body           = $('body'),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        moduleSelector = $allModules.selector || '',
	        settings       = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.shape.settings, parameters)
	          : $.extend({}, $.fn.shape.settings),

	        // internal aliases
	        namespace     = settings.namespace,
	        selector      = settings.selector,
	        error         = settings.error,
	        className     = settings.className,

	        // define namespaces for modules
	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        // selector cache
	        $module       = $(this),
	        $sides        = $module.find(selector.sides),
	        $side         = $module.find(selector.side),

	        // private variables
	        nextIndex = false,
	        $activeSide,
	        $nextSide,

	        // standard module
	        element       = this,
	        instance      = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.verbose('Initializing module for', element);
	          module.set.defaultSide();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', element);
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache for', element);
	          $module = $(element);
	          $sides  = $(this).find(selector.shape);
	          $side   = $(this).find(selector.side);
	        },

	        repaint: function() {
	          module.verbose('Forcing repaint event');
	          var
	            shape          = $sides[0] || document.createElement('div'),
	            fakeAssignment = shape.offsetWidth
	          ;
	        },

	        animate: function(propertyObject, callback) {
	          module.verbose('Animating box with properties', propertyObject);
	          callback = callback || function(event) {
	            module.verbose('Executing animation callback');
	            if(event !== undefined) {
	              event.stopPropagation();
	            }
	            module.reset();
	            module.set.active();
	          };
	          settings.beforeChange.call($nextSide[0]);
	          if(module.get.transitionEvent()) {
	            module.verbose('Starting CSS animation');
	            $module
	              .addClass(className.animating)
	            ;
	            $sides
	              .css(propertyObject)
	              .one(module.get.transitionEvent(), callback)
	            ;
	            module.set.duration(settings.duration);
	            requestAnimationFrame(function() {
	              $module
	                .addClass(className.animating)
	              ;
	              $activeSide
	                .addClass(className.hidden)
	              ;
	            });
	          }
	          else {
	            callback();
	          }
	        },

	        queue: function(method) {
	          module.debug('Queueing animation of', method);
	          $sides
	            .one(module.get.transitionEvent(), function() {
	              module.debug('Executing queued animation');
	              setTimeout(function(){
	                $module.shape(method);
	              }, 0);
	            })
	          ;
	        },

	        reset: function() {
	          module.verbose('Animating states reset');
	          $module
	            .removeClass(className.animating)
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	          // removeAttr style does not consistently work in safari
	          $sides
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	          $side
	            .attr('style', '')
	            .removeAttr('style')
	            .removeClass(className.hidden)
	          ;
	          $nextSide
	            .removeClass(className.animating)
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	        },

	        is: {
	          complete: function() {
	            return ($side.filter('.' + className.active)[0] == $nextSide[0]);
	          },
	          animating: function() {
	            return $module.hasClass(className.animating);
	          }
	        },

	        set: {

	          defaultSide: function() {
	            $activeSide = $module.find('.' + settings.className.active);
	            $nextSide   = ( $activeSide.next(selector.side).length > 0 )
	              ? $activeSide.next(selector.side)
	              : $module.find(selector.side).first()
	            ;
	            nextIndex = false;
	            module.verbose('Active side set to', $activeSide);
	            module.verbose('Next side set to', $nextSide);
	          },

	          duration: function(duration) {
	            duration = duration || settings.duration;
	            duration = (typeof duration == 'number')
	              ? duration + 'ms'
	              : duration
	            ;
	            module.verbose('Setting animation duration', duration);
	            if(settings.duration || settings.duration === 0) {
	              $sides.add($side)
	                .css({
	                  '-webkit-transition-duration': duration,
	                  '-moz-transition-duration': duration,
	                  '-ms-transition-duration': duration,
	                  '-o-transition-duration': duration,
	                  'transition-duration': duration
	                })
	              ;
	            }
	          },

	          currentStageSize: function() {
	            var
	              $activeSide = $module.find('.' + settings.className.active),
	              width       = $activeSide.outerWidth(true),
	              height      = $activeSide.outerHeight(true)
	            ;
	            $module
	              .css({
	                width: width,
	                height: height
	              })
	            ;
	          },

	          stageSize: function() {
	            var
	              $clone      = $module.clone().addClass(className.loading),
	              $activeSide = $clone.find('.' + settings.className.active),
	              $nextSide   = (nextIndex)
	                ? $clone.find(selector.side).eq(nextIndex)
	                : ( $activeSide.next(selector.side).length > 0 )
	                  ? $activeSide.next(selector.side)
	                  : $clone.find(selector.side).first(),
	              newSize = {}
	            ;
	            module.set.currentStageSize();
	            $activeSide.removeClass(className.active);
	            $nextSide.addClass(className.active);
	            $clone.insertAfter($module);
	            newSize = {
	              width  : $nextSide.outerWidth(true),
	              height : $nextSide.outerHeight(true)
	            };
	            $clone.remove();
	            $module
	              .css(newSize)
	            ;
	            module.verbose('Resizing stage to fit new content', newSize);
	          },

	          nextSide: function(selector) {
	            nextIndex = selector;
	            $nextSide = $side.filter(selector);
	            nextIndex = $side.index($nextSide);
	            if($nextSide.length === 0) {
	              module.set.defaultSide();
	              module.error(error.side);
	            }
	            module.verbose('Next side manually set to', $nextSide);
	          },

	          active: function() {
	            module.verbose('Setting new side to active', $nextSide);
	            $side
	              .removeClass(className.active)
	            ;
	            $nextSide
	              .addClass(className.active)
	            ;
	            settings.onChange.call($nextSide[0]);
	            module.set.defaultSide();
	          }
	        },

	        flip: {

	          up: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping up', $nextSide);
	              module.set.stageSize();
	              module.stage.above();
	              module.animate( module.get.transform.up() );
	            }
	            else {
	              module.queue('flip up');
	            }
	          },

	          down: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping down', $nextSide);
	              module.set.stageSize();
	              module.stage.below();
	              module.animate( module.get.transform.down() );
	            }
	            else {
	              module.queue('flip down');
	            }
	          },

	          left: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping left', $nextSide);
	              module.set.stageSize();
	              module.stage.left();
	              module.animate(module.get.transform.left() );
	            }
	            else {
	              module.queue('flip left');
	            }
	          },

	          right: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping right', $nextSide);
	              module.set.stageSize();
	              module.stage.right();
	              module.animate(module.get.transform.right() );
	            }
	            else {
	              module.queue('flip right');
	            }
	          },

	          over: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping over', $nextSide);
	              module.set.stageSize();
	              module.stage.behind();
	              module.animate(module.get.transform.over() );
	            }
	            else {
	              module.queue('flip over');
	            }
	          },

	          back: function() {
	            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {
	              module.debug('Side already visible', $nextSide);
	              return;
	            }
	            if( !module.is.animating()) {
	              module.debug('Flipping back', $nextSide);
	              module.set.stageSize();
	              module.stage.behind();
	              module.animate(module.get.transform.back() );
	            }
	            else {
	              module.queue('flip back');
	            }
	          }

	        },

	        get: {

	          transform: {
	            up: function() {
	              var
	                translate = {
	                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),
	                  z: -($activeSide.outerHeight(true) / 2)
	                }
	              ;
	              return {
	                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'
	              };
	            },

	            down: function() {
	              var
	                translate = {
	                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),
	                  z: -($activeSide.outerHeight(true) / 2)
	                }
	              ;
	              return {
	                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'
	              };
	            },

	            left: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),
	                  z : -($activeSide.outerWidth(true) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'
	              };
	            },

	            right: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),
	                  z : -($activeSide.outerWidth(true) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'
	              };
	            },

	            over: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'
	              };
	            },

	            back: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'
	              };
	            }
	          },

	          transitionEvent: function() {
	            var
	              element     = document.createElement('element'),
	              transitions = {
	                'transition'       :'transitionend',
	                'OTransition'      :'oTransitionEnd',
	                'MozTransition'    :'transitionend',
	                'WebkitTransition' :'webkitTransitionEnd'
	              },
	              transition
	            ;
	            for(transition in transitions){
	              if( element.style[transition] !== undefined ){
	                return transitions[transition];
	              }
	            }
	          },

	          nextSide: function() {
	            return ( $activeSide.next(selector.side).length > 0 )
	              ? $activeSide.next(selector.side)
	              : $module.find(selector.side).first()
	            ;
	          }

	        },

	        stage: {

	          above: function() {
	            var
	              box = {
	                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),
	                depth  : {
	                  active : ($nextSide.outerHeight(true) / 2),
	                  next   : ($activeSide.outerHeight(true) / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as above', $nextSide, box);
	            $sides
	              .css({
	                'transform' : 'translateZ(-' + box.depth.active + 'px)'
	              })
	            ;
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'top'       : box.origin + 'px',
	                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          below: function() {
	            var
	              box = {
	                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),
	                depth  : {
	                  active : ($nextSide.outerHeight(true) / 2),
	                  next   : ($activeSide.outerHeight(true) / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as below', $nextSide, box);
	            $sides
	              .css({
	                'transform' : 'translateZ(-' + box.depth.active + 'px)'
	              })
	            ;
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'top'       : box.origin + 'px',
	                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          left: function() {
	            var
	              height = {
	                active : $activeSide.outerWidth(true),
	                next   : $nextSide.outerWidth(true)
	              },
	              box = {
	                origin : ( ( height.active - height.next ) / 2),
	                depth  : {
	                  active : (height.next / 2),
	                  next   : (height.active / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as left', $nextSide, box);
	            $sides
	              .css({
	                'transform' : 'translateZ(-' + box.depth.active + 'px)'
	              })
	            ;
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          right: function() {
	            var
	              height = {
	                active : $activeSide.outerWidth(true),
	                next   : $nextSide.outerWidth(true)
	              },
	              box = {
	                origin : ( ( height.active - height.next ) / 2),
	                depth  : {
	                  active : (height.next / 2),
	                  next   : (height.active / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as left', $nextSide, box);
	            $sides
	              .css({
	                'transform' : 'translateZ(-' + box.depth.active + 'px)'
	              })
	            ;
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          behind: function() {
	            var
	              height = {
	                active : $activeSide.outerWidth(true),
	                next   : $nextSide.outerWidth(true)
	              },
	              box = {
	                origin : ( ( height.active - height.next ) / 2),
	                depth  : {
	                  active : (height.next / 2),
	                  next   : (height.active / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as behind', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(-180deg)'
	              })
	            ;
	          }
	        },
	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.shape.settings = {

	  // module info
	  name : 'Shape',

	  // debug content outputted to console
	  debug      : false,

	  // verbose debug output
	  verbose    : false,

	  // performance data output
	  performance: true,

	  // event namespace
	  namespace  : 'shape',

	  // callback occurs on side change
	  beforeChange : function() {},
	  onChange     : function() {},

	  // allow animation to same side
	  allowRepeats: false,

	  // animation duration
	  duration   : false,

	  // possible errors
	  error: {
	    side   : 'You tried to switch to a side that does not exist.',
	    method : 'The method you called is not defined'
	  },

	  // classnames used
	  className   : {
	    animating : 'animating',
	    hidden    : 'hidden',
	    loading   : 'loading',
	    active    : 'active'
	  },

	  // selectors used
	  selector    : {
	    sides : '.sides',
	    side  : '.side'
	  }

	};


	})( jQuery, window, document );
	/*!
	 * # Semantic UI 2.1.7 - Sidebar
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.sidebar = function(parameters) {
	  var
	    $allModules     = $(this),
	    $window         = $(window),
	    $document       = $(document),
	    $html           = $('html'),
	    $head           = $('head'),

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)
	          : $.extend({}, $.fn.sidebar.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        namespace       = settings.namespace,
	        regExp          = settings.regExp,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $context        = $(settings.context),

	        $sidebars       = $module.children(selector.sidebar),
	        $fixed          = $context.children(selector.fixed),
	        $pusher         = $context.children(selector.pusher),
	        $style,

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        elementNamespace,
	        id,
	        currentScroll,
	        transitionEvent,

	        module
	      ;

	      module      = {

	        initialize: function() {
	          module.debug('Initializing sidebar', parameters);

	          module.create.id();

	          transitionEvent = module.get.transitionEvent();

	          if(module.is.ios()) {
	            module.set.ios();
	          }

	          // avoids locking rendering if initialized in onReady
	          if(settings.delaySetup) {
	            requestAnimationFrame(module.setup.layout);
	          }
	          else {
	            module.setup.layout();
	          }

	          requestAnimationFrame(function() {
	            module.setup.cache();
	          });

	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        create: {
	          id: function() {
	            id = (Math.random().toString(16) + '000000000').substr(2,8);
	            elementNamespace = '.' + id;
	            module.verbose('Creating unique id for element', id);
	          }
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', $module);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	          if(module.is.ios()) {
	            module.remove.ios();
	          }
	          // bound by uuid
	          $context.off(elementNamespace);
	          $window.off(elementNamespace);
	          $document.off(elementNamespace);
	        },

	        event: {
	          clickaway: function(event) {
	            var
	              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),
	              clickedContext  = ($context.is(event.target))
	            ;
	            if(clickedInPusher) {
	              module.verbose('User clicked on dimmed page');
	              module.hide();
	            }
	            if(clickedContext) {
	              module.verbose('User clicked on dimmable context (scaled out page)');
	              module.hide();
	            }
	          },
	          touch: function(event) {
	            //event.stopPropagation();
	          },
	          containScroll: function(event) {
	            if(element.scrollTop <= 0)  {
	              element.scrollTop = 1;
	            }
	            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {
	              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;
	            }
	          },
	          scroll: function(event) {
	            if( $(event.target).closest(selector.sidebar).length === 0 ) {
	              event.preventDefault();
	            }
	          }
	        },

	        bind: {
	          clickaway: function() {
	            module.verbose('Adding clickaway events to context', $context);
	            if(settings.closable) {
	              $context
	                .on('click'    + elementNamespace, module.event.clickaway)
	                .on('touchend' + elementNamespace, module.event.clickaway)
	              ;
	            }
	          },
	          scrollLock: function() {
	            if(settings.scrollLock) {
	              module.debug('Disabling page scroll');
	              $window
	                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)
	              ;
	            }
	            module.verbose('Adding events to contain sidebar scroll');
	            $document
	              .on('touchmove' + elementNamespace, module.event.touch)
	            ;
	            $module
	              .on('scroll' + eventNamespace, module.event.containScroll)
	            ;
	          }
	        },
	        unbind: {
	          clickaway: function() {
	            module.verbose('Removing clickaway events from context', $context);
	            $context.off(elementNamespace);
	          },
	          scrollLock: function() {
	            module.verbose('Removing scroll lock from page');
	            $document.off(elementNamespace);
	            $window.off(elementNamespace);
	            $module.off('scroll' + eventNamespace);
	          }
	        },

	        add: {
	          inlineCSS: function() {
	            var
	              width     = module.cache.width  || $module.outerWidth(),
	              height    = module.cache.height || $module.outerHeight(),
	              isRTL     = module.is.rtl(),
	              direction = module.get.direction(),
	              distance  = {
	                left   : width,
	                right  : -width,
	                top    : height,
	                bottom : -height
	              },
	              style
	            ;

	            if(isRTL){
	              module.verbose('RTL detected, flipping widths');
	              distance.left = -width;
	              distance.right = width;
	            }

	            style  = '<style>';

	            if(direction === 'left' || direction === 'right') {
	              module.debug('Adding CSS rules for animation distance', width);
	              style  += ''
	                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'
	                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'
	                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'
	                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'
	                + ' }'
	              ;
	            }
	            else if(direction === 'top' || direction == 'bottom') {
	              style  += ''
	                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'
	                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'
	                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'
	                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'
	                + ' }'
	              ;
	            }

	            /* IE is only browser not to create context with transforms */
	            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */
	            if( module.is.ie() ) {
	              if(direction === 'left' || direction === 'right') {
	                module.debug('Adding CSS rules for animation distance', width);
	                style  += ''
	                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'
	                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'
	                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'
	                  + ' }'
	                ;
	              }
	              else if(direction === 'top' || direction == 'bottom') {
	                style  += ''
	                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'
	                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'
	                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'
	                  + ' }'
	                ;
	              }
	              /* opposite sides visible forces content overlay */
	              style += ''
	                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'
	                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'
	                + '   -webkit-transform: translate3d(0px, 0, 0);'
	                + '           transform: translate3d(0px, 0, 0);'
	                + ' }'
	              ;
	            }
	            style += '</style>';
	            $style = $(style)
	              .appendTo($head)
	            ;
	            module.debug('Adding sizing css to head', $style);
	          }
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $context  = $(settings.context);
	          $sidebars = $context.children(selector.sidebar);
	          $pusher   = $context.children(selector.pusher);
	          $fixed    = $context.children(selector.fixed);
	          module.clear.cache();
	        },

	        refreshSidebars: function() {
	          module.verbose('Refreshing other sidebars');
	          $sidebars = $context.children(selector.sidebar);
	        },

	        repaint: function() {
	          module.verbose('Forcing repaint event');
	          element.style.display = 'none';
	          var ignored = element.offsetHeight;
	          element.scrollTop = element.scrollTop;
	          element.style.display = '';
	        },

	        setup: {
	          cache: function() {
	            module.cache = {
	              width  : $module.outerWidth(),
	              height : $module.outerHeight(),
	              rtl    : ($module.css('direction') == 'rtl')
	            };
	          },
	          layout: function() {
	            if( $context.children(selector.pusher).length === 0 ) {
	              module.debug('Adding wrapper element for sidebar');
	              module.error(error.pusher);
	              $pusher = $('<div class="pusher" />');
	              $context
	                .children()
	                  .not(selector.omitted)
	                  .not($sidebars)
	                  .wrapAll($pusher)
	              ;
	              module.refresh();
	            }
	            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {
	              module.debug('Moved sidebar to correct parent element');
	              module.error(error.movedSidebar, element);
	              $module.detach().prependTo($context);
	              module.refresh();
	            }
	            module.clear.cache();
	            module.set.pushable();
	            module.set.direction();
	          }
	        },

	        attachEvents: function(selector, event) {
	          var
	            $toggle = $(selector)
	          ;
	          event = $.isFunction(module[event])
	            ? module[event]
	            : module.toggle
	          ;
	          if($toggle.length > 0) {
	            module.debug('Attaching sidebar events to element', selector, event);
	            $toggle
	              .on('click' + eventNamespace, event)
	            ;
	          }
	          else {
	            module.error(error.notFound, selector);
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if(module.is.hidden()) {
	            module.refreshSidebars();
	            if(settings.overlay)  {
	              module.error(error.overlay);
	              settings.transition = 'overlay';
	            }
	            module.refresh();
	            if(module.othersActive()) {
	              module.debug('Other sidebars currently visible');
	              if(settings.exclusive) {
	                // if not overlay queue animation after hide
	                if(settings.transition != 'overlay') {
	                  module.hideOthers(module.show);
	                  return;
	                }
	                else {
	                  module.hideOthers();
	                }
	              }
	              else {
	                settings.transition = 'overlay';
	              }
	            }
	            module.pushPage(function() {
	              callback.call(element);
	              settings.onShow.call(element);
	            });
	            settings.onChange.call(element);
	            settings.onVisible.call(element);
	          }
	          else {
	            module.debug('Sidebar is already visible');
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if(module.is.visible() || module.is.animating()) {
	            module.debug('Hiding sidebar', callback);
	            module.refreshSidebars();
	            module.pullPage(function() {
	              callback.call(element);
	              settings.onHidden.call(element);
	            });
	            settings.onChange.call(element);
	            settings.onHide.call(element);
	          }
	        },

	        othersAnimating: function() {
	          return ($sidebars.not($module).filter('.' + className.animating).length > 0);
	        },
	        othersVisible: function() {
	          return ($sidebars.not($module).filter('.' + className.visible).length > 0);
	        },
	        othersActive: function() {
	          return(module.othersVisible() || module.othersAnimating());
	        },

	        hideOthers: function(callback) {
	          var
	            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),
	            sidebarCount   = $otherSidebars.length,
	            callbackCount  = 0
	          ;
	          callback = callback || function(){};
	          $otherSidebars
	            .sidebar('hide', function() {
	              callbackCount++;
	              if(callbackCount == sidebarCount) {
	                callback();
	              }
	            })
	          ;
	        },

	        toggle: function() {
	          module.verbose('Determining toggled direction');
	          if(module.is.hidden()) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        pushPage: function(callback) {
	          var
	            transition = module.get.transition(),
	            $transition = (transition === 'overlay' || module.othersActive())
	              ? $module
	              : $pusher,
	            animate,
	            dim,
	            transitionEnd
	          ;
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if(settings.transition == 'scale down') {
	            module.scrollToTop();
	          }
	          module.set.transition(transition);
	          module.repaint();
	          animate = function() {
	            module.bind.clickaway();
	            module.add.inlineCSS();
	            module.set.animating();
	            module.set.visible();
	          };
	          dim = function() {
	            module.set.dimmed();
	          };
	          transitionEnd = function(event) {
	            if( event.target == $transition[0] ) {
	              $transition.off(transitionEvent + elementNamespace, transitionEnd);
	              module.remove.animating();
	              module.bind.scrollLock();
	              callback.call(element);
	            }
	          };
	          $transition.off(transitionEvent + elementNamespace);
	          $transition.on(transitionEvent + elementNamespace, transitionEnd);
	          requestAnimationFrame(animate);
	          if(settings.dimPage && !module.othersVisible()) {
	            requestAnimationFrame(dim);
	          }
	        },

	        pullPage: function(callback) {
	          var
	            transition = module.get.transition(),
	            $transition = (transition == 'overlay' || module.othersActive())
	              ? $module
	              : $pusher,
	            animate,
	            transitionEnd
	          ;
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.verbose('Removing context push state', module.get.direction());

	          module.unbind.clickaway();
	          module.unbind.scrollLock();

	          animate = function() {
	            module.set.transition(transition);
	            module.set.animating();
	            module.remove.visible();
	            if(settings.dimPage && !module.othersVisible()) {
	              $pusher.removeClass(className.dimmed);
	            }
	          };
	          transitionEnd = function(event) {
	            if( event.target == $transition[0] ) {
	              $transition.off(transitionEvent + elementNamespace, transitionEnd);
	              module.remove.animating();
	              module.remove.transition();
	              module.remove.inlineCSS();
	              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {
	                module.scrollBack();
	              }
	              callback.call(element);
	            }
	          };
	          $transition.off(transitionEvent + elementNamespace);
	          $transition.on(transitionEvent + elementNamespace, transitionEnd);
	          requestAnimationFrame(animate);
	        },

	        scrollToTop: function() {
	          module.verbose('Scrolling to top of page to avoid animation issues');
	          currentScroll = $(window).scrollTop();
	          $module.scrollTop(0);
	          window.scrollTo(0, 0);
	        },

	        scrollBack: function() {
	          module.verbose('Scrolling back to original page position');
	          window.scrollTo(0, currentScroll);
	        },

	        clear: {
	          cache: function() {
	            module.verbose('Clearing cached dimensions');
	            module.cache = {};
	          }
	        },

	        set: {

	          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios
	          ios: function() {
	            $html.addClass(className.ios);
	          },

	          // container
	          pushed: function() {
	            $context.addClass(className.pushed);
	          },
	          pushable: function() {
	            $context.addClass(className.pushable);
	          },

	          // pusher
	          dimmed: function() {
	            $pusher.addClass(className.dimmed);
	          },

	          // sidebar
	          active: function() {
	            $module.addClass(className.active);
	          },
	          animating: function() {
	            $module.addClass(className.animating);
	          },
	          transition: function(transition) {
	            transition = transition || module.get.transition();
	            $module.addClass(transition);
	          },
	          direction: function(direction) {
	            direction = direction || module.get.direction();
	            $module.addClass(className[direction]);
	          },
	          visible: function() {
	            $module.addClass(className.visible);
	          },
	          overlay: function() {
	            $module.addClass(className.overlay);
	          }
	        },
	        remove: {

	          inlineCSS: function() {
	            module.debug('Removing inline css styles', $style);
	            if($style && $style.length > 0) {
	              $style.remove();
	            }
	          },

	          // ios scroll on html not document
	          ios: function() {
	            $html.removeClass(className.ios);
	          },

	          // context
	          pushed: function() {
	            $context.removeClass(className.pushed);
	          },
	          pushable: function() {
	            $context.removeClass(className.pushable);
	          },

	          // sidebar
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          animating: function() {
	            $module.removeClass(className.animating);
	          },
	          transition: function(transition) {
	            transition = transition || module.get.transition();
	            $module.removeClass(transition);
	          },
	          direction: function(direction) {
	            direction = direction || module.get.direction();
	            $module.removeClass(className[direction]);
	          },
	          visible: function() {
	            $module.removeClass(className.visible);
	          },
	          overlay: function() {
	            $module.removeClass(className.overlay);
	          }
	        },

	        get: {
	          direction: function() {
	            if($module.hasClass(className.top)) {
	              return className.top;
	            }
	            else if($module.hasClass(className.right)) {
	              return className.right;
	            }
	            else if($module.hasClass(className.bottom)) {
	              return className.bottom;
	            }
	            return className.left;
	          },
	          transition: function() {
	            var
	              direction = module.get.direction(),
	              transition
	            ;
	            transition = ( module.is.mobile() )
	              ? (settings.mobileTransition == 'auto')
	                ? settings.defaultTransition.mobile[direction]
	                : settings.mobileTransition
	              : (settings.transition == 'auto')
	                ? settings.defaultTransition.computer[direction]
	                : settings.transition
	            ;
	            module.verbose('Determined transition', transition);
	            return transition;
	          },
	          transitionEvent: function() {
	            var
	              element     = document.createElement('element'),
	              transitions = {
	                'transition'       :'transitionend',
	                'OTransition'      :'oTransitionEnd',
	                'MozTransition'    :'transitionend',
	                'WebkitTransition' :'webkitTransitionEnd'
	              },
	              transition
	            ;
	            for(transition in transitions){
	              if( element.style[transition] !== undefined ){
	                return transitions[transition];
	              }
	            }
	          }
	        },

	        is: {

	          ie: function() {
	            var
	              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),
	              isIE   = ('ActiveXObject' in window)
	            ;
	            return (isIE11 || isIE);
	          },

	          ios: function() {
	            var
	              userAgent      = navigator.userAgent,
	              isIOS          = userAgent.match(regExp.ios),
	              isMobileChrome = userAgent.match(regExp.mobileChrome)
	            ;
	            if(isIOS && !isMobileChrome) {
	              module.verbose('Browser was found to be iOS', userAgent);
	              return true;
	            }
	            else {
	              return false;
	            }
	          },
	          mobile: function() {
	            var
	              userAgent    = navigator.userAgent,
	              isMobile     = userAgent.match(regExp.mobile)
	            ;
	            if(isMobile) {
	              module.verbose('Browser was found to be mobile', userAgent);
	              return true;
	            }
	            else {
	              module.verbose('Browser is not mobile, using regular transition', userAgent);
	              return false;
	            }
	          },
	          hidden: function() {
	            return !module.is.visible();
	          },
	          visible: function() {
	            return $module.hasClass(className.visible);
	          },
	          // alias
	          open: function() {
	            return module.is.visible();
	          },
	          closed: function() {
	            return module.is.hidden();
	          },
	          vertical: function() {
	            return $module.hasClass(className.top);
	          },
	          animating: function() {
	            return $context.hasClass(className.animating);
	          },
	          rtl: function () {
	            if(module.cache.rtl === undefined) {
	              module.cache.rtl = ($module.css('direction') == 'rtl');
	            }
	            return module.cache.rtl;
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      }
	    ;

	    if(methodInvoked) {
	      if(instance === undefined) {
	        module.initialize();
	      }
	      module.invoke(query);
	    }
	    else {
	      if(instance !== undefined) {
	        module.invoke('destroy');
	      }
	      module.initialize();
	    }
	  });

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.sidebar.settings = {

	  name              : 'Sidebar',
	  namespace         : 'sidebar',

	  debug             : false,
	  verbose           : false,
	  performance       : true,

	  transition        : 'auto',
	  mobileTransition  : 'auto',

	  defaultTransition : {
	    computer: {
	      left   : 'uncover',
	      right  : 'uncover',
	      top    : 'overlay',
	      bottom : 'overlay'
	    },
	    mobile: {
	      left   : 'uncover',
	      right  : 'uncover',
	      top    : 'overlay',
	      bottom : 'overlay'
	    }
	  },

	  context           : 'body',
	  exclusive         : false,
	  closable          : true,
	  dimPage           : true,
	  scrollLock        : false,
	  returnScroll      : false,
	  delaySetup        : false,

	  duration          : 500,

	  onChange          : function(){},
	  onShow            : function(){},
	  onHide            : function(){},

	  onHidden          : function(){},
	  onVisible         : function(){},

	  className         : {
	    active    : 'active',
	    animating : 'animating',
	    dimmed    : 'dimmed',
	    ios       : 'ios',
	    pushable  : 'pushable',
	    pushed    : 'pushed',
	    right     : 'right',
	    top       : 'top',
	    left      : 'left',
	    bottom    : 'bottom',
	    visible   : 'visible'
	  },

	  selector: {
	    fixed   : '.fixed',
	    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',
	    pusher  : '.pusher',
	    sidebar : '.ui.sidebar'
	  },

	  regExp: {
	    ios          : /(iPad|iPhone|iPod)/g,
	    mobileChrome : /(CriOS)/g,
	    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g
	  },

	  error   : {
	    method       : 'The method you called is not defined.',
	    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',
	    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',
	    overlay      : 'The overlay setting is no longer supported, use animation: overlay',
	    notFound     : 'There were no elements that matched the specified selector'
	  }

	};


	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Sticky
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.sticky = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings              = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.sticky.settings, parameters)
	          : $.extend({}, $.fn.sticky.settings),

	        className             = settings.className,
	        namespace             = settings.namespace,
	        error                 = settings.error,

	        eventNamespace        = '.' + namespace,
	        moduleNamespace       = 'module-' + namespace,

	        $module               = $(this),
	        $window               = $(window),
	        $scroll               = $(settings.scrollContext),
	        $container,
	        $context,

	        selector              = $module.selector || '',
	        instance              = $module.data(moduleNamespace),

	        requestAnimationFrame = window.requestAnimationFrame
	          || window.mozRequestAnimationFrame
	          || window.webkitRequestAnimationFrame
	          || window.msRequestAnimationFrame
	          || function(callback) { setTimeout(callback, 0); },

	        element         = this,
	        observer,
	        module
	      ;

	      module      = {

	        initialize: function() {

	          module.determineContainer();
	          module.determineContext();
	          module.verbose('Initializing sticky', settings, $container);

	          module.save.positions();
	          module.checkErrors();
	          module.bind.events();

	          if(settings.observeChanges) {
	            module.observeChanges();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous instance');
	          module.reset();
	          if(observer) {
	            observer.disconnect();
	          }
	          $window
	            .off('load' + eventNamespace, module.event.load)
	            .off('resize' + eventNamespace, module.event.resize)
	          ;
	          $scroll
	            .off('scrollchange' + eventNamespace, module.event.scrollchange)
	          ;
	          $module.removeData(moduleNamespace);
	        },

	        observeChanges: function() {
	          var
	            context = $context[0]
	          ;
	          if('MutationObserver' in window) {
	            observer = new MutationObserver(function(mutations) {
	              clearTimeout(module.timer);
	              module.timer = setTimeout(function() {
	                module.verbose('DOM tree modified, updating sticky menu', mutations);
	                module.refresh();
	              }, 100);
	            });
	            observer.observe(element, {
	              childList : true,
	              subtree   : true
	            });
	            observer.observe(context, {
	              childList : true,
	              subtree   : true
	            });
	            module.debug('Setting up mutation observer', observer);
	          }
	        },

	        determineContainer: function() {
	          $container = $module.offsetParent();
	        },

	        determineContext: function() {
	          if(settings.context) {
	            $context = $(settings.context);
	          }
	          else {
	            $context = $container;
	          }
	          if($context.length === 0) {
	            module.error(error.invalidContext, settings.context, $module);
	            return;
	          }
	        },

	        checkErrors: function() {
	          if( module.is.hidden() ) {
	            module.error(error.visible, $module);
	          }
	          if(module.cache.element.height > module.cache.context.height) {
	            module.reset();
	            module.error(error.elementSize, $module);
	            return;
	          }
	        },

	        bind: {
	          events: function() {
	            $window
	              .on('load' + eventNamespace, module.event.load)
	              .on('resize' + eventNamespace, module.event.resize)
	            ;
	            // pub/sub pattern
	            $scroll
	              .off('scroll' + eventNamespace)
	              .on('scroll' + eventNamespace, module.event.scroll)
	              .on('scrollchange' + eventNamespace, module.event.scrollchange)
	            ;
	          }
	        },

	        event: {
	          load: function() {
	            module.verbose('Page contents finished loading');
	            requestAnimationFrame(module.refresh);
	          },
	          resize: function() {
	            module.verbose('Window resized');
	            requestAnimationFrame(module.refresh);
	          },
	          scroll: function() {
	            requestAnimationFrame(function() {
	              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );
	            });
	          },
	          scrollchange: function(event, scrollPosition) {
	            module.stick(scrollPosition);
	            settings.onScroll.call(element);
	          }
	        },

	        refresh: function(hardRefresh) {
	          module.reset();
	          if(!settings.context) {
	            module.determineContext();
	          }
	          if(hardRefresh) {
	            module.determineContainer();
	          }
	          module.save.positions();
	          module.stick();
	          settings.onReposition.call(element);
	        },

	        supports: {
	          sticky: function() {
	            var
	              $element = $('<div/>'),
	              element = $element[0]
	            ;
	            $element.addClass(className.supported);
	            return($element.css('position').match('sticky'));
	          }
	        },

	        save: {
	          lastScroll: function(scroll) {
	            module.lastScroll = scroll;
	          },
	          elementScroll: function(scroll) {
	            module.elementScroll = scroll;
	          },
	          positions: function() {
	            var
	              scrollContext = {
	                height : $scroll.height()
	              },
	              element = {
	                margin: {
	                  top    : parseInt($module.css('margin-top'), 10),
	                  bottom : parseInt($module.css('margin-bottom'), 10),
	                },
	                offset : $module.offset(),
	                width  : $module.outerWidth(),
	                height : $module.outerHeight()
	              },
	              context = {
	                offset : $context.offset(),
	                height : $context.outerHeight()
	              },
	              container = {
	                height: $container.outerHeight()
	              }
	            ;
	            if( !module.is.standardScroll() ) {
	              module.debug('Non-standard scroll. Removing scroll offset from element offset');

	              scrollContext.top  = $scroll.scrollTop();
	              scrollContext.left = $scroll.scrollLeft();

	              element.offset.top  += scrollContext.top;
	              context.offset.top  += scrollContext.top;
	              element.offset.left += scrollContext.left;
	              context.offset.left += scrollContext.left;
	            }
	            module.cache = {
	              fits : ( element.height < scrollContext.height ),
	              scrollContext : {
	                height : scrollContext.height
	              },
	              element: {
	                margin : element.margin,
	                top    : element.offset.top - element.margin.top,
	                left   : element.offset.left,
	                width  : element.width,
	                height : element.height,
	                bottom : element.offset.top + element.height
	              },
	              context: {
	                top           : context.offset.top,
	                height        : context.height,
	                bottom        : context.offset.top + context.height
	              }
	            };
	            module.set.containerSize();
	            module.set.size();
	            module.stick();
	            module.debug('Caching element positions', module.cache);
	          }
	        },

	        get: {
	          direction: function(scroll) {
	            var
	              direction = 'down'
	            ;
	            scroll = scroll || $scroll.scrollTop();
	            if(module.lastScroll !== undefined) {
	              if(module.lastScroll < scroll) {
	                direction = 'down';
	              }
	              else if(module.lastScroll > scroll) {
	                direction = 'up';
	              }
	            }
	            return direction;
	          },
	          scrollChange: function(scroll) {
	            scroll = scroll || $scroll.scrollTop();
	            return (module.lastScroll)
	              ? (scroll - module.lastScroll)
	              : 0
	            ;
	          },
	          currentElementScroll: function() {
	            if(module.elementScroll) {
	              return module.elementScroll;
	            }
	            return ( module.is.top() )
	              ? Math.abs(parseInt($module.css('top'), 10))    || 0
	              : Math.abs(parseInt($module.css('bottom'), 10)) || 0
	            ;
	          },

	          elementScroll: function(scroll) {
	            scroll = scroll || $scroll.scrollTop();
	            var
	              element        = module.cache.element,
	              scrollContext  = module.cache.scrollContext,
	              delta          = module.get.scrollChange(scroll),
	              maxScroll      = (element.height - scrollContext.height + settings.offset),
	              elementScroll  = module.get.currentElementScroll(),
	              possibleScroll = (elementScroll + delta)
	            ;
	            if(module.cache.fits || possibleScroll < 0) {
	              elementScroll = 0;
	            }
	            else if(possibleScroll > maxScroll ) {
	              elementScroll = maxScroll;
	            }
	            else {
	              elementScroll = possibleScroll;
	            }
	            return elementScroll;
	          }
	        },

	        remove: {
	          lastScroll: function() {
	            delete module.lastScroll;
	          },
	          elementScroll: function(scroll) {
	            delete module.elementScroll;
	          },
	          offset: function() {
	            $module.css('margin-top', '');
	          }
	        },

	        set: {
	          offset: function() {
	            module.verbose('Setting offset on element', settings.offset);
	            $module
	              .css('margin-top', settings.offset)
	            ;
	          },
	          containerSize: function() {
	            var
	              tagName = $container.get(0).tagName
	            ;
	            if(tagName === 'HTML' || tagName == 'body') {
	              // this can trigger for too many reasons
	              //module.error(error.container, tagName, $module);
	              module.determineContainer();
	            }
	            else {
	              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {
	                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);
	                $container.css({
	                  height: module.cache.context.height
	                });
	              }
	            }
	          },
	          minimumSize: function() {
	            var
	              element   = module.cache.element
	            ;
	            $container
	              .css('min-height', element.height)
	            ;
	          },
	          scroll: function(scroll) {
	            module.debug('Setting scroll on element', scroll);
	            if(module.elementScroll == scroll) {
	              return;
	            }
	            if( module.is.top() ) {
	              $module
	                .css('bottom', '')
	                .css('top', -scroll)
	              ;
	            }
	            if( module.is.bottom() ) {
	              $module
	                .css('top', '')
	                .css('bottom', scroll)
	              ;
	            }
	          },
	          size: function() {
	            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {
	              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');
	              element.style.setProperty('height', module.cache.element.height + 'px', 'important');
	            }
	          }
	        },

	        is: {
	          standardScroll: function() {
	            return ($scroll[0] == window);
	          },
	          top: function() {
	            return $module.hasClass(className.top);
	          },
	          bottom: function() {
	            return $module.hasClass(className.bottom);
	          },
	          initialPosition: function() {
	            return (!module.is.fixed() && !module.is.bound());
	          },
	          hidden: function() {
	            return (!$module.is(':visible'));
	          },
	          bound: function() {
	            return $module.hasClass(className.bound);
	          },
	          fixed: function() {
	            return $module.hasClass(className.fixed);
	          }
	        },

	        stick: function(scroll) {
	          var
	            cachedPosition = scroll || $scroll.scrollTop(),
	            cache          = module.cache,
	            fits           = cache.fits,
	            element        = cache.element,
	            scrollContext  = cache.scrollContext,
	            context        = cache.context,
	            offset         = (module.is.bottom() && settings.pushing)
	              ? settings.bottomOffset
	              : settings.offset,
	            scroll         = {
	              top    : cachedPosition + offset,
	              bottom : cachedPosition + offset + scrollContext.height
	            },
	            direction      = module.get.direction(scroll.top),
	            elementScroll  = (fits)
	              ? 0
	              : module.get.elementScroll(scroll.top),

	            // shorthand
	            doesntFit      = !fits,
	            elementVisible = (element.height !== 0)
	          ;

	          if(elementVisible) {

	            if( module.is.initialPosition() ) {
	              if(scroll.top >= context.bottom) {
	                module.debug('Initial element position is bottom of container');
	                module.bindBottom();
	              }
	              else if(scroll.top > element.top) {
	                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {
	                  module.debug('Initial element position is bottom of container');
	                  module.bindBottom();
	                }
	                else {
	                  module.debug('Initial element position is fixed');
	                  module.fixTop();
	                }
	              }

	            }
	            else if( module.is.fixed() ) {

	              // currently fixed top
	              if( module.is.top() ) {
	                if( scroll.top <= element.top ) {
	                  module.debug('Fixed element reached top of container');
	                  module.setInitialPosition();
	                }
	                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {
	                  module.debug('Fixed element reached bottom of container');
	                  module.bindBottom();
	                }
	                // scroll element if larger than screen
	                else if(doesntFit) {
	                  module.set.scroll(elementScroll);
	                  module.save.lastScroll(scroll.top);
	                  module.save.elementScroll(elementScroll);
	                }
	              }

	              // currently fixed bottom
	              else if(module.is.bottom() ) {

	                // top edge
	                if( (scroll.bottom - element.height) <= element.top) {
	                  module.debug('Bottom fixed rail has reached top of container');
	                  module.setInitialPosition();
	                }
	                // bottom edge
	                else if(scroll.bottom >= context.bottom) {
	                  module.debug('Bottom fixed rail has reached bottom of container');
	                  module.bindBottom();
	                }
	                // scroll element if larger than screen
	                else if(doesntFit) {
	                  module.set.scroll(elementScroll);
	                  module.save.lastScroll(scroll.top);
	                  module.save.elementScroll(elementScroll);
	                }

	              }
	            }
	            else if( module.is.bottom() ) {
	              if( scroll.top <= element.top ) {
	                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');
	                module.setInitialPosition();
	              }
	              else {
	                if(settings.pushing) {
	                  if(module.is.bound() && scroll.bottom <= context.bottom ) {
	                    module.debug('Fixing bottom attached element to bottom of browser.');
	                    module.fixBottom();
	                  }
	                }
	                else {
	                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {
	                    module.debug('Fixing bottom attached element to top of browser.');
	                    module.fixTop();
	                  }
	                }
	              }
	            }
	          }
	        },

	        bindTop: function() {
	          module.debug('Binding element to top of parent container');
	          module.remove.offset();
	          $module
	            .css({
	              left         : '',
	              top          : '',
	              marginBottom : ''
	            })
	            .removeClass(className.fixed)
	            .removeClass(className.bottom)
	            .addClass(className.bound)
	            .addClass(className.top)
	          ;
	          settings.onTop.call(element);
	          settings.onUnstick.call(element);
	        },
	        bindBottom: function() {
	          module.debug('Binding element to bottom of parent container');
	          module.remove.offset();
	          $module
	            .css({
	              left         : '',
	              top          : ''
	            })
	            .removeClass(className.fixed)
	            .removeClass(className.top)
	            .addClass(className.bound)
	            .addClass(className.bottom)
	          ;
	          settings.onBottom.call(element);
	          settings.onUnstick.call(element);
	        },

	        setInitialPosition: function() {
	          module.debug('Returning to initial position');
	          module.unfix();
	          module.unbind();
	        },


	        fixTop: function() {
	          module.debug('Fixing element to top of page');
	          module.set.minimumSize();
	          module.set.offset();
	          $module
	            .css({
	              left         : module.cache.element.left,
	              bottom       : '',
	              marginBottom : ''
	            })
	            .removeClass(className.bound)
	            .removeClass(className.bottom)
	            .addClass(className.fixed)
	            .addClass(className.top)
	          ;
	          settings.onStick.call(element);
	        },

	        fixBottom: function() {
	          module.debug('Sticking element to bottom of page');
	          module.set.minimumSize();
	          module.set.offset();
	          $module
	            .css({
	              left         : module.cache.element.left,
	              bottom       : '',
	              marginBottom : ''
	            })
	            .removeClass(className.bound)
	            .removeClass(className.top)
	            .addClass(className.fixed)
	            .addClass(className.bottom)
	          ;
	          settings.onStick.call(element);
	        },

	        unbind: function() {
	          if( module.is.bound() ) {
	            module.debug('Removing container bound position on element');
	            module.remove.offset();
	            $module
	              .removeClass(className.bound)
	              .removeClass(className.top)
	              .removeClass(className.bottom)
	            ;
	          }
	        },

	        unfix: function() {
	          if( module.is.fixed() ) {
	            module.debug('Removing fixed position on element');
	            module.remove.offset();
	            $module
	              .removeClass(className.fixed)
	              .removeClass(className.top)
	              .removeClass(className.bottom)
	            ;
	            settings.onUnstick.call(element);
	          }
	        },

	        reset: function() {
	          module.debug('Reseting elements position');
	          module.unbind();
	          module.unfix();
	          module.resetCSS();
	          module.remove.offset();
	          module.remove.lastScroll();
	        },

	        resetCSS: function() {
	          $module
	            .css({
	              width  : '',
	              height : ''
	            })
	          ;
	          $container
	            .css({
	              height: ''
	            })
	          ;
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 0);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.sticky.settings = {

	  name           : 'Sticky',
	  namespace      : 'sticky',

	  debug          : false,
	  verbose        : true,
	  performance    : true,

	  // whether to stick in the opposite direction on scroll up
	  pushing        : false,

	  context        : false,

	  // Context to watch scroll events
	  scrollContext  : window,

	  // Offset to adjust scroll
	  offset         : 0,

	  // Offset to adjust scroll when attached to bottom of screen
	  bottomOffset   : 0,

	  jitter         : 5, // will only set container height if difference between context and container is larger than this number

	  // Whether to automatically observe changes with Mutation Observers
	  observeChanges : false,

	  // Called when position is recalculated
	  onReposition   : function(){},

	  // Called on each scroll
	  onScroll       : function(){},

	  // Called when element is stuck to viewport
	  onStick        : function(){},

	  // Called when element is unstuck from viewport
	  onUnstick      : function(){},

	  // Called when element reaches top of context
	  onTop          : function(){},

	  // Called when element reaches bottom of context
	  onBottom       : function(){},

	  error         : {
	    container      : 'Sticky element must be inside a relative container',
	    visible        : 'Element is hidden, you must call refresh after element becomes visible',
	    method         : 'The method you called is not defined.',
	    invalidContext : 'Context specified does not exist',
	    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'
	  },

	  className : {
	    bound     : 'bound',
	    fixed     : 'fixed',
	    supported : 'native',
	    top       : 'top',
	    bottom    : 'bottom'
	  }

	};

	})( jQuery, window, document );
	/*!
	 * # Semantic UI 2.1.7 - Tab
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	"use strict";

	$.fn.tab = function(parameters) {

	  var
	    // use window context if none specified
	    $allModules     = $.isFunction(this)
	        ? $(window)
	        : $(this),

	    moduleSelector  = $allModules.selector || '',
	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    initializedHistory = false,
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var

	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.tab.settings, parameters)
	          : $.extend({}, $.fn.tab.settings),

	        className       = settings.className,
	        metadata        = settings.metadata,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + settings.namespace,
	        moduleNamespace = 'module-' + settings.namespace,

	        $module         = $(this),
	        $context,
	        $tabs,

	        cache           = {},
	        firstLoad       = true,
	        recursionDepth  = 0,
	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        activeTabPath,
	        parameterArray,
	        module,

	        historyEvent

	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing tab menu item', $module);
	          module.fix.callbacks();
	          module.determineTabs();

	          module.debug('Determining tabs', settings.context, $tabs);
	          // set up automatic routing
	          if(settings.auto) {
	            module.set.auto();
	          }
	          module.bind.events();

	          if(settings.history && !initializedHistory) {
	            module.initializeHistory();
	            initializedHistory = true;
	          }

	          module.instantiate();
	        },

	        instantiate: function () {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.debug('Destroying tabs', $module);
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        bind: {
	          events: function() {
	            // if using $.tab don't add events
	            if( !$.isWindow( element ) ) {
	              module.debug('Attaching tab activation events to element', $module);
	              $module
	                .on('click' + eventNamespace, module.event.click)
	              ;
	            }
	          }
	        },

	        determineTabs: function() {
	          var
	            $reference
	          ;

	          // determine tab context
	          if(settings.context === 'parent') {
	            if($module.closest(selector.ui).length > 0) {
	              $reference = $module.closest(selector.ui);
	              module.verbose('Using closest UI element as parent', $reference);
	            }
	            else {
	              $reference = $module;
	            }
	            $context = $reference.parent();
	            module.verbose('Determined parent element for creating context', $context);
	          }
	          else if(settings.context) {
	            $context = $(settings.context);
	            module.verbose('Using selector for tab context', settings.context, $context);
	          }
	          else {
	            $context = $('body');
	          }
	          // find tabs
	          if(settings.childrenOnly) {
	            $tabs = $context.children(selector.tabs);
	            module.debug('Searching tab context children for tabs', $context, $tabs);
	          }
	          else {
	            $tabs = $context.find(selector.tabs);
	            module.debug('Searching tab context for tabs', $context, $tabs);
	          }
	        },

	        fix: {
	          callbacks: function() {
	            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {
	              if(parameters.onTabLoad) {
	                parameters.onLoad = parameters.onTabLoad;
	                delete parameters.onTabLoad;
	                module.error(error.legacyLoad, parameters.onLoad);
	              }
	              if(parameters.onTabInit) {
	                parameters.onFirstLoad = parameters.onTabInit;
	                delete parameters.onTabInit;
	                module.error(error.legacyInit, parameters.onFirstLoad);
	              }
	              settings = $.extend(true, {}, $.fn.tab.settings, parameters);
	            }
	          }
	        },

	        initializeHistory: function() {
	          module.debug('Initializing page state');
	          if( $.address === undefined ) {
	            module.error(error.state);
	            return false;
	          }
	          else {
	            if(settings.historyType == 'state') {
	              module.debug('Using HTML5 to manage state');
	              if(settings.path !== false) {
	                $.address
	                  .history(true)
	                  .state(settings.path)
	                ;
	              }
	              else {
	                module.error(error.path);
	                return false;
	              }
	            }
	            $.address
	              .bind('change', module.event.history.change)
	            ;
	          }
	        },

	        event: {
	          click: function(event) {
	            var
	              tabPath = $(this).data(metadata.tab)
	            ;
	            if(tabPath !== undefined) {
	              if(settings.history) {
	                module.verbose('Updating page state', event);
	                $.address.value(tabPath);
	              }
	              else {
	                module.verbose('Changing tab', event);
	                module.changeTab(tabPath);
	              }
	              event.preventDefault();
	            }
	            else {
	              module.debug('No tab specified');
	            }
	          },
	          history: {
	            change: function(event) {
	              var
	                tabPath   = event.pathNames.join('/') || module.get.initialPath(),
	                pageTitle = settings.templates.determineTitle(tabPath) || false
	              ;
	              module.performance.display();
	              module.debug('History change event', tabPath, event);
	              historyEvent = event;
	              if(tabPath !== undefined) {
	                module.changeTab(tabPath);
	              }
	              if(pageTitle) {
	                $.address.title(pageTitle);
	              }
	            }
	          }
	        },

	        refresh: function() {
	          if(activeTabPath) {
	            module.debug('Refreshing tab', activeTabPath);
	            module.changeTab(activeTabPath);
	          }
	        },

	        cache: {

	          read: function(cacheKey) {
	            return (cacheKey !== undefined)
	              ? cache[cacheKey]
	              : false
	            ;
	          },
	          add: function(cacheKey, content) {
	            cacheKey = cacheKey || activeTabPath;
	            module.debug('Adding cached content for', cacheKey);
	            cache[cacheKey] = content;
	          },
	          remove: function(cacheKey) {
	            cacheKey = cacheKey || activeTabPath;
	            module.debug('Removing cached content for', cacheKey);
	            delete cache[cacheKey];
	          }
	        },

	        set: {
	          auto: function() {
	            var
	              url = (typeof settings.path == 'string')
	                ? settings.path.replace(/\/$/, '') + '/{$tab}'
	                : '/{$tab}'
	            ;
	            module.verbose('Setting up automatic tab retrieval from server', url);
	            if($.isPlainObject(settings.apiSettings)) {
	              settings.apiSettings.url = url;
	            }
	            else {
	              settings.apiSettings = {
	                url: url
	              };
	            }
	          },
	          loading: function(tabPath) {
	            var
	              $tab      = module.get.tabElement(tabPath),
	              isLoading = $tab.hasClass(className.loading)
	            ;
	            if(!isLoading) {
	              module.verbose('Setting loading state for', $tab);
	              $tab
	                .addClass(className.loading)
	                .siblings($tabs)
	                  .removeClass(className.active + ' ' + className.loading)
	              ;
	              if($tab.length > 0) {
	                settings.onRequest.call($tab[0], tabPath);
	              }
	            }
	          },
	          state: function(state) {
	            $.address.value(state);
	          }
	        },

	        changeTab: function(tabPath) {
	          var
	            pushStateAvailable = (window.history && window.history.pushState),
	            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),
	            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),
	            // only add default path if not remote content
	            pathArray = (remoteContent && !shouldIgnoreLoad)
	              ? module.utilities.pathToArray(tabPath)
	              : module.get.defaultPathArray(tabPath)
	          ;
	          tabPath = module.utilities.arrayToPath(pathArray);
	          $.each(pathArray, function(index, tab) {
	            var
	              currentPathArray   = pathArray.slice(0, index + 1),
	              currentPath        = module.utilities.arrayToPath(currentPathArray),

	              isTab              = module.is.tab(currentPath),
	              isLastIndex        = (index + 1 == pathArray.length),

	              $tab               = module.get.tabElement(currentPath),
	              $anchor,
	              nextPathArray,
	              nextPath,
	              isLastTab
	            ;
	            module.verbose('Looking for tab', tab);
	            if(isTab) {
	              module.verbose('Tab was found', tab);
	              // scope up
	              activeTabPath  = currentPath;
	              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);

	              if(isLastIndex) {
	                isLastTab = true;
	              }
	              else {
	                nextPathArray = pathArray.slice(0, index + 2);
	                nextPath      = module.utilities.arrayToPath(nextPathArray);
	                isLastTab     = ( !module.is.tab(nextPath) );
	                if(isLastTab) {
	                  module.verbose('Tab parameters found', nextPathArray);
	                }
	              }
	              if(isLastTab && remoteContent) {
	                if(!shouldIgnoreLoad) {
	                  module.activate.navigation(currentPath);
	                  module.fetch.content(currentPath, tabPath);
	                }
	                else {
	                  module.debug('Ignoring remote content on first tab load', currentPath);
	                  firstLoad = false;
	                  module.cache.add(tabPath, $tab.html());
	                  module.activate.all(currentPath);
	                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	                }
	                return false;
	              }
	              else {
	                module.debug('Opened local tab', currentPath);
	                module.activate.all(currentPath);
	                if( !module.cache.read(currentPath) ) {
	                  module.cache.add(currentPath, true);
	                  module.debug('First time tab loaded calling tab init');
	                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	                }
	                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	              }

	            }
	            else if(tabPath.search('/') == -1 && tabPath !== '') {
	              // look for in page anchor
	              $anchor     = $('#' + tabPath + ', a[name="' + tabPath + '"]');
	              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);
	              $tab        = module.get.tabElement(currentPath);
	              // if anchor exists use parent tab
	              if($anchor && $anchor.length > 0 && currentPath) {
	                module.debug('Anchor link used, opening parent tab', $tab, $anchor);
	                if( !$tab.hasClass(className.active) ) {
	                  setTimeout(function() {
	                    module.scrollTo($anchor);
	                  }, 0);
	                }
	                module.activate.all(currentPath);
	                if( !module.cache.read(currentPath) ) {
	                  module.cache.add(currentPath, true);
	                  module.debug('First time tab loaded calling tab init');
	                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	                }
	                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);
	                return false;
	              }
	            }
	            else {
	              module.error(error.missingTab, $module, $context, currentPath);
	              return false;
	            }
	          });
	        },

	        scrollTo: function($element) {
	          var
	            scrollOffset = ($element && $element.length > 0)
	              ? $element.offset().top
	              : false
	          ;
	          if(scrollOffset !== false) {
	            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);
	            $(document).scrollTop(scrollOffset);
	          }
	        },

	        update: {
	          content: function(tabPath, html, evaluateScripts) {
	            var
	              $tab = module.get.tabElement(tabPath),
	              tab  = $tab[0]
	            ;
	            evaluateScripts = (evaluateScripts !== undefined)
	              ? evaluateScripts
	              : settings.evaluateScripts
	            ;
	            if(evaluateScripts) {
	              module.debug('Updating HTML and evaluating inline scripts', tabPath, html);
	              $tab.html(html);
	            }
	            else {
	              module.debug('Updating HTML', tabPath, html);
	              tab.innerHTML = html;
	            }
	          }
	        },

	        fetch: {

	          content: function(tabPath, fullTabPath) {
	            var
	              $tab        = module.get.tabElement(tabPath),
	              apiSettings = {
	                dataType         : 'html',
	                encodeParameters : false,
	                on               : 'now',
	                cache            : settings.alwaysRefresh,
	                headers          : {
	                  'X-Remote': true
	                },
	                onSuccess : function(response) {
	                  module.cache.add(fullTabPath, response);
	                  module.update.content(tabPath, response);
	                  if(tabPath == activeTabPath) {
	                    module.debug('Content loaded', tabPath);
	                    module.activate.tab(tabPath);
	                  }
	                  else {
	                    module.debug('Content loaded in background', tabPath);
	                  }
	                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);
	                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);
	                },
	                urlData: {
	                  tab: fullTabPath
	                }
	              },
	              request         = $tab.api('get request') || false,
	              existingRequest = ( request && request.state() === 'pending' ),
	              requestSettings,
	              cachedContent
	            ;

	            fullTabPath   = fullTabPath || tabPath;
	            cachedContent = module.cache.read(fullTabPath);


	            if(settings.cache && cachedContent) {
	              module.activate.tab(tabPath);
	              module.debug('Adding cached content', fullTabPath);
	              if(settings.evaluateScripts == 'once') {
	                module.update.content(tabPath, cachedContent, false);
	              }
	              else {
	                module.update.content(tabPath, cachedContent);
	              }
	              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);
	            }
	            else if(existingRequest) {
	              module.set.loading(tabPath);
	              module.debug('Content is already loading', fullTabPath);
	            }
	            else if($.api !== undefined) {
	              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);
	              module.debug('Retrieving remote content', fullTabPath, requestSettings);
	              module.set.loading(tabPath);
	              $tab.api(requestSettings);
	            }
	            else {
	              module.error(error.api);
	            }
	          }
	        },

	        activate: {
	          all: function(tabPath) {
	            module.activate.tab(tabPath);
	            module.activate.navigation(tabPath);
	          },
	          tab: function(tabPath) {
	            var
	              $tab     = module.get.tabElement(tabPath),
	              isActive = $tab.hasClass(className.active)
	            ;
	            module.verbose('Showing tab content for', $tab);
	            if(!isActive) {
	              $tab
	                .addClass(className.active)
	                .siblings($tabs)
	                  .removeClass(className.active + ' ' + className.loading)
	              ;
	              if($tab.length > 0) {
	                settings.onVisible.call($tab[0], tabPath);
	              }
	            }
	          },
	          navigation: function(tabPath) {
	            var
	              $navigation = module.get.navElement(tabPath),
	              isActive    = $navigation.hasClass(className.active)
	            ;
	            module.verbose('Activating tab navigation for', $navigation, tabPath);
	            if(!isActive) {
	              $navigation
	                .addClass(className.active)
	                .siblings($allModules)
	                  .removeClass(className.active + ' ' + className.loading)
	              ;
	            }
	          }
	        },

	        deactivate: {
	          all: function() {
	            module.deactivate.navigation();
	            module.deactivate.tabs();
	          },
	          navigation: function() {
	            $allModules
	              .removeClass(className.active)
	            ;
	          },
	          tabs: function() {
	            $tabs
	              .removeClass(className.active + ' ' + className.loading)
	            ;
	          }
	        },

	        is: {
	          tab: function(tabName) {
	            return (tabName !== undefined)
	              ? ( module.get.tabElement(tabName).length > 0 )
	              : false
	            ;
	          }
	        },

	        get: {
	          initialPath: function() {
	            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);
	          },
	          path: function() {
	            return $.address.value();
	          },
	          // adds default tabs to tab path
	          defaultPathArray: function(tabPath) {
	            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );
	          },
	          defaultPath: function(tabPath) {
	            var
	              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^="' + tabPath + '/"]').eq(0),
	              defaultTab  = $defaultNav.data(metadata.tab) || false
	            ;
	            if( defaultTab ) {
	              module.debug('Found default tab', defaultTab);
	              if(recursionDepth < settings.maxDepth) {
	                recursionDepth++;
	                return module.get.defaultPath(defaultTab);
	              }
	              module.error(error.recursion);
	            }
	            else {
	              module.debug('No default tabs found for', tabPath, $tabs);
	            }
	            recursionDepth = 0;
	            return tabPath;
	          },
	          navElement: function(tabPath) {
	            tabPath = tabPath || activeTabPath;
	            return $allModules.filter('[data-' + metadata.tab + '="' + tabPath + '"]');
	          },
	          tabElement: function(tabPath) {
	            var
	              $fullPathTab,
	              $simplePathTab,
	              tabPathArray,
	              lastTab
	            ;
	            tabPath        = tabPath || activeTabPath;
	            tabPathArray   = module.utilities.pathToArray(tabPath);
	            lastTab        = module.utilities.last(tabPathArray);
	            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '="' + tabPath + '"]');
	            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '="' + lastTab + '"]');
	            return ($fullPathTab.length > 0)
	              ? $fullPathTab
	              : $simplePathTab
	            ;
	          },
	          tab: function() {
	            return activeTabPath;
	          }
	        },

	        utilities: {
	          filterArray: function(keepArray, removeArray) {
	            return $.grep(keepArray, function(keepValue) {
	              return ( $.inArray(keepValue, removeArray) == -1);
	            });
	          },
	          last: function(array) {
	            return $.isArray(array)
	              ? array[ array.length - 1]
	              : false
	            ;
	          },
	          pathToArray: function(pathName) {
	            if(pathName === undefined) {
	              pathName = activeTabPath;
	            }
	            return typeof pathName == 'string'
	              ? pathName.split('/')
	              : [pathName]
	            ;
	          },
	          arrayToPath: function(pathArray) {
	            return $.isArray(pathArray)
	              ? pathArray.join('/')
	              : false
	            ;
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;

	};

	// shortcut for tabbed content with no defined navigation
	$.tab = function() {
	  $(window).tab.apply(this, arguments);
	};

	$.fn.tab.settings = {

	  name            : 'Tab',
	  namespace       : 'tab',

	  debug           : false,
	  verbose         : false,
	  performance     : true,

	  auto            : false,  // uses pjax style endpoints fetching content from same url with remote-content headers
	  history         : false,  // use browser history
	  historyType     : 'hash', // #/ or html5 state
	  path            : false,  // base path of url

	  context         : false,  // specify a context that tabs must appear inside
	  childrenOnly    : false,  // use only tabs that are children of context
	  maxDepth        : 25,     // max depth a tab can be nested

	  alwaysRefresh   : false,  // load tab content new every tab click
	  cache           : true,   // cache the content requests to pull locally
	  ignoreFirstLoad : false,  // don't load remote content on first load

	  apiSettings     : false,  // settings for api call
	  evaluateScripts : 'once', // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content

	  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded
	  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load
	  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible
	  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content

	  templates    : {
	    determineTitle: function(tabArray) {} // returns page title for path
	  },

	  error: {
	    api        : 'You attempted to load content without API module',
	    method     : 'The method you called is not defined',
	    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',
	    noContent  : 'The tab you specified is missing a content url.',
	    path       : 'History enabled, but no path was specified',
	    recursion  : 'Max recursive depth reached',
	    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',
	    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',
	    state      : 'History requires Asual\'s Address library <https://github.com/asual/jquery-address>'
	  },

	  metadata : {
	    tab    : 'tab',
	    loaded : 'loaded',
	    promise: 'promise'
	  },

	  className   : {
	    loading : 'loading',
	    active  : 'active'
	  },

	  selector    : {
	    tabs : '.ui.tab',
	    ui   : '.ui'
	  }

	};

	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Transition
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.transition = function() {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    moduleArguments = arguments,
	    query           = moduleArguments[0],
	    queryArguments  = [].slice.call(arguments, 1),
	    methodInvoked   = (typeof query === 'string'),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;
	  $allModules
	    .each(function(index) {
	      var
	        $module  = $(this),
	        element  = this,

	        // set at run time
	        settings,
	        instance,

	        error,
	        className,
	        metadata,
	        animationEnd,
	        animationName,

	        namespace,
	        moduleNamespace,
	        eventNamespace,
	        module
	      ;

	      module = {

	        initialize: function() {

	          // get full settings
	          settings        = module.get.settings.apply(element, moduleArguments);

	          // shorthand
	          className       = settings.className;
	          error           = settings.error;
	          metadata        = settings.metadata;

	          // define namespace
	          eventNamespace  = '.' + settings.namespace;
	          moduleNamespace = 'module-' + settings.namespace;
	          instance        = $module.data(moduleNamespace) || module;

	          // get vendor specific events
	          animationEnd    = module.get.animationEndEvent();

	          if(methodInvoked) {
	            methodInvoked = module.invoke(query);
	          }

	          // method not invoked, lets run an animation
	          if(methodInvoked === false) {
	            module.verbose('Converted arguments into settings object', settings);
	            if(settings.interval) {
	              module.delay(settings.animate);
	            }
	            else  {
	              module.animate();
	            }
	            module.instantiate();
	          }
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', element);
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing display type on next animation');
	          delete module.displayType;
	        },

	        forceRepaint: function() {
	          module.verbose('Forcing element repaint');
	          var
	            $parentElement = $module.parent(),
	            $nextElement = $module.next()
	          ;
	          if($nextElement.length === 0) {
	            $module.detach().appendTo($parentElement);
	          }
	          else {
	            $module.detach().insertBefore($nextElement);
	          }
	        },

	        repaint: function() {
	          module.verbose('Repainting element');
	          var
	            fakeAssignment = element.offsetWidth
	          ;
	        },

	        delay: function(interval) {
	          var
	            direction = module.get.animationDirection(),
	            shouldReverse,
	            delay
	          ;
	          if(!direction) {
	            direction = module.can.transition()
	              ? module.get.direction()
	              : 'static'
	            ;
	          }
	          interval = (interval !== undefined)
	            ? interval
	            : settings.interval
	          ;
	          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);
	          delay = (shouldReverse || settings.reverse == true)
	            ? ($allModules.length - index) * settings.interval
	            : index * settings.interval
	          ;
	          module.debug('Delaying animation by', delay);
	          setTimeout(module.animate, delay);
	        },

	        animate: function(overrideSettings) {
	          settings = overrideSettings || settings;
	          if(!module.is.supported()) {
	            module.error(error.support);
	            return false;
	          }
	          module.debug('Preparing animation', settings.animation);
	          if(module.is.animating()) {
	            if(settings.queue) {
	              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {
	                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);
	              }
	              else {
	                module.queue(settings.animation);
	              }
	              return false;
	            }
	            else if(!settings.allowRepeats && module.is.occurring()) {
	              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);
	              return false;
	            }
	            else {
	              module.debug('New animation started, completing previous early', settings.animation);
	              instance.complete();
	            }
	          }
	          if( module.can.animate() ) {
	            module.set.animating(settings.animation);
	          }
	          else {
	            module.error(error.noAnimation, settings.animation, element);
	          }
	        },

	        reset: function() {
	          module.debug('Resetting animation to beginning conditions');
	          module.remove.animationCallbacks();
	          module.restore.conditions();
	          module.remove.animating();
	        },

	        queue: function(animation) {
	          module.debug('Queueing animation of', animation);
	          module.queuing = true;
	          $module
	            .one(animationEnd + '.queue' + eventNamespace, function() {
	              module.queuing = false;
	              module.repaint();
	              module.animate.apply(this, settings);
	            })
	          ;
	        },

	        complete: function (event) {
	          module.debug('Animation complete', settings.animation);
	          module.remove.completeCallback();
	          module.remove.failSafe();
	          if(!module.is.looping()) {
	            if( module.is.outward() ) {
	              module.verbose('Animation is outward, hiding element');
	              module.restore.conditions();
	              module.hide();
	            }
	            else if( module.is.inward() ) {
	              module.verbose('Animation is outward, showing element');
	              module.restore.conditions();
	              module.show();
	            }
	            else {
	              module.verbose('Static animation completed');
	              module.restore.conditions();
	              settings.onComplete.call(element);
	            }
	          }
	        },

	        force: {
	          visible: function() {
	            var
	              style          = $module.attr('style'),
	              userStyle      = module.get.userStyle(),
	              displayType    = module.get.displayType(),
	              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',
	              currentDisplay = $module.css('display'),
	              emptyStyle     = (style === undefined || style === '')
	            ;
	            if(currentDisplay !== displayType) {
	              module.verbose('Overriding default display to show element', displayType);
	              $module
	                .attr('style', overrideStyle)
	              ;
	            }
	            else if(emptyStyle) {
	              $module.removeAttr('style');
	            }
	          },
	          hidden: function() {
	            var
	              style          = $module.attr('style'),
	              currentDisplay = $module.css('display'),
	              emptyStyle     = (style === undefined || style === '')
	            ;
	            if(currentDisplay !== 'none' && !module.is.hidden()) {
	              module.verbose('Overriding default display to hide element');
	              $module
	                .css('display', 'none')
	              ;
	            }
	            else if(emptyStyle) {
	              $module
	                .removeAttr('style')
	              ;
	            }
	          }
	        },

	        has: {
	          direction: function(animation) {
	            var
	              hasDirection = false
	            ;
	            animation = animation || settings.animation;
	            if(typeof animation === 'string') {
	              animation = animation.split(' ');
	              $.each(animation, function(index, word){
	                if(word === className.inward || word === className.outward) {
	                  hasDirection = true;
	                }
	              });
	            }
	            return hasDirection;
	          },
	          inlineDisplay: function() {
	            var
	              style = $module.attr('style') || ''
	            ;
	            return $.isArray(style.match(/display.*?;/, ''));
	          }
	        },

	        set: {
	          animating: function(animation) {
	            var
	              animationClass,
	              direction
	            ;
	            // remove previous callbacks
	            module.remove.completeCallback();

	            // determine exact animation
	            animation      = animation || settings.animation;
	            animationClass = module.get.animationClass(animation);

	            // save animation class in cache to restore class names
	            module.save.animation(animationClass);

	            // override display if necessary so animation appears visibly
	            module.force.visible();

	            module.remove.hidden();
	            module.remove.direction();

	            module.start.animation(animationClass);

	          },
	          duration: function(animationName, duration) {
	            duration = duration || settings.duration;
	            duration = (typeof duration == 'number')
	              ? duration + 'ms'
	              : duration
	            ;
	            if(duration || duration === 0) {
	              module.verbose('Setting animation duration', duration);
	              $module
	                .css({
	                  'animation-duration':  duration
	                })
	              ;
	            }
	          },
	          direction: function(direction) {
	            direction = direction || module.get.direction();
	            if(direction == className.inward) {
	              module.set.inward();
	            }
	            else {
	              module.set.outward();
	            }
	          },
	          looping: function() {
	            module.debug('Transition set to loop');
	            $module
	              .addClass(className.looping)
	            ;
	          },
	          hidden: function() {
	            $module
	              .addClass(className.transition)
	              .addClass(className.hidden)
	            ;
	          },
	          inward: function() {
	            module.debug('Setting direction to inward');
	            $module
	              .removeClass(className.outward)
	              .addClass(className.inward)
	            ;
	          },
	          outward: function() {
	            module.debug('Setting direction to outward');
	            $module
	              .removeClass(className.inward)
	              .addClass(className.outward)
	            ;
	          },
	          visible: function() {
	            $module
	              .addClass(className.transition)
	              .addClass(className.visible)
	            ;
	          }
	        },

	        start: {
	          animation: function(animationClass) {
	            animationClass = animationClass || module.get.animationClass();
	            module.debug('Starting tween', animationClass);
	            $module
	              .addClass(animationClass)
	              .one(animationEnd + '.complete' + eventNamespace, module.complete)
	            ;
	            if(settings.useFailSafe) {
	              module.add.failSafe();
	            }
	            module.set.duration(settings.duration);
	            settings.onStart.call(element);
	          }
	        },

	        save: {
	          animation: function(animation) {
	            if(!module.cache) {
	              module.cache = {};
	            }
	            module.cache.animation = animation;
	          },
	          displayType: function(displayType) {
	            if(displayType !== 'none') {
	              $module.data(metadata.displayType, displayType);
	            }
	          },
	          transitionExists: function(animation, exists) {
	            $.fn.transition.exists[animation] = exists;
	            module.verbose('Saving existence of transition', animation, exists);
	          }
	        },

	        restore: {
	          conditions: function() {
	            var
	              animation = module.get.currentAnimation()
	            ;
	            if(animation) {
	              $module
	                .removeClass(animation)
	              ;
	              module.verbose('Removing animation class', module.cache);
	            }
	            module.remove.duration();
	          }
	        },

	        add: {
	          failSafe: function() {
	            var
	              duration = module.get.duration()
	            ;
	            module.timer = setTimeout(function() {
	              $module.triggerHandler(animationEnd);
	            }, duration + settings.failSafeDelay);
	            module.verbose('Adding fail safe timer', module.timer);
	          }
	        },

	        remove: {
	          animating: function() {
	            $module.removeClass(className.animating);
	          },
	          animationCallbacks: function() {
	            module.remove.queueCallback();
	            module.remove.completeCallback();
	          },
	          queueCallback: function() {
	            $module.off('.queue' + eventNamespace);
	          },
	          completeCallback: function() {
	            $module.off('.complete' + eventNamespace);
	          },
	          display: function() {
	            $module.css('display', '');
	          },
	          direction: function() {
	            $module
	              .removeClass(className.inward)
	              .removeClass(className.outward)
	            ;
	          },
	          duration: function() {
	            $module
	              .css('animation-duration', '')
	            ;
	          },
	          failSafe: function() {
	            module.verbose('Removing fail safe timer', module.timer);
	            if(module.timer) {
	              clearTimeout(module.timer);
	            }
	          },
	          hidden: function() {
	            $module.removeClass(className.hidden);
	          },
	          visible: function() {
	            $module.removeClass(className.visible);
	          },
	          looping: function() {
	            module.debug('Transitions are no longer looping');
	            if( module.is.looping() ) {
	              module.reset();
	              $module
	                .removeClass(className.looping)
	              ;
	            }
	          },
	          transition: function() {
	            $module
	              .removeClass(className.visible)
	              .removeClass(className.hidden)
	            ;
	          }
	        },
	        get: {
	          settings: function(animation, duration, onComplete) {
	            // single settings object
	            if(typeof animation == 'object') {
	              return $.extend(true, {}, $.fn.transition.settings, animation);
	            }
	            // all arguments provided
	            else if(typeof onComplete == 'function') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation  : animation,
	                onComplete : onComplete,
	                duration   : duration
	              });
	            }
	            // only duration provided
	            else if(typeof duration == 'string' || typeof duration == 'number') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation,
	                duration  : duration
	              });
	            }
	            // duration is actually settings object
	            else if(typeof duration == 'object') {
	              return $.extend({}, $.fn.transition.settings, duration, {
	                animation : animation
	              });
	            }
	            // duration is actually callback
	            else if(typeof duration == 'function') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation  : animation,
	                onComplete : duration
	              });
	            }
	            // only animation provided
	            else {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation
	              });
	            }
	            return $.fn.transition.settings;
	          },
	          animationClass: function(animation) {
	            var
	              animationClass = animation || settings.animation,
	              directionClass = (module.can.transition() && !module.has.direction())
	                ? module.get.direction() + ' '
	                : ''
	            ;
	            return className.animating + ' '
	              + className.transition + ' '
	              + directionClass
	              + animationClass
	            ;
	          },
	          currentAnimation: function() {
	            return (module.cache && module.cache.animation !== undefined)
	              ? module.cache.animation
	              : false
	            ;
	          },
	          currentDirection: function() {
	            return module.is.inward()
	              ? className.inward
	              : className.outward
	            ;
	          },
	          direction: function() {
	            return module.is.hidden() || !module.is.visible()
	              ? className.inward
	              : className.outward
	            ;
	          },
	          animationDirection: function(animation) {
	            var
	              direction
	            ;
	            animation = animation || settings.animation;
	            if(typeof animation === 'string') {
	              animation = animation.split(' ');
	              // search animation name for out/in class
	              $.each(animation, function(index, word){
	                if(word === className.inward) {
	                  direction = className.inward;
	                }
	                else if(word === className.outward) {
	                  direction = className.outward;
	                }
	              });
	            }
	            // return found direction
	            if(direction) {
	              return direction;
	            }
	            return false;
	          },
	          duration: function(duration) {
	            duration = duration || settings.duration;
	            if(duration === false) {
	              duration = $module.css('animation-duration') || 0;
	            }
	            return (typeof duration === 'string')
	              ? (duration.indexOf('ms') > -1)
	                ? parseFloat(duration)
	                : parseFloat(duration) * 1000
	              : duration
	            ;
	          },
	          displayType: function() {
	            if(settings.displayType) {
	              return settings.displayType;
	            }
	            if($module.data(metadata.displayType) === undefined) {
	              // create fake element to determine display state
	              module.can.transition(true);
	            }
	            return $module.data(metadata.displayType);
	          },
	          userStyle: function(style) {
	            style = style || $module.attr('style') || '';
	            return style.replace(/display.*?;/, '');
	          },
	          transitionExists: function(animation) {
	            return $.fn.transition.exists[animation];
	          },
	          animationStartEvent: function() {
	            var
	              element     = document.createElement('div'),
	              animations  = {
	                'animation'       :'animationstart',
	                'OAnimation'      :'oAnimationStart',
	                'MozAnimation'    :'mozAnimationStart',
	                'WebkitAnimation' :'webkitAnimationStart'
	              },
	              animation
	            ;
	            for(animation in animations){
	              if( element.style[animation] !== undefined ){
	                return animations[animation];
	              }
	            }
	            return false;
	          },
	          animationEndEvent: function() {
	            var
	              element     = document.createElement('div'),
	              animations  = {
	                'animation'       :'animationend',
	                'OAnimation'      :'oAnimationEnd',
	                'MozAnimation'    :'mozAnimationEnd',
	                'WebkitAnimation' :'webkitAnimationEnd'
	              },
	              animation
	            ;
	            for(animation in animations){
	              if( element.style[animation] !== undefined ){
	                return animations[animation];
	              }
	            }
	            return false;
	          }

	        },

	        can: {
	          transition: function(forced) {
	            var
	              animation         = settings.animation,
	              transitionExists  = module.get.transitionExists(animation),
	              elementClass,
	              tagName,
	              $clone,
	              currentAnimation,
	              inAnimation,
	              directionExists,
	              displayType
	            ;
	            if( transitionExists === undefined || forced) {
	              module.verbose('Determining whether animation exists');
	              elementClass = $module.attr('class');
	              tagName      = $module.prop('tagName');

	              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);
	              currentAnimation = $clone
	                .addClass(animation)
	                .removeClass(className.inward)
	                .removeClass(className.outward)
	                .addClass(className.animating)
	                .addClass(className.transition)
	                .css('animationName')
	              ;
	              inAnimation = $clone
	                .addClass(className.inward)
	                .css('animationName')
	              ;
	              displayType = $clone
	                .attr('class', elementClass)
	                .removeAttr('style')
	                .removeClass(className.hidden)
	                .removeClass(className.visible)
	                .show()
	                .css('display')
	              ;
	              module.verbose('Determining final display state', displayType);
	              module.save.displayType(displayType);

	              $clone.remove();
	              if(currentAnimation != inAnimation) {
	                module.debug('Direction exists for animation', animation);
	                directionExists = true;
	              }
	              else if(currentAnimation == 'none' || !currentAnimation) {
	                module.debug('No animation defined in css', animation);
	                return;
	              }
	              else {
	                module.debug('Static animation found', animation, displayType);
	                directionExists = false;
	              }
	              module.save.transitionExists(animation, directionExists);
	            }
	            return (transitionExists !== undefined)
	              ? transitionExists
	              : directionExists
	            ;
	          },
	          animate: function() {
	            // can transition does not return a value if animation does not exist
	            return (module.can.transition() !== undefined);
	          }
	        },

	        is: {
	          animating: function() {
	            return $module.hasClass(className.animating);
	          },
	          inward: function() {
	            return $module.hasClass(className.inward);
	          },
	          outward: function() {
	            return $module.hasClass(className.outward);
	          },
	          looping: function() {
	            return $module.hasClass(className.looping);
	          },
	          occurring: function(animation) {
	            animation = animation || settings.animation;
	            animation = '.' + animation.replace(' ', '.');
	            return ( $module.filter(animation).length > 0 );
	          },
	          visible: function() {
	            return $module.is(':visible');
	          },
	          hidden: function() {
	            return $module.css('visibility') === 'hidden';
	          },
	          supported: function() {
	            return(animationEnd !== false);
	          }
	        },

	        hide: function() {
	          module.verbose('Hiding element');
	          if( module.is.animating() ) {
	            module.reset();
	          }
	          element.blur(); // IE will trigger focus change if element is not blurred before hiding
	          module.remove.display();
	          module.remove.visible();
	          module.set.hidden();
	          module.force.hidden();
	          settings.onHide.call(element);
	          settings.onComplete.call(element);
	          // module.repaint();
	        },

	        show: function(display) {
	          module.verbose('Showing element', display);
	          module.remove.hidden();
	          module.set.visible();
	          module.force.visible();
	          settings.onShow.call(element);
	          settings.onComplete.call(element);
	          // module.repaint();
	        },

	        toggle: function() {
	          if( module.is.visible() ) {
	            module.hide();
	          }
	          else {
	            module.show();
	          }
	        },

	        stop: function() {
	          module.debug('Stopping current animation');
	          $module.triggerHandler(animationEnd);
	        },

	        stopAll: function() {
	          module.debug('Stopping all animation');
	          module.remove.queueCallback();
	          $module.triggerHandler(animationEnd);
	        },

	        clear: {
	          queue: function() {
	            module.debug('Clearing animation queue');
	            module.remove.queueCallback();
	          }
	        },

	        enable: function() {
	          module.verbose('Starting animation');
	          $module.removeClass(className.disabled);
	        },

	        disable: function() {
	          module.debug('Stopping animation');
	          $module.addClass(className.disabled);
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.length > 1) {
	              title += ' ' + '(' + $allModules.length + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        // modified for transition to return invoke success
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }

	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return (found !== undefined)
	            ? found
	            : false
	          ;
	        }
	      };
	      module.initialize();
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	// Records if CSS transition is available
	$.fn.transition.exists = {};

	$.fn.transition.settings = {

	  // module info
	  name          : 'Transition',

	  // debug content outputted to console
	  debug         : false,

	  // verbose debug output
	  verbose       : false,

	  // performance data output
	  performance   : true,

	  // event namespace
	  namespace     : 'transition',

	  // delay between animations in group
	  interval      : 0,

	  // whether group animations should be reversed
	  reverse       : 'auto',

	  // animation callback event
	  onStart       : function() {},
	  onComplete    : function() {},
	  onShow        : function() {},
	  onHide        : function() {},

	  // whether timeout should be used to ensure callback fires in cases animationend does not
	  useFailSafe   : true,

	  // delay in ms for fail safe
	  failSafeDelay : 100,

	  // whether EXACT animation can occur twice in a row
	  allowRepeats  : false,

	  // Override final display type on visible
	  displayType   : false,

	  // animation duration
	  animation     : 'fade',
	  duration      : false,

	  // new animations will occur after previous ones
	  queue         : true,

	  metadata : {
	    displayType: 'display'
	  },

	  className   : {
	    animating  : 'animating',
	    disabled   : 'disabled',
	    hidden     : 'hidden',
	    inward     : 'in',
	    loading    : 'loading',
	    looping    : 'looping',
	    outward    : 'out',
	    transition : 'transition',
	    visible    : 'visible'
	  },

	  // possible errors
	  error: {
	    noAnimation : 'Element is no longer attached to DOM. Unable to animate.',
	    repeated    : 'That animation is already occurring, cancelling repeated animation',
	    method      : 'The method you called is not defined',
	    support     : 'This browser does not support CSS animations'
	  }

	};


	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - API
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.api = $.fn.api = function(parameters) {

	  var
	    // use window context if none specified
	    $allModules     = $.isFunction(this)
	        ? $(window)
	        : $(this),
	    moduleSelector = $allModules.selector || '',
	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.api.settings, parameters)
	          : $.extend({}, $.fn.api.settings),

	        // internal aliases
	        namespace       = settings.namespace,
	        metadata        = settings.metadata,
	        selector        = settings.selector,
	        error           = settings.error,
	        className       = settings.className,

	        // define namespaces for modules
	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        // element that creates request
	        $module         = $(this),
	        $form           = $module.closest(selector.form),

	        // context used for state
	        $context        = (settings.stateContext)
	          ? $(settings.stateContext)
	          : $module,

	        // request details
	        ajaxSettings,
	        requestSettings,
	        url,
	        data,
	        requestStartTime,

	        // standard module
	        element         = this,
	        context         = $context[0],
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          if(!methodInvoked) {
	            module.bind.events();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', element);
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        bind: {
	          events: function() {
	            var
	              triggerEvent = module.get.event()
	            ;
	            if( triggerEvent ) {
	              module.verbose('Attaching API events to element', triggerEvent);
	              $module
	                .on(triggerEvent + eventNamespace, module.event.trigger)
	              ;
	            }
	            else if(settings.on == 'now') {
	              module.debug('Querying API endpoint immediately');
	              module.query();
	            }
	          }
	        },

	        decode: {
	          json: function(response) {
	            if(response !== undefined && typeof response == 'string') {
	              try {
	               response = JSON.parse(response);
	              }
	              catch(e) {
	                // isnt json string
	              }
	            }
	            return response;
	          }
	        },

	        read: {
	          cachedResponse: function(url) {
	            var
	              response
	            ;
	            if(window.Storage === undefined) {
	              module.error(error.noStorage);
	              return;
	            }
	            response = sessionStorage.getItem(url);
	            module.debug('Using cached response', url, response);
	            response = module.decode.json(response);
	            return false;
	          }
	        },
	        write: {
	          cachedResponse: function(url, response) {
	            if(response && response === '') {
	              module.debug('Response empty, not caching', response);
	              return;
	            }
	            if(window.Storage === undefined) {
	              module.error(error.noStorage);
	              return;
	            }
	            if( $.isPlainObject(response) ) {
	              response = JSON.stringify(response);
	            }
	            sessionStorage.setItem(url, response);
	            module.verbose('Storing cached response for url', url, response);
	          }
	        },

	        query: function() {

	          if(module.is.disabled()) {
	            module.debug('Element is disabled API request aborted');
	            return;
	          }

	          if(module.is.loading()) {
	            if(settings.interruptRequests) {
	              module.debug('Interrupting previous request');
	              module.abort();
	            }
	            else {
	              module.debug('Cancelling request, previous request is still pending');
	              return;
	            }
	          }

	          // pass element metadata to url (value, text)
	          if(settings.defaultData) {
	            $.extend(true, settings.urlData, module.get.defaultData());
	          }

	          // Add form content
	          if(settings.serializeForm) {
	            settings.data = module.add.formData(settings.data);
	          }

	          // call beforesend and get any settings changes
	          requestSettings = module.get.settings();

	          // check if before send cancelled request
	          if(requestSettings === false) {
	            module.cancelled = true;
	            module.error(error.beforeSend);
	            return;
	          }
	          else {
	            module.cancelled = false;
	          }

	          // get url
	          url = module.get.templatedURL();

	          if(!url && !module.is.mocked()) {
	            module.error(error.missingURL);
	            return;
	          }

	          // replace variables
	          url = module.add.urlData( url );
	          // missing url parameters
	          if( !url && !module.is.mocked()) {
	            return;
	          }

	          requestSettings.url = settings.base + url;

	          // look for jQuery ajax parameters in settings
	          ajaxSettings = $.extend(true, {}, settings, {
	            type       : settings.method || settings.type,
	            data       : data,
	            url        : settings.base + url,
	            beforeSend : settings.beforeXHR,
	            success    : function() {},
	            failure    : function() {},
	            complete   : function() {}
	          });

	          module.debug('Querying URL', ajaxSettings.url);
	          module.verbose('Using AJAX settings', ajaxSettings);

	          if(settings.cache === 'local' && module.read.cachedResponse(url)) {
	            module.debug('Response returned from local cache');
	            module.request = module.create.request();
	            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);
	            return;
	          }

	          if( !settings.throttle ) {
	            module.debug('Sending request', data, ajaxSettings.method);
	            module.send.request();
	          }
	          else {
	            if(!settings.throttleFirstRequest && !module.timer) {
	              module.debug('Sending request', data, ajaxSettings.method);
	              module.send.request();
	              module.timer = setTimeout(function(){}, settings.throttle);
	            }
	            else {
	              module.debug('Throttling request', settings.throttle);
	              clearTimeout(module.timer);
	              module.timer = setTimeout(function() {
	                if(module.timer) {
	                  delete module.timer;
	                }
	                module.debug('Sending throttled request', data, ajaxSettings.method);
	                module.send.request();
	              }, settings.throttle);
	            }
	          }

	        },

	        should: {
	          removeError: function() {
	            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );
	          }
	        },

	        is: {
	          disabled: function() {
	            return ($module.filter(selector.disabled).length > 0);
	          },
	          form: function() {
	            return $module.is('form') || $context.is('form');
	          },
	          mocked: function() {
	            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);
	          },
	          input: function() {
	            return $module.is('input');
	          },
	          loading: function() {
	            return (module.request && module.request.state() == 'pending');
	          },
	          abortedRequest: function(xhr) {
	            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {
	              module.verbose('XHR request determined to be aborted');
	              return true;
	            }
	            else {
	              module.verbose('XHR request was not aborted');
	              return false;
	            }
	          },
	          validResponse: function(response) {
	            if( (settings.dataType !== 'json' && settings.dataType !== 'jsonp') || !$.isFunction(settings.successTest) ) {
	              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);
	              return true;
	            }
	            module.debug('Checking JSON returned success', settings.successTest, response);
	            if( settings.successTest(response) ) {
	              module.debug('Response passed success test', response);
	              return true;
	            }
	            else {
	              module.debug('Response failed success test', response);
	              return false;
	            }
	          }
	        },

	        was: {
	          cancelled: function() {
	            return (module.cancelled || false);
	          },
	          succesful: function() {
	            return (module.request && module.request.state() == 'resolved');
	          },
	          failure: function() {
	            return (module.request && module.request.state() == 'rejected');
	          },
	          complete: function() {
	            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );
	          }
	        },

	        add: {
	          urlData: function(url, urlData) {
	            var
	              requiredVariables,
	              optionalVariables
	            ;
	            if(url) {
	              requiredVariables = url.match(settings.regExp.required);
	              optionalVariables = url.match(settings.regExp.optional);
	              urlData           = urlData || settings.urlData;
	              if(requiredVariables) {
	                module.debug('Looking for required URL variables', requiredVariables);
	                $.each(requiredVariables, function(index, templatedString) {
	                  var
	                    // allow legacy {$var} style
	                    variable = (templatedString.indexOf('$') !== -1)
	                      ? templatedString.substr(2, templatedString.length - 3)
	                      : templatedString.substr(1, templatedString.length - 2),
	                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)
	                      ? urlData[variable]
	                      : ($module.data(variable) !== undefined)
	                        ? $module.data(variable)
	                        : ($context.data(variable) !== undefined)
	                          ? $context.data(variable)
	                          : urlData[variable]
	                  ;
	                  // remove value
	                  if(value === undefined) {
	                    module.error(error.requiredParameter, variable, url);
	                    url = false;
	                    return false;
	                  }
	                  else {
	                    module.verbose('Found required variable', variable, value);
	                    value = (settings.encodeParameters)
	                      ? module.get.urlEncodedValue(value)
	                      : value
	                    ;
	                    url = url.replace(templatedString, value);
	                  }
	                });
	              }
	              if(optionalVariables) {
	                module.debug('Looking for optional URL variables', requiredVariables);
	                $.each(optionalVariables, function(index, templatedString) {
	                  var
	                    // allow legacy {/$var} style
	                    variable = (templatedString.indexOf('$') !== -1)
	                      ? templatedString.substr(3, templatedString.length - 4)
	                      : templatedString.substr(2, templatedString.length - 3),
	                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)
	                      ? urlData[variable]
	                      : ($module.data(variable) !== undefined)
	                        ? $module.data(variable)
	                        : ($context.data(variable) !== undefined)
	                          ? $context.data(variable)
	                          : urlData[variable]
	                  ;
	                  // optional replacement
	                  if(value !== undefined) {
	                    module.verbose('Optional variable Found', variable, value);
	                    url = url.replace(templatedString, value);
	                  }
	                  else {
	                    module.verbose('Optional variable not found', variable);
	                    // remove preceding slash if set
	                    if(url.indexOf('/' + templatedString) !== -1) {
	                      url = url.replace('/' + templatedString, '');
	                    }
	                    else {
	                      url = url.replace(templatedString, '');
	                    }
	                  }
	                });
	              }
	            }
	            return url;
	          },
	          formData: function(data) {
	            var
	              canSerialize = ($.fn.serializeObject !== undefined),
	              formData     = (canSerialize)
	                ? $form.serializeObject()
	                : $form.serialize(),
	              hasOtherData
	            ;
	            data         = data || settings.data;
	            hasOtherData = $.isPlainObject(data);

	            if(hasOtherData) {
	              if(canSerialize) {
	                module.debug('Extending existing data with form data', data, formData);
	                data = $.extend(true, {}, data, formData);
	              }
	              else {
	                module.error(error.missingSerialize);
	                module.debug('Cant extend data. Replacing data with form data', data, formData);
	                data = formData;
	              }
	            }
	            else {
	              module.debug('Adding form data', formData);
	              data = formData;
	            }
	            return data;
	          }
	        },

	        send: {
	          request: function() {
	            module.set.loading();
	            module.request = module.create.request();
	            if( module.is.mocked() ) {
	              module.mockedXHR = module.create.mockedXHR();
	            }
	            else {
	              module.xhr = module.create.xhr();
	            }
	            settings.onRequest.call(context, module.request, module.xhr);
	          }
	        },

	        event: {
	          trigger: function(event) {
	            module.query();
	            if(event.type == 'submit' || event.type == 'click') {
	              event.preventDefault();
	            }
	          },
	          xhr: {
	            always: function() {
	              // nothing special
	            },
	            done: function(response, textStatus, xhr) {
	              var
	                context            = this,
	                elapsedTime        = (new Date().getTime() - requestStartTime),
	                timeLeft           = (settings.loadingDuration - elapsedTime),
	                translatedResponse = ( $.isFunction(settings.onResponse) )
	                  ? settings.onResponse.call(context, $.extend(true, {}, response))
	                  : false
	              ;
	              timeLeft = (timeLeft > 0)
	                ? timeLeft
	                : 0
	              ;
	              if(translatedResponse) {
	                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);
	                response = translatedResponse;
	              }
	              if(timeLeft > 0) {
	                module.debug('Response completed early delaying state change by', timeLeft);
	              }
	              setTimeout(function() {
	                if( module.is.validResponse(response) ) {
	                  module.request.resolveWith(context, [response, xhr]);
	                }
	                else {
	                  module.request.rejectWith(context, [xhr, 'invalid']);
	                }
	              }, timeLeft);
	            },
	            fail: function(xhr, status, httpMessage) {
	              var
	                context     = this,
	                elapsedTime = (new Date().getTime() - requestStartTime),
	                timeLeft    = (settings.loadingDuration - elapsedTime)
	              ;
	              timeLeft = (timeLeft > 0)
	                ? timeLeft
	                : 0
	              ;
	              if(timeLeft > 0) {
	                module.debug('Response completed early delaying state change by', timeLeft);
	              }
	              setTimeout(function() {
	                if( module.is.abortedRequest(xhr) ) {
	                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);
	                }
	                else {
	                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);
	                }
	              }, timeLeft);
	            }
	          },
	          request: {
	            done: function(response, xhr) {
	              module.debug('Successful API Response', response);
	              if(settings.cache === 'local' && url) {
	                module.write.cachedResponse(url, response);
	                module.debug('Saving server response locally', module.cache);
	              }
	              settings.onSuccess.call(context, response, $module, xhr);
	            },
	            complete: function(firstParameter, secondParameter) {
	              var
	                xhr,
	                response
	              ;
	              // have to guess callback parameters based on request success
	              if( module.was.succesful() ) {
	                response = firstParameter;
	                xhr      = secondParameter;
	              }
	              else {
	                xhr      = firstParameter;
	                response = module.get.responseFromXHR(xhr);
	              }
	              module.remove.loading();
	              settings.onComplete.call(context, response, $module, xhr);
	            },
	            fail: function(xhr, status, httpMessage) {
	              var
	                // pull response from xhr if available
	                response     = module.get.responseFromXHR(xhr),
	                errorMessage = module.get.errorFromRequest(response, status, httpMessage)
	              ;
	              if(status == 'aborted') {
	                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);
	                settings.onAbort.call(context, status, $module, xhr);
	              }
	              else if(status == 'invalid') {
	                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);
	              }
	              else if(status == 'error')  {
	                if(xhr !== undefined) {
	                  module.debug('XHR produced a server error', status, httpMessage);
	                  // make sure we have an error to display to console
	                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {
	                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);
	                  }
	                  settings.onError.call(context, errorMessage, $module, xhr);
	                }
	              }

	              if(settings.errorDuration && status !== 'aborted') {
	                module.debug('Adding error state');
	                module.set.error();
	                if( module.should.removeError() ) {
	                  setTimeout(module.remove.error, settings.errorDuration);
	                }
	              }
	              module.debug('API Request failed', errorMessage, xhr);
	              settings.onFailure.call(context, response, $module, xhr);
	            }
	          }
	        },

	        create: {

	          request: function() {
	            // api request promise
	            return $.Deferred()
	              .always(module.event.request.complete)
	              .done(module.event.request.done)
	              .fail(module.event.request.fail)
	            ;
	          },

	          mockedXHR: function () {
	            var
	              // xhr does not simulate these properties of xhr but must return them
	              textStatus     = false,
	              status         = false,
	              httpMessage    = false,
	              responder      = settings.mockResponse      || settings.response,
	              asyncResponder = settings.mockResponseAsync || settings.responseAsync,
	              asyncCallback,
	              response,
	              mockedXHR
	            ;

	            mockedXHR = $.Deferred()
	              .always(module.event.xhr.complete)
	              .done(module.event.xhr.done)
	              .fail(module.event.xhr.fail)
	            ;

	            if(responder) {
	              if( $.isFunction(responder) ) {
	                module.debug('Using specified synchronous callback', responder);
	                response = responder.call(context, requestSettings);
	              }
	              else {
	                module.debug('Using settings specified response', responder);
	                response = responder;
	              }
	              // simulating response
	              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);
	            }
	            else if( $.isFunction(asyncResponder) ) {
	              asyncCallback = function(response) {
	                module.debug('Async callback returned response', response);

	                if(response) {
	                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);
	                }
	                else {
	                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);
	                }
	              };
	              module.debug('Using specified async response callback', asyncResponder);
	              asyncResponder.call(context, requestSettings, asyncCallback);
	            }
	            return mockedXHR;
	          },

	          xhr: function() {
	            var
	              xhr
	            ;
	            // ajax request promise
	            xhr = $.ajax(ajaxSettings)
	              .always(module.event.xhr.always)
	              .done(module.event.xhr.done)
	              .fail(module.event.xhr.fail)
	            ;
	            module.verbose('Created server request', xhr);
	            return xhr;
	          }
	        },

	        set: {
	          error: function() {
	            module.verbose('Adding error state to element', $context);
	            $context.addClass(className.error);
	          },
	          loading: function() {
	            module.verbose('Adding loading state to element', $context);
	            $context.addClass(className.loading);
	            requestStartTime = new Date().getTime();
	          }
	        },

	        remove: {
	          error: function() {
	            module.verbose('Removing error state from element', $context);
	            $context.removeClass(className.error);
	          },
	          loading: function() {
	            module.verbose('Removing loading state from element', $context);
	            $context.removeClass(className.loading);
	          }
	        },

	        get: {
	          responseFromXHR: function(xhr) {
	            return $.isPlainObject(xhr)
	              ? (settings.dataType == 'json' || settings.dataType == 'jsonp')
	                ? module.decode.json(xhr.responseText)
	                : xhr.responseText
	              : false
	            ;
	          },
	          errorFromRequest: function(response, status, httpMessage) {
	            return ($.isPlainObject(response) && response.error !== undefined)
	              ? response.error // use json error message
	              : (settings.error[status] !== undefined) // use server error message
	                ? settings.error[status]
	                : httpMessage
	            ;
	          },
	          request: function() {
	            return module.request || false;
	          },
	          xhr: function() {
	            return module.xhr || false;
	          },
	          settings: function() {
	            var
	              runSettings
	            ;
	            runSettings = settings.beforeSend.call(context, settings);
	            if(runSettings) {
	              if(runSettings.success !== undefined) {
	                module.debug('Legacy success callback detected', runSettings);
	                module.error(error.legacyParameters, runSettings.success);
	                runSettings.onSuccess = runSettings.success;
	              }
	              if(runSettings.failure !== undefined) {
	                module.debug('Legacy failure callback detected', runSettings);
	                module.error(error.legacyParameters, runSettings.failure);
	                runSettings.onFailure = runSettings.failure;
	              }
	              if(runSettings.complete !== undefined) {
	                module.debug('Legacy complete callback detected', runSettings);
	                module.error(error.legacyParameters, runSettings.complete);
	                runSettings.onComplete = runSettings.complete;
	              }
	            }
	            if(runSettings === undefined) {
	              module.error(error.noReturnedValue);
	            }
	            return (runSettings !== undefined)
	              ? $.extend(true, {}, runSettings)
	              : $.extend(true, {}, settings)
	            ;
	          },
	          urlEncodedValue: function(value) {
	            var
	              decodedValue   = window.decodeURIComponent(value),
	              encodedValue   = window.encodeURIComponent(value),
	              alreadyEncoded = (decodedValue !== value)
	            ;
	            if(alreadyEncoded) {
	              module.debug('URL value is already encoded, avoiding double encoding', value);
	              return value;
	            }
	            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);
	            return encodedValue;
	          },
	          defaultData: function() {
	            var
	              data = {}
	            ;
	            if( !$.isWindow(element) ) {
	              if( module.is.input() ) {
	                data.value = $module.val();
	              }
	              else if( !module.is.form() ) {

	              }
	              else {
	                data.text = $module.text();
	              }
	            }
	            return data;
	          },
	          event: function() {
	            if( $.isWindow(element) || settings.on == 'now' ) {
	              module.debug('API called without element, no events attached');
	              return false;
	            }
	            else if(settings.on == 'auto') {
	              if( $module.is('input') ) {
	                return (element.oninput !== undefined)
	                  ? 'input'
	                  : (element.onpropertychange !== undefined)
	                    ? 'propertychange'
	                    : 'keyup'
	                ;
	              }
	              else if( $module.is('form') ) {
	                return 'submit';
	              }
	              else {
	                return 'click';
	              }
	            }
	            else {
	              return settings.on;
	            }
	          },
	          templatedURL: function(action) {
	            action = action || $module.data(metadata.action) || settings.action || false;
	            url    = $module.data(metadata.url) || settings.url || false;
	            if(url) {
	              module.debug('Using specified url', url);
	              return url;
	            }
	            if(action) {
	              module.debug('Looking up url for action', action, settings.api);
	              if(settings.api[action] === undefined && !module.is.mocked()) {
	                module.error(error.missingAction, settings.action, settings.api);
	                return;
	              }
	              url = settings.api[action];
	            }
	            else if( module.is.form() ) {
	              url = $module.attr('action') || $context.attr('action') || false;
	              module.debug('No url or action specified, defaulting to form action', url);
	            }
	            return url;
	          }
	        },

	        abort: function() {
	          var
	            xhr = module.get.xhr()
	          ;
	          if( xhr && xhr.state() !== 'resolved') {
	            module.debug('Cancelling API request');
	            xhr.abort();
	          }
	        },

	        // reset state
	        reset: function() {
	          module.remove.error();
	          module.remove.loading();
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                //'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.api.settings = {

	  name              : 'API',
	  namespace         : 'api',

	  debug             : false,
	  verbose           : false,
	  performance       : true,

	  // object containing all templates endpoints
	  api               : {},

	  // whether to cache responses
	  cache             : true,

	  // whether new requests should abort previous requests
	  interruptRequests : true,

	  // event binding
	  on                : 'auto',

	  // context for applying state classes
	  stateContext      : false,

	  // duration for loading state
	  loadingDuration   : 0,

	  // whether to hide errors after a period of time
	  hideError         : 'auto',

	  // duration for error state
	  errorDuration     : 2000,

	  // whether parameters should be encoded with encodeURIComponent
	  encodeParameters  : true,

	  // API action to use
	  action            : false,

	  // templated URL to use
	  url               : false,

	  // base URL to apply to all endpoints
	  base              : '',

	  // data that will
	  urlData           : {},

	  // whether to add default data to url data
	  defaultData          : true,

	  // whether to serialize closest form
	  serializeForm        : false,

	  // how long to wait before request should occur
	  throttle             : 0,

	  // whether to throttle first request or only repeated
	  throttleFirstRequest : true,

	  // standard ajax settings
	  method            : 'get',
	  data              : {},
	  dataType          : 'json',

	  // mock response
	  mockResponse      : false,
	  mockResponseAsync : false,

	  // aliases for mock
	  response          : false,
	  responseAsync     : false,

	  // callbacks before request
	  beforeSend  : function(settings) { return settings; },
	  beforeXHR   : function(xhr) {},
	  onRequest   : function(promise, xhr) {},

	  // after request
	  onResponse  : false, // function(response) { },

	  // response was successful, if JSON passed validation
	  onSuccess   : function(response, $module) {},

	  // request finished without aborting
	  onComplete  : function(response, $module) {},

	  // failed JSON success test
	  onFailure   : function(response, $module) {},

	  // server error
	  onError     : function(errorMessage, $module) {},

	  // request aborted
	  onAbort     : function(errorMessage, $module) {},

	  successTest : false,

	  // errors
	  error : {
	    beforeSend        : 'The before send function has aborted the request',
	    error             : 'There was an error with your request',
	    exitConditions    : 'API Request Aborted. Exit conditions met',
	    JSONParse         : 'JSON could not be parsed during error handling',
	    legacyParameters  : 'You are using legacy API success callback names',
	    method            : 'The method you called is not defined',
	    missingAction     : 'API action used but no url was defined',
	    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',
	    missingURL        : 'No URL specified for api event',
	    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',
	    noStorage         : 'Caching responses locally requires session storage',
	    parseError        : 'There was an error parsing your request',
	    requiredParameter : 'Missing a required URL parameter: ',
	    statusMessage     : 'Server gave an error: ',
	    timeout           : 'Your request timed out'
	  },

	  regExp  : {
	    required : /\{\$*[A-z0-9]+\}/g,
	    optional : /\{\/\$*[A-z0-9]+\}/g,
	  },

	  className: {
	    loading : 'loading',
	    error   : 'error'
	  },

	  selector: {
	    disabled : '.disabled',
	    form      : 'form'
	  },

	  metadata: {
	    action  : 'action',
	    url     : 'url'
	  }
	};



	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - State
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.state = function(parameters) {
	  var
	    $allModules     = $(this),

	    moduleSelector  = $allModules.selector || '',

	    hasTouch        = ('ontouchstart' in document.documentElement),
	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.state.settings, parameters)
	          : $.extend({}, $.fn.state.settings),

	        error           = settings.error,
	        metadata        = settings.metadata,
	        className       = settings.className,
	        namespace       = settings.namespace,
	        states          = settings.states,
	        text            = settings.text,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = namespace + '-module',

	        $module         = $(this),

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        module
	      ;
	      module = {

	        initialize: function() {
	          module.verbose('Initializing module');

	          // allow module to guess desired state based on element
	          if(settings.automatic) {
	            module.add.defaults();
	          }

	          // bind events with delegated events
	          if(settings.context && moduleSelector !== '') {
	            $(settings.context)
	              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)
	              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)
	              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)
	            ;
	          }
	          else {
	            $module
	              .on('mouseenter' + eventNamespace, module.change.text)
	              .on('mouseleave' + eventNamespace, module.reset.text)
	              .on('click'      + eventNamespace, module.toggle.state)
	            ;
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', instance);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $module = $(element);
	        },

	        add: {
	          defaults: function() {
	            var
	              userStates = parameters && $.isPlainObject(parameters.states)
	                ? parameters.states
	                : {}
	            ;
	            $.each(settings.defaults, function(type, typeStates) {
	              if( module.is[type] !== undefined && module.is[type]() ) {
	                module.verbose('Adding default states', type, element);
	                $.extend(settings.states, typeStates, userStates);
	              }
	            });
	          }
	        },

	        is: {

	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          loading: function() {
	            return $module.hasClass(className.loading);
	          },
	          inactive: function() {
	            return !( $module.hasClass(className.active) );
	          },
	          state: function(state) {
	            if(className[state] === undefined) {
	              return false;
	            }
	            return $module.hasClass( className[state] );
	          },

	          enabled: function() {
	            return !( $module.is(settings.filter.active) );
	          },
	          disabled: function() {
	            return ( $module.is(settings.filter.active) );
	          },
	          textEnabled: function() {
	            return !( $module.is(settings.filter.text) );
	          },

	          // definitions for automatic type detection
	          button: function() {
	            return $module.is('.button:not(a, .submit)');
	          },
	          input: function() {
	            return $module.is('input');
	          },
	          progress: function() {
	            return $module.is('.ui.progress');
	          }
	        },

	        allow: function(state) {
	          module.debug('Now allowing state', state);
	          states[state] = true;
	        },
	        disallow: function(state) {
	          module.debug('No longer allowing', state);
	          states[state] = false;
	        },

	        allows: function(state) {
	          return states[state] || false;
	        },

	        enable: function() {
	          $module.removeClass(className.disabled);
	        },

	        disable: function() {
	          $module.addClass(className.disabled);
	        },

	        setState: function(state) {
	          if(module.allows(state)) {
	            $module.addClass( className[state] );
	          }
	        },

	        removeState: function(state) {
	          if(module.allows(state)) {
	            $module.removeClass( className[state] );
	          }
	        },

	        toggle: {
	          state: function() {
	            var
	              apiRequest,
	              requestCancelled
	            ;
	            if( module.allows('active') && module.is.enabled() ) {
	              module.refresh();
	              if($.fn.api !== undefined) {
	                apiRequest       = $module.api('get request');
	                requestCancelled = $module.api('was cancelled');
	                if( requestCancelled ) {
	                  module.debug('API Request cancelled by beforesend');
	                  settings.activateTest   = function(){ return false; };
	                  settings.deactivateTest = function(){ return false; };
	                }
	                else if(apiRequest) {
	                  module.listenTo(apiRequest);
	                  return;
	                }
	              }
	              module.change.state();
	            }
	          }
	        },

	        listenTo: function(apiRequest) {
	          module.debug('API request detected, waiting for state signal', apiRequest);
	          if(apiRequest) {
	            if(text.loading) {
	              module.update.text(text.loading);
	            }
	            $.when(apiRequest)
	              .then(function() {
	                if(apiRequest.state() == 'resolved') {
	                  module.debug('API request succeeded');
	                  settings.activateTest   = function(){ return true; };
	                  settings.deactivateTest = function(){ return true; };
	                }
	                else {
	                  module.debug('API request failed');
	                  settings.activateTest   = function(){ return false; };
	                  settings.deactivateTest = function(){ return false; };
	                }
	                module.change.state();
	              })
	            ;
	          }
	        },

	        // checks whether active/inactive state can be given
	        change: {

	          state: function() {
	            module.debug('Determining state change direction');
	            // inactive to active change
	            if( module.is.inactive() ) {
	              module.activate();
	            }
	            else {
	              module.deactivate();
	            }
	            if(settings.sync) {
	              module.sync();
	            }
	            settings.onChange.call(element);
	          },

	          text: function() {
	            if( module.is.textEnabled() ) {
	              if(module.is.disabled() ) {
	                module.verbose('Changing text to disabled text', text.hover);
	                module.update.text(text.disabled);
	              }
	              else if( module.is.active() ) {
	                if(text.hover) {
	                  module.verbose('Changing text to hover text', text.hover);
	                  module.update.text(text.hover);
	                }
	                else if(text.deactivate) {
	                  module.verbose('Changing text to deactivating text', text.deactivate);
	                  module.update.text(text.deactivate);
	                }
	              }
	              else {
	                if(text.hover) {
	                  module.verbose('Changing text to hover text', text.hover);
	                  module.update.text(text.hover);
	                }
	                else if(text.activate){
	                  module.verbose('Changing text to activating text', text.activate);
	                  module.update.text(text.activate);
	                }
	              }
	            }
	          }

	        },

	        activate: function() {
	          if( settings.activateTest.call(element) ) {
	            module.debug('Setting state to active');
	            $module
	              .addClass(className.active)
	            ;
	            module.update.text(text.active);
	            settings.onActivate.call(element);
	          }
	        },

	        deactivate: function() {
	          if( settings.deactivateTest.call(element) ) {
	            module.debug('Setting state to inactive');
	            $module
	              .removeClass(className.active)
	            ;
	            module.update.text(text.inactive);
	            settings.onDeactivate.call(element);
	          }
	        },

	        sync: function() {
	          module.verbose('Syncing other buttons to current state');
	          if( module.is.active() ) {
	            $allModules
	              .not($module)
	                .state('activate');
	          }
	          else {
	            $allModules
	              .not($module)
	                .state('deactivate')
	            ;
	          }
	        },

	        get: {
	          text: function() {
	            return (settings.selector.text)
	              ? $module.find(settings.selector.text).text()
	              : $module.html()
	            ;
	          },
	          textFor: function(state) {
	            return text[state] || false;
	          }
	        },

	        flash: {
	          text: function(text, duration, callback) {
	            var
	              previousText = module.get.text()
	            ;
	            module.debug('Flashing text message', text, duration);
	            text     = text     || settings.text.flash;
	            duration = duration || settings.flashDuration;
	            callback = callback || function() {};
	            module.update.text(text);
	            setTimeout(function(){
	              module.update.text(previousText);
	              callback.call(element);
	            }, duration);
	          }
	        },

	        reset: {
	          // on mouseout sets text to previous value
	          text: function() {
	            var
	              activeText   = text.active   || $module.data(metadata.storedText),
	              inactiveText = text.inactive || $module.data(metadata.storedText)
	            ;
	            if( module.is.textEnabled() ) {
	              if( module.is.active() && activeText) {
	                module.verbose('Resetting active text', activeText);
	                module.update.text(activeText);
	              }
	              else if(inactiveText) {
	                module.verbose('Resetting inactive text', activeText);
	                module.update.text(inactiveText);
	              }
	            }
	          }
	        },

	        update: {
	          text: function(text) {
	            var
	              currentText = module.get.text()
	            ;
	            if(text && text !== currentText) {
	              module.debug('Updating text', text);
	              if(settings.selector.text) {
	                $module
	                  .data(metadata.storedText, text)
	                  .find(settings.selector.text)
	                    .text(text)
	                ;
	              }
	              else {
	                $module
	                  .data(metadata.storedText, text)
	                  .html(text)
	                ;
	              }
	            }
	            else {
	              module.debug('Text is already set, ignoring update', text);
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.state.settings = {

	  // module info
	  name           : 'State',

	  // debug output
	  debug          : false,

	  // verbose debug output
	  verbose        : false,

	  // namespace for events
	  namespace      : 'state',

	  // debug data includes performance
	  performance    : true,

	  // callback occurs on state change
	  onActivate     : function() {},
	  onDeactivate   : function() {},
	  onChange       : function() {},

	  // state test functions
	  activateTest   : function() { return true; },
	  deactivateTest : function() { return true; },

	  // whether to automatically map default states
	  automatic      : true,

	  // activate / deactivate changes all elements instantiated at same time
	  sync           : false,

	  // default flash text duration, used for temporarily changing text of an element
	  flashDuration  : 1000,

	  // selector filter
	  filter     : {
	    text   : '.loading, .disabled',
	    active : '.disabled'
	  },

	  context    : false,

	  // error
	  error: {
	    beforeSend : 'The before send function has cancelled state change',
	    method     : 'The method you called is not defined.'
	  },

	  // metadata
	  metadata: {
	    promise    : 'promise',
	    storedText : 'stored-text'
	  },

	  // change class on state
	  className: {
	    active   : 'active',
	    disabled : 'disabled',
	    error    : 'error',
	    loading  : 'loading',
	    success  : 'success',
	    warning  : 'warning'
	  },

	  selector: {
	    // selector for text node
	    text: false
	  },

	  defaults : {
	    input: {
	      disabled : true,
	      loading  : true,
	      active   : true
	    },
	    button: {
	      disabled : true,
	      loading  : true,
	      active   : true,
	    },
	    progress: {
	      active   : true,
	      success  : true,
	      warning  : true,
	      error    : true
	    }
	  },

	  states     : {
	    active   : true,
	    disabled : true,
	    error    : true,
	    loading  : true,
	    success  : true,
	    warning  : true
	  },

	  text     : {
	    disabled   : false,
	    flash      : false,
	    hover      : false,
	    active     : false,
	    inactive   : false,
	    activate   : false,
	    deactivate : false
	  }

	};



	})( jQuery, window, document );

	/*!
	 * # Semantic UI 2.1.7 - Visibility
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2015 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	"use strict";

	$.fn.visibility = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.visibility.settings, parameters)
	          : $.extend({}, $.fn.visibility.settings),

	        className       = settings.className,
	        namespace       = settings.namespace,
	        error           = settings.error,
	        metadata        = settings.metadata,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $window         = $(window),

	        $module         = $(this),
	        $context        = $(settings.context),

	        $placeholder,

	        selector        = $module.selector || '',
	        instance        = $module.data(moduleNamespace),

	        requestAnimationFrame = window.requestAnimationFrame
	          || window.mozRequestAnimationFrame
	          || window.webkitRequestAnimationFrame
	          || window.msRequestAnimationFrame
	          || function(callback) { setTimeout(callback, 0); },

	        element         = this,
	        disabled        = false,

	        observer,
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing', settings);

	          module.setup.cache();

	          if( module.should.trackChanges() ) {

	            if(settings.type == 'image') {
	              module.setup.image();
	            }
	            if(settings.type == 'fixed') {
	              module.setup.fixed();
	            }

	            if(settings.observeChanges) {
	              module.observeChanges();
	            }
	            module.bind.events();
	          }

	          module.save.position();
	          if( !module.is.visible() ) {
	            module.error(error.visible, $module);
	          }

	          if(settings.initialCheck) {
	            module.checkVisibility();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.debug('Storing instance', module);
	          $module
	            .data(moduleNamespace, module)
	          ;
	          instance = module;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module');
	          if(observer) {
	            observer.disconnect();
	          }
	          $window
	            .off('load'   + eventNamespace, module.event.load)
	            .off('resize' + eventNamespace, module.event.resize)
	          ;
	          $context
	            .off('scrollchange' + eventNamespace, module.event.scrollchange)
	          ;
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        observeChanges: function() {
	          if('MutationObserver' in window) {
	            observer = new MutationObserver(function(mutations) {
	              module.verbose('DOM tree modified, updating visibility calculations');
	              module.timer = setTimeout(function() {
	                module.verbose('DOM tree modified, updating sticky menu');
	                module.refresh();
	              }, 100);
	            });
	            observer.observe(element, {
	              childList : true,
	              subtree   : true
	            });
	            module.debug('Setting up mutation observer', observer);
	          }
	        },

	        bind: {
	          events: function() {
	            module.verbose('Binding visibility events to scroll and resize');
	            if(settings.refreshOnLoad) {
	              $window
	                .on('load'   + eventNamespace, module.event.load)
	              ;
	            }
	            $window
	              .on('resize' + eventNamespace, module.event.resize)
	            ;
	            // pub/sub pattern
	            $context
	              .off('scroll'      + eventNamespace)
	              .on('scroll'       + eventNamespace, module.event.scroll)
	              .on('scrollchange' + eventNamespace, module.event.scrollchange)
	            ;
	          }
	        },

	        event: {
	          resize: function() {
	            module.debug('Window resized');
	            if(settings.refreshOnResize) {
	              requestAnimationFrame(module.refresh);
	            }
	          },
	          load: function() {
	            module.debug('Page finished loading');
	            requestAnimationFrame(module.refresh);
	          },
	          // publishes scrollchange event on one scroll
	          scroll: function() {
	            if(settings.throttle) {
	              clearTimeout(module.timer);
	              module.timer = setTimeout(function() {
	                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);
	              }, settings.throttle);
	            }
	            else {
	              requestAnimationFrame(function() {
	                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);
	              });
	            }
	          },
	          // subscribes to scrollchange
	          scrollchange: function(event, scrollPosition) {
	            module.checkVisibility(scrollPosition);
	          },
	        },

	        precache: function(images, callback) {
	          if (!(images instanceof Array)) {
	            images = [images];
	          }
	          var
	            imagesLength  = images.length,
	            loadedCounter = 0,
	            cache         = [],
	            cacheImage    = document.createElement('img'),
	            handleLoad    = function() {
	              loadedCounter++;
	              if (loadedCounter >= images.length) {
	                if ($.isFunction(callback)) {
	                  callback();
	                }
	              }
	            }
	          ;
	          while (imagesLength--) {
	            cacheImage         = document.createElement('img');
	            cacheImage.onload  = handleLoad;
	            cacheImage.onerror = handleLoad;
	            cacheImage.src     = images[imagesLength];
	            cache.push(cacheImage);
	          }
	        },

	        enableCallbacks: function() {
	          module.debug('Allowing callbacks to occur');
	          disabled = false;
	        },

	        disableCallbacks: function() {
	          module.debug('Disabling all callbacks temporarily');
	          disabled = true;
	        },

	        should: {
	          trackChanges: function() {
	            if(methodInvoked) {
	              module.debug('One time query, no need to bind events');
	              return false;
	            }
	            module.debug('Callbacks being attached');
	            return true;
	          }
	        },

	        setup: {
	          cache: function() {
	            module.cache = {
	              occurred : {},
	              screen   : {},
	              element  : {},
	            };
	          },
	          image: function() {
	            var
	              src = $module.data(metadata.src)
	            ;
	            if(src) {
	              module.verbose('Lazy loading image', src);
	              settings.once           = true;
	              settings.observeChanges = false;

	              // show when top visible
	              settings.onOnScreen = function() {
	                module.debug('Image on screen', element);
	                module.precache(src, function() {
	                  module.set.image(src);
	                });
	              };
	            }
	          },
	          fixed: function() {
	            module.debug('Setting up fixed');
	            settings.once           = false;
	            settings.observeChanges = false;
	            settings.initialCheck   = true;
	            settings.refreshOnLoad  = true;
	            if(!parameters.transition) {
	              settings.transition = false;
	            }
	            module.create.placeholder();
	            module.debug('Added placeholder', $placeholder);
	            settings.onTopPassed = function() {
	              module.debug('Element passed, adding fixed position', $module);
	              module.show.placeholder();
	              module.set.fixed();
	              if(settings.transition) {
	                if($.fn.transition !== undefined) {
	                  $module.transition(settings.transition, settings.duration);
	                }
	              }
	            };
	            settings.onTopPassedReverse = function() {
	              module.debug('Element returned to position, removing fixed', $module);
	              module.hide.placeholder();
	              module.remove.fixed();
	            };
	          }
	        },

	        create: {
	          placeholder: function() {
	            module.verbose('Creating fixed position placeholder');
	            $placeholder = $module
	              .clone(false)
	              .css('display', 'none')
	              .addClass(className.placeholder)
	              .insertAfter($module)
	            ;
	          }
	        },

	        show: {
	          placeholder: function() {
	            module.verbose('Showing placeholder');
	            $placeholder
	              .css('display', 'block')
	              .css('visibility', 'hidden')
	            ;
	          }
	        },
	        hide: {
	          placeholder: function() {
	            module.verbose('Hiding placeholder');
	            $placeholder
	              .css('display', 'none')
	              .css('visibility', '')
	            ;
	          }
	        },

	        set: {
	          fixed: function() {
	            module.verbose('Setting element to fixed position');
	            $module
	              .addClass(className.fixed)
	              .css({
	                position : 'fixed',
	                top      : settings.offset + 'px',
	                left     : 'auto',
	                zIndex   : '1'
	              })
	            ;
	          },
	          image: function(src) {
	            $module
	              .attr('src', src)
	            ;
	            if(settings.transition) {
	              if( $.fn.transition !== undefined ) {
	                $module.transition(settings.transition, settings.duration);
	              }
	              else {
	                $module.fadeIn(settings.duration);
	              }
	            }
	            else {
	              $module.show();
	            }
	          }
	        },

	        is: {
	          onScreen: function() {
	            var
	              calculations   = module.get.elementCalculations()
	            ;
	            return calculations.onScreen;
	          },
	          offScreen: function() {
	            var
	              calculations   = module.get.elementCalculations()
	            ;
	            return calculations.offScreen;
	          },
	          visible: function() {
	            if(module.cache && module.cache.element) {
	              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);
	            }
	            return false;
	          }
	        },

	        refresh: function() {
	          module.debug('Refreshing constants (width/height)');
	          if(settings.type == 'fixed') {
	            module.remove.fixed();
	            module.remove.occurred();
	          }
	          module.reset();
	          module.save.position();
	          if(settings.checkOnRefresh) {
	            module.checkVisibility();
	          }
	          settings.onRefresh.call(element);
	        },

	        reset: function() {
	          module.verbose('Reseting all cached values');
	          if( $.isPlainObject(module.cache) ) {
	            module.cache.screen = {};
	            module.cache.element = {};
	          }
	        },

	        checkVisibility: function(scroll) {
	          module.verbose('Checking visibility of element', module.cache.element);

	          if( !disabled && module.is.visible() ) {

	            // save scroll position
	            module.save.scroll(scroll);

	            // update calculations derived from scroll
	            module.save.calculations();

	            // percentage
	            module.passed();

	            // reverse (must be first)
	            module.passingReverse();
	            module.topVisibleReverse();
	            module.bottomVisibleReverse();
	            module.topPassedReverse();
	            module.bottomPassedReverse();

	            // one time
	            module.onScreen();
	            module.offScreen();
	            module.passing();
	            module.topVisible();
	            module.bottomVisible();
	            module.topPassed();
	            module.bottomPassed();

	            // on update callback
	            if(settings.onUpdate) {
	              settings.onUpdate.call(element, module.get.elementCalculations());
	            }
	          }
	        },

	        passed: function(amount, newCallback) {
	          var
	            calculations   = module.get.elementCalculations(),
	            amountInPixels
	          ;
	          // assign callback
	          if(amount && newCallback) {
	            settings.onPassed[amount] = newCallback;
	          }
	          else if(amount !== undefined) {
	            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);
	          }
	          else if(calculations.passing) {
	            $.each(settings.onPassed, function(amount, callback) {
	              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {
	                module.execute(callback, amount);
	              }
	              else if(!settings.once) {
	                module.remove.occurred(callback);
	              }
	            });
	          }
	        },

	        onScreen: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onOnScreen,
	            callbackName = 'onScreen'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for onScreen', newCallback);
	            settings.onOnScreen = newCallback;
	          }
	          if(calculations.onScreen) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback !== undefined) {
	            return calculations.onOnScreen;
	          }
	        },

	        offScreen: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onOffScreen,
	            callbackName = 'offScreen'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for offScreen', newCallback);
	            settings.onOffScreen = newCallback;
	          }
	          if(calculations.offScreen) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback !== undefined) {
	            return calculations.onOffScreen;
	          }
	        },

	        passing: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onPassing,
	            callbackName = 'passing'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for passing', newCallback);
	            settings.onPassing = newCallback;
	          }
	          if(calculations.passing) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback !== undefined) {
	            return calculations.passing;
	          }
	        },


	        topVisible: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onTopVisible,
	            callbackName = 'topVisible'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for top visible', newCallback);
	            settings.onTopVisible = newCallback;
	          }
	          if(calculations.topVisible) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return calculations.topVisible;
	          }
	        },

	        bottomVisible: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onBottomVisible,
	            callbackName = 'bottomVisible'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for bottom visible', newCallback);
	            settings.onBottomVisible = newCallback;
	          }
	          if(calculations.bottomVisible) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return calculations.bottomVisible;
	          }
	        },

	        topPassed: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onTopPassed,
	            callbackName = 'topPassed'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for top passed', newCallback);
	            settings.onTopPassed = newCallback;
	          }
	          if(calculations.topPassed) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return calculations.topPassed;
	          }
	        },

	        bottomPassed: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onBottomPassed,
	            callbackName = 'bottomPassed'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for bottom passed', newCallback);
	            settings.onBottomPassed = newCallback;
	          }
	          if(calculations.bottomPassed) {
	            module.execute(callback, callbackName);
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return calculations.bottomPassed;
	          }
	        },

	        passingReverse: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onPassingReverse,
	            callbackName = 'passingReverse'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for passing reverse', newCallback);
	            settings.onPassingReverse = newCallback;
	          }
	          if(!calculations.passing) {
	            if(module.get.occurred('passing')) {
	              module.execute(callback, callbackName);
	            }
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback !== undefined) {
	            return !calculations.passing;
	          }
	        },


	        topVisibleReverse: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onTopVisibleReverse,
	            callbackName = 'topVisibleReverse'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for top visible reverse', newCallback);
	            settings.onTopVisibleReverse = newCallback;
	          }
	          if(!calculations.topVisible) {
	            if(module.get.occurred('topVisible')) {
	              module.execute(callback, callbackName);
	            }
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return !calculations.topVisible;
	          }
	        },

	        bottomVisibleReverse: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onBottomVisibleReverse,
	            callbackName = 'bottomVisibleReverse'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for bottom visible reverse', newCallback);
	            settings.onBottomVisibleReverse = newCallback;
	          }
	          if(!calculations.bottomVisible) {
	            if(module.get.occurred('bottomVisible')) {
	              module.execute(callback, callbackName);
	            }
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return !calculations.bottomVisible;
	          }
	        },

	        topPassedReverse: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onTopPassedReverse,
	            callbackName = 'topPassedReverse'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for top passed reverse', newCallback);
	            settings.onTopPassedReverse = newCallback;
	          }
	          if(!calculations.topPassed) {
	            if(module.get.occurred('topPassed')) {
	              module.execute(callback, callbackName);
	            }
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return !calculations.onTopPassed;
	          }
	        },

	        bottomPassedReverse: function(newCallback) {
	          var
	            calculations = module.get.elementCalculations(),
	            callback     = newCallback || settings.onBottomPassedReverse,
	            callbackName = 'bottomPassedReverse'
	          ;
	          if(newCallback) {
	            module.debug('Adding callback for bottom passed reverse', newCallback);
	            settings.onBottomPassedReverse = newCallback;
	          }
	          if(!calculations.bottomPassed) {
	            if(module.get.occurred('bottomPassed')) {
	              module.execute(callback, callbackName);
	            }
	          }
	          else if(!settings.once) {
	            module.remove.occurred(callbackName);
	          }
	          if(newCallback === undefined) {
	            return !calculations.bottomPassed;
	          }
	        },

	        execute: function(callback, callbackName) {
	          var
	            calculations = module.get.elementCalculations(),
	            screen       = module.get.screenCalculations()
	          ;
	          callback = callback || false;
	          if(callback) {
	            if(settings.continuous) {
	              module.debug('Callback being called continuously', callbackName, calculations);
	              callback.call(element, calculations, screen);
	            }
	            else if(!module.get.occurred(callbackName)) {
	              module.debug('Conditions met', callbackName, calculations);
	              callback.call(element, calculations, screen);
	            }
	          }
	          module.save.occurred(callbackName);
	        },

	        remove: {
	          fixed: function() {
	            module.debug('Removing fixed position');
	            $module
	              .removeClass(className.fixed)
	              .css({
	                position : '',
	                top      : '',
	                left     : '',
	                zIndex   : ''
	              })
	            ;
	          },
	          occurred: function(callback) {
	            if(callback) {
	              var
	                occurred = module.cache.occurred
	              ;
	              if(occurred[callback] !== undefined && occurred[callback] === true) {
	                module.debug('Callback can now be called again', callback);
	                module.cache.occurred[callback] = false;
	              }
	            }
	            else {
	              module.cache.occurred = {};
	            }
	          }
	        },

	        save: {
	          calculations: function() {
	            module.verbose('Saving all calculations necessary to determine positioning');
	            module.save.direction();
	            module.save.screenCalculations();
	            module.save.elementCalculations();
	          },
	          occurred: function(callback) {
	            if(callback) {
	              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {
	                module.verbose('Saving callback occurred', callback);
	                module.cache.occurred[callback] = true;
	              }
	            }
	          },
	          scroll: function(scrollPosition) {
	            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;
	            module.cache.scroll = scrollPosition;
	          },
	          direction: function() {
	            var
	              scroll     = module.get.scroll(),
	              lastScroll = module.get.lastScroll(),
	              direction
	            ;
	            if(scroll > lastScroll && lastScroll) {
	              direction = 'down';
	            }
	            else if(scroll < lastScroll && lastScroll) {
	              direction = 'up';
	            }
	            else {
	              direction = 'static';
	            }
	            module.cache.direction = direction;
	            return module.cache.direction;
	          },
	          elementPosition: function() {
	            var
	              element = module.cache.element,
	              screen  = module.get.screenSize()
	            ;
	            module.verbose('Saving element position');
	            // (quicker than $.extend)
	            element.fits          = (element.height < screen.height);
	            element.offset        = $module.offset();
	            element.width         = $module.outerWidth();
	            element.height        = $module.outerHeight();
	            // store
	            module.cache.element = element;
	            return element;
	          },
	          elementCalculations: function() {
	            var
	              screen     = module.get.screenCalculations(),
	              element    = module.get.elementPosition()
	            ;
	            // offset
	            if(settings.includeMargin) {
	              element.margin        = {};
	              element.margin.top    = parseInt($module.css('margin-top'), 10);
	              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);
	              element.top    = element.offset.top - element.margin.top;
	              element.bottom = element.offset.top + element.height + element.margin.bottom;
	            }
	            else {
	              element.top    = element.offset.top;
	              element.bottom = element.offset.top + element.height;
	            }

	            // visibility
	            element.topVisible       = (screen.bottom >= element.top);
	            element.topPassed        = (screen.top >= element.top);
	            element.bottomVisible    = (screen.bottom >= element.bottom);
	            element.bottomPassed     = (screen.top >= element.bottom);
	            element.pixelsPassed     = 0;
	            element.percentagePassed = 0;

	            // meta calculations
	            element.onScreen  = (element.topVisible && !element.bottomPassed);
	            element.passing   = (element.topPassed && !element.bottomPassed);
	            element.offScreen = (!element.onScreen);

	            // passing calculations
	            if(element.passing) {
	              element.pixelsPassed     = (screen.top - element.top);
	              element.percentagePassed = (screen.top - element.top) / element.height;
	            }
	            module.cache.element = element;
	            module.verbose('Updated element calculations', element);
	            return element;
	          },
	          screenCalculations: function() {
	            var
	              scroll = module.get.scroll()
	            ;
	            module.save.direction();
	            module.cache.screen.top    = scroll;
	            module.cache.screen.bottom = scroll + module.cache.screen.height;
	            return module.cache.screen;
	          },
	          screenSize: function() {
	            module.verbose('Saving window position');
	            module.cache.screen = {
	              height: $context.height()
	            };
	          },
	          position: function() {
	            module.save.screenSize();
	            module.save.elementPosition();
	          }
	        },

	        get: {
	          pixelsPassed: function(amount) {
	            var
	              element = module.get.elementCalculations()
	            ;
	            if(amount.search('%') > -1) {
	              return ( element.height * (parseInt(amount, 10) / 100) );
	            }
	            return parseInt(amount, 10);
	          },
	          occurred: function(callback) {
	            return (module.cache.occurred !== undefined)
	              ? module.cache.occurred[callback] || false
	              : false
	            ;
	          },
	          direction: function() {
	            if(module.cache.direction === undefined) {
	              module.save.direction();
	            }
	            return module.cache.direction;
	          },
	          elementPosition: function() {
	            if(module.cache.element === undefined) {
	              module.save.elementPosition();
	            }
	            return module.cache.element;
	          },
	          elementCalculations: function() {
	            if(module.cache.element === undefined) {
	              module.save.elementCalculations();
	            }
	            return module.cache.element;
	          },
	          screenCalculations: function() {
	            if(module.cache.screen === undefined) {
	              module.save.screenCalculations();
	            }
	            return module.cache.screen;
	          },
	          screenSize: function() {
	            if(module.cache.screen === undefined) {
	              module.save.screenSize();
	            }
	            return module.cache.screen;
	          },
	          scroll: function() {
	            if(module.cache.scroll === undefined) {
	              module.save.scroll();
	            }
	            return module.cache.scroll;
	          },
	          lastScroll: function() {
	            if(module.cache.screen === undefined) {
	              module.debug('First scroll event, no last scroll could be found');
	              return false;
	            }
	            return module.cache.screen.top;
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Element'        : element,
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 500);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        instance.save.scroll();
	        instance.save.calculations();
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          instance.invoke('destroy');
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.visibility.settings = {

	  name                   : 'Visibility',
	  namespace              : 'visibility',

	  debug                  : false,
	  verbose                : false,
	  performance            : true,

	  // whether to use mutation observers to follow changes
	  observeChanges         : true,

	  // check position immediately on init
	  initialCheck           : true,

	  // whether to refresh calculations after all page images load
	  refreshOnLoad          : true,

	  // whether to refresh calculations after page resize event
	  refreshOnResize        : true,

	  // should call callbacks on refresh event (resize, etc)
	  checkOnRefresh         : true,

	  // callback should only occur one time
	  once                   : true,

	  // callback should fire continuously whe evaluates to true
	  continuous             : false,

	  // offset to use with scroll top
	  offset                 : 0,

	  // whether to include margin in elements position
	  includeMargin          : false,

	  // scroll context for visibility checks
	  context                : window,

	  // visibility check delay in ms (defaults to animationFrame)
	  throttle               : false,

	  // special visibility type (image, fixed)
	  type                   : false,

	  // image only animation settings
	  transition             : 'fade in',
	  duration               : 1000,

	  // array of callbacks for percentage
	  onPassed               : {},

	  // standard callbacks
	  onOnScreen             : false,
	  onOffScreen            : false,
	  onPassing              : false,
	  onTopVisible           : false,
	  onBottomVisible        : false,
	  onTopPassed            : false,
	  onBottomPassed         : false,

	  // reverse callbacks
	  onPassingReverse       : false,
	  onTopVisibleReverse    : false,
	  onBottomVisibleReverse : false,
	  onTopPassedReverse     : false,
	  onBottomPassedReverse  : false,

	  // utility callbacks
	  onUpdate               : false, // disabled by default for performance
	  onRefresh              : function(){},

	  metadata : {
	    src: 'src'
	  },

	  className: {
	    fixed       : 'fixed',
	    placeholder : 'placeholder'
	  },

	  error : {
	    method  : 'The method you called is not defined.',
	    visible : 'Element is hidden, you must call refresh after element becomes visible'
	  }

	};

	})( jQuery, window, document );
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },

/***/ 13:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery v3.0.0 | (c) jQuery Foundation | jquery.org/license */
	!function(a,b){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){"use strict";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement("script");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q="3.0.0",r=function(a,b){return new r.fn.init(a,b)},s=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:f.call(this)},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:"jQuery"+(q+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return("number"===b||"string"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return a&&"[object Object]"===k.call(a)?(b=e(a))?(c=l.call(b,"constructor")&&b.constructor,"function"==typeof c&&m.call(c)===n):!0:!1},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?j[k.call(a)]||"object":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,"ms-").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(s,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,"string"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;d>f;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;return"string"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a)?(d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e):void 0},now:Date.now,support:o}),"function"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){j["[object "+b+"]"]=b.toLowerCase()});function w(a){var b=!!a&&"length"in a&&a.length,c=r.type(a);return"function"===c||r.isWindow(a)?!1:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},J="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",K="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\x00-\\xa0])+",M="\\["+K+"*("+L+")(?:"+K+"*([*^$|!~]?=)"+K+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+L+"))|)"+K+"*\\]",N=":("+L+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+M+")*)|.*)\\)|)",O=new RegExp(K+"+","g"),P=new RegExp("^"+K+"+|((?:^|[^\\\\])(?:\\\\.)*)"+K+"+$","g"),Q=new RegExp("^"+K+"*,"+K+"*"),R=new RegExp("^"+K+"*([>+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(N),U=new RegExp("^"+L+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+N),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),aa=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,ca=function(a,b){return b?"\x00"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0},{dir:"parentNode",next:"legend"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(ba,ca):b.setAttribute("id",k=u),o=g(a),h=o.length;while(h--)o[h]="#"+k+" "+sa(o[h]);r=o.join(","),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(P,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("fieldset");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return function(b){return"label"in b&&b.disabled===a||"form"in b&&b.disabled===a||"form"in b&&b.disabled===!1&&(b.isDisabled===a||b.isDisabled!==!a&&("label"in b||!ea(b))!==a)}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return"undefined"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){a.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+K+"*[*^$|!~]?="),2!==a.querySelectorAll(":enabled").length&&q.push(":enabled",":disabled"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(":disabled").length&&q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"*"),s.call(a,"[s!='']:x"),r.push("!=",N)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+"").replace(ba,ca)},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||"").replace(_,aa),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(O," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[0>c?c+b:c]}),even:pa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P," ")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&"parentNode"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e)}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(P,"$1"),c,e>i&&ya(a.slice(i,e)),f>e&&ya(a=a.slice(e)),f>e&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(_,aa),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=V.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(_,aa),$.test(j[0].type)&&qa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&sa(j),!a)return G.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||$.test(a)&&qa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("fieldset"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(J,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[":"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,C=/^.[^:#\[\.,]*$/;function D(a,b,c){if(r.isFunction(b))return r.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return r.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(C.test(b))return r.filter(b,a,c);b=r.filter(b,a)}return r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType})}r.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if("string"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;d>b;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;d>b;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,"string"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,"string"==typeof a){if(e="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g="string"!=typeof a&&r(a);if(!A.test(a))for(;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,"parentNode")},parentsUntil:function(a,b,c){return y(a,"parentNode",c)},next:function(a){return J(a,"nextSibling")},prev:function(a){return J(a,"previousSibling")},nextAll:function(a){return y(a,"nextSibling")},prevAll:function(a){return y(a,"previousSibling")},nextUntil:function(a,b,c){return y(a,"nextSibling",c)},prevUntil:function(a,b,c){return y(a,"previousSibling",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/\S+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a="string"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&"string"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],d="pending",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+"With"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(f>b)){if(a=d.apply(h,i),a===c.promise())throw new TypeError("Thenable self-resolution");j=a&&("object"==typeof a||"function"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+"With"](this===f?void 0:this,arguments),this},f[b[0]+"With"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(1>=b&&(O(a,g.done(h(c)).resolve,g.reject),"pending"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn("jQuery.Deferred exception: "+b.message,b.stack,c)};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener("DOMContentLoaded",R),a.removeEventListener("load",R),r.ready()}"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener("DOMContentLoaded",R),a.addEventListener("load",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){
	return j.call(r(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if("string"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&"string"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Y=/[A-Z]/g;function Z(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(Y,"-$&").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:X.test(c)?JSON.parse(c):c}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=r.camelCase(d.slice(5)),Z(f,d,e[d])));V.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=Z(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks("once memory").add(function(){V.remove(a,[b+"queue",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=V.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var $=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,_=new RegExp("^(?:([+-])=|)("+$+")([a-z%]*)$","i"),aa=["Top","Right","Bottom","Left"],ba=function(a,b){return a=b||a,"none"===a.style.display||""===a.style.display&&r.contains(a.ownerDocument,a)&&"none"===r.css(a,"display")},ca=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function da(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,"")},i=h(),j=c&&c[3]||(r.cssNumber[b]?"":"px"),k=(r.cssNumber[b]||"px"!==j&&+i)&&_.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||".5",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ea={};function fa(a){var b,c=a.ownerDocument,d=a.nodeName,e=ea[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,"display"),b.parentNode.removeChild(b),"none"===e&&(e="block"),ea[d]=e,e)}function ga(a,b){for(var c,d,e=[],f=0,g=a.length;g>f;f++)d=a[f],d.style&&(c=d.style.display,b?("none"===c&&(e[f]=V.get(d,"display")||null,e[f]||(d.style.display="")),""===d.style.display&&ba(d)&&(e[f]=fa(d))):"none"!==c&&(e[f]="none",V.set(d,"display",c)));for(f=0;g>f;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ga(this,!0)},hide:function(){return ga(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){ba(this)?r(this).show():r(this).hide()})}});var ha=/^(?:checkbox|radio)$/i,ia=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ja=/^$|\/(?:java|ecma)script/i,ka={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ka.optgroup=ka.option,ka.tbody=ka.tfoot=ka.colgroup=ka.caption=ka.thead,ka.th=ka.td;function la(a,b){var c="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function ma(a,b){for(var c=0,d=a.length;d>c;c++)V.set(a[c],"globalEval",!b||V.get(b[c],"globalEval"))}var na=/<|&#?\w+;/;function oa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;o>n;n++)if(f=a[n],f||0===f)if("object"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(na.test(f)){g=g||l.appendChild(b.createElement("div")),h=(ia.exec(f)||["",""])[1].toLowerCase(),i=ka[h]||ka._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=""}else m.push(b.createTextNode(f));l.textContent="",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=la(l.appendChild(f),"script"),j&&ma(g),c){k=0;while(f=g[k++])ja.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var pa=d.documentElement,qa=/^key/,ra=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,sa=/^([^.]*)(?:\.(.+)|)/;function ta(){return!0}function ua(){return!1}function va(){try{return d.activeElement}catch(a){}}function wa(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)wa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ua;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(pa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return"undefined"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(K)||[""],j=b.length;while(j--)h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||"").match(K)||[""],j=b.length;while(j--)if(h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+o.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,"handle events")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,"events")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&("click"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?r(e,this).index(i)>-1:r.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){return this.originalEvent?b(this.originalEvent):void 0}:function(){return this.originalEvent?this.originalEvent[a]:void 0},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==va()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===va()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&r.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return r.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ta:ua,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:ua,isPropagationStopped:ua,isImmediatePropagationStopped:ua,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ta,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ta,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ta,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&qa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ra.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return wa(this,a,b,c,d)},one:function(a,b,c,d){return wa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&"function"!=typeof b||(c=b,b=void 0),c===!1&&(c=ua),this.each(function(){r.event.remove(this,a,c,b)})}});var xa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,ya=/<script|<style|<link/i,za=/checked\s*(?:[^=]|=\s*.checked.)/i,Aa=/^true\/(.*)/,Ba=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ca(a,b){return r.nodeName(a,"table")&&r.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a:a}function Da(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function Ea(a){var b=Aa.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Fa(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ga(a,b){var c=b.nodeName.toLowerCase();"input"===c&&ha.test(a.type)?b.checked=a.checked:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}function Ha(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&"string"==typeof q&&!o.checkClone&&za.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(m&&(e=oa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(la(e,"script"),Da),i=h.length;m>l;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,la(j,"script"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ea),l=0;i>l;l++)j=h[l],ja.test(j.type||"")&&!V.access(j,"globalEval")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ba,""),k))}return a}function Ia(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(la(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&ma(la(d,"script")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(xa,"<$1></$2>")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=la(h),f=la(a),d=0,e=f.length;e>d;d++)Ga(f[d],g[d]);if(b)if(c)for(f=f||la(a),g=g||la(h),d=0,e=f.length;e>d;d++)Fa(f[d],g[d]);else Fa(a,h);return g=la(h,"script"),g.length>0&&ma(g,!i&&la(a,"script")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ia(this,a,!0)},remove:function(a){return Ia(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.appendChild(a)}})},prepend:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(la(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!ya.test(a)&&!ka[(ia.exec(a)||["",""])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(la(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ha(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(la(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;f>=g;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ja=/^margin/,Ka=new RegExp("^("+$+")(?!px)[a-z%]+$","i"),La=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i.innerHTML="",pa.appendChild(h);var b=a.getComputedStyle(i);c="1%"!==b.top,g="2px"===b.marginLeft,e="4px"===b.width,i.style.marginRight="50%",f="4px"===b.marginRight,pa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement("div"),i=d.createElement("div");i.style&&(i.style.backgroundClip="content-box",i.cloneNode(!0).style.backgroundClip="",o.clearCloneStyle="content-box"===i.style.backgroundClip,h.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Ma(a,b,c){var d,e,f,g,h=a.style;return c=c||La(a),c&&(g=c.getPropertyValue(b)||c[b],""!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ka.test(g)&&Ja.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function Na(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Oa=/^(none|table(?!-c[ea]).+)/,Pa={position:"absolute",visibility:"hidden",display:"block"},Qa={letterSpacing:"0",fontWeight:"400"},Ra=["Webkit","Moz","ms"],Sa=d.createElement("div").style;function Ta(a){if(a in Sa)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ra.length;while(c--)if(a=Ra[c]+b,a in Sa)return a}function Ua(a,b,c){var d=_.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||"px"):b}function Va(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=r.css(a,c+aa[f],!0,e)),d?("content"===c&&(g-=r.css(a,"padding"+aa[f],!0,e)),"margin"!==c&&(g-=r.css(a,"border"+aa[f]+"Width",!0,e))):(g+=r.css(a,"padding"+aa[f],!0,e),"padding"!==c&&(g+=r.css(a,"border"+aa[f]+"Width",!0,e)));return g}function Wa(a,b,c){var d,e=!0,f=La(a),g="border-box"===r.css(a,"boxSizing",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),0>=d||null==d){if(d=Ma(a,b,f),(0>d||null==d)&&(d=a.style[b]),Ka.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Va(a,b,c||(g?"border":"content"),e,f)+"px"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ma(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ta(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=_.exec(c))&&e[1]&&(c=da(a,b,e),f="number"),null!=c&&c===c&&("number"===f&&(c+=e&&e[3]||(r.cssNumber[h]?"":"px")),o.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ta(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Ma(a,b,d)),"normal"===e&&b in Qa&&(e=Qa[b]),""===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each(["height","width"],function(a,b){r.cssHooks[b]={get:function(a,c,d){return c?!Oa.test(r.css(a,"display"))||a.getClientRects().length&&a.getBoundingClientRect().width?Wa(a,b,d):ca(a,Pa,function(){return Wa(a,b,d)}):void 0},set:function(a,c,d){var e,f=d&&La(a),g=d&&Va(a,b,d,"border-box"===r.css(a,"boxSizing",!1,f),f);return g&&(e=_.exec(c))&&"px"!==(e[3]||"px")&&(a.style[b]=c,c=r.css(a,b)),Ua(a,c,g)}}}),r.cssHooks.marginLeft=Na(o.reliableMarginLeft,function(a,b){return b?(parseFloat(Ma(a,"marginLeft"))||a.getBoundingClientRect().left-ca(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+"px":void 0}),r.each({margin:"",padding:"",border:"Width"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+aa[d]+b]=f[d]||f[d-2]||f[0];return e}},Ja.test(a)||(r.cssHooks[a+b].set=Ua)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=La(a),e=b.length;e>g;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Xa(a,b,c,d,e){return new Xa.prototype.init(a,b,c,d,e)}r.Tween=Xa,Xa.prototype={constructor:Xa,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?"":"px")},cur:function(){var a=Xa.propHooks[this.prop];return a&&a.get?a.get(this):Xa.propHooks._default.get(this)},run:function(a){var b,c=Xa.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Xa.propHooks._default.set(this),this}},Xa.prototype.init.prototype=Xa.prototype,Xa.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,""),b&&"auto"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Xa.propHooks.scrollTop=Xa.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"},r.fx=Xa.prototype.init,r.fx.step={};var Ya,Za,$a=/^(?:toggle|show|hide)$/,_a=/queueHooks$/;function ab(){Za&&(a.requestAnimationFrame(ab),r.fx.tick())}function bb(){return a.setTimeout(function(){Ya=void 0}),Ya=r.now()}function cb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=aa[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function db(a,b,c){for(var d,e=(gb.tweeners[b]||[]).concat(gb.tweeners["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function eb(a,b,c){var d,e,f,g,h,i,j,k,l="width"in b||"height"in b,m=this,n={},o=a.style,p=a.nodeType&&ba(a),q=V.get(a,"fxshow");c.queue||(g=r._queueHooks(a,"fx"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,"fx").length||g.empty.fire()})}));for(d in b)if(e=b[d],$a.test(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,"display")),k=r.css(a,"display"),"none"===k&&(j?k=j:(ga([a],!0),j=a.style.display||j,k=r.css(a,"display"),ga([a]))),("inline"===k||"inline-block"===k&&null!=j)&&"none"===r.css(a,"float")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j="none"===k?"":k)),o.display="inline-block")),c.overflow&&(o.overflow="hidden",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?"hidden"in q&&(p=q.hidden):q=V.access(a,"fxshow",{display:j}),f&&(q.hidden=!p),p&&ga([a],!0),m.done(function(){p||ga([a]),V.remove(a,"fxshow");for(d in n)r.style(a,d,n[d])})),i=db(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function fb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function gb(a,b,c){var d,e,f=0,g=gb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Ya||bb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Ya||bb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(fb(k,j.opts.specialEasing);g>f;f++)if(d=gb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,db,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(gb,{tweeners:{"*":[function(a,b){var c=this.createTween(a,b);return da(c.elem,a,_.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=["*"]):a=a.match(K);for(var c,d=0,e=a.length;e>d;d++)c=a[d],gb.tweeners[c]=gb.tweeners[c]||[],gb.tweeners[c].unshift(b)},prefilters:[eb],prefilter:function(a,b){b?gb.prefilters.unshift(a):gb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&"object"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:e.duration="number"==typeof e.duration?e.duration:e.duration in r.fx.speeds?r.fx.speeds[e.duration]:r.fx.speeds._default,null!=e.queue&&e.queue!==!0||(e.queue="fx"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ba).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=gb(this,r.extend({},a),f);(e||V.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&_a.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=V.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each(["toggle","show","hide"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(cb(b,!0),a,d,e)}}),r.each({slideDown:cb("show"),slideUp:cb("hide"),slideToggle:cb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Ya=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Ya=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){Za||(Za=a.requestAnimationFrame?a.requestAnimationFrame(ab):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame(Za):a.clearInterval(Za),Za=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement("input"),b=d.createElement("select"),c=b.appendChild(d.createElement("option"));a.type="checkbox",o.checkOn=""!==a.value,o.optSelected=c.selected,a=d.createElement("input"),a.value="t",a.type="radio",o.radioValue="t"===a.value}();var hb,ib=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return"undefined"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?hb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&"radio"===b&&r.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c);
	}}),hb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\w+/g),function(a,b){var c=ib[b]||r.find.attr;ib[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=ib[g],ib[g]=e,e=null!=c(a,b,d)?g:null,ib[g]=f),e}});var jb=/^(?:input|select|textarea|button)$/i,kb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,"tabindex");return b?parseInt(b,10):jb.test(a.nodeName)||kb.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){r.propFix[this.toLowerCase()]=this});var lb=/[\t\r\n\f]/g;function mb(a){return a.getAttribute&&a.getAttribute("class")||""}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,mb(this)))});if("string"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=mb(c),d=1===c.nodeType&&(" "+e+" ").replace(lb," ")){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,mb(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=mb(c),d=1===c.nodeType&&(" "+e+" ").replace(lb," ")){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,mb(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=mb(this),b&&V.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||a===!1?"":V.get(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+mb(c)+" ").replace(lb," ").indexOf(b)>-1)return!0;return!1}});var nb=/\r/g,ob=/[\x20\t\r\n\f]+/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e="":"number"==typeof e?e+="":r.isArray(e)&&(e=r.map(e,function(a){return null==a?"":a+""})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(nb,""):null==c?"":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,"value");return null!=b?b:r.trim(r.text(a)).replace(ob," ")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,"optgroup"))){if(b=r(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each(["radio","checkbox"],function(){r.valHooks[this]={set:function(a,b){return r.isArray(b)?a.checked=r.inArray(r(a).val(),b)>-1:void 0}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,"type")?b.type:b,q=l.call(b,"namespace")?b.namespace.split("."):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(".")>-1&&(q=p.split("."),p=q.shift(),q.sort()),k=p.indexOf(":")<0&&"on"+p,b=b[r.expando]?b:new r.Event(p,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,"events")||{})[b.type]&&V.get(h,"handle"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?r.event.trigger(a,b,c,!0):void 0}}),r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin="onfocusin"in a,o.focusin||r.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\?/;r.parseXML=function(b){var c;if(!b||"string"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,"text/xml")}catch(d){c=void 0}return c&&!c.getElementsByTagName("parsererror").length||r.error("Invalid XML: "+b),c};var tb=/\[\]$/,ub=/\r?\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==r.type(b))d(a,b);else for(e in b)xb(a+"["+e+"]",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(null==c?"":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join("&")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,"elements");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(":disabled")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ha.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,"\r\n")}}):{name:b.name,value:c.replace(ub,"\r\n")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \t]*([^\r\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\/\//,Fb={},Gb={},Hb="*/".concat("*"),Ib=d.createElement("a");Ib.href=qb.href;function Jb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:"GET",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Hb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks("once memory"),u=o.statusCode||{},v={},w={},x="canceled",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+"").replace(Eb,qb.protocol+"//"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||"*").toLowerCase().match(K)||[""],null==o.crossDomain){j=d.createElement("a");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+"//"+Ib.host!=j.protocol+"//"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&"string"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger("ajaxStart"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,""),o.hasContent?o.data&&o.processData&&0===(o.contentType||"").indexOf("application/x-www-form-urlencoded")&&(o.data=o.data.replace(yb,"+")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?"&":"?")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,""),n=(sb.test(f)?"&":"?")+"_="+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader("If-Modified-Since",r.lastModified[f]),r.etag[f]&&y.setRequestHeader("If-None-Match",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader("Content-Type",o.contentType),y.setRequestHeader("Accept",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+("*"!==o.dataTypes[0]?", "+Hb+"; q=0.01":""):o.accepts["*"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x="abort",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger("ajaxSend",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort("timeout")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,"No Transport");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||"",y.readyState=b>0?4:0,j=b>=200&&300>b||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader("Last-Modified"),w&&(r.lastModified[f]=w),w=y.getResponseHeader("etag"),w&&(r.etag[f]=w)),204===b||"HEAD"===o.type?x="nocontent":304===b?x="notmodified":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x="error",0>b&&(b=0))),y.status=b,y.statusText=(c||x)+"",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?"ajaxSuccess":"ajaxError",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger("ajaxComplete",[y,o]),--r.active||r.event.trigger("ajaxStop")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,"json")},getScript:function(a,b){return r.get(a,void 0,b,"script")}}),r.each(["get","post"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not("body").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&"withCredentials"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;return o.cors||Pb&&!b.crossDomain?{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!=typeof h.status?f(0,"error"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c("error"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c("abort");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}:void 0}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),r.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r("<script>").prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&f("error"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\?(?=&|$)|\?\?/;r.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Qb.pop()||r.expando+"_"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Rb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,"$1"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||r.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument("").body;return a.innerHTML="<form></form><form></form>",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if("string"!=typeof a)return[];"boolean"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(""),e=b.createElement("base"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=oa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=r.trim(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&r.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?r("<div>").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,"position"),l=r(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=r.css(a,"top"),i=r.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===r.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],"html")||(d=a.offset()),d={top:d.top+r.css(a[0],"borderTopWidth",!0),left:d.left+r.css(a[0],"borderLeftWidth",!0)}),{top:b.top-d.top-r.css(c,"marginTop",!0),left:b.left-d.left-r.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&"static"===r.css(a,"position"))a=a.offsetParent;return a||pa})}}),r.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each(["top","left"],function(a,b){r.cssHooks[b]=Na(o.pixelPosition,function(a,c){return c?(c=Ma(a,b),Ka.test(c)?r(a).position()[b]+"px":c):void 0})}),r.each({Height:"height",Width:"width"},function(a,b){r.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||"boolean"!=typeof e),h=c||(e===!0||f===!0?"margin":"border");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf("outer")?b["inner"+a]:b.document.documentElement["client"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body["scroll"+a],f["scroll"+a],b.body["offset"+a],f["offset"+a],f["client"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}}),r.parseJSON=JSON.parse,"function"=="function"&&__webpack_require__(14)&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return r}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});


/***/ },

/***/ 14:
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },

/***/ 15:
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },

/***/ 20:
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/* WEBPACK VAR INJECTION */(function(_) {/**
	 * React v15.0.0
	 *
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	!function(e){if(true)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.React=e()}}(function(){return function e(t,n,r){function o(i,u){if(!n[i]){if(!t[i]){var s="function"==typeof require&&require;if(!u&&s)return require(i,!0);if(a)return a(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[i]={exports:{}};t[i][0].call(c.exports,function(e){var n=t[i][1][e];return o(n?n:e)},c,c.exports,e,t,n,r)}return n[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(e,t,n){"use strict";var r=e(38),o=e(148),a={focusDOMComponent:function(){o(r.getNodeFromInstance(this))}};t.exports=a},{148:148,38:38}],2:[function(e,t,n){"use strict";function r(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function o(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function a(e){switch(e){case M.topCompositionStart:return S.compositionStart;case M.topCompositionEnd:return S.compositionEnd;case M.topCompositionUpdate:return S.compositionUpdate}}function i(e,t){return e===M.topKeyDown&&t.keyCode===_}function u(e,t){switch(e){case M.topKeyUp:return-1!==b.indexOf(t.keyCode);case M.topKeyDown:return t.keyCode!==_;case M.topKeyPress:case M.topMouseDown:case M.topBlur:return!0;default:return!1}}function s(e){var t=e.detail;return"object"==typeof t&&"data"in t?t.data:null}function l(e,t,n,r){var o,l;if(E?o=a(e):R?u(e,n)&&(o=S.compositionEnd):i(e,n)&&(o=S.compositionStart),!o)return null;T&&(R||o!==S.compositionStart?o===S.compositionEnd&&R&&(l=R.getData()):R=m.getPooled(r));var c=g.getPooled(o,t,n,r);if(l)c.data=l;else{var p=s(n);null!==p&&(c.data=p)}return h.accumulateTwoPhaseDispatches(c),c}function c(e,t){switch(e){case M.topCompositionEnd:return s(t);case M.topKeyPress:var n=t.which;return n!==P?null:(k=!0,w);case M.topTextInput:var r=t.data;return r===w&&k?null:r;default:return null}}function p(e,t){if(R){if(e===M.topCompositionEnd||u(e,t)){var n=R.getData();return m.release(R),R=null,n}return null}switch(e){case M.topPaste:return null;case M.topKeyPress:return t.which&&!o(t)?String.fromCharCode(t.which):null;case M.topCompositionEnd:return T?null:t.data;default:return null}}function d(e,t,n,r){var o;if(o=N?c(e,n):p(e,n),!o)return null;var a=y.getPooled(S.beforeInput,t,n,r);return a.data=o,h.accumulateTwoPhaseDispatches(a),a}var f=e(15),h=e(19),v=e(140),m=e(20),g=e(97),y=e(101),C=e(158),b=[9,13,27,32],_=229,E=v.canUseDOM&&"CompositionEvent"in window,x=null;v.canUseDOM&&"documentMode"in document&&(x=document.documentMode);var N=v.canUseDOM&&"TextEvent"in window&&!x&&!r(),T=v.canUseDOM&&(!E||x&&x>8&&11>=x),P=32,w=String.fromCharCode(P),M=f.topLevelTypes,S={beforeInput:{phasedRegistrationNames:{bubbled:C({onBeforeInput:null}),captured:C({onBeforeInputCapture:null})},dependencies:[M.topCompositionEnd,M.topKeyPress,M.topTextInput,M.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:C({onCompositionEnd:null}),captured:C({onCompositionEndCapture:null})},dependencies:[M.topBlur,M.topCompositionEnd,M.topKeyDown,M.topKeyPress,M.topKeyUp,M.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:C({onCompositionStart:null}),captured:C({onCompositionStartCapture:null})},dependencies:[M.topBlur,M.topCompositionStart,M.topKeyDown,M.topKeyPress,M.topKeyUp,M.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:C({onCompositionUpdate:null}),captured:C({onCompositionUpdateCapture:null})},dependencies:[M.topBlur,M.topCompositionUpdate,M.topKeyDown,M.topKeyPress,M.topKeyUp,M.topMouseDown]}},k=!1,R=null,D={eventTypes:S,extractEvents:function(e,t,n,r){return[l(e,t,n,r),d(e,t,n,r)]}};t.exports=D},{101:101,140:140,15:15,158:158,19:19,20:20,97:97}],3:[function(e,t,n){"use strict";function r(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var o={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},a=["Webkit","ms","Moz","O"];Object.keys(o).forEach(function(e){a.forEach(function(t){o[r(t,e)]=o[e]})});var i={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},u={isUnitlessNumber:o,shorthandPropertyExpansions:i};t.exports=u},{}],4:[function(e,t,n){"use strict";var r=e(3),o=e(140),a=e(78),i=(e(142),e(114)),u=e(153),s=e(160),l=(e(162),s(function(e){return u(e)})),c=!1,p="cssFloat";if(o.canUseDOM){var d=document.createElement("div").style;try{d.font=""}catch(f){c=!0}void 0===document.documentElement.style.cssFloat&&(p="styleFloat")}var h={createMarkupForStyles:function(e,t){var n="";for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];null!=o&&(n+=l(r)+":",n+=i(r,o,t)+";")}return n||null},setValueForStyles:function(e,t,n){var o=e.style;for(var a in t)if(t.hasOwnProperty(a)){var u=i(a,t[a],n);if("float"!==a&&"cssFloat"!==a||(a=p),u)o[a]=u;else{var s=c&&r.shorthandPropertyExpansions[a];if(s)for(var l in s)o[l]="";else o[a]=""}}}};a.measureMethods(h,"CSSPropertyOperations",{setValueForStyles:"setValueForStyles"}),t.exports=h},{114:114,140:140,142:142,153:153,160:160,162:162,3:3,78:78}],5:[function(e,t,n){"use strict";function r(){this._callbacks=null,this._contexts=null}var o=e(163),a=e(23),i=e(154);o(r.prototype,{enqueue:function(e,t){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(t)},notifyAll:function(){var e=this._callbacks,t=this._contexts;if(e){e.length!==t.length?i(!1):void 0,this._callbacks=null,this._contexts=null;for(var n=0;n<e.length;n++)e[n].call(t[n]);e.length=0,t.length=0}},checkpoint:function(){return this._callbacks?this._callbacks.length:0},rollback:function(e){this._callbacks&&(this._callbacks.length=e,this._contexts.length=e)},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),a.addPoolingTo(r),t.exports=r},{154:154,163:163,23:23}],6:[function(e,t,n){"use strict";function r(e){var t=e.nodeName&&e.nodeName.toLowerCase();return"select"===t||"input"===t&&"file"===e.type}function o(e){var t=N.getPooled(k.change,D,e,T(e));b.accumulateTwoPhaseDispatches(t),x.batchedUpdates(a,t)}function a(e){C.enqueueEvents(e),C.processEventQueue(!1)}function i(e,t){R=e,D=t,R.attachEvent("onchange",o)}function u(){R&&(R.detachEvent("onchange",o),R=null,D=null)}function s(e,t){return e===S.topChange?t:void 0}function l(e,t,n){e===S.topFocus?(u(),i(t,n)):e===S.topBlur&&u()}function c(e,t){R=e,D=t,I=e.value,O=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(R,"value",U),R.attachEvent?R.attachEvent("onpropertychange",d):R.addEventListener("propertychange",d,!1)}function p(){R&&(delete R.value,R.detachEvent?R.detachEvent("onpropertychange",d):R.removeEventListener("propertychange",d,!1),R=null,D=null,I=null,O=null)}function d(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==I&&(I=t,o(e))}}function f(e,t){return e===S.topInput?t:void 0}function h(e,t,n){e===S.topFocus?(p(),c(t,n)):e===S.topBlur&&p()}function v(e,t){return e!==S.topSelectionChange&&e!==S.topKeyUp&&e!==S.topKeyDown||!R||R.value===I?void 0:(I=R.value,D)}function m(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function g(e,t){return e===S.topClick?t:void 0}var y=e(15),C=e(16),b=e(19),_=e(140),E=e(38),x=e(90),N=e(99),T=e(122),P=e(129),w=e(130),M=e(158),S=y.topLevelTypes,k={change:{phasedRegistrationNames:{bubbled:M({onChange:null}),captured:M({onChangeCapture:null})},dependencies:[S.topBlur,S.topChange,S.topClick,S.topFocus,S.topInput,S.topKeyDown,S.topKeyUp,S.topSelectionChange]}},R=null,D=null,I=null,O=null,A=!1;_.canUseDOM&&(A=P("change")&&(!("documentMode"in document)||document.documentMode>8));var L=!1;_.canUseDOM&&(L=P("input")&&(!("documentMode"in document)||document.documentMode>11));var U={get:function(){return O.get.call(this)},set:function(e){I=""+e,O.set.call(this,e)}},F={eventTypes:k,extractEvents:function(e,t,n,o){var a,i,u=t?E.getNodeFromInstance(t):window;if(r(u)?A?a=s:i=l:w(u)?L?a=f:(a=v,i=h):m(u)&&(a=g),a){var c=a(e,t);if(c){var p=N.getPooled(k.change,c,n,o);return p.type="change",b.accumulateTwoPhaseDispatches(p),p}}i&&i(e,u,t)}};t.exports=F},{122:122,129:129,130:130,140:140,15:15,158:158,16:16,19:19,38:38,90:90,99:99}],7:[function(e,t,n){"use strict";function r(e,t){return Array.isArray(t)&&(t=t[1]),t?t.nextSibling:e.firstChild}function o(e,t,n){c.insertTreeBefore(e,t,n)}function a(e,t,n){Array.isArray(t)?u(e,t[0],t[1],n):g(e,t,n)}function i(e,t){if(Array.isArray(t)){var n=t[1];t=t[0],s(e,t,n),e.removeChild(n)}e.removeChild(t)}function u(e,t,n,r){for(var o=t;;){var a=o.nextSibling;if(g(e,o,r),o===n)break;o=a}}function s(e,t,n){for(;;){var r=t.nextSibling;if(r===n)break;e.removeChild(r)}}function l(e,t,n){var r=e.parentNode,o=e.nextSibling;o===t?n&&g(r,document.createTextNode(n),o):n?(m(o,n),s(r,o,t)):s(r,e,t)}var c=e(8),p=e(12),d=e(73),f=e(78),h=e(113),v=e(134),m=e(135),g=h(function(e,t,n){e.insertBefore(t,n)}),y={dangerouslyReplaceNodeWithMarkup:p.dangerouslyReplaceNodeWithMarkup,replaceDelimitedText:l,processUpdates:function(e,t){for(var n=0;n<t.length;n++){var u=t[n];switch(u.type){case d.INSERT_MARKUP:o(e,u.content,r(e,u.afterNode));break;case d.MOVE_EXISTING:a(e,u.fromNode,r(e,u.afterNode));break;case d.SET_MARKUP:v(e,u.content);break;case d.TEXT_CONTENT:m(e,u.content);break;case d.REMOVE_NODE:i(e,u.fromNode)}}}};f.measureMethods(y,"DOMChildrenOperations",{replaceDelimitedText:"replaceDelimitedText"}),t.exports=y},{113:113,12:12,134:134,135:135,73:73,78:78,8:8}],8:[function(e,t,n){"use strict";function r(e){if(p){var t=e.node,n=e.children;if(n.length)for(var r=0;r<n.length;r++)d(t,n[r],null);else null!=e.html?t.innerHTML=e.html:null!=e.text&&c(t,e.text)}}function o(e,t){e.parentNode.replaceChild(t.node,e),r(t)}function a(e,t){p?e.children.push(t):e.node.appendChild(t.node)}function i(e,t){p?e.html=t:e.node.innerHTML=t}function u(e,t){p?e.text=t:c(e.node,t)}function s(e){return{node:e,children:[],html:null,text:null}}var l=e(113),c=e(135),p="undefined"!=typeof document&&"number"==typeof document.documentMode||"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),d=l(function(e,t,n){11===t.node.nodeType?(r(t),e.insertBefore(t.node,n)):(e.insertBefore(t.node,n),r(t))});s.insertTreeBefore=d,s.replaceChildWithTree=o,s.queueChild=a,s.queueHTML=i,s.queueText=u,t.exports=s},{113:113,135:135}],9:[function(e,t,n){"use strict";var r={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};t.exports=r},{}],10:[function(e,t,n){"use strict";function r(e,t){return(e&t)===t}var o=e(154),a={MUST_USE_PROPERTY:1,HAS_SIDE_EFFECTS:2,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(e){var t=a,n=e.Properties||{},i=e.DOMAttributeNamespaces||{},s=e.DOMAttributeNames||{},l=e.DOMPropertyNames||{},c=e.DOMMutationMethods||{};e.isCustomAttribute&&u._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var p in n){u.properties.hasOwnProperty(p)?o(!1):void 0;var d=p.toLowerCase(),f=n[p],h={attributeName:d,attributeNamespace:null,propertyName:p,mutationMethod:null,mustUseProperty:r(f,t.MUST_USE_PROPERTY),hasSideEffects:r(f,t.HAS_SIDE_EFFECTS),hasBooleanValue:r(f,t.HAS_BOOLEAN_VALUE),hasNumericValue:r(f,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:r(f,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:r(f,t.HAS_OVERLOADED_BOOLEAN_VALUE)};if(!h.mustUseProperty&&h.hasSideEffects?o(!1):void 0,h.hasBooleanValue+h.hasNumericValue+h.hasOverloadedBooleanValue<=1?void 0:o(!1),s.hasOwnProperty(p)){var v=s[p];h.attributeName=v}i.hasOwnProperty(p)&&(h.attributeNamespace=i[p]),l.hasOwnProperty(p)&&(h.propertyName=l[p]),c.hasOwnProperty(p)&&(h.mutationMethod=c[p]),u.properties[p]=h}}},i=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",u={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:i,ATTRIBUTE_NAME_CHAR:i+"\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<u._isCustomAttributeFunctions.length;t++){var n=u._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},injection:a};t.exports=u},{154:154}],11:[function(e,t,n){"use strict";function r(e){return c.hasOwnProperty(e)?!0:l.hasOwnProperty(e)?!1:s.test(e)?(c[e]=!0,!0):(l[e]=!0,!1)}function o(e,t){return null==t||e.hasBooleanValue&&!t||e.hasNumericValue&&isNaN(t)||e.hasPositiveNumericValue&&1>t||e.hasOverloadedBooleanValue&&t===!1}var a=e(10),i=(e(46),e(78)),u=e(132),s=(e(162),new RegExp("^["+a.ATTRIBUTE_NAME_START_CHAR+"]["+a.ATTRIBUTE_NAME_CHAR+"]*$")),l={},c={},p={createMarkupForID:function(e){return a.ID_ATTRIBUTE_NAME+"="+u(e)},setAttributeForID:function(e,t){e.setAttribute(a.ID_ATTRIBUTE_NAME,t)},createMarkupForRoot:function(){return a.ROOT_ATTRIBUTE_NAME+'=""'},setAttributeForRoot:function(e){e.setAttribute(a.ROOT_ATTRIBUTE_NAME,"")},createMarkupForProperty:function(e,t){var n=a.properties.hasOwnProperty(e)?a.properties[e]:null;if(n){if(o(n,t))return"";var r=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&t===!0?r+'=""':r+"="+u(t)}return a.isCustomAttribute(e)?null==t?"":e+"="+u(t):null},createMarkupForCustomAttribute:function(e,t){return r(e)&&null!=t?e+"="+u(t):""},setValueForProperty:function(e,t,n){var r=a.properties.hasOwnProperty(t)?a.properties[t]:null;if(r){var i=r.mutationMethod;if(i)i(e,n);else if(o(r,n))this.deleteValueForProperty(e,t);else if(r.mustUseProperty){var u=r.propertyName;r.hasSideEffects&&""+e[u]==""+n&&e.hasAttribute(r.attributeName)||(e[u]=n)}else{var s=r.attributeName,l=r.attributeNamespace;l?e.setAttributeNS(l,s,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&n===!0?e.setAttribute(s,""):e.setAttribute(s,""+n)}}else a.isCustomAttribute(t)&&p.setValueForAttribute(e,t,n)},setValueForAttribute:function(e,t,n){r(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))},deleteValueForProperty:function(e,t){var n=a.properties.hasOwnProperty(t)?a.properties[t]:null;if(n){var r=n.mutationMethod;if(r)r(e,void 0);else if(n.mustUseProperty){var o=n.propertyName;n.hasBooleanValue?e[o]=!1:n.hasSideEffects&&""+e[o]==""||(e[o]="")}else e.removeAttribute(n.attributeName)}else a.isCustomAttribute(t)&&e.removeAttribute(t)}};i.measureMethods(p,"DOMPropertyOperations",{setValueForProperty:"setValueForProperty",setValueForAttribute:"setValueForAttribute",deleteValueForProperty:"deleteValueForProperty"}),t.exports=p},{10:10,132:132,162:162,46:46,78:78}],12:[function(e,t,n){"use strict";function r(e){return e.substring(1,e.indexOf(" "))}var o=e(8),a=e(140),i=e(145),u=e(146),s=e(150),l=e(154),c=/^(<[^ \/>]+)/,p="data-danger-index",d={dangerouslyRenderMarkup:function(e){a.canUseDOM?void 0:l(!1);for(var t,n={},o=0;o<e.length;o++)e[o]?void 0:l(!1),t=r(e[o]),t=s(t)?t:"*",n[t]=n[t]||[],n[t][o]=e[o];var d=[],f=0;for(t in n)if(n.hasOwnProperty(t)){var h,v=n[t];for(h in v)if(v.hasOwnProperty(h)){var m=v[h];v[h]=m.replace(c,"$1 "+p+'="'+h+'" ')}for(var g=i(v.join(""),u),y=0;y<g.length;++y){var C=g[y];C.hasAttribute&&C.hasAttribute(p)&&(h=+C.getAttribute(p),C.removeAttribute(p),d.hasOwnProperty(h)?l(!1):void 0,d[h]=C,f+=1)}}return f!==d.length?l(!1):void 0,d.length!==e.length?l(!1):void 0,d},dangerouslyReplaceNodeWithMarkup:function(e,t){if(a.canUseDOM?void 0:l(!1),t?void 0:l(!1),"HTML"===e.nodeName?l(!1):void 0,"string"==typeof t){var n=i(t,u)[0];e.parentNode.replaceChild(n,e)}else o.replaceChildWithTree(e,t)}};t.exports=d},{140:140,145:145,146:146,150:150,154:154,8:8}],13:[function(e,t,n){"use strict";var r=e(158),o=[r({ResponderEventPlugin:null}),r({SimpleEventPlugin:null}),r({TapEventPlugin:null}),r({EnterLeaveEventPlugin:null}),r({ChangeEventPlugin:null}),r({SelectEventPlugin:null}),r({BeforeInputEventPlugin:null})];t.exports=o},{158:158}],14:[function(e,t,n){"use strict";var r=e(15),o=e(19),a=e(38),i=e(103),u=e(158),s=r.topLevelTypes,l={mouseEnter:{registrationName:u({onMouseEnter:null}),dependencies:[s.topMouseOut,s.topMouseOver]},mouseLeave:{registrationName:u({onMouseLeave:null}),dependencies:[s.topMouseOut,s.topMouseOver]}},c={eventTypes:l,extractEvents:function(e,t,n,r){if(e===s.topMouseOver&&(n.relatedTarget||n.fromElement))return null;if(e!==s.topMouseOut&&e!==s.topMouseOver)return null;var u;if(r.window===r)u=r;else{var c=r.ownerDocument;u=c?c.defaultView||c.parentWindow:window}var p,d;if(e===s.topMouseOut){p=t;var f=n.relatedTarget||n.toElement;d=f?a.getClosestInstanceFromNode(f):null}else p=null,d=t;if(p===d)return null;var h=null==p?u:a.getNodeFromInstance(p),v=null==d?u:a.getNodeFromInstance(d),m=i.getPooled(l.mouseLeave,p,n,r);m.type="mouseleave",m.target=h,m.relatedTarget=v;var g=i.getPooled(l.mouseEnter,d,n,r);return g.type="mouseenter",g.target=v,g.relatedTarget=h,o.accumulateEnterLeaveDispatches(m,g,p,d),[m,g]}};t.exports=c},{103:103,15:15,158:158,19:19,38:38}],15:[function(e,t,n){"use strict";var r=e(157),o=r({bubbled:null,captured:null}),a=r({topAbort:null,topAnimationEnd:null,topAnimationIteration:null,topAnimationStart:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topInvalid:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topTransitionEnd:null,topVolumeChange:null,topWaiting:null,topWheel:null}),i={topLevelTypes:a,PropagationPhases:o};t.exports=i},{157:157}],16:[function(e,t,n){"use strict";var r=e(17),o=e(18),a=e(61),i=e(110),u=e(118),s=e(154),l={},c=null,p=function(e,t){e&&(o.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))},d=function(e){return p(e,!0)},f=function(e){return p(e,!1)},h={injection:{injectEventPluginOrder:r.injectEventPluginOrder,injectEventPluginsByName:r.injectEventPluginsByName},putListener:function(e,t,n){"function"!=typeof n?s(!1):void 0;var o=l[t]||(l[t]={});o[e._rootNodeID]=n;var a=r.registrationNameModules[t];a&&a.didPutListener&&a.didPutListener(e,t,n)},getListener:function(e,t){var n=l[t];return n&&n[e._rootNodeID]},deleteListener:function(e,t){var n=r.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t);var o=l[t];o&&delete o[e._rootNodeID]},deleteAllListeners:function(e){for(var t in l)if(l[t][e._rootNodeID]){var n=r.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t),delete l[t][e._rootNodeID]}},extractEvents:function(e,t,n,o){for(var a,u=r.plugins,s=0;s<u.length;s++){var l=u[s];if(l){var c=l.extractEvents(e,t,n,o);c&&(a=i(a,c))}}return a},enqueueEvents:function(e){e&&(c=i(c,e))},processEventQueue:function(e){var t=c;c=null,e?u(t,d):u(t,f),c?s(!1):void 0,a.rethrowCaughtError()},__purge:function(){l={}},__getListenerBank:function(){return l}};t.exports=h},{110:110,118:118,154:154,17:17,18:18,61:61}],17:[function(e,t,n){"use strict";function r(){if(u)for(var e in s){var t=s[e],n=u.indexOf(e);if(n>-1?void 0:i(!1),!l.plugins[n]){t.extractEvents?void 0:i(!1),l.plugins[n]=t;var r=t.eventTypes;for(var a in r)o(r[a],t,a)?void 0:i(!1)}}}function o(e,t,n){l.eventNameDispatchConfigs.hasOwnProperty(n)?i(!1):void 0,l.eventNameDispatchConfigs[n]=e;var r=e.phasedRegistrationNames;if(r){for(var o in r)if(r.hasOwnProperty(o)){var u=r[o];a(u,t,n)}return!0}return e.registrationName?(a(e.registrationName,t,n),!0):!1}function a(e,t,n){l.registrationNameModules[e]?i(!1):void 0,l.registrationNameModules[e]=t,l.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var i=e(154),u=null,s={},l={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){u?i(!1):void 0,u=Array.prototype.slice.call(e),r()},injectEventPluginsByName:function(e){var t=!1;for(var n in e)if(e.hasOwnProperty(n)){var o=e[n];s.hasOwnProperty(n)&&s[n]===o||(s[n]?i(!1):void 0,s[n]=o,t=!0)}t&&r()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return l.registrationNameModules[t.registrationName]||null;for(var n in t.phasedRegistrationNames)if(t.phasedRegistrationNames.hasOwnProperty(n)){var r=l.registrationNameModules[t.phasedRegistrationNames[n]];if(r)return r}return null},_resetEventPlugins:function(){u=null;for(var e in s)s.hasOwnProperty(e)&&delete s[e];l.plugins.length=0;var t=l.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var r=l.registrationNameModules;for(var o in r)r.hasOwnProperty(o)&&delete r[o]}};t.exports=l},{154:154}],18:[function(e,t,n){"use strict";function r(e){return e===y.topMouseUp||e===y.topTouchEnd||e===y.topTouchCancel}function o(e){return e===y.topMouseMove||e===y.topTouchMove}function a(e){return e===y.topMouseDown||e===y.topTouchStart}function i(e,t,n,r){var o=e.type||"unknown-event";e.currentTarget=C.getNodeFromInstance(r),t?v.invokeGuardedCallbackWithCatch(o,n,e):v.invokeGuardedCallback(o,n,e),e.currentTarget=null}function u(e,t){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)i(e,t,n[o],r[o]);else n&&i(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null}function s(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r]))return n[r]}else if(t&&t(e,n))return n;return null}function l(e){var t=s(e);return e._dispatchInstances=null,e._dispatchListeners=null,t}function c(e){var t=e._dispatchListeners,n=e._dispatchInstances;Array.isArray(t)?m(!1):void 0,e.currentTarget=C.getNodeFromInstance(n);var r=t?t(e):null;return e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,r}function p(e){return!!e._dispatchListeners}var d,f,h=e(15),v=e(61),m=e(154),g=(e(162),{injectComponentTree:function(e){d=e},injectTreeTraversal:function(e){f=e}}),y=h.topLevelTypes,C={isEndish:r,isMoveish:o,isStartish:a,executeDirectDispatch:c,executeDispatchesInOrder:u,executeDispatchesInOrderStopAtTrue:l,hasDispatches:p,getInstanceFromNode:function(e){return d.getInstanceFromNode(e)},getNodeFromInstance:function(e){return d.getNodeFromInstance(e)},isAncestor:function(e,t){return f.isAncestor(e,t)},getLowestCommonAncestor:function(e,t){return f.getLowestCommonAncestor(e,t)},getParentInstance:function(e){return f.getParentInstance(e)},traverseTwoPhase:function(e,t,n){return f.traverseTwoPhase(e,t,n)},traverseEnterLeave:function(e,t,n,r,o){return f.traverseEnterLeave(e,t,n,r,o)},injection:g};t.exports=C},{15:15,154:154,162:162,61:61}],19:[function(e,t,n){"use strict";function r(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return C(e,r)}function o(e,t,n){var o=t?y.bubbled:y.captured,a=r(e,n,o);a&&(n._dispatchListeners=m(n._dispatchListeners,a),n._dispatchInstances=m(n._dispatchInstances,e))}function a(e){e&&e.dispatchConfig.phasedRegistrationNames&&v.traverseTwoPhase(e._targetInst,o,e)}function i(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst,n=t?v.getParentInstance(t):null;v.traverseTwoPhase(n,o,e)}}function u(e,t,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=C(e,r);o&&(n._dispatchListeners=m(n._dispatchListeners,o),n._dispatchInstances=m(n._dispatchInstances,e))}}function s(e){e&&e.dispatchConfig.registrationName&&u(e._targetInst,null,e)}function l(e){g(e,a)}function c(e){g(e,i)}function p(e,t,n,r){v.traverseEnterLeave(n,r,u,e,t)}function d(e){g(e,s)}var f=e(15),h=e(16),v=e(18),m=e(110),g=e(118),y=(e(162),f.PropagationPhases),C=h.getListener,b={accumulateTwoPhaseDispatches:l,accumulateTwoPhaseDispatchesSkipTarget:c,accumulateDirectDispatches:d,accumulateEnterLeaveDispatches:p};t.exports=b},{110:110,118:118,15:15,16:16,162:162,18:18}],20:[function(e,t,n){"use strict";function r(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var o=e(163),a=e(23),i=e(126);o(r.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[i()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,r=n.length,o=this.getText(),a=o.length;for(e=0;r>e&&n[e]===o[e];e++);var i=r-e;for(t=1;i>=t&&n[r-t]===o[a-t];t++);var u=t>1?1-t:void 0;return this._fallbackText=o.slice(e,u),this._fallbackText}}),a.addPoolingTo(r),t.exports=r},{126:126,163:163,23:23}],21:[function(e,t,n){"use strict";var r=e(10),o=r.injection.MUST_USE_PROPERTY,a=r.injection.HAS_BOOLEAN_VALUE,i=r.injection.HAS_SIDE_EFFECTS,u=r.injection.HAS_NUMERIC_VALUE,s=r.injection.HAS_POSITIVE_NUMERIC_VALUE,l=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,c={isCustomAttribute:RegExp.prototype.test.bind(new RegExp("^(data|aria)-["+r.ATTRIBUTE_NAME_CHAR+"]*$")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:a,allowTransparency:0,alt:0,async:a,autoComplete:0,autoPlay:a,capture:a,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:o|a,cite:0,classID:0,className:0,cols:s,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:a,coords:0,crossOrigin:0,data:0,dateTime:0,"default":a,defer:a,dir:0,disabled:a,download:l,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:a,formTarget:0,frameBorder:0,headers:0,height:0,hidden:a,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:a,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:o|a,muted:o|a,name:0,nonce:0,noValidate:a,open:a,optimum:0,pattern:0,placeholder:0,poster:0,preload:0,profile:0,radioGroup:0,readOnly:a,rel:0,required:a,reversed:a,role:0,rows:s,rowSpan:u,sandbox:0,scope:0,scoped:a,scrolling:0,seamless:a,selected:o|a,shape:0,size:s,sizes:0,span:s,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:u,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:o|i,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,"typeof":0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:a,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{}};t.exports=c},{10:10}],22:[function(e,t,n){"use strict";function r(e){null!=e.checkedLink&&null!=e.valueLink?l(!1):void 0}function o(e){r(e),null!=e.value||null!=e.onChange?l(!1):void 0}function a(e){r(e),null!=e.checked||null!=e.onChange?l(!1):void 0}function i(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}var u=e(81),s=e(80),l=e(154),c=(e(162),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),p={value:function(e,t,n){return!e[t]||c[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t,n){return!e[t]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:u.func},d={},f={checkPropTypes:function(e,t,n){for(var r in p){if(p.hasOwnProperty(r))var o=p[r](t,r,e,s.prop);o instanceof Error&&!(o.message in d)&&(d[o.message]=!0,i(n))}},getValue:function(e){return e.valueLink?(o(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(a(e),e.checkedLink.value):e.checked},executeOnChange:function(e,t){return e.valueLink?(o(e),e.valueLink.requestChange(t.target.value)):e.checkedLink?(a(e),e.checkedLink.requestChange(t.target.checked)):e.onChange?e.onChange.call(void 0,t):void 0}};t.exports=f},{154:154,162:162,80:80,81:81}],23:[function(e,t,n){"use strict";var r=e(154),o=function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)},a=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},i=function(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n),o}return new r(e,t,n)},u=function(e,t,n,r){var o=this;if(o.instancePool.length){var a=o.instancePool.pop();return o.call(a,e,t,n,r),a}return new o(e,t,n,r)},s=function(e,t,n,r,o){var a=this;if(a.instancePool.length){var i=a.instancePool.pop();return a.call(i,e,t,n,r,o),i}return new a(e,t,n,r,o)},l=function(e){var t=this;e instanceof t?void 0:r(!1),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},c=10,p=o,d=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||p,n.poolSize||(n.poolSize=c),n.release=l,n},f={addPoolingTo:d,oneArgumentPooler:o,twoArgumentPooler:a,threeArgumentPooler:i,fourArgumentPooler:u,fiveArgumentPooler:s};t.exports=f},{154:154}],24:[function(e,t,n){"use strict";var r=e(27),o=e(29),a=e(28),i=e(42),u=e(58),s=(e(59),e(81)),l=e(91),c=e(131),p=u.createElement,d=u.createFactory,f=u.cloneElement,h={Children:{map:r.map,forEach:r.forEach,count:r.count,toArray:r.toArray,only:c},Component:o,createElement:p,cloneElement:f,isValidElement:u.isValidElement,PropTypes:s,createClass:a.createClass,createFactory:d,createMixin:function(e){return e},DOM:i,version:l};t.exports=h},{131:131,27:27,28:28,29:29,42:42,58:58,59:59,81:81,91:91}],25:[function(e,t,n){"use strict";function r(e){return Object.prototype.hasOwnProperty.call(e,m)||(e[m]=h++,d[e[m]]={}),d[e[m]]}var o,a=e(163),i=e(15),u=e(17),s=e(62),l=e(109),c=e(127),p=e(129),d={},f=!1,h=0,v={
	topAbort:"abort",topAnimationEnd:c("animationend")||"animationend",topAnimationIteration:c("animationiteration")||"animationiteration",topAnimationStart:c("animationstart")||"animationstart",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:c("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},m="_reactListenersID"+String(Math.random()).slice(2),g=a({},s,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(g.handleTopLevel),g.ReactEventListener=e}},setEnabled:function(e){g.ReactEventListener&&g.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!g.ReactEventListener||!g.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var n=t,o=r(n),a=u.registrationNameDependencies[e],s=i.topLevelTypes,l=0;l<a.length;l++){var c=a[l];o.hasOwnProperty(c)&&o[c]||(c===s.topWheel?p("wheel")?g.ReactEventListener.trapBubbledEvent(s.topWheel,"wheel",n):p("mousewheel")?g.ReactEventListener.trapBubbledEvent(s.topWheel,"mousewheel",n):g.ReactEventListener.trapBubbledEvent(s.topWheel,"DOMMouseScroll",n):c===s.topScroll?p("scroll",!0)?g.ReactEventListener.trapCapturedEvent(s.topScroll,"scroll",n):g.ReactEventListener.trapBubbledEvent(s.topScroll,"scroll",g.ReactEventListener.WINDOW_HANDLE):c===s.topFocus||c===s.topBlur?(p("focus",!0)?(g.ReactEventListener.trapCapturedEvent(s.topFocus,"focus",n),g.ReactEventListener.trapCapturedEvent(s.topBlur,"blur",n)):p("focusin")&&(g.ReactEventListener.trapBubbledEvent(s.topFocus,"focusin",n),g.ReactEventListener.trapBubbledEvent(s.topBlur,"focusout",n)),o[s.topBlur]=!0,o[s.topFocus]=!0):v.hasOwnProperty(c)&&g.ReactEventListener.trapBubbledEvent(c,v[c],n),o[c]=!0)}},trapBubbledEvent:function(e,t,n){return g.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return g.ReactEventListener.trapCapturedEvent(e,t,n)},ensureScrollValueMonitoring:function(){if(void 0===o&&(o=document.createEvent&&"pageX"in document.createEvent("MouseEvent")),!o&&!f){var e=l.refreshScrollValues;g.ReactEventListener.monitorScrollValue(e),f=!0}}});t.exports=g},{109:109,127:127,129:129,15:15,163:163,17:17,62:62}],26:[function(e,t,n){"use strict";function r(e,t,n){var r=void 0===e[n];null!=t&&r&&(e[n]=a(t))}var o=e(83),a=e(128),i=e(136),u=e(137),s=(e(162),{instantiateChildren:function(e,t,n){if(null==e)return null;var o={};return u(e,r,o),o},updateChildren:function(e,t,n,r,u){if(t||e){var s,l;for(s in t)if(t.hasOwnProperty(s)){l=e&&e[s];var c=l&&l._currentElement,p=t[s];if(null!=l&&i(c,p))o.receiveComponent(l,p,r,u),t[s]=l;else{l&&(n[s]=o.getNativeNode(l),o.unmountComponent(l,!1));var d=a(p);t[s]=d}}for(s in e)!e.hasOwnProperty(s)||t&&t.hasOwnProperty(s)||(l=e[s],n[s]=o.getNativeNode(l),o.unmountComponent(l,!1))}},unmountChildren:function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];o.unmountComponent(r,t)}}});t.exports=s},{128:128,136:136,137:137,162:162,83:83}],27:[function(e,t,n){"use strict";function r(e){return(""+e).replace(b,"$&/")}function o(e,t){this.func=e,this.context=t,this.count=0}function a(e,t,n){var r=e.func,o=e.context;r.call(o,t,e.count++)}function i(e,t,n){if(null==e)return e;var r=o.getPooled(t,n);g(e,a,r),o.release(r)}function u(e,t,n,r){this.result=e,this.keyPrefix=t,this.func=n,this.context=r,this.count=0}function s(e,t,n){var o=e.result,a=e.keyPrefix,i=e.func,u=e.context,s=i.call(u,t,e.count++);Array.isArray(s)?l(s,o,n,m.thatReturnsArgument):null!=s&&(v.isValidElement(s)&&(s=v.cloneAndReplaceKey(s,a+(!s.key||t&&t.key===s.key?"":r(s.key)+"/")+n)),o.push(s))}function l(e,t,n,o,a){var i="";null!=n&&(i=r(n)+"/");var l=u.getPooled(t,i,o,a);g(e,s,l),u.release(l)}function c(e,t,n){if(null==e)return e;var r=[];return l(e,r,null,t,n),r}function p(e,t,n){return null}function d(e,t){return g(e,p,null)}function f(e){var t=[];return l(e,t,null,m.thatReturnsArgument),t}var h=e(23),v=e(58),m=e(146),g=e(137),y=h.twoArgumentPooler,C=h.fourArgumentPooler,b=/\/+/g;o.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},h.addPoolingTo(o,y),u.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},h.addPoolingTo(u,C);var _={forEach:i,map:c,mapIntoWithKeyPrefixInternal:l,count:d,toArray:f};t.exports=_},{137:137,146:146,23:23,58:58}],28:[function(e,t,n){"use strict";function r(e,t){var n=E.hasOwnProperty(t)?E[t]:null;N.hasOwnProperty(t)&&(n!==b.OVERRIDE_BASE?m(!1):void 0),e&&(n!==b.DEFINE_MANY&&n!==b.DEFINE_MANY_MERGED?m(!1):void 0)}function o(e,t){if(t){"function"==typeof t?m(!1):void 0,f.isValidElement(t)?m(!1):void 0;var n=e.prototype,o=n.__reactAutoBindPairs;t.hasOwnProperty(C)&&x.mixins(e,t.mixins);for(var a in t)if(t.hasOwnProperty(a)&&a!==C){var i=t[a],l=n.hasOwnProperty(a);if(r(l,a),x.hasOwnProperty(a))x[a](e,i);else{var c=E.hasOwnProperty(a),p="function"==typeof i,d=p&&!c&&!l&&t.autobind!==!1;if(d)o.push(a,i),n[a]=i;else if(l){var h=E[a];!c||h!==b.DEFINE_MANY_MERGED&&h!==b.DEFINE_MANY?m(!1):void 0,h===b.DEFINE_MANY_MERGED?n[a]=u(n[a],i):h===b.DEFINE_MANY&&(n[a]=s(n[a],i))}else n[a]=i}}}}function a(e,t){if(t)for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){var o=n in x;o?m(!1):void 0;var a=n in e;a?m(!1):void 0,e[n]=r}}}function i(e,t){e&&t&&"object"==typeof e&&"object"==typeof t?void 0:m(!1);for(var n in t)t.hasOwnProperty(n)&&(void 0!==e[n]?m(!1):void 0,e[n]=t[n]);return e}function u(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null==n)return r;if(null==r)return n;var o={};return i(o,n),i(o,r),o}}function s(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function l(e,t){var n=t.bind(e);return n}function c(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var r=t[n],o=t[n+1];e[r]=l(e,o)}}var p=e(163),d=e(29),f=e(58),h=(e(80),e(79),e(76)),v=e(147),m=e(154),g=e(157),y=e(158),C=(e(162),y({mixins:null})),b=g({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),_=[],E={mixins:b.DEFINE_MANY,statics:b.DEFINE_MANY,propTypes:b.DEFINE_MANY,contextTypes:b.DEFINE_MANY,childContextTypes:b.DEFINE_MANY,getDefaultProps:b.DEFINE_MANY_MERGED,getInitialState:b.DEFINE_MANY_MERGED,getChildContext:b.DEFINE_MANY_MERGED,render:b.DEFINE_ONCE,componentWillMount:b.DEFINE_MANY,componentDidMount:b.DEFINE_MANY,componentWillReceiveProps:b.DEFINE_MANY,shouldComponentUpdate:b.DEFINE_ONCE,componentWillUpdate:b.DEFINE_MANY,componentDidUpdate:b.DEFINE_MANY,componentWillUnmount:b.DEFINE_MANY,updateComponent:b.OVERRIDE_BASE},x={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)o(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=p({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=p({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=u(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=p({},e.propTypes,t)},statics:function(e,t){a(e,t)},autobind:function(){}},N={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e),t&&this.updater.enqueueCallback(this,t,"replaceState")},isMounted:function(){return this.updater.isMounted(this)}},T=function(){};p(T.prototype,d.prototype,N);var P={createClass:function(e){var t=function(e,t,n){this.__reactAutoBindPairs.length&&c(this),this.props=e,this.context=t,this.refs=v,this.updater=n||h,this.state=null;var r=this.getInitialState?this.getInitialState():null;"object"!=typeof r||Array.isArray(r)?m(!1):void 0,this.state=r};t.prototype=new T,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],_.forEach(o.bind(null,t)),o(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),t.prototype.render?void 0:m(!1);for(var n in E)t.prototype[n]||(t.prototype[n]=null);return t},injection:{injectMixin:function(e){_.push(e)}}};t.exports=P},{147:147,154:154,157:157,158:158,162:162,163:163,29:29,58:58,76:76,79:79,80:80}],29:[function(e,t,n){"use strict";function r(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||o}var o=e(76),a=(e(68),e(112),e(147)),i=e(154);e(162);r.prototype.isReactComponent={},r.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e?i(!1):void 0,this.updater.enqueueSetState(this,e),t&&this.updater.enqueueCallback(this,t,"setState")},r.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e,"forceUpdate")};t.exports=r},{112:112,147:147,154:154,162:162,68:68,76:76}],30:[function(e,t,n){"use strict";var r=e(7),o=e(44),a=e(78),i={processChildrenUpdates:o.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:r.dangerouslyReplaceNodeWithMarkup,unmountIDFromEnvironment:function(e){}};a.measureMethods(i,"ReactComponentBrowserEnvironment",{replaceNodeWithMarkup:"replaceNodeWithMarkup"}),t.exports=i},{44:44,7:7,78:78}],31:[function(e,t,n){"use strict";var r=e(154),o=!1,a={unmountIDFromEnvironment:null,replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){o?r(!1):void 0,a.unmountIDFromEnvironment=e.unmountIDFromEnvironment,a.replaceNodeWithMarkup=e.replaceNodeWithMarkup,a.processChildrenUpdates=e.processChildrenUpdates,o=!0}}};t.exports=a},{154:154}],32:[function(e,t,n){"use strict";function r(e){var t=e._currentElement._owner||null;if(t){var n=t.getName();if(n)return" Check the render method of `"+n+"`."}return""}function o(e){}function a(e,t){}var i=e(163),u=e(31),s=e(33),l=e(58),c=e(61),p=e(67),d=(e(68),e(75)),f=e(78),h=e(80),v=(e(79),e(83)),m=e(89),g=e(147),y=e(154),C=e(136);e(162);o.prototype.render=function(){var e=p.get(this)._currentElement.type,t=e(this.props,this.context,this.updater);return a(e,t),t};var b=1,_={construct:function(e){this._currentElement=e,this._rootNodeID=null,this._instance=null,this._nativeParent=null,this._nativeContainerInfo=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null},mountComponent:function(e,t,n,r){this._context=r,this._mountOrder=b++,this._nativeParent=t,this._nativeContainerInfo=n;var i,u,s=this._processProps(this._currentElement.props),c=this._processContext(r),d=this._currentElement.type;d.prototype&&d.prototype.isReactComponent?i=new d(s,c,m):(i=d(s,c,m),null!=i&&null!=i.render||(u=i,a(d,u),null===i||i===!1||l.isValidElement(i)?void 0:y(!1),i=new o(d))),i.props=s,i.context=c,i.refs=g,i.updater=m,this._instance=i,p.set(i,this);var f=i.state;void 0===f&&(i.state=f=null),"object"!=typeof f||Array.isArray(f)?y(!1):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var h;return h=i.unstable_handleError?this.performInitialMountWithErrorHandling(u,t,n,e,r):this.performInitialMount(u,t,n,e,r),i.componentDidMount&&e.getReactMountReady().enqueue(i.componentDidMount,i),h},performInitialMountWithErrorHandling:function(e,t,n,r,o){var a,i=r.checkpoint();try{a=this.performInitialMount(e,t,n,r,o)}catch(u){r.rollback(i),this._instance.unstable_handleError(u),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),i=r.checkpoint(),this._renderedComponent.unmountComponent(!0),r.rollback(i),a=this.performInitialMount(e,t,n,r,o)}return a},performInitialMount:function(e,t,n,r,o){var a=this._instance;a.componentWillMount&&(a.componentWillMount(),this._pendingStateQueue&&(a.state=this._processPendingState(a.props,a.context))),void 0===e&&(e=this._renderValidatedComponent()),this._renderedNodeType=d.getType(e),this._renderedComponent=this._instantiateReactComponent(e);var i=v.mountComponent(this._renderedComponent,r,t,n,this._processChildContext(o));return i},getNativeNode:function(){return v.getNativeNode(this._renderedComponent)},unmountComponent:function(e){if(this._renderedComponent){var t=this._instance;if(t.componentWillUnmount)if(e){var n=this.getName()+".componentWillUnmount()";c.invokeGuardedCallback(n,t.componentWillUnmount.bind(t))}else t.componentWillUnmount();this._renderedComponent&&(v.unmountComponent(this._renderedComponent,e),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,p.remove(t)}},_maskContext:function(e){var t=this._currentElement.type,n=t.contextTypes;if(!n)return g;var r={};for(var o in n)r[o]=e[o];return r},_processContext:function(e){var t=this._maskContext(e);return t},_processChildContext:function(e){var t=this._currentElement.type,n=this._instance,r=n.getChildContext&&n.getChildContext();if(r){"object"!=typeof t.childContextTypes?y(!1):void 0;for(var o in r)o in t.childContextTypes?void 0:y(!1);return i({},e,r)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,t,n){var o=this.getName();for(var a in e)if(e.hasOwnProperty(a)){var i;try{"function"!=typeof e[a]?y(!1):void 0,i=e[a](t,a,o,n)}catch(u){i=u}i instanceof Error&&(r(this),n===h.prop)}},receiveComponent:function(e,t,n){var r=this._currentElement,o=this._context;this._pendingElement=null,this.updateComponent(t,r,e,o,n)},performUpdateIfNecessary:function(e){null!=this._pendingElement&&v.receiveComponent(this,this._pendingElement,e,this._context),(null!==this._pendingStateQueue||this._pendingForceUpdate)&&this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context)},updateComponent:function(e,t,n,r,o){var a,i,u=this._instance,s=!1;this._context===o?a=u.context:(a=this._processContext(o),s=!0),t===n?i=n.props:(i=this._processProps(n.props),s=!0),s&&u.componentWillReceiveProps&&u.componentWillReceiveProps(i,a);var l=this._processPendingState(i,a),c=this._pendingForceUpdate||!u.shouldComponentUpdate||u.shouldComponentUpdate(i,l,a);c?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,i,l,a,e,o)):(this._currentElement=n,this._context=o,u.props=i,u.state=l,u.context=a)},_processPendingState:function(e,t){var n=this._instance,r=this._pendingStateQueue,o=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!r)return n.state;if(o&&1===r.length)return r[0];for(var a=i({},o?r[0]:n.state),u=o?1:0;u<r.length;u++){var s=r[u];i(a,"function"==typeof s?s.call(n,a,e,t):s)}return a},_performComponentUpdate:function(e,t,n,r,o,a){var i,u,s,l=this._instance,c=Boolean(l.componentDidUpdate);c&&(i=l.props,u=l.state,s=l.context),l.componentWillUpdate&&l.componentWillUpdate(t,n,r),this._currentElement=e,this._context=a,l.props=t,l.state=n,l.context=r,this._updateRenderedComponent(o,a),c&&o.getReactMountReady().enqueue(l.componentDidUpdate.bind(l,i,u,s),l)},_updateRenderedComponent:function(e,t){var n=this._renderedComponent,r=n._currentElement,o=this._renderValidatedComponent();if(C(r,o))v.receiveComponent(n,o,e,this._processChildContext(t));else{var a=v.getNativeNode(n);v.unmountComponent(n,!1),this._renderedNodeType=d.getType(o),this._renderedComponent=this._instantiateReactComponent(o);var i=v.mountComponent(this._renderedComponent,e,this._nativeParent,this._nativeContainerInfo,this._processChildContext(t));this._replaceNodeWithMarkup(a,i)}},_replaceNodeWithMarkup:function(e,t){u.replaceNodeWithMarkup(e,t)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance,t=e.render();return t},_renderValidatedComponent:function(){var e;s.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{s.current=null}return null===e||e===!1||l.isValidElement(e)?void 0:y(!1),e},attachRef:function(e,t){var n=this.getPublicInstance();null==n?y(!1):void 0;var r=t.getPublicInstance(),o=n.refs===g?n.refs={}:n.refs;o[e]=r},detachRef:function(e){var t=this.getPublicInstance().refs;delete t[e]},getName:function(){var e=this._currentElement.type,t=this._instance&&this._instance.constructor;return e.displayName||t&&t.displayName||e.name||t&&t.name||null},getPublicInstance:function(){var e=this._instance;return e instanceof o?null:e},_instantiateReactComponent:null};f.measureMethods(_,"ReactCompositeComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent",_renderValidatedComponent:"_renderValidatedComponent"});var E={Mixin:_};t.exports=E},{136:136,147:147,154:154,162:162,163:163,31:31,33:33,58:58,61:61,67:67,68:68,75:75,78:78,79:79,80:80,83:83,89:89}],33:[function(e,t,n){"use strict";var r={current:null};t.exports=r},{}],34:[function(e,t,n){"use strict";var r=e(38),o=e(57),a=e(71),i=e(78),u=e(83),s=e(90),l=e(91),c=e(116),p=e(124),d=e(133);e(162);o.inject();var f=i.measure("React","render",a.render),h={findDOMNode:c,render:f,unmountComponentAtNode:a.unmountComponentAtNode,version:l,unstable_batchedUpdates:s.batchedUpdates,unstable_renderSubtreeIntoContainer:d};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:r.getClosestInstanceFromNode,getNodeFromInstance:function(e){return e._renderedComponent&&(e=p(e)),e?r.getNodeFromInstance(e):null}},Mount:a,Reconciler:u});t.exports=h},{116:116,124:124,133:133,162:162,38:38,57:57,71:71,78:78,83:83,90:90,91:91}],35:[function(e,t,n){"use strict";var r={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},o={getNativeProps:function(e,t){if(!t.disabled)return t;var n={};for(var o in t)t.hasOwnProperty(o)&&!r[o]&&(n[o]=t[o]);return n}};t.exports=o},{}],36:[function(e,t,n){"use strict";function r(e,t){t&&(z[e._tag]&&(null!=t.children||null!=t.dangerouslySetInnerHTML?I(!1):void 0),null!=t.dangerouslySetInnerHTML&&(null!=t.children?I(!1):void 0,"object"==typeof t.dangerouslySetInnerHTML&&W in t.dangerouslySetInnerHTML?void 0:I(!1)),null!=t.style&&"object"!=typeof t.style?I(!1):void 0)}function o(e,t,n,r){var o=e._nativeContainerInfo,i=o._ownerDocument;i&&(F(t,i),r.getReactMountReady().enqueue(a,{inst:e,registrationName:t,listener:n}))}function a(){var e=this;C.putListener(e.inst,e.registrationName,e.listener)}function i(){var e=this;e._rootNodeID?void 0:I(!1);var t=U(e);switch(t?void 0:I(!1),e._tag){case"iframe":case"object":e._wrapperState.listeners=[_.trapBubbledEvent(y.topLevelTypes.topLoad,"load",t)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var n in H)H.hasOwnProperty(n)&&e._wrapperState.listeners.push(_.trapBubbledEvent(y.topLevelTypes[n],H[n],t));break;case"img":e._wrapperState.listeners=[_.trapBubbledEvent(y.topLevelTypes.topError,"error",t),_.trapBubbledEvent(y.topLevelTypes.topLoad,"load",t)];break;case"form":e._wrapperState.listeners=[_.trapBubbledEvent(y.topLevelTypes.topReset,"reset",t),_.trapBubbledEvent(y.topLevelTypes.topSubmit,"submit",t)];break;case"input":case"select":case"textarea":e._wrapperState.listeners=[_.trapBubbledEvent(y.topLevelTypes.topInvalid,"invalid",t)]}}function u(){M.postUpdateWrapper(this)}function s(e){Q.call(X,e)||(G.test(e)?void 0:I(!1),X[e]=!0)}function l(e,t){return e.indexOf("-")>=0||null!=t.is}function c(e){var t=e.type;s(t),this._currentElement=e,this._tag=t.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._nativeNode=null,this._nativeParent=null,this._rootNodeID=null,this._domID=null,this._nativeContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var p=e(163),d=e(1),f=e(4),h=e(8),v=e(9),m=e(10),g=e(11),y=e(15),C=e(16),b=e(17),_=e(25),E=e(30),x=e(35),N=e(37),T=e(38),P=e(45),w=e(47),M=e(48),S=e(52),k=e(72),R=e(78),D=e(115),I=e(154),O=(e(129),e(158)),A=(e(161),e(138),e(162),N),L=C.deleteListener,U=T.getNodeFromInstance,F=_.listenTo,V=b.registrationNameModules,B={string:!0,number:!0},j=O({style:null}),W=O({__html:null}),K={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},H={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},q={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Y={listing:!0,pre:!0,textarea:!0},z=p({menuitem:!0},q),G=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,X={},Q={}.hasOwnProperty,$=1;c.displayName="ReactDOMComponent",c.Mixin={mountComponent:function(e,t,n,o){this._rootNodeID=$++,this._domID=n._idCounter++,this._nativeParent=t,this._nativeContainerInfo=n;var a=this._currentElement.props;switch(this._tag){case"iframe":case"object":case"img":case"form":case"video":case"audio":this._wrapperState={listeners:null},e.getReactMountReady().enqueue(i,this);break;case"button":a=x.getNativeProps(this,a,t);break;case"input":P.mountWrapper(this,a,t),a=P.getNativeProps(this,a),e.getReactMountReady().enqueue(i,this);break;case"option":w.mountWrapper(this,a,t),a=w.getNativeProps(this,a);break;case"select":M.mountWrapper(this,a,t),a=M.getNativeProps(this,a),e.getReactMountReady().enqueue(i,this);break;case"textarea":S.mountWrapper(this,a,t),a=S.getNativeProps(this,a),e.getReactMountReady().enqueue(i,this)}r(this,a);var u,s;null!=t?(u=t._namespaceURI,s=t._tag):n._tag&&(u=n._namespaceURI,s=n._tag),(null==u||u===v.svg&&"foreignobject"===s)&&(u=v.html),u===v.html&&("svg"===this._tag?u=v.svg:"math"===this._tag&&(u=v.mathml)),this._namespaceURI=u;var l;if(e.useCreateElement){var c,p=n._ownerDocument;if(u===v.html)if("script"===this._tag){var f=p.createElement("div"),m=this._currentElement.type;f.innerHTML="<"+m+"></"+m+">",c=f.removeChild(f.firstChild)}else c=p.createElement(this._currentElement.type);else c=p.createElementNS(u,this._currentElement.type);T.precacheNode(this,c),this._flags|=A.hasCachedChildNodes,this._nativeParent||g.setAttributeForRoot(c),this._updateDOMProperties(null,a,e);var y=h(c);this._createInitialChildren(e,a,o,y),l=y}else{var C=this._createOpenTagMarkupAndPutListeners(e,a),b=this._createContentMarkup(e,a,o);l=!b&&q[this._tag]?C+"/>":C+">"+b+"</"+this._currentElement.type+">"}switch(this._tag){case"button":case"input":case"select":case"textarea":a.autoFocus&&e.getReactMountReady().enqueue(d.focusDOMComponent,this)}return l},_createOpenTagMarkupAndPutListeners:function(e,t){var n="<"+this._currentElement.type;for(var r in t)if(t.hasOwnProperty(r)){var a=t[r];if(null!=a)if(V.hasOwnProperty(r))a&&o(this,r,a,e);else{r===j&&(a&&(a=this._previousStyleCopy=p({},t.style)),a=f.createMarkupForStyles(a,this));var i=null;null!=this._tag&&l(this._tag,t)?K.hasOwnProperty(r)||(i=g.createMarkupForCustomAttribute(r,a)):i=g.createMarkupForProperty(r,a),i&&(n+=" "+i)}}return e.renderToStaticMarkup?n:(this._nativeParent||(n+=" "+g.createMarkupForRoot()),n+=" "+g.createMarkupForID(this._domID))},_createContentMarkup:function(e,t,n){var r="",o=t.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&(r=o.__html);else{var a=B[typeof t.children]?t.children:null,i=null!=a?null:t.children;if(null!=a)r=D(a);else if(null!=i){var u=this.mountChildren(i,e,n);r=u.join("")}}return Y[this._tag]&&"\n"===r.charAt(0)?"\n"+r:r},_createInitialChildren:function(e,t,n,r){var o=t.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&h.queueHTML(r,o.__html);else{var a=B[typeof t.children]?t.children:null,i=null!=a?null:t.children;if(null!=a)h.queueText(r,a);else if(null!=i)for(var u=this.mountChildren(i,e,n),s=0;s<u.length;s++)h.queueChild(r,u[s])}},receiveComponent:function(e,t,n){var r=this._currentElement;this._currentElement=e,this.updateComponent(t,r,e,n)},updateComponent:function(e,t,n,o){var a=t.props,i=this._currentElement.props;switch(this._tag){case"button":a=x.getNativeProps(this,a),i=x.getNativeProps(this,i);break;case"input":P.updateWrapper(this),a=P.getNativeProps(this,a),i=P.getNativeProps(this,i);break;case"option":a=w.getNativeProps(this,a),i=w.getNativeProps(this,i);break;case"select":a=M.getNativeProps(this,a),i=M.getNativeProps(this,i);break;case"textarea":S.updateWrapper(this),a=S.getNativeProps(this,a),i=S.getNativeProps(this,i)}r(this,i),this._updateDOMProperties(a,i,e),this._updateDOMChildren(a,i,e,o),"select"===this._tag&&e.getReactMountReady().enqueue(u,this)},_updateDOMProperties:function(e,t,n){var r,a,i;for(r in e)if(!t.hasOwnProperty(r)&&e.hasOwnProperty(r)&&null!=e[r])if(r===j){var u=this._previousStyleCopy;for(a in u)u.hasOwnProperty(a)&&(i=i||{},i[a]="");this._previousStyleCopy=null}else V.hasOwnProperty(r)?e[r]&&L(this,r):(m.properties[r]||m.isCustomAttribute(r))&&g.deleteValueForProperty(U(this),r);for(r in t){var s=t[r],c=r===j?this._previousStyleCopy:null!=e?e[r]:void 0;if(t.hasOwnProperty(r)&&s!==c&&(null!=s||null!=c))if(r===j)if(s?s=this._previousStyleCopy=p({},s):this._previousStyleCopy=null,c){for(a in c)!c.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(i=i||{},i[a]="");for(a in s)s.hasOwnProperty(a)&&c[a]!==s[a]&&(i=i||{},i[a]=s[a])}else i=s;else if(V.hasOwnProperty(r))s?o(this,r,s,n):c&&L(this,r);else if(l(this._tag,t))K.hasOwnProperty(r)||g.setValueForAttribute(U(this),r,s);else if(m.properties[r]||m.isCustomAttribute(r)){var d=U(this);null!=s?g.setValueForProperty(d,r,s):g.deleteValueForProperty(d,r)}}i&&f.setValueForStyles(U(this),i,this)},_updateDOMChildren:function(e,t,n,r){var o=B[typeof e.children]?e.children:null,a=B[typeof t.children]?t.children:null,i=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,u=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,s=null!=o?null:e.children,l=null!=a?null:t.children,c=null!=o||null!=i,p=null!=a||null!=u;null!=s&&null==l?this.updateChildren(null,n,r):c&&!p&&this.updateTextContent(""),null!=a?o!==a&&this.updateTextContent(""+a):null!=u?i!==u&&this.updateMarkup(""+u):null!=l&&this.updateChildren(l,n,r)},getNativeNode:function(){return U(this)},unmountComponent:function(e){switch(this._tag){case"iframe":case"object":case"img":case"form":case"video":case"audio":var t=this._wrapperState.listeners;if(t)for(var n=0;n<t.length;n++)t[n].remove();break;case"html":case"head":case"body":I(!1)}this.unmountChildren(e),T.uncacheNode(this),C.deleteAllListeners(this),E.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._domID=null,this._wrapperState=null},getPublicInstance:function(){return U(this)}},R.measureMethods(c.Mixin,"ReactDOMComponent",{mountComponent:"mountComponent",receiveComponent:"receiveComponent"}),p(c.prototype,c.Mixin,k.Mixin),t.exports=c},{1:1,10:10,11:11,115:115,129:129,138:138,15:15,154:154,158:158,16:16,161:161,162:162,163:163,17:17,25:25,30:30,35:35,37:37,38:38,4:4,45:45,47:47,48:48,52:52,72:72,78:78,8:8,9:9}],37:[function(e,t,n){"use strict";var r={hasCachedChildNodes:1};t.exports=r},{}],38:[function(e,t,n){"use strict";function r(e){for(var t;t=e._renderedComponent;)e=t;return e}function o(e,t){var n=r(e);n._nativeNode=t,t[v]=n}function a(e){var t=e._nativeNode;t&&(delete t[v],e._nativeNode=null)}function i(e,t){if(!(e._flags&h.hasCachedChildNodes)){var n=e._renderedChildren,a=t.firstChild;e:for(var i in n)if(n.hasOwnProperty(i)){var u=n[i],s=r(u)._domID;if(null!=s){for(;null!==a;a=a.nextSibling)if(1===a.nodeType&&a.getAttribute(f)===String(s)||8===a.nodeType&&a.nodeValue===" react-text: "+s+" "||8===a.nodeType&&a.nodeValue===" react-empty: "+s+" "){o(u,a);continue e}d(!1)}}e._flags|=h.hasCachedChildNodes}}function u(e){if(e[v])return e[v];for(var t=[];!e[v];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}for(var n,r;e&&(r=e[v]);e=t.pop())n=r,t.length&&i(r,e);return n}function s(e){var t=u(e);return null!=t&&t._nativeNode===e?t:null}function l(e){if(void 0===e._nativeNode?d(!1):void 0,e._nativeNode)return e._nativeNode;for(var t=[];!e._nativeNode;)t.push(e),e._nativeParent?void 0:d(!1),e=e._nativeParent;for(;t.length;e=t.pop())i(e,e._nativeNode);return e._nativeNode}var c=e(10),p=e(37),d=e(154),f=c.ID_ATTRIBUTE_NAME,h=p,v="__reactInternalInstance$"+Math.random().toString(36).slice(2),m={getClosestInstanceFromNode:u,getInstanceFromNode:s,getNodeFromInstance:l,precacheChildNodes:i,precacheNode:o,uncacheNode:a};t.exports=m},{10:10,154:154,37:37}],39:[function(e,t,n){"use strict";function r(e,t){var n={_topLevelWrapper:e,_idCounter:1,_ownerDocument:t?t.nodeType===o?t:t.ownerDocument:null,_tag:t?t.nodeName.toLowerCase():null,_namespaceURI:t?t.namespaceURI:null};return n}var o=(e(138),9);t.exports=r},{138:138}],40:[function(e,t,n){"use strict";function r(e,t,n,r,o,a){}var o=e(54),a=(e(162),[]),i={addDevtool:function(e){a.push(e)},removeDevtool:function(e){for(var t=0;t<a.length;t++)a[t]===e&&(a.splice(t,1),t--)},onCreateMarkupForProperty:function(e,t){r("onCreateMarkupForProperty",e,t)},onSetValueForProperty:function(e,t,n){r("onSetValueForProperty",e,t,n)},onDeleteValueForProperty:function(e,t){r("onDeleteValueForProperty",e,t)}};i.addDevtool(o),t.exports=i},{162:162,54:54}],41:[function(e,t,n){"use strict";var r=e(163),o=e(8),a=e(38),i=function(e){this._currentElement=null,this._nativeNode=null,this._nativeParent=null,this._nativeContainerInfo=null,this._domID=null};r(i.prototype,{mountComponent:function(e,t,n,r){var i=n._idCounter++;this._domID=i,this._nativeParent=t,this._nativeContainerInfo=n;var u=" react-empty: "+this._domID+" ";if(e.useCreateElement){var s=n._ownerDocument,l=s.createComment(u);return a.precacheNode(this,l),o(l)}return e.renderToStaticMarkup?"":"<!--"+u+"-->"},receiveComponent:function(){},getNativeNode:function(){return a.getNodeFromInstance(this)},unmountComponent:function(){a.uncacheNode(this)}}),t.exports=i},{163:163,38:38,8:8}],42:[function(e,t,n){"use strict";function r(e){return o.createFactory(e)}var o=e(58),a=(e(59),e(159)),i=a({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",
	hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul","var":"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},r);t.exports=i},{159:159,58:58,59:59}],43:[function(e,t,n){"use strict";var r={useCreateElement:!0};t.exports=r},{}],44:[function(e,t,n){"use strict";var r=e(7),o=e(38),a=e(78),i={dangerouslyProcessChildrenUpdates:function(e,t){var n=o.getNodeFromInstance(e);r.processUpdates(n,t)}};a.measureMethods(i,"ReactDOMIDOperations",{dangerouslyProcessChildrenUpdates:"dangerouslyProcessChildrenUpdates"}),t.exports=i},{38:38,7:7,78:78}],45:[function(e,t,n){"use strict";function r(){this._rootNodeID&&p.updateWrapper(this)}function o(e){var t=this._currentElement.props,n=u.executeOnChange(t,e);l.asap(r,this);var o=t.name;if("radio"===t.type&&null!=o){for(var a=s.getNodeFromInstance(this),i=a;i.parentNode;)i=i.parentNode;for(var p=i.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),d=0;d<p.length;d++){var f=p[d];if(f!==a&&f.form===a.form){var h=s.getInstanceFromNode(f);h?void 0:c(!1),l.asap(r,h)}}}return n}var a=e(163),i=e(11),u=e(22),s=e(38),l=e(90),c=e(154),p=(e(162),{getNativeProps:function(e,t){var n=u.getValue(t),r=u.getChecked(t),o=a({type:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return o},mountWrapper:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:t.defaultChecked||!1,initialValue:null!=n?n:null,listeners:null,onChange:o.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=t.checked;null!=n&&i.setValueForProperty(s.getNodeFromInstance(e),"checked",n||!1);var r=u.getValue(t);null!=r&&i.setValueForProperty(s.getNodeFromInstance(e),"value",""+r)}});t.exports=p},{11:11,154:154,162:162,163:163,22:22,38:38,90:90}],46:[function(e,t,n){"use strict";var r=e(40);t.exports={debugTool:r}},{40:40}],47:[function(e,t,n){"use strict";var r=e(163),o=e(27),a=e(48),i=(e(162),{mountWrapper:function(e,t,n){var r=null;null!=n&&"select"===n._tag&&(r=a.getSelectValueContext(n));var o=null;if(null!=r)if(o=!1,Array.isArray(r)){for(var i=0;i<r.length;i++)if(""+r[i]==""+t.value){o=!0;break}}else o=""+r==""+t.value;e._wrapperState={selected:o}},getNativeProps:function(e,t){var n=r({selected:void 0,children:void 0},t);null!=e._wrapperState.selected&&(n.selected=e._wrapperState.selected);var a="";return o.forEach(t.children,function(e){null!=e&&("string"!=typeof e&&"number"!=typeof e||(a+=e))}),a&&(n.children=a),n}});t.exports=i},{162:162,163:163,27:27,48:48}],48:[function(e,t,n){"use strict";function r(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,t=u.getValue(e);null!=t&&o(this,Boolean(e.multiple),t)}}function o(e,t,n){var r,o,a=s.getNodeFromInstance(e).options;if(t){for(r={},o=0;o<n.length;o++)r[""+n[o]]=!0;for(o=0;o<a.length;o++){var i=r.hasOwnProperty(a[o].value);a[o].selected!==i&&(a[o].selected=i)}}else{for(r=""+n,o=0;o<a.length;o++)if(a[o].value===r)return void(a[o].selected=!0);a.length&&(a[0].selected=!0)}}function a(e){var t=this._currentElement.props,n=u.executeOnChange(t,e);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),l.asap(r,this),n}var i=e(163),u=e(22),s=e(38),l=e(90),c=(e(162),!1),p={getNativeProps:function(e,t){return i({},t,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,t){var n=u.getValue(t);e._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:t.defaultValue,listeners:null,onChange:a.bind(e),wasMultiple:Boolean(t.multiple)},void 0===t.value||void 0===t.defaultValue||c||(c=!0)},getSelectValueContext:function(e){return e._wrapperState.initialValue},postUpdateWrapper:function(e){var t=e._currentElement.props;e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(t.multiple);var r=u.getValue(t);null!=r?(e._wrapperState.pendingUpdate=!1,o(e,Boolean(t.multiple),r)):n!==Boolean(t.multiple)&&(null!=t.defaultValue?o(e,Boolean(t.multiple),t.defaultValue):o(e,Boolean(t.multiple),t.multiple?[]:""))}};t.exports=p},{162:162,163:163,22:22,38:38,90:90}],49:[function(e,t,n){"use strict";function r(e,t,n,r){return e===n&&t===r}function o(e){var t=document.selection,n=t.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(e),o.setEndPoint("EndToStart",n);var a=o.text.length,i=a+r;return{start:a,end:i}}function a(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,o=t.anchorOffset,a=t.focusNode,i=t.focusOffset,u=t.getRangeAt(0);try{u.startContainer.nodeType,u.endContainer.nodeType}catch(s){return null}var l=r(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),c=l?0:u.toString().length,p=u.cloneRange();p.selectNodeContents(e),p.setEnd(u.startContainer,u.startOffset);var d=r(p.startContainer,p.startOffset,p.endContainer,p.endOffset),f=d?0:p.toString().length,h=f+c,v=document.createRange();v.setStart(n,o),v.setEnd(a,i);var m=v.collapsed;return{start:m?h:f,end:m?f:h}}function i(e,t){var n,r,o=document.selection.createRange().duplicate();void 0===t.end?(n=t.start,r=n):t.start>t.end?(n=t.end,r=t.start):(n=t.start,r=t.end),o.moveToElementText(e),o.moveStart("character",n),o.setEndPoint("EndToStart",o),o.moveEnd("character",r-n),o.select()}function u(e,t){if(window.getSelection){var n=window.getSelection(),r=e[c()].length,o=Math.min(t.start,r),a=void 0===t.end?o:Math.min(t.end,r);if(!n.extend&&o>a){var i=a;a=o,o=i}var u=l(e,o),s=l(e,a);if(u&&s){var p=document.createRange();p.setStart(u.node,u.offset),n.removeAllRanges(),o>a?(n.addRange(p),n.extend(s.node,s.offset)):(p.setEnd(s.node,s.offset),n.addRange(p))}}}var s=e(140),l=e(125),c=e(126),p=s.canUseDOM&&"selection"in document&&!("getSelection"in window),d={getOffsets:p?o:a,setOffsets:p?i:u};t.exports=d},{125:125,126:126,140:140}],50:[function(e,t,n){"use strict";var r=e(57),o=e(86),a=e(91);r.inject();var i={renderToString:o.renderToString,renderToStaticMarkup:o.renderToStaticMarkup,version:a};t.exports=i},{57:57,86:86,91:91}],51:[function(e,t,n){"use strict";var r=e(163),o=e(7),a=e(8),i=e(38),u=e(78),s=e(115),l=e(154),c=(e(138),function(e){this._currentElement=e,this._stringText=""+e,this._nativeNode=null,this._nativeParent=null,this._domID=null,this._mountIndex=0,this._closingComment=null,this._commentNodes=null});r(c.prototype,{mountComponent:function(e,t,n,r){var o=n._idCounter++,u=" react-text: "+o+" ",l=" /react-text ";if(this._domID=o,this._nativeParent=t,e.useCreateElement){var c=n._ownerDocument,p=c.createComment(u),d=c.createComment(l),f=a(c.createDocumentFragment());return a.queueChild(f,a(p)),this._stringText&&a.queueChild(f,a(c.createTextNode(this._stringText))),a.queueChild(f,a(d)),i.precacheNode(this,p),this._closingComment=d,f}var h=s(this._stringText);return e.renderToStaticMarkup?h:"<!--"+u+"-->"+h+"<!--"+l+"-->"},receiveComponent:function(e,t){if(e!==this._currentElement){this._currentElement=e;var n=""+e;if(n!==this._stringText){this._stringText=n;var r=this.getNativeNode();o.replaceDelimitedText(r[0],r[1],n)}}},getNativeNode:function(){var e=this._commentNodes;if(e)return e;if(!this._closingComment)for(var t=i.getNodeFromInstance(this),n=t.nextSibling;;){if(null==n?l(!1):void 0,8===n.nodeType&&" /react-text "===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return e=[this._nativeNode,this._closingComment],this._commentNodes=e,e},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,i.uncacheNode(this)}}),u.measureMethods(c.prototype,"ReactDOMTextComponent",{mountComponent:"mountComponent",receiveComponent:"receiveComponent"}),t.exports=c},{115:115,138:138,154:154,163:163,38:38,7:7,78:78,8:8}],52:[function(e,t,n){"use strict";function r(){this._rootNodeID&&p.updateWrapper(this)}function o(e){var t=this._currentElement.props,n=u.executeOnChange(t,e);return l.asap(r,this),n}var a=e(163),i=e(11),u=e(22),s=e(38),l=e(90),c=e(154),p=(e(162),{getNativeProps:function(e,t){null!=t.dangerouslySetInnerHTML?c(!1):void 0;var n=a({},t,{defaultValue:void 0,value:void 0,children:e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return n},mountWrapper:function(e,t){var n=t.defaultValue,r=t.children;null!=r&&(null!=n?c(!1):void 0,Array.isArray(r)&&(r.length<=1?void 0:c(!1),r=r[0]),n=""+r),null==n&&(n="");var a=u.getValue(t);e._wrapperState={initialValue:""+(null!=a?a:n),listeners:null,onChange:o.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=u.getValue(t);null!=n&&i.setValueForProperty(s.getNodeFromInstance(e),"value",""+n)}});t.exports=p},{11:11,154:154,162:162,163:163,22:22,38:38,90:90}],53:[function(e,t,n){"use strict";function r(e,t){"_nativeNode"in e?void 0:s(!1),"_nativeNode"in t?void 0:s(!1);for(var n=0,r=e;r;r=r._nativeParent)n++;for(var o=0,a=t;a;a=a._nativeParent)o++;for(;n-o>0;)e=e._nativeParent,n--;for(;o-n>0;)t=t._nativeParent,o--;for(var i=n;i--;){if(e===t)return e;e=e._nativeParent,t=t._nativeParent}return null}function o(e,t){"_nativeNode"in e?void 0:s(!1),"_nativeNode"in t?void 0:s(!1);for(;t;){if(t===e)return!0;t=t._nativeParent}return!1}function a(e){return"_nativeNode"in e?void 0:s(!1),e._nativeParent}function i(e,t,n){for(var r=[];e;)r.push(e),e=e._nativeParent;var o;for(o=r.length;o-- >0;)t(r[o],!1,n);for(o=0;o<r.length;o++)t(r[o],!0,n)}function u(e,t,n,o,a){for(var i=e&&t?r(e,t):null,u=[];e&&e!==i;)u.push(e),e=e._nativeParent;for(var s=[];t&&t!==i;)s.push(t),t=t._nativeParent;var l;for(l=0;l<u.length;l++)n(u[l],!0,o);for(l=s.length;l-- >0;)n(s[l],!1,a)}var s=e(154);t.exports={isAncestor:o,getLowestCommonAncestor:r,getParentInstance:a,traverseTwoPhase:i,traverseEnterLeave:u}},{154:154}],54:[function(e,t,n){"use strict";var r,o=(e(10),e(17),e(162),{onCreateMarkupForProperty:function(e,t){r(e)},onSetValueForProperty:function(e,t,n){r(t)},onDeleteValueForProperty:function(e,t){r(t)}});t.exports=o},{10:10,162:162,17:17}],55:[function(e,t,n){"use strict";function r(e,t,n,r,o,a){}var o=e(69),a=(e(162),[]),i={addDevtool:function(e){a.push(e)},removeDevtool:function(e){for(var t=0;t<a.length;t++)a[t]===e&&(a.splice(t,1),t--)},onBeginProcessingChildContext:function(){r("onBeginProcessingChildContext")},onEndProcessingChildContext:function(){r("onEndProcessingChildContext")},onSetState:function(){r("onSetState")},onMountRootComponent:function(e){r("onMountRootComponent",e)},onMountComponent:function(e){r("onMountComponent",e)},onUpdateComponent:function(e){r("onUpdateComponent",e)},onUnmountComponent:function(e){r("onUnmountComponent",e)}};i.addDevtool(o),t.exports=i},{162:162,69:69}],56:[function(e,t,n){"use strict";function r(){this.reinitializeTransaction()}var o=e(163),a=e(90),i=e(108),u=e(146),s={initialize:u,close:function(){d.isBatchingUpdates=!1}},l={initialize:u,close:a.flushBatchedUpdates.bind(a)},c=[l,s];o(r.prototype,i.Mixin,{getTransactionWrappers:function(){return c}});var p=new r,d={isBatchingUpdates:!1,batchedUpdates:function(e,t,n,r,o,a){var i=d.isBatchingUpdates;d.isBatchingUpdates=!0,i?e(t,n,r,o,a):p.perform(e,null,t,n,r,o,a)}};t.exports=d},{108:108,146:146,163:163,90:90}],57:[function(e,t,n){"use strict";function r(){E||(E=!0,g.EventEmitter.injectReactEventListener(m),g.EventPluginHub.injectEventPluginOrder(i),g.EventPluginUtils.injectComponentTree(p),g.EventPluginUtils.injectTreeTraversal(f),g.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:_,EnterLeaveEventPlugin:u,ChangeEventPlugin:a,SelectEventPlugin:b,BeforeInputEventPlugin:o}),g.NativeComponent.injectGenericComponentClass(c),g.NativeComponent.injectTextComponentClass(h),g.DOMProperty.injectDOMPropertyConfig(s),g.DOMProperty.injectDOMPropertyConfig(C),g.EmptyComponent.injectEmptyComponentFactory(function(e){return new d(e)}),g.Updates.injectReconcileTransaction(y),g.Updates.injectBatchingStrategy(v),g.Component.injectEnvironment(l))}var o=e(2),a=e(6),i=e(13),u=e(14),s=(e(140),e(21)),l=e(30),c=e(36),p=e(38),d=e(41),f=e(53),h=e(51),v=e(56),m=e(63),g=e(65),y=e(82),C=e(92),b=e(93),_=e(94),E=!1;t.exports={inject:r}},{13:13,14:14,140:140,2:2,21:21,30:30,36:36,38:38,41:41,51:51,53:53,56:56,6:6,63:63,65:65,82:82,92:92,93:93,94:94}],58:[function(e,t,n){"use strict";var r=e(163),o=e(33),a=(e(162),e(112),"function"==typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103),i={key:!0,ref:!0,__self:!0,__source:!0},u=function(e,t,n,r,o,i,u){var s={$$typeof:a,type:e,key:t,ref:n,props:u,_owner:i};return s};u.createElement=function(e,t,n){var r,a={},s=null,l=null,c=null,p=null;if(null!=t){l=void 0===t.ref?null:t.ref,s=void 0===t.key?null:""+t.key,c=void 0===t.__self?null:t.__self,p=void 0===t.__source?null:t.__source;for(r in t)t.hasOwnProperty(r)&&!i.hasOwnProperty(r)&&(a[r]=t[r])}var d=arguments.length-2;if(1===d)a.children=n;else if(d>1){for(var f=Array(d),h=0;d>h;h++)f[h]=arguments[h+2];a.children=f}if(e&&e.defaultProps){var v=e.defaultProps;for(r in v)void 0===a[r]&&(a[r]=v[r])}return u(e,s,l,c,p,o.current,a)},u.createFactory=function(e){var t=u.createElement.bind(null,e);return t.type=e,t},u.cloneAndReplaceKey=function(e,t){var n=u(e.type,t,e.ref,e._self,e._source,e._owner,e.props);return n},u.cloneElement=function(e,t,n){var a,s=r({},e.props),l=e.key,c=e.ref,p=e._self,d=e._source,f=e._owner;if(null!=t){void 0!==t.ref&&(c=t.ref,f=o.current),void 0!==t.key&&(l=""+t.key);var h;e.type&&e.type.defaultProps&&(h=e.type.defaultProps);for(a in t)t.hasOwnProperty(a)&&!i.hasOwnProperty(a)&&(void 0===t[a]&&void 0!==h?s[a]=h[a]:s[a]=t[a])}var v=arguments.length-2;if(1===v)s.children=n;else if(v>1){for(var m=Array(v),g=0;v>g;g++)m[g]=arguments[g+2];s.children=m}return u(e.type,l,c,p,d,f,s)},u.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.exports=u},{112:112,162:162,163:163,33:33}],59:[function(e,t,n){"use strict";function r(){if(p.current){var e=p.current.getName();if(e)return" Check the render method of `"+e+"`."}return""}function o(e,t){e._store&&!e._store.validated&&null==e.key&&(e._store.validated=!0,a("uniqueKey",e,t))}function a(e,t,n){var o=r();if(!o){var a="string"==typeof n?n:n.displayName||n.name;a&&(o=" Check the top-level render call using <"+a+">.")}var i=h[e]||(h[e]={});if(i[o])return null;i[o]=!0;var u={parentOrOwner:o,url:" See https://fb.me/react-warning-keys for more information.",childOwner:null};return t&&t._owner&&t._owner!==p.current&&(u.childOwner=" It was passed a child from "+t._owner.getName()+"."),u}function i(e,t){if("object"==typeof e)if(Array.isArray(e))for(var n=0;n<e.length;n++){var r=e[n];l.isValidElement(r)&&o(r,t)}else if(l.isValidElement(e))e._store&&(e._store.validated=!0);else if(e){var a=d(e);if(a&&a!==e.entries)for(var i,u=a.call(e);!(i=u.next()).done;)l.isValidElement(i.value)&&o(i.value,t)}}function u(e,t,n,o){for(var a in t)if(t.hasOwnProperty(a)){var i;try{"function"!=typeof t[a]?f(!1):void 0,i=t[a](n,a,e,o)}catch(u){i=u}i instanceof Error&&!(i.message in v)&&(v[i.message]=!0,r())}}function s(e){var t=e.type;if("function"==typeof t){var n=t.displayName||t.name;t.propTypes&&u(n,t.propTypes,e.props,c.prop),"function"==typeof t.getDefaultProps}}var l=e(58),c=e(80),p=(e(79),e(33)),d=(e(112),e(123)),f=e(154),h=(e(162),{}),v={},m={createElement:function(e,t,n){var r="string"==typeof e||"function"==typeof e,o=l.createElement.apply(this,arguments);if(null==o)return o;if(r)for(var a=2;a<arguments.length;a++)i(arguments[a],e);return s(o),o},createFactory:function(e){var t=m.createElement.bind(null,e);return t.type=e,t},cloneElement:function(e,t,n){for(var r=l.cloneElement.apply(this,arguments),o=2;o<arguments.length;o++)i(arguments[o],r.type);return s(r),r}};t.exports=m},{112:112,123:123,154:154,162:162,33:33,58:58,79:79,80:80}],60:[function(e,t,n){"use strict";var r,o={injectEmptyComponentFactory:function(e){r=e}},a={create:function(e){return r(e)}};a.injection=o,t.exports=a},{}],61:[function(e,t,n){"use strict";function r(e,t,n,r){try{return t(n,r)}catch(a){return void(null===o&&(o=a))}}var o=null,a={invokeGuardedCallback:r,invokeGuardedCallbackWithCatch:r,rethrowCaughtError:function(){if(o){var e=o;throw o=null,e}}};t.exports=a},{}],62:[function(e,t,n){"use strict";function r(e){o.enqueueEvents(e),o.processEventQueue(!1)}var o=e(16),a={handleTopLevel:function(e,t,n,a){var i=o.extractEvents(e,t,n,a);r(i)}};t.exports=a},{16:16}],63:[function(e,t,n){"use strict";function r(e){for(;e._nativeParent;)e=e._nativeParent;var t=p.getNodeFromInstance(e),n=t.parentNode;return p.getClosestInstanceFromNode(n)}function o(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function a(e){var t=f(e.nativeEvent),n=p.getClosestInstanceFromNode(t),o=n;do e.ancestors.push(o),o=o&&r(o);while(o);for(var a=0;a<e.ancestors.length;a++)n=e.ancestors[a],v._handleTopLevel(e.topLevelType,n,e.nativeEvent,f(e.nativeEvent))}function i(e){var t=h(window);e(t)}var u=e(163),s=e(139),l=e(140),c=e(23),p=e(38),d=e(90),f=e(122),h=e(151);u(o.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),c.addPoolingTo(o,c.twoArgumentPooler);var v={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:l.canUseDOM?window:null,setHandleTopLevel:function(e){v._handleTopLevel=e},setEnabled:function(e){v._enabled=!!e},isEnabled:function(){return v._enabled},trapBubbledEvent:function(e,t,n){var r=n;return r?s.listen(r,t,v.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){var r=n;return r?s.capture(r,t,v.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var t=i.bind(null,e);s.listen(window,"scroll",t)},dispatchEvent:function(e,t){if(v._enabled){var n=o.getPooled(e,t);try{d.batchedUpdates(a,n)}finally{o.release(n)}}}};t.exports=v},{122:122,139:139,140:140,151:151,163:163,23:23,38:38,90:90}],64:[function(e,t,n){"use strict";var r={logTopLevelRenders:!1};t.exports=r},{}],65:[function(e,t,n){"use strict";var r=e(10),o=e(16),a=e(18),i=e(31),u=e(28),s=e(60),l=e(25),c=e(74),p=e(78),d=e(90),f={Component:i.injection,Class:u.injection,DOMProperty:r.injection,EmptyComponent:s.injection,EventPluginHub:o.injection,EventPluginUtils:a.injection,EventEmitter:l.injection,NativeComponent:c.injection,Perf:p.injection,Updates:d.injection};t.exports=f},{10:10,16:16,18:18,25:25,28:28,31:31,60:60,74:74,78:78,90:90}],66:[function(e,t,n){"use strict";function r(e){return a(document.documentElement,e)}var o=e(49),a=e(143),i=e(148),u=e(149),s={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=u();return{focusedElem:e,selectionRange:s.hasSelectionCapabilities(e)?s.getSelection(e):null}},restoreSelection:function(e){var t=u(),n=e.focusedElem,o=e.selectionRange;t!==n&&r(n)&&(s.hasSelectionCapabilities(n)&&s.setSelection(n,o),i(n))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=o.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;if(void 0===r&&(r=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var a=e.createTextRange();a.collapse(!0),a.moveStart("character",n),a.moveEnd("character",r-n),a.select()}else o.setOffsets(e,t)}};t.exports=s},{143:143,148:148,149:149,49:49}],67:[function(e,t,n){"use strict";var r={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,t){e._reactInternalInstance=t}};t.exports=r},{}],68:[function(e,t,n){"use strict";var r=e(55);t.exports={debugTool:r}},{55:55}],69:[function(e,t,n){"use strict";var r,o,a=(e(162),{onBeginProcessingChildContext:function(){r=!0},onEndProcessingChildContext:function(){r=!1},onSetState:function(){o()}});t.exports=a},{162:162}],70:[function(e,t,n){"use strict";var r=e(111),o=/\/?>/,a=/^<\!\-\-/,i={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=r(e);return a.test(e)?e:e.replace(o," "+i.CHECKSUM_ATTR_NAME+'="'+t+'"$&')},canReuseMarkup:function(e,t){var n=t.getAttribute(i.CHECKSUM_ATTR_NAME);n=n&&parseInt(n,10);var o=r(e);return o===n}};t.exports=i},{111:111}],71:[function(e,t,n){"use strict";function r(e,t){for(var n=Math.min(e.length,t.length),r=0;n>r;r++)if(e.charAt(r)!==t.charAt(r))return r;return e.length===t.length?-1:n}function o(e){return e?e.nodeType===I?e.documentElement:e.firstChild:null}function a(e){return e.getAttribute&&e.getAttribute(k)||""}function i(e,t,n,r,o){var a;if(C.logTopLevelRenders){var i=e._currentElement.props,u=i.type;a="React mount: "+("string"==typeof u?u:u.displayName||u.name),console.time(a)}var s=E.mountComponent(e,n,null,m(e,t),o);a&&console.timeEnd(a),e._renderedComponent._topLevelWrapper=e,F._mountImageIntoNode(s,t,e,r,n)}function u(e,t,n,r){var o=N.ReactReconcileTransaction.getPooled(!n&&g.useCreateElement);o.perform(i,null,e,t,o,n,r),N.ReactReconcileTransaction.release(o)}function s(e,t,n){for(E.unmountComponent(e,n),t.nodeType===I&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)}function l(e){var t=o(e);if(t){var n=v.getInstanceFromNode(t);return!(!n||!n._nativeParent)}}function c(e){var t=o(e),n=t&&v.getInstanceFromNode(t);return n&&!n._nativeParent?n:null}function p(e){var t=c(e);return t?t._nativeContainerInfo._topLevelWrapper:null}var d=e(8),f=e(10),h=e(25),v=(e(33),e(38)),m=e(39),g=e(43),y=e(58),C=e(64),b=(e(68),e(70)),_=e(78),E=e(83),x=e(89),N=e(90),T=e(147),P=e(128),w=e(154),M=e(134),S=e(136),k=(e(162),f.ID_ATTRIBUTE_NAME),R=f.ROOT_ATTRIBUTE_NAME,D=1,I=9,O=11,A={},L=1,U=function(){this.rootID=L++};U.prototype.isReactComponent={},U.prototype.render=function(){return this.props};var F={TopLevelWrapper:U,_instancesByReactRootID:A,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,r){return F.scrollMonitor(n,function(){x.enqueueElementInternal(e,t),r&&x.enqueueCallbackInternal(e,r)}),e},_renderNewRootComponent:function(e,t,n,r){!t||t.nodeType!==D&&t.nodeType!==I&&t.nodeType!==O?w(!1):void 0,h.ensureScrollValueMonitoring();var o=P(e);N.batchedUpdates(u,o,t,n,r);var a=o._instance.rootID;return A[a]=o,o},renderSubtreeIntoContainer:function(e,t,n,r){return null==e||null==e._reactInternalInstance?w(!1):void 0,F._renderSubtreeIntoContainer(e,t,n,r)},_renderSubtreeIntoContainer:function(e,t,n,r){x.validateCallback(r,"ReactDOM.render"),y.isValidElement(t)?void 0:w(!1);var i=y(U,null,null,null,null,null,t),u=p(n);if(u){var s=u._currentElement,c=s.props;if(S(c,t)){var d=u._renderedComponent.getPublicInstance(),f=r&&function(){r.call(d)};return F._updateRootComponent(u,i,n,f),d}F.unmountComponentAtNode(n)}var h=o(n),v=h&&!!a(h),m=l(n),g=v&&!u&&!m,C=F._renderNewRootComponent(i,n,g,null!=e?e._reactInternalInstance._processChildContext(e._reactInternalInstance._context):T)._renderedComponent.getPublicInstance();return r&&r.call(C),C},render:function(e,t,n){return F._renderSubtreeIntoContainer(null,e,t,n)},unmountComponentAtNode:function(e){!e||e.nodeType!==D&&e.nodeType!==I&&e.nodeType!==O?w(!1):void 0;var t=p(e);return t?(delete A[t._instance.rootID],N.batchedUpdates(s,t,e,!1),!0):(l(e),1===e.nodeType&&e.hasAttribute(R),!1)},_mountImageIntoNode:function(e,t,n,a,i){if(!t||t.nodeType!==D&&t.nodeType!==I&&t.nodeType!==O?w(!1):void 0,a){var u=o(t);if(b.canReuseMarkup(e,u))return void v.precacheNode(n,u);var s=u.getAttribute(b.CHECKSUM_ATTR_NAME);u.removeAttribute(b.CHECKSUM_ATTR_NAME);var l=u.outerHTML;u.setAttribute(b.CHECKSUM_ATTR_NAME,s);var c=e,p=r(c,l);" (client) "+c.substring(p-20,p+20)+"\n (server) "+l.substring(p-20,p+20),t.nodeType===I?w(!1):void 0}if(t.nodeType===I?w(!1):void 0,i.useCreateElement){for(;t.lastChild;)t.removeChild(t.lastChild);d.insertTreeBefore(t,e,null)}else M(t,e),v.precacheNode(n,t.firstChild)}};_.measureMethods(F,"ReactMount",{_renderNewRootComponent:"_renderNewRootComponent",_mountImageIntoNode:"_mountImageIntoNode"}),t.exports=F},{10:10,128:128,134:134,136:136,147:147,154:154,162:162,25:25,33:33,38:38,39:39,43:43,58:58,64:64,68:68,70:70,78:78,8:8,83:83,89:89,90:90}],72:[function(e,t,n){"use strict";function r(e,t,n){return{type:p.INSERT_MARKUP,content:e,fromIndex:null,fromNode:null,toIndex:n,afterNode:t}}function o(e,t,n){return{type:p.MOVE_EXISTING,content:null,fromIndex:e._mountIndex,fromNode:d.getNativeNode(e),toIndex:n,afterNode:t}}function a(e,t){return{type:p.REMOVE_NODE,content:null,fromIndex:e._mountIndex,fromNode:t,toIndex:null,afterNode:null}}function i(e){return{type:p.SET_MARKUP,content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function u(e){return{type:p.TEXT_CONTENT,content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function s(e,t){return t&&(e=e||[],e.push(t)),e}function l(e,t){c.processChildrenUpdates(e,t)}var c=e(31),p=e(73),d=(e(33),e(83)),f=e(26),h=e(117),v=e(154),m={Mixin:{_reconcilerInstantiateChildren:function(e,t,n){return f.instantiateChildren(e,t,n)},_reconcilerUpdateChildren:function(e,t,n,r,o){var a;return a=h(t),f.updateChildren(e,a,n,r,o),a},mountChildren:function(e,t,n){var r=this._reconcilerInstantiateChildren(e,t,n);this._renderedChildren=r;var o=[],a=0;for(var i in r)if(r.hasOwnProperty(i)){var u=r[i],s=d.mountComponent(u,t,this,this._nativeContainerInfo,n);u._mountIndex=a++,o.push(s)}return o},updateTextContent:function(e){var t=this._renderedChildren;f.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&v(!1);var r=[u(e)];l(this,r)},updateMarkup:function(e){var t=this._renderedChildren;f.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&v(!1);var r=[i(e)];l(this,r)},updateChildren:function(e,t,n){this._updateChildren(e,t,n)},_updateChildren:function(e,t,n){var r=this._renderedChildren,o={},a=this._reconcilerUpdateChildren(r,e,o,t,n);if(a||r){var i,u=null,c=0,p=0,f=null;for(i in a)if(a.hasOwnProperty(i)){var h=r&&r[i],v=a[i];h===v?(u=s(u,this.moveChild(h,f,p,c)),c=Math.max(h._mountIndex,c),h._mountIndex=p):(h&&(c=Math.max(h._mountIndex,c)),u=s(u,this._mountChildAtIndex(v,f,p,t,n))),p++,f=d.getNativeNode(v)}for(i in o)o.hasOwnProperty(i)&&(u=s(u,this._unmountChild(r[i],o[i])));u&&l(this,u),this._renderedChildren=a}},unmountChildren:function(e){var t=this._renderedChildren;f.unmountChildren(t,e),this._renderedChildren=null},moveChild:function(e,t,n,r){return e._mountIndex<r?o(e,t,n):void 0},createChild:function(e,t,n){return r(n,t,e._mountIndex)},removeChild:function(e,t){return a(e,t)},_mountChildAtIndex:function(e,t,n,r,o){var a=d.mountComponent(e,r,this,this._nativeContainerInfo,o);return e._mountIndex=n,this.createChild(e,t,a)},_unmountChild:function(e,t){var n=this.removeChild(e,t);return e._mountIndex=null,n}}};t.exports=m},{117:117,154:154,26:26,31:31,33:33,73:73,83:83}],73:[function(e,t,n){"use strict";var r=e(157),o=r({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});t.exports=o},{157:157}],74:[function(e,t,n){"use strict";function r(e){if("function"==typeof e.type)return e.type;var t=e.type,n=p[t];return null==n&&(p[t]=n=l(t)),n}function o(e){return c?void 0:s(!1),new c(e)}function a(e){return new d(e)}function i(e){return e instanceof d}var u=e(163),s=e(154),l=null,c=null,p={},d=null,f={injectGenericComponentClass:function(e){c=e},injectTextComponentClass:function(e){d=e},injectComponentClasses:function(e){u(p,e)}},h={getComponentClassForElement:r,createInternalComponent:o,createInstanceForText:a,isTextComponent:i,injection:f};t.exports=h},{154:154,163:163}],75:[function(e,t,n){"use strict";var r=e(58),o=e(154),a={NATIVE:0,COMPOSITE:1,EMPTY:2,getType:function(e){return null===e||e===!1?a.EMPTY:r.isValidElement(e)?"function"==typeof e.type?a.COMPOSITE:a.NATIVE:void o(!1)}};t.exports=a},{154:154,58:58}],76:[function(e,t,n){"use strict";function r(e,t){}var o=(e(162),{isMounted:function(e){return!1},enqueueCallback:function(e,t){},enqueueForceUpdate:function(e){r(e,"forceUpdate")},enqueueReplaceState:function(e,t){r(e,"replaceState")},enqueueSetState:function(e,t){r(e,"setState")}});t.exports=o},{162:162}],77:[function(e,t,n){"use strict";var r=e(154),o={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,t,n){o.isValidOwner(n)?void 0:r(!1),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){o.isValidOwner(n)?void 0:r(!1);var a=n.getPublicInstance();a&&a.refs[t]===e.getPublicInstance()&&n.detachRef(t)}};t.exports=o},{154:154}],78:[function(e,t,n){"use strict";function r(e,t,n){return n}var o={enableMeasure:!1,storedMeasure:r,measureMethods:function(e,t,n){},measure:function(e,t,n){return n},injection:{injectMeasure:function(e){o.storedMeasure=e}}};t.exports=o},{}],79:[function(e,t,n){"use strict";var r={};t.exports=r},{}],80:[function(e,t,n){"use strict";var r=e(157),o=r({prop:null,context:null,childContext:null});t.exports=o},{157:157}],81:[function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function o(e){function t(t,n,r,o,a,i){if(o=o||x,i=i||r,null==n[r]){var u=b[a];return t?new Error("Required "+u+" `"+i+"` was not specified in "+("`"+o+"`.")):null}return e(n,r,o,a,i)}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function a(e){function t(t,n,r,o,a){var i=t[n],u=m(i);if(u!==e){var s=b[o],l=g(i);return new Error("Invalid "+s+" `"+a+"` of type "+("`"+l+"` supplied to `"+r+"`, expected ")+("`"+e+"`."))}return null}return o(t)}function i(){return o(_.thatReturns(null))}function u(e){function t(t,n,r,o,a){if("function"!=typeof e)return new Error("Property `"+a+"` of component `"+r+"` has invalid PropType notation inside arrayOf.");var i=t[n];if(!Array.isArray(i)){var u=b[o],s=m(i);return new Error("Invalid "+u+" `"+a+"` of type "+("`"+s+"` supplied to `"+r+"`, expected an array."))}for(var l=0;l<i.length;l++){var c=e(i,l,r,o,a+"["+l+"]");if(c instanceof Error)return c}return null}return o(t)}function s(){function e(e,t,n,r,o){if(!C.isValidElement(e[t])){var a=b[r];return new Error("Invalid "+a+" `"+o+"` supplied to "+("`"+n+"`, expected a single ReactElement."))}return null}return o(e)}function l(e){function t(t,n,r,o,a){if(!(t[n]instanceof e)){var i=b[o],u=e.name||x,s=y(t[n]);return new Error("Invalid "+i+" `"+a+"` of type "+("`"+s+"` supplied to `"+r+"`, expected ")+("instance of `"+u+"`."))}return null}return o(t)}function c(e){function t(t,n,o,a,i){for(var u=t[n],s=0;s<e.length;s++)if(r(u,e[s]))return null;var l=b[a],c=JSON.stringify(e);return new Error("Invalid "+l+" `"+i+"` of value `"+u+"` "+("supplied to `"+o+"`, expected one of "+c+"."))}return o(Array.isArray(e)?t:function(){return new Error("Invalid argument supplied to oneOf, expected an instance of array.");
	})}function p(e){function t(t,n,r,o,a){if("function"!=typeof e)return new Error("Property `"+a+"` of component `"+r+"` has invalid PropType notation inside objectOf.");var i=t[n],u=m(i);if("object"!==u){var s=b[o];return new Error("Invalid "+s+" `"+a+"` of type "+("`"+u+"` supplied to `"+r+"`, expected an object."))}for(var l in i)if(i.hasOwnProperty(l)){var c=e(i,l,r,o,a+"."+l);if(c instanceof Error)return c}return null}return o(t)}function d(e){function t(t,n,r,o,a){for(var i=0;i<e.length;i++){var u=e[i];if(null==u(t,n,r,o,a))return null}var s=b[o];return new Error("Invalid "+s+" `"+a+"` supplied to "+("`"+r+"`."))}return o(Array.isArray(e)?t:function(){return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")})}function f(){function e(e,t,n,r,o){if(!v(e[t])){var a=b[r];return new Error("Invalid "+a+" `"+o+"` supplied to "+("`"+n+"`, expected a ReactNode."))}return null}return o(e)}function h(e){function t(t,n,r,o,a){var i=t[n],u=m(i);if("object"!==u){var s=b[o];return new Error("Invalid "+s+" `"+a+"` of type `"+u+"` "+("supplied to `"+r+"`, expected `object`."))}for(var l in e){var c=e[l];if(c){var p=c(i,l,r,o,a+"."+l);if(p)return p}}return null}return o(t)}function v(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(v);if(null===e||C.isValidElement(e))return!0;var t=E(e);if(!t)return!1;var n,r=t.call(e);if(t!==e.entries){for(;!(n=r.next()).done;)if(!v(n.value))return!1}else for(;!(n=r.next()).done;){var o=n.value;if(o&&!v(o[1]))return!1}return!0;default:return!1}}function m(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":t}function g(e){var t=m(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}function y(e){return e.constructor&&e.constructor.name?e.constructor.name:x}var C=e(58),b=e(79),_=e(146),E=e(123),x="<<anonymous>>",N={array:a("array"),bool:a("boolean"),func:a("function"),number:a("number"),object:a("object"),string:a("string"),any:i(),arrayOf:u,element:s(),instanceOf:l,node:f(),objectOf:p,oneOf:c,oneOfType:d,shape:h};t.exports=N},{123:123,146:146,58:58,79:79}],82:[function(e,t,n){"use strict";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=a.getPooled(null),this.useCreateElement=e}var o=e(163),a=e(5),i=e(23),u=e(25),s=e(66),l=e(108),c={initialize:s.getSelectionInformation,close:s.restoreSelection},p={initialize:function(){var e=u.isEnabled();return u.setEnabled(!1),e},close:function(e){u.setEnabled(e)}},d={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},f=[c,p,d],h={getTransactionWrappers:function(){return f},getReactMountReady:function(){return this.reactMountReady},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(e){this.reactMountReady.rollback(e)},destructor:function(){a.release(this.reactMountReady),this.reactMountReady=null}};o(r.prototype,l.Mixin,h),i.addPoolingTo(r),t.exports=r},{108:108,163:163,23:23,25:25,5:5,66:66}],83:[function(e,t,n){"use strict";function r(){o.attachRefs(this,this._currentElement)}var o=e(84),a=(e(68),{mountComponent:function(e,t,n,o,a){var i=e.mountComponent(t,n,o,a);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(r,e),i},getNativeNode:function(e){return e.getNativeNode()},unmountComponent:function(e,t){o.detachRefs(e,e._currentElement),e.unmountComponent(t)},receiveComponent:function(e,t,n,a){var i=e._currentElement;if(t!==i||a!==e._context){var u=o.shouldUpdateRefs(i,t);u&&o.detachRefs(e,i),e.receiveComponent(t,n,a),u&&e._currentElement&&null!=e._currentElement.ref&&n.getReactMountReady().enqueue(r,e)}},performUpdateIfNecessary:function(e,t){e.performUpdateIfNecessary(t)}});t.exports=a},{68:68,84:84}],84:[function(e,t,n){"use strict";function r(e,t,n){"function"==typeof e?e(t.getPublicInstance()):a.addComponentAsRefTo(t,e,n)}function o(e,t,n){"function"==typeof e?e(null):a.removeComponentAsRefFrom(t,e,n)}var a=e(77),i={};i.attachRefs=function(e,t){if(null!==t&&t!==!1){var n=t.ref;null!=n&&r(n,e,t._owner)}},i.shouldUpdateRefs=function(e,t){var n=null===e||e===!1,r=null===t||t===!1;return n||r||t._owner!==e._owner||t.ref!==e.ref},i.detachRefs=function(e,t){if(null!==t&&t!==!1){var n=t.ref;null!=n&&o(n,e,t._owner)}},t.exports=i},{77:77}],85:[function(e,t,n){"use strict";var r={isBatchingUpdates:!1,batchedUpdates:function(e){}};t.exports=r},{}],86:[function(e,t,n){"use strict";function r(e,t){var n;try{return d.injection.injectBatchingStrategy(c),n=p.getPooled(t),n.perform(function(){var r=h(e),o=r.mountComponent(n,null,i(),f);return t||(o=l.addChecksumToMarkup(o)),o},null)}finally{p.release(n),d.injection.injectBatchingStrategy(u)}}function o(e){return s.isValidElement(e)?void 0:v(!1),r(e,!1)}function a(e){return s.isValidElement(e)?void 0:v(!1),r(e,!0)}var i=e(39),u=e(56),s=e(58),l=e(70),c=e(85),p=e(87),d=e(90),f=e(147),h=e(128),v=e(154);t.exports={renderToString:o,renderToStaticMarkup:a}},{128:128,147:147,154:154,39:39,56:56,58:58,70:70,85:85,87:87,90:90}],87:[function(e,t,n){"use strict";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.useCreateElement=!1}var o=e(163),a=e(23),i=e(108),u=[],s={enqueue:function(){}},l={getTransactionWrappers:function(){return u},getReactMountReady:function(){return s},destructor:function(){}};o(r.prototype,i.Mixin,l),a.addPoolingTo(r),t.exports=r},{108:108,163:163,23:23}],88:[function(e,t,n){"use strict";var r=e(163),o=e(34),a=e(50),i=e(24),u=r({__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:o,__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:a},i);t.exports=u},{163:163,24:24,34:34,50:50}],89:[function(e,t,n){"use strict";function r(e){i.enqueueUpdate(e)}function o(e,t){var n=a.get(e);return n?n:null}var a=(e(33),e(67)),i=e(90),u=e(154),s=(e(162),{isMounted:function(e){var t=a.get(e);return t?!!t._renderedComponent:!1},enqueueCallback:function(e,t,n){s.validateCallback(t,n);var a=o(e);return a?(a._pendingCallbacks?a._pendingCallbacks.push(t):a._pendingCallbacks=[t],void r(a)):null},enqueueCallbackInternal:function(e,t){e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t],r(e)},enqueueForceUpdate:function(e){var t=o(e,"forceUpdate");t&&(t._pendingForceUpdate=!0,r(t))},enqueueReplaceState:function(e,t){var n=o(e,"replaceState");n&&(n._pendingStateQueue=[t],n._pendingReplaceState=!0,r(n))},enqueueSetState:function(e,t){var n=o(e,"setState");if(n){var a=n._pendingStateQueue||(n._pendingStateQueue=[]);a.push(t),r(n)}},enqueueElementInternal:function(e,t){e._pendingElement=t,r(e)},validateCallback:function(e,t){e&&"function"!=typeof e?u(!1):void 0}});t.exports=s},{154:154,162:162,33:33,67:67,90:90}],90:[function(e,t,n){"use strict";function r(){w.ReactReconcileTransaction&&_?void 0:g(!1)}function o(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=p.getPooled(),this.reconcileTransaction=w.ReactReconcileTransaction.getPooled(!0)}function a(e,t,n,o,a,i){r(),_.batchedUpdates(e,t,n,o,a,i)}function i(e,t){return e._mountOrder-t._mountOrder}function u(e){var t=e.dirtyComponentsLength;t!==y.length?g(!1):void 0,y.sort(i);for(var n=0;t>n;n++){var r=y[n],o=r._pendingCallbacks;r._pendingCallbacks=null;var a;if(f.logTopLevelRenders){var u=r;r._currentElement.props===r._renderedComponent._currentElement&&(u=r._renderedComponent),a="React update: "+u.getName(),console.time(a)}if(v.performUpdateIfNecessary(r,e.reconcileTransaction),a&&console.timeEnd(a),o)for(var s=0;s<o.length;s++)e.callbackQueue.enqueue(o[s],r.getPublicInstance())}}function s(e){return r(),_.isBatchingUpdates?void y.push(e):void _.batchedUpdates(s,e)}function l(e,t){_.isBatchingUpdates?void 0:g(!1),C.enqueue(e,t),b=!0}var c=e(163),p=e(5),d=e(23),f=e(64),h=e(78),v=e(83),m=e(108),g=e(154),y=[],C=p.getPooled(),b=!1,_=null,E={initialize:function(){this.dirtyComponentsLength=y.length},close:function(){this.dirtyComponentsLength!==y.length?(y.splice(0,this.dirtyComponentsLength),T()):y.length=0}},x={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},N=[E,x];c(o.prototype,m.Mixin,{getTransactionWrappers:function(){return N},destructor:function(){this.dirtyComponentsLength=null,p.release(this.callbackQueue),this.callbackQueue=null,w.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return m.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),d.addPoolingTo(o);var T=function(){for(;y.length||b;){if(y.length){var e=o.getPooled();e.perform(u,null,e),o.release(e)}if(b){b=!1;var t=C;C=p.getPooled(),t.notifyAll(),p.release(t)}}};T=h.measure("ReactUpdates","flushBatchedUpdates",T);var P={injectReconcileTransaction:function(e){e?void 0:g(!1),w.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:g(!1),"function"!=typeof e.batchedUpdates?g(!1):void 0,"boolean"!=typeof e.isBatchingUpdates?g(!1):void 0,_=e}},w={ReactReconcileTransaction:null,batchedUpdates:a,enqueueUpdate:s,flushBatchedUpdates:T,injection:P,asap:l};t.exports=w},{108:108,154:154,163:163,23:23,5:5,64:64,78:78,83:83}],91:[function(e,t,n){"use strict";t.exports="15.0.0"},{}],92:[function(e,t,n){"use strict";var r={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},o={accentHeight:"accent-height",accumulate:0,additive:0,alignmentBaseline:"alignment-baseline",allowReorder:"allowReorder",alphabetic:0,amplitude:0,arabicForm:"arabic-form",ascent:0,attributeName:"attributeName",attributeType:"attributeType",autoReverse:"autoReverse",azimuth:0,baseFrequency:"baseFrequency",baseProfile:"baseProfile",baselineShift:"baseline-shift",bbox:0,begin:0,bias:0,by:0,calcMode:"calcMode",capHeight:"cap-height",clip:0,clipPath:"clip-path",clipRule:"clip-rule",clipPathUnits:"clipPathUnits",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",contentScriptType:"contentScriptType",contentStyleType:"contentStyleType",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:"diffuseConstant",direction:0,display:0,divisor:0,dominantBaseline:"dominant-baseline",dur:0,dx:0,dy:0,edgeMode:"edgeMode",elevation:0,enableBackground:"enable-background",end:0,exponent:0,externalResourcesRequired:"externalResourcesRequired",fill:0,fillOpacity:"fill-opacity",fillRule:"fill-rule",filter:0,filterRes:"filterRes",filterUnits:"filterUnits",floodColor:"flood-color",floodOpacity:"flood-opacity",focusable:0,fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",glyphRef:"glyphRef",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",hanging:0,horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",ideographic:0,imageRendering:"image-rendering","in":0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:"kernelMatrix",kernelUnitLength:"kernelUnitLength",kerning:0,keyPoints:"keyPoints",keySplines:"keySplines",keyTimes:"keyTimes",lengthAdjust:"lengthAdjust",letterSpacing:"letter-spacing",lightingColor:"lighting-color",limitingConeAngle:"limitingConeAngle",local:0,markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",markerHeight:"markerHeight",markerUnits:"markerUnits",markerWidth:"markerWidth",mask:0,maskContentUnits:"maskContentUnits",maskUnits:"maskUnits",mathematical:0,mode:0,numOctaves:"numOctaves",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pathLength:"pathLength",patternContentUnits:"patternContentUnits",patternTransform:"patternTransform",patternUnits:"patternUnits",pointerEvents:"pointer-events",points:0,pointsAtX:"pointsAtX",pointsAtY:"pointsAtY",pointsAtZ:"pointsAtZ",preserveAlpha:"preserveAlpha",preserveAspectRatio:"preserveAspectRatio",primitiveUnits:"primitiveUnits",r:0,radius:0,refX:"refX",refY:"refY",renderingIntent:"rendering-intent",repeatCount:"repeatCount",repeatDur:"repeatDur",requiredExtensions:"requiredExtensions",requiredFeatures:"requiredFeatures",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:"shape-rendering",slope:0,spacing:0,specularConstant:"specularConstant",specularExponent:"specularExponent",speed:0,spreadMethod:"spreadMethod",startOffset:"startOffset",stdDeviation:"stdDeviation",stemh:0,stemv:0,stitchTiles:"stitchTiles",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",string:0,stroke:0,strokeDasharray:"stroke-dasharray",strokeDashoffset:"stroke-dashoffset",strokeLinecap:"stroke-linecap",strokeLinejoin:"stroke-linejoin",strokeMiterlimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",surfaceScale:"surfaceScale",systemLanguage:"systemLanguage",tableValues:"tableValues",targetX:"targetX",targetY:"targetY",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",textLength:"textLength",to:0,transform:0,u1:0,u2:0,underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicode:0,unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",values:0,vectorEffect:"vector-effect",version:0,vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",viewBox:"viewBox",viewTarget:"viewTarget",visibility:0,widths:0,wordSpacing:"word-spacing",writingMode:"writing-mode",x:0,xHeight:"x-height",x1:0,x2:0,xChannelSelector:"xChannelSelector",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlLang:"xml:lang",xmlSpace:"xml:space",y:0,y1:0,y2:0,yChannelSelector:"yChannelSelector",z:0,zoomAndPan:"zoomAndPan"},a={Properties:{},DOMAttributeNamespaces:{xlinkActuate:r.xlink,xlinkArcrole:r.xlink,xlinkHref:r.xlink,xlinkRole:r.xlink,xlinkShow:r.xlink,xlinkTitle:r.xlink,xlinkType:r.xlink,xmlBase:r.xml,xmlLang:r.xml,xmlSpace:r.xml},DOMAttributeNames:{}};Object.keys(o).map(function(e){a.Properties[e]=0,o[e]&&(a.DOMAttributeNames[e]=o[e])}),t.exports=a},{}],93:[function(e,t,n){"use strict";function r(e){if("selectionStart"in e&&l.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function o(e,t){if(_||null==y||y!==p())return null;var n=r(y);if(!b||!h(b,n)){b=n;var o=c.getPooled(g.select,C,e,t);return o.type="select",o.target=y,i.accumulateTwoPhaseDispatches(o),o}return null}var a=e(15),i=e(19),u=e(140),s=e(38),l=e(66),c=e(99),p=e(149),d=e(130),f=e(158),h=e(161),v=a.topLevelTypes,m=u.canUseDOM&&"documentMode"in document&&document.documentMode<=11,g={select:{phasedRegistrationNames:{bubbled:f({onSelect:null}),captured:f({onSelectCapture:null})},dependencies:[v.topBlur,v.topContextMenu,v.topFocus,v.topKeyDown,v.topMouseDown,v.topMouseUp,v.topSelectionChange]}},y=null,C=null,b=null,_=!1,E=!1,x=f({onSelect:null}),N={eventTypes:g,extractEvents:function(e,t,n,r){if(!E)return null;var a=t?s.getNodeFromInstance(t):window;switch(e){case v.topFocus:(d(a)||"true"===a.contentEditable)&&(y=a,C=t,b=null);break;case v.topBlur:y=null,C=null,b=null;break;case v.topMouseDown:_=!0;break;case v.topContextMenu:case v.topMouseUp:return _=!1,o(n,r);case v.topSelectionChange:if(m)break;case v.topKeyDown:case v.topKeyUp:return o(n,r)}return null},didPutListener:function(e,t,n){t===x&&(E=!0)}};t.exports=N},{130:130,140:140,149:149,15:15,158:158,161:161,19:19,38:38,66:66,99:99}],94:[function(e,t,n){"use strict";var r=e(15),o=e(139),a=e(19),i=e(38),u=e(95),s=e(96),l=e(99),c=e(100),p=e(102),d=e(103),f=e(98),h=e(104),v=e(105),m=e(106),g=e(107),y=e(146),C=e(119),b=e(154),_=e(158),E=r.topLevelTypes,x={abort:{phasedRegistrationNames:{bubbled:_({onAbort:!0}),captured:_({onAbortCapture:!0})}},animationEnd:{phasedRegistrationNames:{bubbled:_({onAnimationEnd:!0}),captured:_({onAnimationEndCapture:!0})}},animationIteration:{phasedRegistrationNames:{bubbled:_({onAnimationIteration:!0}),captured:_({onAnimationIterationCapture:!0})}},animationStart:{phasedRegistrationNames:{bubbled:_({onAnimationStart:!0}),captured:_({onAnimationStartCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:_({onBlur:!0}),captured:_({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:_({onCanPlay:!0}),captured:_({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:_({onCanPlayThrough:!0}),captured:_({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:_({onClick:!0}),captured:_({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:_({onContextMenu:!0}),captured:_({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:_({onCopy:!0}),captured:_({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:_({onCut:!0}),captured:_({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:_({onDoubleClick:!0}),captured:_({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:_({onDrag:!0}),captured:_({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:_({onDragEnd:!0}),captured:_({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:_({onDragEnter:!0}),captured:_({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:_({onDragExit:!0}),captured:_({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:_({onDragLeave:!0}),captured:_({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:_({onDragOver:!0}),captured:_({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:_({onDragStart:!0}),captured:_({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:_({onDrop:!0}),captured:_({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:_({onDurationChange:!0}),captured:_({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:_({onEmptied:!0}),captured:_({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:_({onEncrypted:!0}),captured:_({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:_({onEnded:!0}),captured:_({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:_({onError:!0}),captured:_({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:_({onFocus:!0}),captured:_({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:_({onInput:!0}),captured:_({onInputCapture:!0})}},invalid:{phasedRegistrationNames:{bubbled:_({onInvalid:!0}),captured:_({onInvalidCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:_({onKeyDown:!0}),captured:_({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:_({onKeyPress:!0}),captured:_({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:_({onKeyUp:!0}),captured:_({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:_({onLoad:!0}),captured:_({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:_({onLoadedData:!0}),captured:_({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:_({onLoadedMetadata:!0}),captured:_({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:_({onLoadStart:!0}),captured:_({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:_({onMouseDown:!0}),captured:_({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:_({onMouseMove:!0}),captured:_({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:_({onMouseOut:!0}),captured:_({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:_({onMouseOver:!0}),captured:_({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:_({onMouseUp:!0}),captured:_({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:_({onPaste:!0}),captured:_({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:_({onPause:!0}),captured:_({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:_({onPlay:!0}),captured:_({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:_({onPlaying:!0}),captured:_({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:_({onProgress:!0}),captured:_({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:_({onRateChange:!0}),captured:_({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:_({onReset:!0}),captured:_({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:_({onScroll:!0}),captured:_({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:_({onSeeked:!0}),captured:_({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:_({onSeeking:!0}),captured:_({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:_({onStalled:!0}),captured:_({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:_({onSubmit:!0}),captured:_({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:_({onSuspend:!0}),captured:_({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:_({onTimeUpdate:!0}),captured:_({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:_({onTouchCancel:!0}),captured:_({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:_({onTouchEnd:!0}),captured:_({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:_({onTouchMove:!0}),captured:_({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:_({onTouchStart:!0}),captured:_({onTouchStartCapture:!0})}},transitionEnd:{phasedRegistrationNames:{bubbled:_({onTransitionEnd:!0}),captured:_({onTransitionEndCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:_({onVolumeChange:!0}),captured:_({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:_({onWaiting:!0}),captured:_({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:_({onWheel:!0}),captured:_({onWheelCapture:!0})}}},N={topAbort:x.abort,topAnimationEnd:x.animationEnd,topAnimationIteration:x.animationIteration,topAnimationStart:x.animationStart,topBlur:x.blur,topCanPlay:x.canPlay,topCanPlayThrough:x.canPlayThrough,topClick:x.click,topContextMenu:x.contextMenu,topCopy:x.copy,topCut:x.cut,topDoubleClick:x.doubleClick,topDrag:x.drag,topDragEnd:x.dragEnd,topDragEnter:x.dragEnter,topDragExit:x.dragExit,topDragLeave:x.dragLeave,topDragOver:x.dragOver,topDragStart:x.dragStart,topDrop:x.drop,topDurationChange:x.durationChange,topEmptied:x.emptied,topEncrypted:x.encrypted,topEnded:x.ended,topError:x.error,topFocus:x.focus,topInput:x.input,topInvalid:x.invalid,topKeyDown:x.keyDown,topKeyPress:x.keyPress,topKeyUp:x.keyUp,topLoad:x.load,topLoadedData:x.loadedData,topLoadedMetadata:x.loadedMetadata,topLoadStart:x.loadStart,topMouseDown:x.mouseDown,topMouseMove:x.mouseMove,topMouseOut:x.mouseOut,topMouseOver:x.mouseOver,topMouseUp:x.mouseUp,topPaste:x.paste,topPause:x.pause,topPlay:x.play,topPlaying:x.playing,topProgress:x.progress,topRateChange:x.rateChange,topReset:x.reset,topScroll:x.scroll,topSeeked:x.seeked,topSeeking:x.seeking,topStalled:x.stalled,topSubmit:x.submit,topSuspend:x.suspend,topTimeUpdate:x.timeUpdate,topTouchCancel:x.touchCancel,topTouchEnd:x.touchEnd,topTouchMove:x.touchMove,topTouchStart:x.touchStart,topTransitionEnd:x.transitionEnd,topVolumeChange:x.volumeChange,topWaiting:x.waiting,topWheel:x.wheel};for(var T in N)N[T].dependencies=[T];var P=_({onClick:null}),w={},M={eventTypes:x,extractEvents:function(e,t,n,r){var o=N[e];if(!o)return null;var i;switch(e){case E.topAbort:case E.topCanPlay:case E.topCanPlayThrough:case E.topDurationChange:case E.topEmptied:case E.topEncrypted:case E.topEnded:case E.topError:case E.topInput:case E.topInvalid:case E.topLoad:case E.topLoadedData:case E.topLoadedMetadata:case E.topLoadStart:case E.topPause:case E.topPlay:case E.topPlaying:case E.topProgress:case E.topRateChange:case E.topReset:case E.topSeeked:case E.topSeeking:case E.topStalled:case E.topSubmit:case E.topSuspend:case E.topTimeUpdate:case E.topVolumeChange:case E.topWaiting:i=l;break;case E.topKeyPress:if(0===C(n))return null;case E.topKeyDown:case E.topKeyUp:i=p;break;case E.topBlur:case E.topFocus:i=c;break;case E.topClick:if(2===n.button)return null;case E.topContextMenu:case E.topDoubleClick:case E.topMouseDown:case E.topMouseMove:case E.topMouseOut:case E.topMouseOver:case E.topMouseUp:i=d;break;case E.topDrag:case E.topDragEnd:case E.topDragEnter:case E.topDragExit:case E.topDragLeave:case E.topDragOver:case E.topDragStart:case E.topDrop:i=f;break;case E.topTouchCancel:case E.topTouchEnd:case E.topTouchMove:case E.topTouchStart:i=h;break;case E.topAnimationEnd:case E.topAnimationIteration:case E.topAnimationStart:i=u;break;case E.topTransitionEnd:i=v;break;case E.topScroll:i=m;break;case E.topWheel:i=g;break;case E.topCopy:case E.topCut:case E.topPaste:i=s}i?void 0:b(!1);var y=i.getPooled(o,t,n,r);return a.accumulateTwoPhaseDispatches(y),y},didPutListener:function(e,t,n){if(t===P){var r=e._rootNodeID,a=i.getNodeFromInstance(e);w[r]||(w[r]=o.listen(a,"click",y))}},willDeleteListener:function(e,t){if(t===P){var n=e._rootNodeID;w[n].remove(),delete w[n]}}};t.exports=M},{100:100,102:102,103:103,104:104,105:105,106:106,107:107,119:119,139:139,146:146,15:15,154:154,158:158,19:19,38:38,95:95,96:96,98:98,99:99}],95:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a={animationName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,a),t.exports=r},{99:99}],96:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};o.augmentClass(r,a),t.exports=r},{99:99}],97:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a={data:null};o.augmentClass(r,a),t.exports=r},{99:99}],98:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(103),a={dataTransfer:null};o.augmentClass(r,a),t.exports=r},{103:103}],99:[function(e,t,n){"use strict";function r(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n;var o=this.constructor.Interface;for(var a in o)if(o.hasOwnProperty(a)){var u=o[a];u?this[a]=u(n):"target"===a?this.target=r:this[a]=n[a]}var s=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;return s?this.isDefaultPrevented=i.thatReturnsTrue:this.isDefaultPrevented=i.thatReturnsFalse,this.isPropagationStopped=i.thatReturnsFalse,this}var o=e(163),a=e(23),i=e(146),u=(e(162),"function"==typeof Proxy,["dispatchConfig","_targetInst","nativeEvent","isDefaultPrevented","isPropagationStopped","_dispatchListeners","_dispatchInstances"]),s={type:null,target:null,currentTarget:i.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};o(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=i.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=i.thatReturnsTrue)},persist:function(){this.isPersistent=i.thatReturnsTrue},isPersistent:i.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;for(var n=0;n<u.length;n++)this[u[n]]=null}}),r.Interface=s,r.augmentClass=function(e,t){var n=this,r=function(){};r.prototype=n.prototype;var i=new r;o(i,e.prototype),e.prototype=i,e.prototype.constructor=e,e.Interface=o({},n.Interface,t),e.augmentClass=n.augmentClass,a.addPoolingTo(e,a.fourArgumentPooler)},a.addPoolingTo(r,a.fourArgumentPooler),t.exports=r},{146:146,162:162,163:163,23:23}],100:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(106),a={relatedTarget:null};o.augmentClass(r,a),t.exports=r},{106:106}],101:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a={data:null};o.augmentClass(r,a),t.exports=r},{99:99}],102:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(106),a=e(119),i=e(120),u=e(121),s={key:i,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:u,charCode:function(e){return"keypress"===e.type?a(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?a(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};o.augmentClass(r,s),t.exports=r},{106:106,119:119,120:120,121:121}],103:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(106),a=e(109),i=e(121),u={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:i,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+a.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+a.currentScrollTop}};o.augmentClass(r,u),t.exports=r},{106:106,109:109,121:121}],104:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(106),a=e(121),i={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:a};o.augmentClass(r,i),t.exports=r},{106:106,121:121}],105:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a={propertyName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,a),t.exports=r},{99:99}],106:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(99),a=e(122),i={view:function(e){if(e.view)return e.view;var t=a(e);if(null!=t&&t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};o.augmentClass(r,i),t.exports=r},{122:122,99:99}],107:[function(e,t,n){"use strict";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(103),a={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};o.augmentClass(r,a),t.exports=r},{103:103}],108:[function(e,t,n){"use strict";var r=e(154),o={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,n,o,a,i,u,s){this.isInTransaction()?r(!1):void 0;var l,c;try{this._isInTransaction=!0,l=!0,this.initializeAll(0),c=e.call(t,n,o,a,i,u,s),l=!1}finally{try{if(l)try{this.closeAll(0)}catch(p){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return c},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){
	var r=t[n];try{this.wrapperInitData[n]=a.OBSERVED_ERROR,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===a.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(o){}}}},closeAll:function(e){this.isInTransaction()?void 0:r(!1);for(var t=this.transactionWrappers,n=e;n<t.length;n++){var o,i=t[n],u=this.wrapperInitData[n];try{o=!0,u!==a.OBSERVED_ERROR&&i.close&&i.close.call(this,u),o=!1}finally{if(o)try{this.closeAll(n+1)}catch(s){}}}this.wrapperInitData.length=0}},a={Mixin:o,OBSERVED_ERROR:{}};t.exports=a},{154:154}],109:[function(e,t,n){"use strict";var r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){r.currentScrollLeft=e.x,r.currentScrollTop=e.y}};t.exports=r},{}],110:[function(e,t,n){"use strict";function r(e,t){if(null==t?o(!1):void 0,null==e)return t;var n=Array.isArray(e),r=Array.isArray(t);return n&&r?(e.push.apply(e,t),e):n?(e.push(t),e):r?[e].concat(t):[e,t]}var o=e(154);t.exports=r},{154:154}],111:[function(e,t,n){"use strict";function r(e){for(var t=1,n=0,r=0,a=e.length,i=-4&a;i>r;){for(var u=Math.min(r+4096,i);u>r;r+=4)n+=(t+=e.charCodeAt(r))+(t+=e.charCodeAt(r+1))+(t+=e.charCodeAt(r+2))+(t+=e.charCodeAt(r+3));t%=o,n%=o}for(;a>r;r++)n+=t+=e.charCodeAt(r);return t%=o,n%=o,t|n<<16}var o=65521;t.exports=r},{}],112:[function(e,t,n){"use strict";var r=!1;t.exports=r},{}],113:[function(e,t,n){"use strict";var r=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,o)})}:e};t.exports=r},{}],114:[function(e,t,n){"use strict";function r(e,t,n){var r=null==t||"boolean"==typeof t||""===t;if(r)return"";var o=isNaN(t);return o||0===t||a.hasOwnProperty(e)&&a[e]?""+t:("string"==typeof t&&(t=t.trim()),t+"px")}var o=e(3),a=(e(162),o.isUnitlessNumber);t.exports=r},{162:162,3:3}],115:[function(e,t,n){"use strict";function r(e){return a[e]}function o(e){return(""+e).replace(i,r)}var a={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},i=/[&><"']/g;t.exports=o},{}],116:[function(e,t,n){"use strict";function r(e){if(null==e)return null;if(1===e.nodeType)return e;var t=a.get(e);return t?(t=i(t),t?o.getNodeFromInstance(t):null):void u(("function"==typeof e.render,!1))}var o=(e(33),e(38)),a=e(67),i=e(124),u=e(154);e(162);t.exports=r},{124:124,154:154,162:162,33:33,38:38,67:67}],117:[function(e,t,n){"use strict";function r(e,t,n){var r=e,o=void 0===r[n];o&&null!=t&&(r[n]=t)}function o(e){if(null==e)return e;var t={};return a(e,r,t),t}var a=e(137);e(162);t.exports=o},{137:137,162:162}],118:[function(e,t,n){"use strict";var r=function(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)};t.exports=r},{}],119:[function(e,t,n){"use strict";function r(e){var t,n=e.keyCode;return"charCode"in e?(t=e.charCode,0===t&&13===n&&(t=13)):t=n,t>=32||13===t?t:0}t.exports=r},{}],120:[function(e,t,n){"use strict";function r(e){if(e.key){var t=a[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n=o(e);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?i[e.keyCode]||"Unidentified":""}var o=e(119),a={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},i={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=r},{119:119}],121:[function(e,t,n){"use strict";function r(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=a[e];return r?!!n[r]:!1}function o(e){return r}var a={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};t.exports=o},{}],122:[function(e,t,n){"use strict";function r(e){var t=e.target||e.srcElement||window;return t.correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}t.exports=r},{}],123:[function(e,t,n){"use strict";function r(e){var t=e&&(o&&e[o]||e[a]);return"function"==typeof t?t:void 0}var o="function"==typeof Symbol&&Symbol.iterator,a="@@iterator";t.exports=r},{}],124:[function(e,t,n){"use strict";function r(e){for(var t;(t=e._renderedNodeType)===o.COMPOSITE;)e=e._renderedComponent;return t===o.NATIVE?e._renderedComponent:t===o.EMPTY?null:void 0}var o=e(75);t.exports=r},{75:75}],125:[function(e,t,n){"use strict";function r(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function o(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function a(e,t){for(var n=r(e),a=0,i=0;n;){if(3===n.nodeType){if(i=a+n.textContent.length,t>=a&&i>=t)return{node:n,offset:t-a};a=i}n=r(o(n))}}t.exports=a},{}],126:[function(e,t,n){"use strict";function r(){return!a&&o.canUseDOM&&(a="textContent"in document.documentElement?"textContent":"innerText"),a}var o=e(140),a=null;t.exports=r},{140:140}],127:[function(e,t,n){"use strict";function r(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function o(e){if(u[e])return u[e];if(!i[e])return e;var t=i[e];for(var n in t)if(t.hasOwnProperty(n)&&n in s)return u[e]=t[n];return""}var a=e(140),i={animationend:r("Animation","AnimationEnd"),animationiteration:r("Animation","AnimationIteration"),animationstart:r("Animation","AnimationStart"),transitionend:r("Transition","TransitionEnd")},u={},s={};a.canUseDOM&&(s=document.createElement("div").style,"AnimationEvent"in window||(delete i.animationend.animation,delete i.animationiteration.animation,delete i.animationstart.animation),"TransitionEvent"in window||delete i.transitionend.transition),t.exports=o},{140:140}],128:[function(e,t,n){"use strict";function r(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function o(e){var t;if(null===e||e===!1)t=u.create(o);else if("object"==typeof e){var n=e;!n||"function"!=typeof n.type&&"string"!=typeof n.type?l(!1):void 0,t="string"==typeof n.type?s.createInternalComponent(n):r(n.type)?new n.type(n):new c(n)}else"string"==typeof e||"number"==typeof e?t=s.createInstanceForText(e):l(!1);return t._mountIndex=0,t._mountImage=null,t}var a=e(163),i=e(32),u=e(60),s=e(74),l=e(154),c=(e(162),function(e){this.construct(e)});a(c.prototype,i.Mixin,{_instantiateReactComponent:o}),t.exports=o},{154:154,162:162,163:163,32:32,60:60,74:74}],129:[function(e,t,n){"use strict";function r(e,t){if(!a.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,r=n in document;if(!r){var i=document.createElement("div");i.setAttribute(n,"return;"),r="function"==typeof i[n]}return!r&&o&&"wheel"===e&&(r=document.implementation.hasFeature("Events.wheel","3.0")),r}var o,a=e(140);a.canUseDOM&&(o=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=r},{140:140}],130:[function(e,t,n){"use strict";function r(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&o[e.type]||"textarea"===t)}var o={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=r},{}],131:[function(e,t,n){"use strict";function r(e){return o.isValidElement(e)?void 0:a(!1),e}var o=e(58),a=e(154);t.exports=r},{154:154,58:58}],132:[function(e,t,n){"use strict";function r(e){return'"'+o(e)+'"'}var o=e(115);t.exports=r},{115:115}],133:[function(e,t,n){"use strict";var r=e(71);t.exports=r.renderSubtreeIntoContainer},{71:71}],134:[function(e,t,n){"use strict";var r=e(140),o=/^[ \r\n\t\f]/,a=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,i=e(113),u=i(function(e,t){e.innerHTML=t});if(r.canUseDOM){var s=document.createElement("div");s.innerHTML=" ",""===s.innerHTML&&(u=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),o.test(t)||"<"===t[0]&&a.test(t)){e.innerHTML=String.fromCharCode(65279)+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t}),s=null}t.exports=u},{113:113,140:140}],135:[function(e,t,n){"use strict";var r=e(140),o=e(115),a=e(134),i=function(e,t){e.textContent=t};r.canUseDOM&&("textContent"in document.documentElement||(i=function(e,t){a(e,o(t))})),t.exports=i},{115:115,134:134,140:140}],136:[function(e,t,n){"use strict";function r(e,t){var n=null===e||e===!1,r=null===t||t===!1;if(n||r)return n===r;var o=typeof e,a=typeof t;return"string"===o||"number"===o?"string"===a||"number"===a:"object"===a&&e.type===t.type&&e.key===t.key}t.exports=r},{}],137:[function(e,t,n){"use strict";function r(e){return h[e]}function o(e,t){return e&&"object"==typeof e&&null!=e.key?i(e.key):t.toString(36)}function a(e){return(""+e).replace(v,r)}function i(e){return"$"+a(e)}function u(e,t,n,r){var a=typeof e;if("undefined"!==a&&"boolean"!==a||(e=null),null===e||"string"===a||"number"===a||l.isValidElement(e))return n(r,e,""===t?d+o(e,0):t),1;var s,h,v=0,m=""===t?d:t+f;if(Array.isArray(e))for(var g=0;g<e.length;g++)s=e[g],h=m+o(s,g),v+=u(s,h,n,r);else{var y=c(e);if(y){var C,b=y.call(e);if(y!==e.entries)for(var _=0;!(C=b.next()).done;)s=C.value,h=m+o(s,_++),v+=u(s,h,n,r);else for(;!(C=b.next()).done;){var E=C.value;E&&(s=E[1],h=m+i(E[0])+f+o(s,0),v+=u(s,h,n,r))}}else"object"===a&&(String(e),p(!1))}return v}function s(e,t,n){return null==e?0:u(e,"",t,n)}var l=(e(33),e(58)),c=e(123),p=e(154),d=(e(162),"."),f=":",h={"=":"=0",":":"=2"},v=/[=:]/g;t.exports=s},{123:123,154:154,162:162,33:33,58:58}],138:[function(e,t,n){"use strict";var r=(e(163),e(146)),o=(e(162),r);t.exports=o},{146:146,162:162,163:163}],139:[function(e,t,n){"use strict";var r=e(146),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};t.exports=o},{146:146}],140:[function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};t.exports=o},{}],141:[function(e,t,n){"use strict";function r(e){return e.replace(o,function(e,t){return t.toUpperCase()})}var o=/-(.)/g;t.exports=r},{}],142:[function(e,t,n){"use strict";function r(e){return o(e.replace(a,"ms-"))}var o=e(141),a=/^-ms-/;t.exports=r},{141:141}],143:[function(e,t,n){"use strict";function r(e,t){return e&&t?e===t?!0:o(e)?!1:o(t)?r(e,t.parentNode):e.contains?e.contains(t):e.compareDocumentPosition?!!(16&e.compareDocumentPosition(t)):!1:!1}var o=e(156);t.exports=r},{156:156}],144:[function(e,t,n){"use strict";function r(e){var t=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?i(!1):void 0,"number"!=typeof t?i(!1):void 0,0===t||t-1 in e?void 0:i(!1),"function"==typeof e.callee?i(!1):void 0,e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(n){}for(var r=Array(t),o=0;t>o;o++)r[o]=e[o];return r}function o(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function a(e){return o(e)?Array.isArray(e)?e.slice():r(e):[e]}var i=e(154);t.exports=a},{154:154}],145:[function(e,t,n){"use strict";function r(e){var t=e.match(c);return t&&t[1].toLowerCase()}function o(e,t){var n=l;l?void 0:s(!1);var o=r(e),a=o&&u(o);if(a){n.innerHTML=a[1]+e+a[2];for(var c=a[0];c--;)n=n.lastChild}else n.innerHTML=e;var p=n.getElementsByTagName("script");p.length&&(t?void 0:s(!1),i(p).forEach(t));for(var d=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return d}var a=e(140),i=e(144),u=e(150),s=e(154),l=a.canUseDOM?document.createElement("div"):null,c=/^\s*<(\w+)/;t.exports=o},{140:140,144:144,150:150,154:154}],146:[function(e,t,n){"use strict";function r(e){return function(){return e}}function o(){}o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},t.exports=o},{}],147:[function(e,t,n){"use strict";var r={};t.exports=r},{}],148:[function(e,t,n){"use strict";function r(e){try{e.focus()}catch(t){}}t.exports=r},{}],149:[function(e,t,n){"use strict";function r(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=r},{}],150:[function(e,t,n){"use strict";function r(e){return i?void 0:a(!1),d.hasOwnProperty(e)||(e="*"),u.hasOwnProperty(e)||("*"===e?i.innerHTML="<link />":i.innerHTML="<"+e+"></"+e+">",u[e]=!i.firstChild),u[e]?d[e]:null}var o=e(140),a=e(154),i=o.canUseDOM?document.createElement("div"):null,u={},s=[1,'<select multiple="true">',"</select>"],l=[1,"<table>","</table>"],c=[3,"<table><tbody><tr>","</tr></tbody></table>"],p=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],d={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:s,option:s,caption:l,colgroup:l,tbody:l,tfoot:l,thead:l,td:c,th:c},f=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];f.forEach(function(e){d[e]=p,u[e]=!0}),t.exports=r},{140:140,154:154}],151:[function(e,t,n){"use strict";function r(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=r},{}],152:[function(e,t,n){"use strict";function r(e){return e.replace(o,"-$1").toLowerCase()}var o=/([A-Z])/g;t.exports=r},{}],153:[function(e,t,n){"use strict";function r(e){return o(e).replace(a,"-ms-")}var o=e(152),a=/^ms-/;t.exports=r},{152:152}],154:[function(e,t,n){"use strict";function r(e,t,n,r,o,a,i,u){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,i,u],c=0;s=new Error(t.replace(/%s/g,function(){return l[c++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}t.exports=r},{}],155:[function(e,t,n){"use strict";function r(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}t.exports=r},{}],156:[function(e,t,n){"use strict";function r(e){return o(e)&&3==e.nodeType}var o=e(155);t.exports=r},{155:155}],157:[function(e,t,n){"use strict";var r=e(154),o=function(e){var t,n={};e instanceof Object&&!Array.isArray(e)?void 0:r(!1);for(t in e)e.hasOwnProperty(t)&&(n[t]=t);return n};t.exports=o},{154:154}],158:[function(e,t,n){"use strict";var r=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t;return null};t.exports=r},{}],159:[function(e,t,n){"use strict";function r(e,t,n){if(!e)return null;var r={};for(var a in e)o.call(e,a)&&(r[a]=t.call(n,e[a],a,e));return r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],160:[function(e,t,n){"use strict";function r(e){var t={};return function(n){return t.hasOwnProperty(n)||(t[n]=e.call(this,n)),t[n]}}t.exports=r},{}],161:[function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function o(e,t){if(r(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var i=0;i<n.length;i++)if(!a.call(t,n[i])||!r(e[n[i]],t[n[i]]))return!1;return!0}var a=Object.prototype.hasOwnProperty;t.exports=o},{}],162:[function(e,t,n){"use strict";var r=e(146),o=r;t.exports=o},{146:146}],163:[function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}var o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=Object.assign||function(e,t){for(var n,i,u=r(e),s=1;s<arguments.length;s++){n=Object(arguments[s]);for(var l in n)o.call(n,l)&&(u[l]=n[l]);if(Object.getOwnPropertySymbols){i=Object.getOwnPropertySymbols(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(u[i[c]]=n[i[c]])}}return u}},{}]},{},[88])(88)});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))

/***/ },

/***/ 21:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global, _) {/**
	 * @license
	 * lodash 4.11.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash -d -o ./foo/lodash.js`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.11.1';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Used as the `TypeError` message for "Functions" methods. */
	  var FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for wrapper metadata. */
	  var BIND_FLAG = 1,
	      BIND_KEY_FLAG = 2,
	      CURRY_BOUND_FLAG = 4,
	      CURRY_FLAG = 8,
	      CURRY_RIGHT_FLAG = 16,
	      PARTIAL_FLAG = 32,
	      PARTIAL_RIGHT_FLAG = 64,
	      ARY_FLAG = 128,
	      REARG_FLAG = 256,
	      FLIP_FLAG = 512;

	  /** Used to compose bitmasks for comparison styles. */
	  var UNORDERED_COMPARE_FLAG = 1,
	      PARTIAL_COMPARE_FLAG = 2;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 150,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      reUnescapedHtml = /[&<>"'`]/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match non-compound words composed of alphanumeric characters. */
	  var reBasicWord = /[a-zA-Z0-9]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect hexadecimal string values. */
	  var reHasHexPrefix = /^0x/i;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	      rsComboSymbolsRange = '\\u20d0-\\u20f0',
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsQuoteRange = '\\u2018\\u2019\\u201c\\u201d',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reComplexWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
	    rsUpper + '+' + rsOptUpperContr,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',
	    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map latin-1 supplementary letters to basic latin letters. */
	  var deburredLetters = {
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;',
	    '`': '&#96;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'",
	    '&#96;': '`'
	  };

	  /** Used to determine if values are of the language type `Object`. */
	  var objectTypes = {
	    'function': true,
	    'object': true
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `exports`. */
	  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	    ? exports
	    : undefined;

	  /** Detect free variable `module`. */
	  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	    ? module
	    : undefined;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = (freeModule && freeModule.exports === freeExports)
	    ? freeExports
	    : undefined;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);

	  /** Detect free variable `self`. */
	  var freeSelf = checkGlobal(objectTypes[typeof self] && self);

	  /** Detect free variable `window`. */
	  var freeWindow = checkGlobal(objectTypes[typeof window] && window);

	  /** Detect `this` as the global object. */
	  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);

	  /**
	   * Used as a reference to the global object.
	   *
	   * The `this` value is used if it's the global object to avoid Greasemonkey's
	   * restricted `window` object, otherwise the `window` object is used.
	   */
	  var root = freeGlobal ||
	    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	      freeSelf || thisGlobal || Function('return this')();

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    var length = args.length;
	    switch (length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * Creates a new array concatenating `array` with `other`.
	   *
	   * @private
	   * @param {Array} array The first array to concatenate.
	   * @param {Array} other The second array to concatenate.
	   * @returns {Array} Returns the new concatenated array.
	   */
	  function arrayConcat(array, other) {
	    var index = -1,
	        length = array.length,
	        othIndex = -1,
	        othLength = other.length,
	        result = Array(length + othLength);

	    while (++index < length) {
	      result[index] = array[index];
	    }
	    while (++othIndex < othLength) {
	      result[index++] = other[othIndex];
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array.length;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    return !!array.length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array.length,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array.length;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * The base implementation of methods like `_.max` and `_.min` which accepts a
	   * `comparator` to determine the extremum value.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The iteratee invoked per iteration.
	   * @param {Function} comparator The comparator used to compare values.
	   * @returns {*} Returns the extremum value.
	   */
	  function baseExtremum(array, iteratee, comparator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      var value = array[index],
	          current = iteratee(value);

	      if (current != null && (computed === undefined
	            ? current === current
	            : comparator(current, computed)
	          )) {
	        var computed = current,
	            result = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of methods like `_.find` and `_.findKey`, without
	   * support for iteratee shorthands, which iterates over `collection` using
	   * `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @param {boolean} [retKey] Specify returning the key of the found element
	   *  instead of the element itself.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFind(collection, predicate, eachFunc, retKey) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = retKey ? key : value;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromRight) {
	    var length = array.length,
	        index = fromRight ? length : -1;

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    if (value !== value) {
	      return indexOfNaN(array, fromIndex);
	    }
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array ? array.length : 0;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the new array of key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing wrapper metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Checks if `value` is a global object.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	   */
	  function checkGlobal(value) {
	    return (value && value.Object === Object) ? value : null;
	  }

	  /**
	   * Compares values to sort them in ascending order.
	   *
	   * @private
	   * @param {*} value The value to compare.
	   * @param {*} other The other value to compare.
	   * @returns {number} Returns the sort order indicator for `value`.
	   */
	  function compareAscending(value, other) {
	    if (value !== other) {
	      var valIsNull = value === null,
	          valIsUndef = value === undefined,
	          valIsReflexive = value === value;

	      var othIsNull = other === null,
	          othIsUndef = other === undefined,
	          othIsReflexive = other === other;

	      if ((value > other && !othIsNull) || !valIsReflexive ||
	          (valIsNull && !othIsUndef && othIsReflexive) ||
	          (valIsUndef && othIsReflexive)) {
	        return 1;
	      }
	      if ((value < other && !valIsNull) || !othIsReflexive ||
	          (othIsNull && !valIsUndef && valIsReflexive) ||
	          (othIsUndef && valIsReflexive)) {
	        return -1;
	      }
	    }
	    return 0;
	  }

	  /**
	   * Used by `_.orderBy` to compare multiple properties of a value to another
	   * and stable sort them.
	   *
	   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	   * specify an order of "desc" for descending or "asc" for ascending sort order
	   * of corresponding values.
	   *
	   * @private
	   * @param {Object} object The object to compare.
	   * @param {Object} other The other object to compare.
	   * @param {boolean[]|string[]} orders The order to sort by for each property.
	   * @returns {number} Returns the sort order indicator for `object`.
	   */
	  function compareMultiple(object, other, orders) {
	    var index = -1,
	        objCriteria = object.criteria,
	        othCriteria = other.criteria,
	        length = objCriteria.length,
	        ordersLength = orders.length;

	    while (++index < length) {
	      var result = compareAscending(objCriteria[index], othCriteria[index]);
	      if (result) {
	        if (index >= ordersLength) {
	          return result;
	        }
	        var order = orders[index];
	        return result * (order == 'desc' ? -1 : 1);
	      }
	    }
	    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	    // that causes it, under certain circumstances, to provide the same value for
	    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	    // for more details.
	    //
	    // This also ensures a stable sort in V8 and other engines.
	    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	    return object.index - other.index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        result++;
	      }
	    }
	    return result;
	  }

	  /**
	   * Creates a function that performs a mathematical operation on two values.
	   *
	   * @private
	   * @param {Function} operator The function to perform the operation.
	   * @returns {Function} Returns the new mathematical operation function.
	   */
	  function createMathOperation(operator) {
	    return function(value, other) {
	      var result;
	      if (value === undefined && other === undefined) {
	        return 0;
	      }
	      if (value !== undefined) {
	        result = value;
	      }
	      if (other !== undefined) {
	        result = result === undefined ? other : operator(result, other);
	      }
	      return result;
	    };
	  }

	  /**
	   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  function deburrLetter(letter) {
	    return deburredLetters[letter];
	  }

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeHtmlChar(chr) {
	    return htmlEscapes[chr];
	  }

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the index at which the first occurrence of `NaN` is found in `array`.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	   */
	  function indexOfNaN(array, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 0 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      var other = array[index];
	      if (other !== other) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * Checks if `value` is a host object in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	   */
	  function isHostObject(value) {
	    // Many host objects are `Object` objects that can coerce to strings
	    // despite having improperly defined `toString` methods.
	    var result = false;
	    if (value != null && typeof value.toString != 'function') {
	      try {
	        result = !!(value + '');
	      } catch (e) {}
	    }
	    return result;
	  }

	  /**
	   * Checks if `value` is a valid array-like index.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	   */
	  function isIndex(value, length) {
	    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	    length = length == null ? MAX_SAFE_INTEGER : length;
	    return value > -1 && value % 1 == 0 && value < length;
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to an array.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    if (!(string && reHasComplexSymbol.test(string))) {
	      return string.length;
	    }
	    var result = reComplexSymbol.lastIndex = 0;
	    while (reComplexSymbol.test(string)) {
	      result++;
	    }
	    return result;
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return string.match(reComplexSymbol);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  function unescapeHtmlChar(chr) {
	    return htmlUnescapes[chr];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Use `context` to mock `Date#getTime` use in `_.now`.
	   * var mock = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': getTimeMock };
	   *   }
	   * });
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  function runInContext(context) {
	    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;

	    /** Built-in constructor references. */
	    var Date = context.Date,
	        Error = context.Error,
	        Math = context.Math,
	        RegExp = context.RegExp,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = context.Array.prototype,
	        objectProto = context.Object.prototype,
	        stringProto = context.String.prototype;

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = context.Function.prototype.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString = objectProto.toString;

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Reflect = context.Reflect,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        clearTimeout = context.clearTimeout,
	        enumerate = Reflect ? Reflect.enumerate : undefined,
	        getOwnPropertySymbols = Object.getOwnPropertySymbols,
	        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        setTimeout = context.setTimeout,
	        splice = arrayProto.splice;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetPrototype = Object.getPrototypeOf,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = Object.keys,
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReplace = stringProto.replace,
	        nativeReverse = arrayProto.reverse,
	        nativeSplit = stringProto.split;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,
	     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,
	     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,
	     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,
	     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,
	     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,
	     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`,
	     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,
	     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`,
	     * `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,
	     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,
	     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,
	     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,
	     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,
	     * `noConflict`, `noop`, `now`, `nth`, `pad`, `padEnd`, `padStart`, `parseInt`,
	     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,
	     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,
	     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,
	     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toInteger`,
	     * `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`, `toString`,
	     * `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,
	     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
	          (arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @returns {Object} Returns the new hash object.
	     */
	    function Hash() {}

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(hash, key) {
	      return hashHas(hash, key) && delete hash[key];
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(hash, key) {
	      if (nativeCreate) {
	        var result = hash[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(hash, key) {
	      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function hashSet(hash, key, value) {
	      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	    }

	    // Avoid inheriting from `Object.prototype` when possible.
	    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function MapCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapClear() {
	      this.__data__ = {
	        'hash': new Hash,
	        'map': Map ? new Map : [],
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapDelete(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map['delete'](key) : assocDelete(data.map, key);
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapGet(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashGet(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.get(key) : assocGet(data.map, key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapHas(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashHas(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.has(key) : assocHas(data.map, key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapSet(key, value) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
	      } else if (Map) {
	        data.map.set(key, value);
	      } else {
	        assocSet(data.map, key, value);
	      }
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapClear;
	    MapCache.prototype['delete'] = mapDelete;
	    MapCache.prototype.get = mapGet;
	    MapCache.prototype.has = mapHas;
	    MapCache.prototype.set = mapSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates a set cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.push(values[index]);
	      }
	    }

	    /**
	     * Checks if `value` is in `cache`.
	     *
	     * @private
	     * @param {Object} cache The set cache to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function cacheHas(cache, value) {
	      var map = cache.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;

	        return hash[value] === HASH_UNDEFINED;
	      }
	      return map.has(value);
	    }

	    /**
	     * Adds `value` to the set cache.
	     *
	     * @private
	     * @name push
	     * @memberOf SetCache
	     * @param {*} value The value to cache.
	     */
	    function cachePush(value) {
	      var map = this.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;

	        hash[value] = HASH_UNDEFINED;
	      }
	      else {
	        map.set(value, HASH_UNDEFINED);
	      }
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.push = cachePush;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function Stack(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = { 'array': [], 'map': null };
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocDelete(array, key) : data.map['delete'](key);
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocGet(array, key) : data.map.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocHas(array, key) : data.map.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__,
	          array = data.array;

	      if (array) {
	        if (array.length < (LARGE_ARRAY_SIZE - 1)) {
	          assocSet(array, key, value);
	        } else {
	          data.array = null;
	          data.map = new MapCache(array);
	        }
	      }
	      var map = data.map;
	      if (map) {
	        map.set(key, value);
	      }
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Removes `key` and its value from the associative array.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function assocDelete(array, key) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = array.length - 1;
	      if (index == lastIndex) {
	        array.pop();
	      } else {
	        splice.call(array, index, 1);
	      }
	      return true;
	    }

	    /**
	     * Gets the associative array value for `key`.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function assocGet(array, key) {
	      var index = assocIndexOf(array, key);
	      return index < 0 ? undefined : array[index][1];
	    }

	    /**
	     * Checks if an associative array value for `key` exists.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function assocHas(array, key) {
	      return assocIndexOf(array, key) > -1;
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Sets the associative array `key` to `value`.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function assocSet(array, key, value) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        array.push([key, value]);
	      } else {
	        array[index][1] = value;
	      }
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function assignInDefaults(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (typeof key == 'number' && value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          isNil = object == null,
	          length = paths.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = isNil ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	      var result;
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          if (isHostObject(value)) {
	            return object ? value : {};
	          }
	          result = initCloneObject(isFunc ? {} : value);
	          if (!isDeep) {
	            return copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      if (!isArr) {
	        var props = isFull ? getAllKeys(value) : keys(value);
	      }
	      // Recursively populate clone (susceptible to call stack limits).
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     */
	    function baseConforms(source) {
	      var props = keys(source),
	          length = props.length;

	      return function(object) {
	        if (object == null) {
	          return !length;
	        }
	        var index = length;
	        while (index--) {
	          var key = props[index],
	              predicate = source[key],
	              value = object[key];

	          if ((value === undefined &&
	              !(key in Object(object))) || !predicate(value)) {
	            return false;
	          }
	        }
	        return true;
	      };
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    function baseCreate(proto) {
	      return isObject(proto) ? objectCreate(proto) : {};
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts an array
	     * of `func` arguments.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Object} args The arguments to provide to `func`.
	     * @returns {number} Returns the timer id.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the new array of filtered property names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[path[index++]];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object)
	        ? result
	        : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	      // that are composed entirely of index properties, return `false` for
	      // `hasOwnProperty` checks of them.
	      return hasOwnProperty.call(object, key) ||
	        (typeof object == 'object' && key in object && getPrototype(object) === null);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      if (!isKey(path, object)) {
	        path = castPath(path);
	        object = parent(object, path);
	        path = last(path);
	      }
	      var func = object == null ? object : object[path];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, customizer, bitmask, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;

	      if (!objIsArr) {
	        objTag = getTag(object);
	        objTag = objTag == argsTag ? objectTag : objTag;
	      }
	      if (!othIsArr) {
	        othTag = getTag(other);
	        othTag = othTag == argsTag ? objectTag : othTag;
	      }
	      var objIsObj = objTag == objectTag && !isHostObject(object),
	          othIsObj = othTag == objectTag && !isHostObject(other),
	          isSameTag = objTag == othTag;

	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	      }
	      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      return nativeKeys(Object(object));
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      object = object == null ? object : Object(object);

	      var result = [];
	      for (var key in object) {
	        result.push(key);
	      }
	      return result;
	    }

	    // Fallback for IE < 9 with es6-shim.
	    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	      baseKeysIn = function(object) {
	        return iteratorToArray(enumerate(object));
	      };
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(path, srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      if (!(isArray(source) || isTypedArray(source))) {
	        var props = keysIn(source);
	      }
	      arrayEach(props || source, function(srcValue, key) {
	        if (props) {
	          key = srcValue;
	          srcValue = source[key];
	        }
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      });
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        newValue = srcValue;
	        if (isArray(srcValue) || isTypedArray(srcValue)) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	          else {
	            newValue = objValue;
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      stack.set(srcValue, newValue);

	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	      }
	      stack['delete'](srcValue);
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, props) {
	      object = Object(object);
	      return arrayReduce(props, function(result, key) {
	        if (key in object) {
	          result[key] = object[key];
	        }
	        return result;
	      }, {});
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, predicate) {
	      var index = -1,
	          props = getAllKeysIn(object),
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index],
	            value = object[key];

	        if (predicate(value, key)) {
	          result[key] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function baseProperty(key) {
	      return function(object) {
	        return object == null ? undefined : object[key];
	      };
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (lastIndex == length || index != previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          }
	          else if (!isKey(index, array)) {
	            var path = castPath(index),
	                object = parent(array, path);

	            if (object != null) {
	              delete object[last(path)];
	            }
	          }
	          else {
	            delete array[index];
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the new array of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = path[index];
	        if (isObject(nested)) {
	          var newValue = value;
	          if (index != lastIndex) {
	            var objValue = nested[key];
	            newValue = customizer ? customizer(objValue, key, nested) : undefined;
	            if (newValue === undefined) {
	              newValue = objValue == null
	                ? (isIndex(path[index + 1]) ? [] : {})
	                : objValue;
	            }
	          }
	          assignValue(nested, key, newValue);
	        }
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array ? array.length : low;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array ? array.length : 0,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsUndef = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            isDef = computed !== undefined,
	            isReflexive = computed === computed;

	        if (valIsNaN) {
	          var setLow = isReflexive || retHighest;
	        } else if (valIsNull) {
	          setLow = isReflexive && isDef && (retHighest || computed != null);
	        } else if (valIsUndef) {
	          setLow = isReflexive && (retHighest || isDef);
	        } else if (computed == null) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq`.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array) {
	      return baseSortedUniqBy(array);
	    }

	    /**
	     * The base implementation of `_.sortedUniqBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniqBy(array, iteratee) {
	      var index = 0,
	          length = array.length,
	          value = array[0],
	          computed = iteratee ? iteratee(value) : value,
	          seen = computed,
	          resIndex = 1,
	          result = [value];

	      while (++index < length) {
	        value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	        if (!eq(computed, seen)) {
	          seen = computed;
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);
	      object = parent(object, path);
	      var key = last(path);
	      return (object != null && has(object, key)) ? delete object[key] : true;
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var index = -1,
	          length = arrays.length;

	      while (++index < length) {
	        var result = result
	          ? arrayPush(
	              baseDifference(result, arrays[index], iteratee, comparator),
	              baseDifference(arrays[index], result, iteratee, comparator)
	            )
	          : arrays[index];
	      }
	      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value) {
	      return isArray(value) ? value : stringToPath(value);
	    }

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var result = new buffer.constructor(buffer.length);
	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : source[key];

	        assignValue(object, key, newValue);
	      }
	      return object;
	    }

	    /**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return rest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = typeof customizer == 'function'
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBaseWrapper(func, bitmask, thisArg) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = reHasComplexSymbol.test(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtorWrapper(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurryWrapper(func, bitmask, arity) {
	      var Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getPlaceholder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return rest(function(funcs) {
	        funcs = baseFlatten(funcs, 1);

	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 &&
	              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & ARY_FLAG,
	          isBind = bitmask & BIND_FLAG,
	          isBindKey = bitmask & BIND_KEY_FLAG,
	          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
	          isFlip = bitmask & FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtorWrapper(func);

	      function wrapper() {
	        var length = arguments.length,
	            index = length,
	            args = Array(length);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getPlaceholder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtorWrapper(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new invoker function.
	     */
	    function createOver(arrayFunc) {
	      return rest(function(iteratees) {
	        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	          ? arrayMap(iteratees[0], baseUnary(getIteratee()))
	          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));

	        return rest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : (chars + '');

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return reHasComplexSymbol.test(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartialWrapper(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toNumber(start);
	        start = start === start ? start : 0;
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toNumber(end) || 0;
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

	      if (!(bitmask & CURRY_BOUND_FLAG)) {
	        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return result;
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = toInteger(precision);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] == null
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == BIND_FLAG) {
	        var result = createBaseWrapper(func, bitmask, thisArg);
	      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
	        result = createCurryWrapper(func, bitmask, arity);
	      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
	        result = createPartialWrapper(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybridWrapper.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setter(result, newData);
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	      var index = -1,
	          isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(array, other);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (isUnordered) {
	          if (!arraySome(other, function(othValue) {
	                return arrValue === othValue ||
	                  equalFunc(arrValue, othValue, customizer, bitmask, stack);
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, customizer, bitmask, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	          // Coerce dates and booleans to numbers, dates to milliseconds and
	          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	          // not equal.
	          return +object == +other;

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case numberTag:
	          // Treat `NaN` vs. `NaN` as equal.
	          return (object != +object) ? other != +other : object == +other;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= UNORDERED_COMPARE_FLAG;
	          stack.set(object, other);

	          // Recursively compare objects (susceptible to call stack limits).
	          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : baseHas(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      return result;
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a
	     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	     * Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */
	    var getLength = baseProperty('length');

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = toPairs(object),
	          length = result.length;

	      while (length--) {
	        result[length][2] = isStrictComparable(result[length][1]);
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = object[key];
	      return isNative(value) ? value : undefined;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getPlaceholder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the `[[Prototype]]` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {null|Object} Returns the `[[Prototype]]`.
	     */
	    function getPrototype(value) {
	      return nativeGetPrototype(Object(value));
	    }

	    /**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    function getSymbols(object) {
	      // Coerce `object` to an object to avoid non-object errors in V8.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	      return getOwnPropertySymbols(Object(object));
	    }

	    // Fallback for IE < 11.
	    if (!getOwnPropertySymbols) {
	      getSymbols = function() {
	        return [];
	      };
	    }

	    /**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function getTag(value) {
	      return objectToString.call(value);
	    }

	    // Fallback for data views, maps, sets, and weak maps in IE 11,
	    // for data views in Edge, and promises in Node.js.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = objectToString.call(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : undefined;

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var result,
	          index = -1,
	          length = path.length;

	      while (++index < length) {
	        var key = path[index];
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result) {
	        return result;
	      }
	      var length = object ? object.length : 0;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isString(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Creates an array of index keys for `object` values of arrays,
	     * `arguments` objects, and strings, otherwise `null` is returned.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array|null} Returns index keys, else `null`.
	     */
	    function indexKeys(object) {
	      var length = object ? object.length : undefined;
	      if (isLength(length) &&
	          (isArray(object) || isString(object) || isArguments(object))) {
	        return baseTimes(length, String);
	      }
	      return null;
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArrayLikeObject(value) && (isArray(value) || isArguments(value));
	    }

	    /**
	     * Checks if `value` is a flattenable array and not a `_.matchesProperty`
	     * iteratee shorthand.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenableIteratee(value) {
	      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol') {
	        return true;
	      }
	      return !isArray(value) &&
	        (isSymbol(value) || reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	          (object != null && value in Object(object)));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return type == 'number' || type == 'boolean' ||
	        (type == 'string' && value != '__proto__') || value == null;
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
	        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));
	      }
	      return objValue;
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = (function() {
	      var count = 0,
	          lastCalled = 0;

	      return function(key, value) {
	        var stamp = now(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return key;
	          }
	        } else {
	          count = 0;
	        }
	        return baseSetData(key, value);
	      };
	    }());

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoize(function(string) {
	      var result = [];
	      toString(string).replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(key) {
	      return (typeof key == 'string' || isSymbol(key)) ? key : (key + '');
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to process.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array containing chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array ? array.length : 0;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length,
	          array = castArray(arguments[0]);

	      if (length < 2) {
	        return length ? copyArray(array) : [];
	      }
	      var args = Array(length - 1);
	      while (length--) {
	        args[length - 1] = arguments[length];
	      }
	      return arrayConcat(array, baseFlatten(args, 1));
	    }

	    /**
	     * Creates an array of unique `array` values not included in the other given
	     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.difference([3, 2, 1], [4, 2]);
	     * // => [3, 1]
	     */
	    var difference = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);
	     * // => [3.1, 1.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = rest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. Result values
	     * are chosen from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = rest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3))
	        : -1;
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3), true)
	        : -1;
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['fred', 30], ['barney', 40]]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs ? pairs.length : 0,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      fromIndex = toInteger(fromIndex);
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return baseIndexOf(array, value, fromIndex);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      return dropRight(array, 1);
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [4, 2], [1, 2]);
	     * // => [2]
	     */
	    var intersection = rest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = rest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. Result values are chosen
	     * from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = rest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (comparator === last(mapped)) {
	        comparator = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array ? nativeJoin.call(array, separator) : '';
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array ? array.length : 0;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = (
	          index < 0
	            ? nativeMax(length + index, 0)
	            : nativeMin(index, length - 1)
	        ) + 1;
	      }
	      if (value !== value) {
	        return indexOfNaN(array, index, true);
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Gets the nth element of `array`. If `n` is negative, the nth element
	     * from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    var pull = rest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pullAll(array, [2, 3]);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [5, 10, 15, 20];
	     * var evens = _.pullAt(array, 1, 3);
	     *
	     * console.log(array);
	     * // => [5, 15]
	     *
	     * console.log(evens);
	     * // => [10, 20]
	     */
	    var pullAt = rest(function(array, indexes) {
	      indexes = arrayMap(baseFlatten(indexes, 1), String);

	      var result = baseAt(array, indexes);
	      basePullAt(array, indexes.sort(compareAscending));
	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array ? nativeReverse.call(array) : array;
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     *
	     * _.sortedIndex([4, 5], 4);
	     * // => 0
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };
	     *
	     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([1, 1, 2, 2], 2);
	     * // => 2
	     */
	    function sortedIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5], 4);
	     * // => 1
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([1, 1, 2, 2], 2);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniqBy(array, getIteratee(iteratee))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      return drop(array, 1);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2, 1], [4, 2], [1, 2]);
	     * // => [2, 1, 4]
	     */
	    var union = rest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1, 1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each
	     * element is kept.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length)
	        ? baseUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseUniq(array, getIteratee(iteratee))
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      return (array && array.length)
	        ? baseUniq(array, undefined, comparator)
	        : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['fred', 'barney'], [30, 40], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to filter.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.without([1, 2, 1, 3], 1, 2);
	     * // => [3]
	     */
	    var without = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xor([2, 1], [4, 2]);
	     * // => [1, 4]
	     */
	    var xor = rest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */
	    var zip = rest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = rest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     *
	     * _(['a', 'b', 'c']).at(0, 2).value();
	     * // => ['a', 'c']
	     */
	    var wrapperAt = rest(function(paths) {
	      paths = baseFlatten(paths, 1);
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    function find(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEach);
	    }

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    function findLast(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate, true);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEachRight);
	    }

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _([1, 2]).forEach(function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEach(collection, iteratee)
	        : baseEach(collection, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEachRight(collection, iteratee)
	        : baseEachRight(collection, getIteratee(iteratee));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        result[key] = [value];
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.includes('pebbles', 'eb');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `methodName` is a function, it's
	     * invoked for and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = rest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          isProp = isKey(path),
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
	        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      predicate = getIteratee(predicate, 3);
	      return func(collection, function(value, index, collection) {
	        return !predicate(value, index, collection);
	      });
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var array = isArrayLike(collection) ? collection : values(collection),
	          length = array.length;

	      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      var index = -1,
	          result = toArray(collection),
	          length = result.length,
	          lastIndex = length - 1;

	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = baseClamp(toInteger(n), 0, length);
	      }
	      while (++index < n) {
	        var rand = baseRandom(index, lastIndex),
	            value = result[rand];

	        result[rand] = result[index];
	        result[index] = value;
	      }
	      result.length = n;
	      return result;
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      return sampleSize(collection, MAX_ARRAY_LENGTH);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        var result = collection.length;
	        return (result && isString(collection)) ? stringSize(collection) : result;
	      }
	      if (isObjectLike(collection)) {
	        var tag = getTag(collection);
	        if (tag == mapTag || tag == setTag) {
	          return collection.size;
	        }
	      }
	      return keys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, function(o) { return o.user; });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     *
	     * _.sortBy(users, 'user', function(o) {
	     *   return Math.floor(o.age / 10);
	     * });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    var sortBy = rest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	        ? iteratees[0]
	        : baseFlatten(iteratees, 1, isFlattenableIteratee);

	      return baseOrderBy(collection, iteratees, []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @type {Function}
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred function to be invoked.
	     */
	    var now = Date.now;

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind` this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var greet = function(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * };
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = rest(function(func, thisArg, partials) {
	      var bitmask = BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bind));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = rest(function(object, key, partials) {
	      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bindKey));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide an options object to indicate whether `func` should be invoked on
	     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent calls
	     * to the debounced function return the result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime = 0,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (!lastCallTime || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        clearTimeout(timerId);
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastCallTime = lastInvokeTime = 0;
	        lastArgs = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            clearTimeout(timerId);
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one or more milliseconds.
	     */
	    var defer = rest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = rest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrapper(func, FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoizing function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result);
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Assign cache to `_.memoize`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        return !predicate.apply(this, arguments);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with arguments transformed by
	     * corresponding `transforms`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [transforms[_.identity]] The functions to transform.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, square, doubled);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = rest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return rest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partial));
	      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partialRight));
	      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, 2, 0, 1);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = rest(function(func, indexes) {
	      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        switch (start) {
	          case 0: return func.call(this, array);
	          case 1: return func.call(this, args[0], array);
	          case 2: return func.call(this, args[0], args[1], array);
	        }
	        var otherArgs = Array(start + 1);
	        index = -1;
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = array;
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
	      return rest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide an options object to indicate whether
	     * `func` should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Any additional arguments provided to the function are
	     * appended to those provided to the wrapper function. The wrapper is invoked
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      wrapper = wrapper == null ? identity : wrapper;
	      return partial(wrapper, value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, false, true);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      return baseClone(value, false, true, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, true, true);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      return baseClone(value, true, true, customizer);
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    function gt(value, other) {
	      return value > other;
	    }

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    function gte(value, other) {
	      return value >= other;
	    }

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	    }

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @type {Function}
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    function isArrayBuffer(value) {
	      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
	    }

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(getLength(value)) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && objectToString.call(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = !Buffer ? constant(false) : function(value) {
	      return value instanceof Buffer;
	    };

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    function isDate(value) {
	      return isObjectLike(value) && objectToString.call(value) == dateTag;
	    }

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element,
	     *  else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (isArrayLike(value) &&
	          (isArray(value) || isString(value) || isFunction(value.splice) ||
	            isArguments(value) || isBuffer(value))) {
	        return !value.length;
	      }
	      if (isObjectLike(value)) {
	        var tag = getTag(value);
	        if (tag == mapTag || tag == setTag) {
	          return !value.size;
	        }
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return !(nonEnumShadows && keys(value).length);
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object,
	     *  else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      return (objectToString.call(value) == errorTag) ||
	        (typeof value.message == 'string' && typeof value.name == 'string');
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number,
	     *  else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MAX_VALUE);
	     * // => true
	     *
	     * _.isFinite(3.14);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 8 which returns 'object' for typed array and weak map constructors,
	      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	      var tag = isObject(value) ? objectToString.call(value) : '';
	      return tag == funcTag || tag == genTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length,
	     *  else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return !!value && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return !!value && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    function isMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values. This method is
	     * equivalent to a `_.matches` function when `source` is partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.isMatch(object, { 'age': 40 });
	     * // => true
	     *
	     * _.isMatch(object, { 'age': 36 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a native function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && objectToString.call(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object,
	     *  else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) ||
	          objectToString.call(value) != objectTag || isHostObject(value)) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return (typeof Ctor == 'function' &&
	        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    function isRegExp(value) {
	      return isObject(value) && objectToString.call(value) == regexpTag;
	    }

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer,
	     *  else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    function isSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && objectToString.call(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    function isTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	    }

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    function lt(value, other) {
	      return value < other;
	    }

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    function lte(value, other) {
	      return value <= other;
	    }

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (iteratorSymbol && value[iteratorSymbol]) {
	        return iteratorToArray(value[iteratorSymbol]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3');
	     * // => 3
	     */
	    function toInteger(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      var remainder = value % 1;
	      return value === value ? (remainder ? value - remainder : value) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3);
	     * // => 3
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3');
	     * // => 3
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = isFunction(value.valueOf) ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (value == null) {
	        return '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.c = 3;
	     * }
	     *
	     * function Bar() {
	     *   this.e = 5;
	     * }
	     *
	     * Foo.prototype.d = 4;
	     * Bar.prototype.f = 6;
	     *
	     * _.assign({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3, 'e': 5 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * function Bar() {
	     *   this.d = 4;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     * Bar.prototype.e = 5;
	     *
	     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keysIn(source), object);
	        return;
	      }
	      for (var key in source) {
	        assignValue(object, key, source[key]);
	      }
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     *
	     * _.at(['a', 'b', 'c'], 0, 2);
	     * // => ['a', 'c']
	     */
	    var at = rest(function(object, paths) {
	      return baseAt(object, baseFlatten(paths, 1));
	    });

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties ? baseAssign(result, properties) : result;
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var defaults = rest(function(args) {
	      args.push(undefined, assignInDefaults);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	     * // => { 'user': { 'name': 'barney', 'age': 36 } }
	     *
	     */
	    var defaultsDeep = rest(function(args) {
	      args.push(undefined, mergeDefaults);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is used in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = rest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      var isProto = isPrototype(object);
	      if (!(isProto || isArrayLike(object))) {
	        return baseKeys(object);
	      }
	      var indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;

	      for (var key in object) {
	        if (baseHas(object, key) &&
	            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(isProto && key == 'constructor')) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      var index = -1,
	          isProto = isPrototype(object),
	          props = baseKeysIn(object),
	          propsLength = props.length,
	          indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;

	      while (++index < propsLength) {
	        var key = props[index];
	        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[iteratee(value, key, object)] = value;
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[key] = iteratee(value, key, object);
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively.Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var users = {
	     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	     * };
	     *
	     * var ages = {
	     *   'data': [{ 'age': 36 }, { 'age': 40 }]
	     * };
	     *
	     * _.merge(users, ages);
	     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with seven arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var other = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = rest(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      props = arrayMap(baseFlatten(props, 1), toKey);
	      return basePick(object, baseDifference(getAllKeysIn(object), props));
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      predicate = getIteratee(predicate);
	      return basePickBy(object, function(value, key) {
	        return !predicate(value, key);
	      });
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = rest(function(object, props) {
	      return object == null ? {} : basePick(object, baseFlatten(props, 1));
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      return object == null ? {} : basePickBy(object, getIteratee(predicate));
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        object = undefined;
	        length = 1;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[path[index]];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    function toPairs(object) {
	      return baseToPairs(object, keys(object));
	    }

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)
	     */
	    function toPairsIn(object) {
	      return baseToPairs(object, keysIn(object));
	    }

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. The iteratee is invoked
	     * with four arguments: (accumulator, value, key, object). Iteratee functions
	     * may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object) || isTypedArray(object);
	      iteratee = getIteratee(iteratee, 4);

	      if (accumulator == null) {
	        if (isArr || isObject(object)) {
	          var Ctor = object.constructor;
	          if (isArr) {
	            accumulator = isArray(object) ? new Ctor : [];
	          } else {
	            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	          }
	        } else {
	          accumulator = {};
	        }
	      }
	      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object ? baseValues(object, keys(object)) : [];
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toNumber(start) || 0;
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toNumber(end) || 0;
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toNumber(lower) || 0;
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toNumber(upper) || 0;
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * to basic latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search from.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = typeof target == 'string' ? target : (target + '');

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      position -= target.length;
	      return position >= 0 && string.indexOf(target, position) == position;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in IE < 9, they can break out of
	     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the
	     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      // Chrome fails to trim leading <BOM> whitespace characters.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      string = toString(string).replace(reTrim, '');
	      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the new array of string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator += '';
	        if (separator == '' && reHasComplexSymbol.test(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return nativeSplit.call(string, separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = baseClamp(toInteger(position), 0, string.length);
	      return string.lastIndexOf(target, position) == position;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, assignInDefaults);

	      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrim, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? toString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (reHasComplexSymbol.test(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(separator, end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = rest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, 'onClick');
	     * jQuery(element).on('click', view.onClick);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = rest(function(object, methodNames) {
	      arrayEach(baseFlatten(methodNames, 1), function(key) {
	        object[key] = bind(object[key], object);
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.constant(true),                _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs ? pairs.length : 0,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return rest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, true));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var getter = _.constant(object);
	     *
	     * getter() === object;
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow(_.add, square);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight(square, _.add);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument given to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.identity(object) === object;
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`. The created function is equivalent to
	     * `_.isMatch` with a `source` partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
	     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * _.find(users, _.matchesProperty('user', 'fred'));
	     * // => { 'user': 'fred' }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, true));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = rest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = rest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * A no-operation function that returns `undefined` regardless of the
	     * arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.noop(object) === undefined;
	     * // => true
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that returns its nth argument. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return rest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over(Math.max, Math.min);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(true));
	     * // => [true, true, true, true]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     *
	     * var path = ['a', 'b', 'c'],
	     *     newPath = _.toPath(path);
	     *
	     * console.log(newPath);
	     * // => ['a', 'b', 'c']
	     *
	     * console.log(path === newPath);
	     * // => false
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(value));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    });

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    });

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, gt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), gt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, lt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), lt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    });

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    });

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.deburr = deburr;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = rest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      predicate = getIteratee(predicate, 3);
	      return this.filter(function(value) {
	        return !predicate(value);
	      });
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    if (iteratorSymbol) {
	      lodash.prototype[iteratorSymbol] = wrapperToIterator;
	    }
	    return lodash;
	  }

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Expose lodash on the free variable `window` or `self` when available. This
	  // prevents errors in cases where lodash is loaded by a script tag in the presence
	  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.
	  (freeWindow || freeSelf || {})._ = _;

	  // Some AMD build optimizers like r.js check for condition patterns like the following:
	  if (true) {
	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
	  else if (freeExports && freeModule) {
	    // Export for Node.js.
	    if (moduleExports) {
	      (freeModule.exports = _)._ = _;
	    }
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module), (function() { return this; }()), __webpack_require__(21)))

/***/ },

/***/ 22:
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },

/***/ 25:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(a){"use strict";function b(a){this.owner=a}function c(a,b){if(Object.create)b.prototype=Object.create(a.prototype);else{var c=function(){};c.prototype=a.prototype,b.prototype=new c}return b.prototype.constructor=b,b}function d(a){var b=this.internal=new e(this);b.loadConfig(a),b.init(),function c(a,b,d){Object.keys(a).forEach(function(e){b[e]=a[e].bind(d),Object.keys(a[e]).length>0&&c(a[e],b[e],d)})}(h,this,this)}function e(b){var c=this;c.d3=a.d3?a.d3: true?__webpack_require__(26):void 0,c.api=b,c.config=c.getDefaultConfig(),c.data={},c.cache={},c.axes={}}function f(a){b.call(this,a)}function g(a,b){function c(a,b){a.attr("transform",function(a){return"translate("+Math.ceil(b(a)+u)+", 0)"})}function d(a,b){a.attr("transform",function(a){return"translate(0,"+Math.ceil(b(a))+")"})}function e(a){var b=a[0],c=a[a.length-1];return c>b?[b,c]:[c,b]}function f(a){var b,c,d=[];if(a.ticks)return a.ticks.apply(a,n);for(c=a.domain(),b=Math.ceil(c[0]);b<c[1];b++)d.push(b);return d.length>0&&d[0]>0&&d.unshift(d[0]-(d[1]-d[0])),d}function g(){var a,c=p.copy();return b.isCategory&&(a=p.domain(),c.domain([a[0],a[1]-1])),c}function h(a){var b=m?m(a):a;return"undefined"!=typeof b?b:""}function i(a){if(z)return z;var b={h:11.5,w:5.5};return a.select("text").text(h).each(function(a){var c=this.getBoundingClientRect(),d=h(a),e=c.height,f=d?c.width/d.length:void 0;e&&f&&(b.h=e,b.w=f)}).text(""),z=b,b}function j(c){return b.withoutTransition?c:a.transition(c)}function k(m){m.each(function(){function m(a,c){function d(a,b){f=void 0;for(var h=1;h<b.length;h++)if(" "===b.charAt(h)&&(f=h),e=b.substr(0,h+1),g=U.w*e.length,g>c)return d(a.concat(b.substr(0,f?f:h)),b.slice(f?f+1:h));return a.concat(b)}var e,f,g,i=h(a),j=[];return"[object Array]"===Object.prototype.toString.call(i)?i:((!c||0>=c)&&(c=X?95:b.isCategory?Math.ceil(F(G[1])-F(G[0]))-12:110),d(j,i+""))}function n(a,b){var c=U.h;return 0===b&&(c="left"===q||"right"===q?-((V[a.index]-1)*(U.h/2)-3):".71em"),c}function v(a){var b=p(a)+(o?0:u);return L[0]<b&&b<L[1]?r:0}function w(a){return a?a>0?"start":"end":"middle"}function x(a){return a?"rotate("+a+")":""}function y(a){return a?8*Math.sin(Math.PI*(a/180)):0}function z(a){return a?11.5-2.5*(a/15)*(a>0?1:-1):W}var A,B,C,D=k.g=a.select(this),E=this.__chart__||p,F=this.__chart__=g(),G=t?t:f(F),H=D.selectAll(".tick").data(G,F),I=H.enter().insert("g",".domain").attr("class","tick").style("opacity",1e-6),J=H.exit().remove(),K=j(H).style("opacity",1),L=p.rangeExtent?p.rangeExtent():e(p.range()),M=D.selectAll(".domain").data([0]),N=(M.enter().append("path").attr("class","domain"),j(M));I.append("line"),I.append("text");var O=I.select("line"),P=K.select("line"),Q=I.select("text"),R=K.select("text");b.isCategory?(u=Math.ceil((F(1)-F(0))/2),B=o?0:u,C=o?u:0):u=B=0;var S,T,U=i(D.select(".tick")),V=[],W=Math.max(r,0)+s,X="left"===q||"right"===q;S=H.select("text"),T=S.selectAll("tspan").data(function(a,c){var d=b.tickMultiline?m(a,b.tickWidth):[].concat(h(a));return V[c]=d.length,d.map(function(a){return{index:c,splitted:a}})}),T.enter().append("tspan"),T.exit().remove(),T.text(function(a){return a.splitted});var Y=b.tickTextRotate;switch(q){case"bottom":A=c,O.attr("y2",r),Q.attr("y",W),P.attr("x1",B).attr("x2",B).attr("y2",v),R.attr("x",0).attr("y",z(Y)).style("text-anchor",w(Y)).attr("transform",x(Y)),T.attr("x",0).attr("dy",n).attr("dx",y(Y)),N.attr("d","M"+L[0]+","+l+"V0H"+L[1]+"V"+l);break;case"top":A=c,O.attr("y2",-r),Q.attr("y",-W),P.attr("x2",0).attr("y2",-r),R.attr("x",0).attr("y",-W),S.style("text-anchor","middle"),T.attr("x",0).attr("dy","0em"),N.attr("d","M"+L[0]+","+-l+"V0H"+L[1]+"V"+-l);break;case"left":A=d,O.attr("x2",-r),Q.attr("x",-W),P.attr("x2",-r).attr("y1",C).attr("y2",C),R.attr("x",-W).attr("y",u),S.style("text-anchor","end"),T.attr("x",-W).attr("dy",n),N.attr("d","M"+-l+","+L[0]+"H0V"+L[1]+"H"+-l);break;case"right":A=d,O.attr("x2",r),Q.attr("x",W),P.attr("x2",r).attr("y2",0),R.attr("x",W).attr("y",0),S.style("text-anchor","start"),T.attr("x",W).attr("dy",n),N.attr("d","M"+l+","+L[0]+"H0V"+L[1]+"H"+l)}if(F.rangeBand){var Z=F,$=Z.rangeBand()/2;E=F=function(a){return Z(a)+$}}else E.rangeBand?E=F:J.call(A,F);I.call(A,E),K.call(A,F)})}var l,m,n,o,p=a.scale.linear(),q="bottom",r=6,s=3,t=null,u=0,v=!0;return b=b||{},l=b.withOuterTick?6:0,k.scale=function(a){return arguments.length?(p=a,k):p},k.orient=function(a){return arguments.length?(q=a in{top:1,right:1,bottom:1,left:1}?a+"":"bottom",k):q},k.tickFormat=function(a){return arguments.length?(m=a,k):m},k.tickCentered=function(a){return arguments.length?(o=a,k):o},k.tickOffset=function(){return u},k.tickInterval=function(){var a,c;return b.isCategory?a=2*u:(c=k.g.select("path.domain").node().getTotalLength()-2*l,a=c/k.g.selectAll("line").size()),1/0===a?0:a},k.ticks=function(){return arguments.length?(n=arguments,k):n},k.tickCulling=function(a){return arguments.length?(v=a,k):v},k.tickValues=function(a){if("function"==typeof a)t=function(){return a(p.domain())};else{if(!arguments.length)return t;t=a}return k},k}var h,i,j,k={version:"0.4.10"};k.generate=function(a){return new d(a)},k.chart={fn:d.prototype,internal:{fn:e.prototype,axis:{fn:f.prototype}}},h=k.chart.fn,i=k.chart.internal.fn,j=k.chart.internal.axis.fn,i.init=function(){var a=this,b=a.config;if(a.initParams(),b.data_url)a.convertUrlToData(b.data_url,b.data_mimeType,b.data_keys,a.initWithData);else if(b.data_json)a.initWithData(a.convertJsonToData(b.data_json,b.data_keys));else if(b.data_rows)a.initWithData(a.convertRowsToData(b.data_rows));else{if(!b.data_columns)throw Error("url or json or rows or columns is required.");a.initWithData(a.convertColumnsToData(b.data_columns))}},i.initParams=function(){var a=this,b=a.d3,c=a.config;a.clipId="c3-"+ +new Date+"-clip",a.clipIdForXAxis=a.clipId+"-xaxis",a.clipIdForYAxis=a.clipId+"-yaxis",a.clipIdForGrid=a.clipId+"-grid",a.clipIdForSubchart=a.clipId+"-subchart",a.clipPath=a.getClipPath(a.clipId),a.clipPathForXAxis=a.getClipPath(a.clipIdForXAxis),a.clipPathForYAxis=a.getClipPath(a.clipIdForYAxis),a.clipPathForGrid=a.getClipPath(a.clipIdForGrid),a.clipPathForSubchart=a.getClipPath(a.clipIdForSubchart),a.dragStart=null,a.dragging=!1,a.flowing=!1,a.cancelClick=!1,a.mouseover=!1,a.transiting=!1,a.color=a.generateColor(),a.levelColor=a.generateLevelColor(),a.dataTimeFormat=c.data_xLocaltime?b.time.format:b.time.format.utc,a.axisTimeFormat=c.axis_x_localtime?b.time.format:b.time.format.utc,a.defaultAxisTimeFormat=a.axisTimeFormat.multi([[".%L",function(a){return a.getMilliseconds()}],[":%S",function(a){return a.getSeconds()}],["%I:%M",function(a){return a.getMinutes()}],["%I %p",function(a){return a.getHours()}],["%-m/%-d",function(a){return a.getDay()&&1!==a.getDate()}],["%-m/%-d",function(a){return 1!==a.getDate()}],["%-m/%-d",function(a){return a.getMonth()}],["%Y/%-m/%-d",function(){return!0}]]),a.hiddenTargetIds=[],a.hiddenLegendIds=[],a.focusedTargetIds=[],a.defocusedTargetIds=[],a.xOrient=c.axis_rotated?"left":"bottom",a.yOrient=c.axis_rotated?c.axis_y_inner?"top":"bottom":c.axis_y_inner?"right":"left",a.y2Orient=c.axis_rotated?c.axis_y2_inner?"bottom":"top":c.axis_y2_inner?"left":"right",a.subXOrient=c.axis_rotated?"left":"bottom",a.isLegendRight="right"===c.legend_position,a.isLegendInset="inset"===c.legend_position,a.isLegendTop="top-left"===c.legend_inset_anchor||"top-right"===c.legend_inset_anchor,a.isLegendLeft="top-left"===c.legend_inset_anchor||"bottom-left"===c.legend_inset_anchor,a.legendStep=0,a.legendItemWidth=0,a.legendItemHeight=0,a.currentMaxTickWidths={x:0,y:0,y2:0},a.rotated_padding_left=30,a.rotated_padding_right=c.axis_rotated&&!c.axis_x_show?0:30,a.rotated_padding_top=5,a.withoutFadeIn={},a.intervalForObserveInserted=void 0,a.axes.subx=b.selectAll([])},i.initChartElements=function(){this.initBar&&this.initBar(),this.initLine&&this.initLine(),this.initArc&&this.initArc(),this.initGauge&&this.initGauge(),this.initText&&this.initText()},i.initWithData=function(b){var c,d,e=this,g=e.d3,h=e.config,i=!0;e.axis=new f(e),e.initPie&&e.initPie(),e.initBrush&&e.initBrush(),e.initZoom&&e.initZoom(),e.selectChart=h.bindto?"function"==typeof h.bindto.node?h.bindto:g.select(h.bindto):g.selectAll([]),e.selectChart.empty()&&(e.selectChart=g.select(document.createElement("div")).style("opacity",0),e.observeInserted(e.selectChart),i=!1),e.selectChart.html("").classed("c3",!0),e.data.xs={},e.data.targets=e.convertDataToTargets(b),h.data_filter&&(e.data.targets=e.data.targets.filter(h.data_filter)),h.data_hide&&e.addHiddenTargetIds(h.data_hide===!0?e.mapToIds(e.data.targets):h.data_hide),h.legend_hide&&e.addHiddenLegendIds(h.legend_hide===!0?e.mapToIds(e.data.targets):h.legend_hide),e.hasType("gauge")&&(h.legend_show=!1),e.updateSizes(),e.updateScales(),e.x.domain(g.extent(e.getXDomain(e.data.targets))),e.y.domain(e.getYDomain(e.data.targets,"y")),e.y2.domain(e.getYDomain(e.data.targets,"y2")),e.subX.domain(e.x.domain()),e.subY.domain(e.y.domain()),e.subY2.domain(e.y2.domain()),e.orgXDomain=e.x.domain(),e.brush&&e.brush.scale(e.subX),h.zoom_enabled&&e.zoom.scale(e.x),e.svg=e.selectChart.append("svg").style("overflow","hidden").on("mouseenter",function(){return h.onmouseover.call(e)}).on("mouseleave",function(){return h.onmouseout.call(e)}),c=e.svg.append("defs"),e.clipChart=e.appendClip(c,e.clipId),e.clipXAxis=e.appendClip(c,e.clipIdForXAxis),e.clipYAxis=e.appendClip(c,e.clipIdForYAxis),e.clipGrid=e.appendClip(c,e.clipIdForGrid),e.clipSubchart=e.appendClip(c,e.clipIdForSubchart),e.updateSvgSize(),d=e.main=e.svg.append("g").attr("transform",e.getTranslate("main")),e.initSubchart&&e.initSubchart(),e.initTooltip&&e.initTooltip(),e.initLegend&&e.initLegend(),d.append("text").attr("class",l.text+" "+l.empty).attr("text-anchor","middle").attr("dominant-baseline","middle"),e.initRegion(),e.initGrid(),d.append("g").attr("clip-path",e.clipPath).attr("class",l.chart),h.grid_lines_front&&e.initGridLines(),e.initEventRect(),e.initChartElements(),d.insert("rect",h.zoom_privileged?null:"g."+l.regions).attr("class",l.zoomRect).attr("width",e.width).attr("height",e.height).style("opacity",0).on("dblclick.zoom",null),h.axis_x_extent&&e.brush.extent(e.getDefaultExtent()),e.axis.init(),e.updateTargets(e.data.targets),i&&(e.updateDimension(),e.config.oninit.call(e),e.redraw({withTransition:!1,withTransform:!0,withUpdateXDomain:!0,withUpdateOrgXDomain:!0,withTransitionForAxis:!1})),null==a.onresize&&(a.onresize=e.generateResize()),a.onresize.add&&(a.onresize.add(function(){h.onresize.call(e)}),a.onresize.add(function(){e.api.flush()}),a.onresize.add(function(){h.onresized.call(e)})),e.api.element=e.selectChart.node()},i.smoothLines=function(a,b){var c=this;"grid"===b&&a.each(function(){var a=c.d3.select(this),b=a.attr("x1"),d=a.attr("x2"),e=a.attr("y1"),f=a.attr("y2");a.attr({x1:Math.ceil(b),x2:Math.ceil(d),y1:Math.ceil(e),y2:Math.ceil(f)})})},i.updateSizes=function(){var a=this,b=a.config,c=a.legend?a.getLegendHeight():0,d=a.legend?a.getLegendWidth():0,e=a.isLegendRight||a.isLegendInset?0:c,f=a.hasArcType(),g=b.axis_rotated||f?0:a.getHorizontalAxisHeight("x"),h=b.subchart_show&&!f?b.subchart_size_height+g:0;a.currentWidth=a.getCurrentWidth(),a.currentHeight=a.getCurrentHeight(),a.margin=b.axis_rotated?{top:a.getHorizontalAxisHeight("y2")+a.getCurrentPaddingTop(),right:f?0:a.getCurrentPaddingRight(),bottom:a.getHorizontalAxisHeight("y")+e+a.getCurrentPaddingBottom(),left:h+(f?0:a.getCurrentPaddingLeft())}:{top:4+a.getCurrentPaddingTop(),right:f?0:a.getCurrentPaddingRight(),bottom:g+h+e+a.getCurrentPaddingBottom(),left:f?0:a.getCurrentPaddingLeft()},a.margin2=b.axis_rotated?{top:a.margin.top,right:0/0,bottom:20+e,left:a.rotated_padding_left}:{top:a.currentHeight-h-e,right:0/0,bottom:g+e,left:a.margin.left},a.margin3={top:0,right:0/0,bottom:0,left:0},a.updateSizeForLegend&&a.updateSizeForLegend(c,d),a.width=a.currentWidth-a.margin.left-a.margin.right,a.height=a.currentHeight-a.margin.top-a.margin.bottom,a.width<0&&(a.width=0),a.height<0&&(a.height=0),a.width2=b.axis_rotated?a.margin.left-a.rotated_padding_left-a.rotated_padding_right:a.width,a.height2=b.axis_rotated?a.height:a.currentHeight-a.margin2.top-a.margin2.bottom,a.width2<0&&(a.width2=0),a.height2<0&&(a.height2=0),a.arcWidth=a.width-(a.isLegendRight?d+10:0),a.arcHeight=a.height-(a.isLegendRight?0:10),a.hasType("gauge")&&(a.arcHeight+=a.height-a.getGaugeLabelHeight()),a.updateRadius&&a.updateRadius(),a.isLegendRight&&f&&(a.margin3.left=a.arcWidth/2+1.1*a.radiusExpanded)},i.updateTargets=function(a){var b=this;b.updateTargetsForText(a),b.updateTargetsForBar(a),b.updateTargetsForLine(a),b.hasArcType()&&b.updateTargetsForArc&&b.updateTargetsForArc(a),b.updateTargetsForSubchart&&b.updateTargetsForSubchart(a),b.showTargets()},i.showTargets=function(){var a=this;a.svg.selectAll("."+l.target).filter(function(b){return a.isTargetToShow(b.id)}).transition().duration(a.config.transition_duration).style("opacity",1)},i.redraw=function(a,b){var c,d,e,f,g,h,i,j,k,m,n,o,p,q,r,s,t,u,v,x,y,z,A,B,C,D,E,F,G,H=this,I=H.main,J=H.d3,K=H.config,L=H.getShapeIndices(H.isAreaType),M=H.getShapeIndices(H.isBarType),N=H.getShapeIndices(H.isLineType),O=H.hasArcType(),P=H.filterTargetsToShow(H.data.targets),Q=H.xv.bind(H);if(a=a||{},c=w(a,"withY",!0),d=w(a,"withSubchart",!0),e=w(a,"withTransition",!0),h=w(a,"withTransform",!1),i=w(a,"withUpdateXDomain",!1),j=w(a,"withUpdateOrgXDomain",!1),k=w(a,"withTrimXDomain",!0),p=w(a,"withUpdateXAxis",i),m=w(a,"withLegend",!1),n=w(a,"withEventRect",!0),o=w(a,"withDimension",!0),f=w(a,"withTransitionForExit",e),g=w(a,"withTransitionForAxis",e),v=e?K.transition_duration:0,x=f?v:0,y=g?v:0,b=b||H.axis.generateTransitions(y),m&&K.legend_show?H.updateLegend(H.mapToIds(H.data.targets),a,b):o&&H.updateDimension(!0),H.isCategorized()&&0===P.length&&H.x.domain([0,H.axes.x.selectAll(".tick").size()]),P.length?(H.updateXDomain(P,i,j,k),K.axis_x_tick_values||(B=H.axis.updateXAxisTickValues(P))):(H.xAxis.tickValues([]),H.subXAxis.tickValues([])),K.zoom_rescale&&!a.flow&&(E=H.x.orgDomain()),H.y.domain(H.getYDomain(P,"y",E)),H.y2.domain(H.getYDomain(P,"y2",E)),!K.axis_y_tick_values&&K.axis_y_tick_count&&H.yAxis.tickValues(H.axis.generateTickValues(H.y.domain(),K.axis_y_tick_count)),!K.axis_y2_tick_values&&K.axis_y2_tick_count&&H.y2Axis.tickValues(H.axis.generateTickValues(H.y2.domain(),K.axis_y2_tick_count)),H.axis.redraw(b,O),H.axis.updateLabels(e),(i||p)&&P.length)if(K.axis_x_tick_culling&&B){for(C=1;C<B.length;C++)if(B.length/C<K.axis_x_tick_culling_max){D=C;break}H.svg.selectAll("."+l.axisX+" .tick text").each(function(a){var b=B.indexOf(a);b>=0&&J.select(this).style("display",b%D?"none":"block")})}else H.svg.selectAll("."+l.axisX+" .tick text").style("display","block");q=H.generateDrawArea?H.generateDrawArea(L,!1):void 0,r=H.generateDrawBar?H.generateDrawBar(M):void 0,s=H.generateDrawLine?H.generateDrawLine(N,!1):void 0,t=H.generateXYForText(L,M,N,!0),u=H.generateXYForText(L,M,N,!1),c&&(H.subY.domain(H.getYDomain(P,"y")),H.subY2.domain(H.getYDomain(P,"y2"))),H.tooltip.style("display","none"),H.updateXgridFocus(),I.select("text."+l.text+"."+l.empty).attr("x",H.width/2).attr("y",H.height/2).text(K.data_empty_label_text).transition().style("opacity",P.length?0:1),H.updateGrid(v),H.updateRegion(v),H.updateBar(x),H.updateLine(x),H.updateArea(x),H.updateCircle(),H.hasDataLabel()&&H.updateText(x),H.redrawArc&&H.redrawArc(v,x,h),H.redrawSubchart&&H.redrawSubchart(d,b,v,x,L,M,N),I.selectAll("."+l.selectedCircles).filter(H.isBarType.bind(H)).selectAll("circle").remove(),K.interaction_enabled&&!a.flow&&n&&(H.redrawEventRect(),H.updateZoom&&H.updateZoom()),H.updateCircleY(),F=(H.config.axis_rotated?H.circleY:H.circleX).bind(H),G=(H.config.axis_rotated?H.circleX:H.circleY).bind(H),a.flow&&(A=H.generateFlow({targets:P,flow:a.flow,duration:a.flow.duration,drawBar:r,drawLine:s,drawArea:q,cx:F,cy:G,xv:Q,xForText:t,yForText:u})),(v||A)&&H.isTabVisible()?J.transition().duration(v).each(function(){var b=[];[H.redrawBar(r,!0),H.redrawLine(s,!0),H.redrawArea(q,!0),H.redrawCircle(F,G,!0),H.redrawText(t,u,a.flow,!0),H.redrawRegion(!0),H.redrawGrid(!0)].forEach(function(a){a.forEach(function(a){b.push(a)})}),z=H.generateWait(),b.forEach(function(a){z.add(a)})}).call(z,function(){A&&A(),K.onrendered&&K.onrendered.call(H)}):(H.redrawBar(r),H.redrawLine(s),H.redrawArea(q),H.redrawCircle(F,G),H.redrawText(t,u,a.flow),H.redrawRegion(),H.redrawGrid(),K.onrendered&&K.onrendered.call(H)),H.mapToIds(H.data.targets).forEach(function(a){H.withoutFadeIn[a]=!0})},i.updateAndRedraw=function(a){var b,c=this,d=c.config;a=a||{},a.withTransition=w(a,"withTransition",!0),a.withTransform=w(a,"withTransform",!1),a.withLegend=w(a,"withLegend",!1),a.withUpdateXDomain=!0,a.withUpdateOrgXDomain=!0,a.withTransitionForExit=!1,a.withTransitionForTransform=w(a,"withTransitionForTransform",a.withTransition),c.updateSizes(),a.withLegend&&d.legend_show||(b=c.axis.generateTransitions(a.withTransitionForAxis?d.transition_duration:0),c.updateScales(),c.updateSvgSize(),c.transformAll(a.withTransitionForTransform,b)),c.redraw(a,b)},i.redrawWithoutRescale=function(){this.redraw({withY:!1,withSubchart:!1,withEventRect:!1,withTransitionForAxis:!1})},i.isTimeSeries=function(){return"timeseries"===this.config.axis_x_type},i.isCategorized=function(){return this.config.axis_x_type.indexOf("categor")>=0},i.isCustomX=function(){var a=this,b=a.config;return!a.isTimeSeries()&&(b.data_x||v(b.data_xs))},i.isTimeSeriesY=function(){return"timeseries"===this.config.axis_y_type},i.getTranslate=function(a){var b,c,d=this,e=d.config;return"main"===a?(b=s(d.margin.left),c=s(d.margin.top)):"context"===a?(b=s(d.margin2.left),c=s(d.margin2.top)):"legend"===a?(b=d.margin3.left,c=d.margin3.top):"x"===a?(b=0,c=e.axis_rotated?0:d.height):"y"===a?(b=0,c=e.axis_rotated?d.height:0):"y2"===a?(b=e.axis_rotated?0:d.width,c=e.axis_rotated?1:0):"subx"===a?(b=0,c=e.axis_rotated?0:d.height2):"arc"===a&&(b=d.arcWidth/2,c=d.arcHeight/2),"translate("+b+","+c+")"},i.initialOpacity=function(a){return null!==a.value&&this.withoutFadeIn[a.id]?1:0},i.initialOpacityForCircle=function(a){return null!==a.value&&this.withoutFadeIn[a.id]?this.opacityForCircle(a):0},i.opacityForCircle=function(a){var b=this.config.point_show?1:0;return m(a.value)?this.isScatterType(a)?.5:b:0},i.opacityForText=function(){return this.hasDataLabel()?1:0},i.xx=function(a){return a?this.x(a.x):null},i.xv=function(a){var b=this,c=a.value;return b.isTimeSeries()?c=b.parseDate(a.value):b.isCategorized()&&"string"==typeof a.value&&(c=b.config.axis_x_categories.indexOf(a.value)),Math.ceil(b.x(c))},i.yv=function(a){var b=this,c=a.axis&&"y2"===a.axis?b.y2:b.y;return Math.ceil(c(a.value))},i.subxx=function(a){return a?this.subX(a.x):null},i.transformMain=function(a,b){var c,d,e,f=this;b&&b.axisX?c=b.axisX:(c=f.main.select("."+l.axisX),a&&(c=c.transition())),b&&b.axisY?d=b.axisY:(d=f.main.select("."+l.axisY),a&&(d=d.transition())),b&&b.axisY2?e=b.axisY2:(e=f.main.select("."+l.axisY2),a&&(e=e.transition())),(a?f.main.transition():f.main).attr("transform",f.getTranslate("main")),c.attr("transform",f.getTranslate("x")),d.attr("transform",f.getTranslate("y")),e.attr("transform",f.getTranslate("y2")),f.main.select("."+l.chartArcs).attr("transform",f.getTranslate("arc"))},i.transformAll=function(a,b){var c=this;c.transformMain(a,b),c.config.subchart_show&&c.transformContext(a,b),c.legend&&c.transformLegend(a)},i.updateSvgSize=function(){var a=this,b=a.svg.select(".c3-brush .background");a.svg.attr("width",a.currentWidth).attr("height",a.currentHeight),a.svg.selectAll(["#"+a.clipId,"#"+a.clipIdForGrid]).select("rect").attr("width",a.width).attr("height",a.height),a.svg.select("#"+a.clipIdForXAxis).select("rect").attr("x",a.getXAxisClipX.bind(a)).attr("y",a.getXAxisClipY.bind(a)).attr("width",a.getXAxisClipWidth.bind(a)).attr("height",a.getXAxisClipHeight.bind(a)),a.svg.select("#"+a.clipIdForYAxis).select("rect").attr("x",a.getYAxisClipX.bind(a)).attr("y",a.getYAxisClipY.bind(a)).attr("width",a.getYAxisClipWidth.bind(a)).attr("height",a.getYAxisClipHeight.bind(a)),a.svg.select("#"+a.clipIdForSubchart).select("rect").attr("width",a.width).attr("height",b.size()?b.attr("height"):0),a.svg.select("."+l.zoomRect).attr("width",a.width).attr("height",a.height),a.selectChart.style("max-height",a.currentHeight+"px")},i.updateDimension=function(a){var b=this;a||(b.config.axis_rotated?(b.axes.x.call(b.xAxis),b.axes.subx.call(b.subXAxis)):(b.axes.y.call(b.yAxis),b.axes.y2.call(b.y2Axis))),b.updateSizes(),b.updateScales(),b.updateSvgSize(),b.transformAll(!1)},i.observeInserted=function(b){var c,d=this;return"undefined"==typeof MutationObserver?void a.console.error("MutationObserver not defined."):(c=new MutationObserver(function(e){e.forEach(function(e){"childList"===e.type&&e.previousSibling&&(c.disconnect(),d.intervalForObserveInserted=a.setInterval(function(){b.node().parentNode&&(a.clearInterval(d.intervalForObserveInserted),d.updateDimension(),d.config.oninit.call(d),d.redraw({withTransform:!0,withUpdateXDomain:!0,withUpdateOrgXDomain:!0,withTransition:!1,withTransitionForTransform:!1,withLegend:!0}),b.transition().style("opacity",1))},10))})}),void c.observe(b.node(),{attributes:!0,childList:!0,characterData:!0}))},i.generateResize=function(){function a(){b.forEach(function(a){a()})}var b=[];return a.add=function(a){b.push(a)},a},i.endall=function(a,b){var c=0;a.each(function(){++c}).each("end",function(){--c||b.apply(this,arguments)})},i.generateWait=function(){var a=[],b=function(b,c){var d=setInterval(function(){var b=0;a.forEach(function(a){if(a.empty())return void(b+=1);try{a.transition()}catch(c){b+=1}}),b===a.length&&(clearInterval(d),c&&c())},10)};return b.add=function(b){a.push(b)},b},i.parseDate=function(b){var c,d=this;return b instanceof Date?c=b:"string"==typeof b?c=d.dataTimeFormat(d.config.data_xFormat).parse(b):"number"!=typeof b&&isNaN(b)||(c=new Date(+b)),(!c||isNaN(+c))&&a.console.error("Failed to parse x '"+b+"' to Date object"),c},i.isTabVisible=function(){var a;return"undefined"!=typeof document.hidden?a="hidden":"undefined"!=typeof document.mozHidden?a="mozHidden":"undefined"!=typeof document.msHidden?a="msHidden":"undefined"!=typeof document.webkitHidden&&(a="webkitHidden"),document[a]?!1:!0},i.getDefaultConfig=function(){var a={bindto:"#chart",size_width:void 0,size_height:void 0,padding_left:void 0,padding_right:void 0,padding_top:void 0,padding_bottom:void 0,zoom_enabled:!1,zoom_extent:void 0,zoom_privileged:!1,zoom_rescale:!1,zoom_onzoom:function(){},zoom_onzoomstart:function(){},zoom_onzoomend:function(){},interaction_enabled:!0,onmouseover:function(){},onmouseout:function(){},onresize:function(){},onresized:function(){},oninit:function(){},onrendered:function(){},transition_duration:350,data_x:void 0,data_xs:{},data_xFormat:"%Y-%m-%d",data_xLocaltime:!0,data_xSort:!0,data_idConverter:function(a){return a},data_names:{},data_classes:{},data_groups:[],data_axes:{},data_type:void 0,data_types:{},data_labels:{},data_order:"desc",data_regions:{},data_color:void 0,data_colors:{},data_hide:!1,data_filter:void 0,data_selection_enabled:!1,data_selection_grouped:!1,data_selection_isselectable:function(){return!0},data_selection_multiple:!0,data_selection_draggable:!1,data_onclick:function(){},data_onmouseover:function(){},data_onmouseout:function(){},data_onselected:function(){},data_onunselected:function(){},data_url:void 0,data_json:void 0,data_rows:void 0,data_columns:void 0,data_mimeType:void 0,data_keys:void 0,data_empty_label_text:"",subchart_show:!1,subchart_size_height:60,subchart_onbrush:function(){},color_pattern:[],color_threshold:{},legend_show:!0,legend_hide:!1,legend_position:"bottom",legend_inset_anchor:"top-left",legend_inset_x:10,legend_inset_y:0,legend_inset_step:void 0,legend_item_onclick:void 0,legend_item_onmouseover:void 0,legend_item_onmouseout:void 0,legend_equally:!1,axis_rotated:!1,axis_x_show:!0,axis_x_type:"indexed",axis_x_localtime:!0,axis_x_categories:[],axis_x_tick_centered:!1,axis_x_tick_format:void 0,axis_x_tick_culling:{},axis_x_tick_culling_max:10,axis_x_tick_count:void 0,axis_x_tick_fit:!0,axis_x_tick_values:null,axis_x_tick_rotate:0,axis_x_tick_outer:!0,axis_x_tick_multiline:!0,axis_x_tick_width:null,axis_x_max:void 0,axis_x_min:void 0,axis_x_padding:{},axis_x_height:void 0,axis_x_extent:void 0,axis_x_label:{},axis_y_show:!0,axis_y_type:void 0,axis_y_max:void 0,axis_y_min:void 0,axis_y_inverted:!1,axis_y_center:void 0,axis_y_inner:void 0,axis_y_label:{},axis_y_tick_format:void 0,axis_y_tick_outer:!0,axis_y_tick_values:null,axis_y_tick_count:void 0,axis_y_tick_time_value:void 0,axis_y_tick_time_interval:void 0,axis_y_padding:{},axis_y_default:void 0,axis_y2_show:!1,axis_y2_max:void 0,axis_y2_min:void 0,axis_y2_inverted:!1,axis_y2_center:void 0,axis_y2_inner:void 0,axis_y2_label:{},axis_y2_tick_format:void 0,axis_y2_tick_outer:!0,axis_y2_tick_values:null,axis_y2_tick_count:void 0,axis_y2_padding:{},axis_y2_default:void 0,grid_x_show:!1,grid_x_type:"tick",grid_x_lines:[],grid_y_show:!1,grid_y_lines:[],grid_y_ticks:10,grid_focus_show:!0,grid_lines_front:!0,point_show:!0,point_r:2.5,point_focus_expand_enabled:!0,point_focus_expand_r:void 0,point_select_r:void 0,line_connectNull:!1,line_step_type:"step",bar_width:void 0,bar_width_ratio:.6,bar_width_max:void 0,bar_zerobased:!0,area_zerobased:!0,pie_label_show:!0,pie_label_format:void 0,pie_label_threshold:.05,pie_expand:!0,gauge_label_show:!0,gauge_label_format:void 0,gauge_expand:!0,gauge_min:0,gauge_max:100,gauge_units:void 0,gauge_width:void 0,donut_label_show:!0,donut_label_format:void 0,donut_label_threshold:.05,donut_width:void 0,donut_expand:!0,donut_title:"",regions:[],tooltip_show:!0,tooltip_grouped:!0,tooltip_format_title:void 0,tooltip_format_name:void 0,tooltip_format_value:void 0,tooltip_position:void 0,tooltip_contents:function(a,b,c,d){return this.getTooltipContent?this.getTooltipContent(a,b,c,d):""},tooltip_init_show:!1,tooltip_init_x:0,tooltip_init_position:{top:"0px",left:"50px"}};return Object.keys(this.additionalConfig).forEach(function(b){a[b]=this.additionalConfig[b]},this),a},i.additionalConfig={},i.loadConfig=function(a){function b(){var a=d.shift();return a&&c&&"object"==typeof c&&a in c?(c=c[a],b()):a?void 0:c}var c,d,e,f=this.config;Object.keys(f).forEach(function(g){c=a,d=g.split("_"),e=b(),q(e)&&(f[g]=e)})},i.getScale=function(a,b,c){return(c?this.d3.time.scale():this.d3.scale.linear()).range([a,b])},i.getX=function(a,b,c,d){var e,f=this,g=f.getScale(a,b,f.isTimeSeries()),h=c?g.domain(c):g;f.isCategorized()?(d=d||function(){return 0},g=function(a,b){var c=h(a)+d(a);return b?c:Math.ceil(c)}):g=function(a,b){var c=h(a);return b?c:Math.ceil(c)};for(e in h)g[e]=h[e];return g.orgDomain=function(){return h.domain()},f.isCategorized()&&(g.domain=function(a){return arguments.length?(h.domain(a),g):(a=this.orgDomain(),[a[0],a[1]+1])}),g},i.getY=function(a,b,c){var d=this.getScale(a,b,this.isTimeSeriesY());return c&&d.domain(c),d},i.getYScale=function(a){return"y2"===this.axis.getId(a)?this.y2:this.y},i.getSubYScale=function(a){return"y2"===this.axis.getId(a)?this.subY2:this.subY},i.updateScales=function(){var a=this,b=a.config,c=!a.x;a.xMin=b.axis_rotated?1:0,a.xMax=b.axis_rotated?a.height:a.width,a.yMin=b.axis_rotated?0:a.height,a.yMax=b.axis_rotated?a.width:1,a.subXMin=a.xMin,a.subXMax=a.xMax,a.subYMin=b.axis_rotated?0:a.height2,a.subYMax=b.axis_rotated?a.width2:1,a.x=a.getX(a.xMin,a.xMax,c?void 0:a.x.orgDomain(),function(){return a.xAxis.tickOffset()}),a.y=a.getY(a.yMin,a.yMax,c?b.axis_y_default:a.y.domain()),a.y2=a.getY(a.yMin,a.yMax,c?b.axis_y2_default:a.y2.domain()),a.subX=a.getX(a.xMin,a.xMax,a.orgXDomain,function(b){return b%1?0:a.subXAxis.tickOffset()}),a.subY=a.getY(a.subYMin,a.subYMax,c?b.axis_y_default:a.subY.domain()),a.subY2=a.getY(a.subYMin,a.subYMax,c?b.axis_y2_default:a.subY2.domain()),a.xAxisTickFormat=a.axis.getXAxisTickFormat(),a.xAxisTickValues=a.axis.getXAxisTickValues(),a.yAxisTickValues=a.axis.getYAxisTickValues(),a.y2AxisTickValues=a.axis.getY2AxisTickValues(),a.xAxis=a.axis.getXAxis(a.x,a.xOrient,a.xAxisTickFormat,a.xAxisTickValues,b.axis_x_tick_outer),a.subXAxis=a.axis.getXAxis(a.subX,a.subXOrient,a.xAxisTickFormat,a.xAxisTickValues,b.axis_x_tick_outer),a.yAxis=a.axis.getYAxis(a.y,a.yOrient,b.axis_y_tick_format,a.yAxisTickValues,b.axis_y_tick_outer),a.y2Axis=a.axis.getYAxis(a.y2,a.y2Orient,b.axis_y2_tick_format,a.y2AxisTickValues,b.axis_y2_tick_outer),c||(a.brush&&a.brush.scale(a.subX),b.zoom_enabled&&a.zoom.scale(a.x)),a.updateArc&&a.updateArc()},i.getYDomainMin=function(a){var b,c,d,e,f,g,h=this,i=h.config,j=h.mapToIds(a),k=h.getValuesAsIdKeyed(a);if(i.data_groups.length>0)for(g=h.hasNegativeValueInTargets(a),b=0;b<i.data_groups.length;b++)if(e=i.data_groups[b].filter(function(a){return j.indexOf(a)>=0}),0!==e.length)for(d=e[0],g&&k[d]&&k[d].forEach(function(a,b){k[d][b]=0>a?a:0}),c=1;c<e.length;c++)f=e[c],k[f]&&k[f].forEach(function(a,b){h.axis.getId(f)!==h.axis.getId(d)||!k[d]||g&&+a>0||(k[d][b]+=+a)});return h.d3.min(Object.keys(k).map(function(a){return h.d3.min(k[a])}))},i.getYDomainMax=function(a){var b,c,d,e,f,g,h=this,i=h.config,j=h.mapToIds(a),k=h.getValuesAsIdKeyed(a);if(i.data_groups.length>0)for(g=h.hasPositiveValueInTargets(a),b=0;b<i.data_groups.length;b++)if(e=i.data_groups[b].filter(function(a){return j.indexOf(a)>=0}),0!==e.length)for(d=e[0],g&&k[d]&&k[d].forEach(function(a,b){k[d][b]=a>0?a:0}),c=1;c<e.length;c++)f=e[c],k[f]&&k[f].forEach(function(a,b){h.axis.getId(f)!==h.axis.getId(d)||!k[d]||g&&0>+a||(k[d][b]+=+a)});return h.d3.max(Object.keys(k).map(function(a){return h.d3.max(k[a])}))},i.getYDomain=function(a,b,c){var d,e,f,g,h,i,j,k,l,n,o,p=this,q=p.config,r=a.filter(function(a){return p.axis.getId(a.id)===b}),s=c?p.filterByXDomain(r,c):r,u="y2"===b?q.axis_y2_min:q.axis_y_min,w="y2"===b?q.axis_y2_max:q.axis_y_max,x=p.getYDomainMin(s),y=p.getYDomainMax(s),z="y2"===b?q.axis_y2_center:q.axis_y_center,A=p.hasType("bar",s)&&q.bar_zerobased||p.hasType("area",s)&&q.area_zerobased,B="y2"===b?q.axis_y2_inverted:q.axis_y_inverted,C=p.hasDataLabel()&&q.axis_rotated,D=p.hasDataLabel()&&!q.axis_rotated;return x=m(u)?u:m(w)?w>x?x:w-10:x,y=m(w)?w:m(u)?y>u?y:u+10:y,0===s.length?"y2"===b?p.y2.domain():p.y.domain():(isNaN(x)&&(x=0),isNaN(y)&&(y=x),x===y&&(0>x?y=0:x=0),n=x>=0&&y>=0,o=0>=x&&0>=y,(m(u)&&n||m(w)&&o)&&(A=!1),A&&(n&&(x=0),o&&(y=0)),e=Math.abs(y-x),f=g=h=.1*e,"undefined"!=typeof z&&(i=Math.max(Math.abs(x),Math.abs(y)),y=z+i,x=z-i),C?(j=p.getDataLabelLength(x,y,"width"),k=t(p.y.range()),l=[j[0]/k,j[1]/k],g+=e*(l[1]/(1-l[0]-l[1])),h+=e*(l[0]/(1-l[0]-l[1]))):D&&(j=p.getDataLabelLength(x,y,"height"),g+=p.axis.convertPixelsToAxisPadding(j[1],e),h+=p.axis.convertPixelsToAxisPadding(j[0],e)),"y"===b&&v(q.axis_y_padding)&&(g=p.axis.getPadding(q.axis_y_padding,"top",g,e),h=p.axis.getPadding(q.axis_y_padding,"bottom",h,e)),"y2"===b&&v(q.axis_y2_padding)&&(g=p.axis.getPadding(q.axis_y2_padding,"top",g,e),h=p.axis.getPadding(q.axis_y2_padding,"bottom",h,e)),A&&(n&&(h=x),o&&(g=-y)),d=[x-h,y+g],B?d.reverse():d)},i.getXDomainMin=function(a){var b=this,c=b.config;return q(c.axis_x_min)?b.isTimeSeries()?this.parseDate(c.axis_x_min):c.axis_x_min:b.d3.min(a,function(a){return b.d3.min(a.values,function(a){return a.x})})},i.getXDomainMax=function(a){var b=this,c=b.config;return q(c.axis_x_max)?b.isTimeSeries()?this.parseDate(c.axis_x_max):c.axis_x_max:b.d3.max(a,function(a){return b.d3.max(a.values,function(a){return a.x})})},i.getXDomainPadding=function(a){var b,c,d,e,f=this,g=f.config,h=a[1]-a[0];return f.isCategorized()?c=0:f.hasType("bar")?(b=f.getMaxDataCount(),c=b>1?h/(b-1)/2:.5):c=.01*h,"object"==typeof g.axis_x_padding&&v(g.axis_x_padding)?(d=m(g.axis_x_padding.left)?g.axis_x_padding.left:c,e=m(g.axis_x_padding.right)?g.axis_x_padding.right:c):d=e="number"==typeof g.axis_x_padding?g.axis_x_padding:c,{left:d,right:e}},i.getXDomain=function(a){var b=this,c=[b.getXDomainMin(a),b.getXDomainMax(a)],d=c[0],e=c[1],f=b.getXDomainPadding(c),g=0,h=0;
	return d-e!==0||b.isCategorized()||(b.isTimeSeries()?(d=new Date(.5*d.getTime()),e=new Date(1.5*e.getTime())):(d=0===d?1:.5*d,e=0===e?-1:1.5*e)),(d||0===d)&&(g=b.isTimeSeries()?new Date(d.getTime()-f.left):d-f.left),(e||0===e)&&(h=b.isTimeSeries()?new Date(e.getTime()+f.right):e+f.right),[g,h]},i.updateXDomain=function(a,b,c,d,e){var f=this,g=f.config;return c&&(f.x.domain(e?e:f.d3.extent(f.getXDomain(a))),f.orgXDomain=f.x.domain(),g.zoom_enabled&&f.zoom.scale(f.x).updateScaleExtent(),f.subX.domain(f.x.domain()),f.brush&&f.brush.scale(f.subX)),b&&(f.x.domain(e?e:!f.brush||f.brush.empty()?f.orgXDomain:f.brush.extent()),g.zoom_enabled&&f.zoom.scale(f.x).updateScaleExtent()),d&&f.x.domain(f.trimXDomain(f.x.orgDomain())),f.x.domain()},i.trimXDomain=function(a){var b=this;return a[0]<=b.orgXDomain[0]&&(a[1]=+a[1]+(b.orgXDomain[0]-a[0]),a[0]=b.orgXDomain[0]),b.orgXDomain[1]<=a[1]&&(a[0]=+a[0]-(a[1]-b.orgXDomain[1]),a[1]=b.orgXDomain[1]),a},i.isX=function(a){var b=this,c=b.config;return c.data_x&&a===c.data_x||v(c.data_xs)&&x(c.data_xs,a)},i.isNotX=function(a){return!this.isX(a)},i.getXKey=function(a){var b=this,c=b.config;return c.data_x?c.data_x:v(c.data_xs)?c.data_xs[a]:null},i.getXValuesOfXKey=function(a,b){var c,d=this,e=b&&v(b)?d.mapToIds(b):[];return e.forEach(function(b){d.getXKey(b)===a&&(c=d.data.xs[b])}),c},i.getIndexByX=function(a){var b=this,c=b.filterByX(b.data.targets,a);return c.length?c[0].index:null},i.getXValue=function(a,b){var c=this;return a in c.data.xs&&c.data.xs[a]&&m(c.data.xs[a][b])?c.data.xs[a][b]:b},i.getOtherTargetXs=function(){var a=this,b=Object.keys(a.data.xs);return b.length?a.data.xs[b[0]]:null},i.getOtherTargetX=function(a){var b=this.getOtherTargetXs();return b&&a<b.length?b[a]:null},i.addXs=function(a){var b=this;Object.keys(a).forEach(function(c){b.config.data_xs[c]=a[c]})},i.hasMultipleX=function(a){return this.d3.set(Object.keys(a).map(function(b){return a[b]})).size()>1},i.isMultipleX=function(){return v(this.config.data_xs)||!this.config.data_xSort||this.hasType("scatter")},i.addName=function(a){var b,c=this;return a&&(b=c.config.data_names[a.id],a.name=b?b:a.id),a},i.getValueOnIndex=function(a,b){var c=a.filter(function(a){return a.index===b});return c.length?c[0]:null},i.updateTargetX=function(a,b){var c=this;a.forEach(function(a){a.values.forEach(function(d,e){d.x=c.generateTargetX(b[e],a.id,e)}),c.data.xs[a.id]=b})},i.updateTargetXs=function(a,b){var c=this;a.forEach(function(a){b[a.id]&&c.updateTargetX([a],b[a.id])})},i.generateTargetX=function(a,b,c){var d,e=this;return d=e.isTimeSeries()?e.parseDate(a?a:e.getXValue(b,c)):e.isCustomX()&&!e.isCategorized()?m(a)?+a:e.getXValue(b,c):c},i.cloneTarget=function(a){return{id:a.id,id_org:a.id_org,values:a.values.map(function(a){return{x:a.x,value:a.value,id:a.id}})}},i.updateXs=function(){var a=this;a.data.targets.length&&(a.xs=[],a.data.targets[0].values.forEach(function(b){a.xs[b.index]=b.x}))},i.getPrevX=function(a){var b=this.xs[a-1];return"undefined"!=typeof b?b:null},i.getNextX=function(a){var b=this.xs[a+1];return"undefined"!=typeof b?b:null},i.getMaxDataCount=function(){var a=this;return a.d3.max(a.data.targets,function(a){return a.values.length})},i.getMaxDataCountTarget=function(a){var b,c=a.length,d=0;return c>1?a.forEach(function(a){a.values.length>d&&(b=a,d=a.values.length)}):b=c?a[0]:null,b},i.getEdgeX=function(a){var b=this;return a.length?[b.d3.min(a,function(a){return a.values[0].x}),b.d3.max(a,function(a){return a.values[a.values.length-1].x})]:[0,0]},i.mapToIds=function(a){return a.map(function(a){return a.id})},i.mapToTargetIds=function(a){var b=this;return a?o(a)?[a]:a:b.mapToIds(b.data.targets)},i.hasTarget=function(a,b){var c,d=this.mapToIds(a);for(c=0;c<d.length;c++)if(d[c]===b)return!0;return!1},i.isTargetToShow=function(a){return this.hiddenTargetIds.indexOf(a)<0},i.isLegendToShow=function(a){return this.hiddenLegendIds.indexOf(a)<0},i.filterTargetsToShow=function(a){var b=this;return a.filter(function(a){return b.isTargetToShow(a.id)})},i.mapTargetsToUniqueXs=function(a){var b=this,c=b.d3.set(b.d3.merge(a.map(function(a){return a.values.map(function(a){return+a.x})}))).values();return c.map(b.isTimeSeries()?function(a){return new Date(+a)}:function(a){return+a})},i.addHiddenTargetIds=function(a){this.hiddenTargetIds=this.hiddenTargetIds.concat(a)},i.removeHiddenTargetIds=function(a){this.hiddenTargetIds=this.hiddenTargetIds.filter(function(b){return a.indexOf(b)<0})},i.addHiddenLegendIds=function(a){this.hiddenLegendIds=this.hiddenLegendIds.concat(a)},i.removeHiddenLegendIds=function(a){this.hiddenLegendIds=this.hiddenLegendIds.filter(function(b){return a.indexOf(b)<0})},i.getValuesAsIdKeyed=function(a){var b={};return a.forEach(function(a){b[a.id]=[],a.values.forEach(function(c){b[a.id].push(c.value)})}),b},i.checkValueInTargets=function(a,b){var c,d,e,f=Object.keys(a);for(c=0;c<f.length;c++)for(e=a[f[c]].values,d=0;d<e.length;d++)if(b(e[d].value))return!0;return!1},i.hasNegativeValueInTargets=function(a){return this.checkValueInTargets(a,function(a){return 0>a})},i.hasPositiveValueInTargets=function(a){return this.checkValueInTargets(a,function(a){return a>0})},i.isOrderDesc=function(){var a=this.config;return"string"==typeof a.data_order&&"desc"===a.data_order.toLowerCase()},i.isOrderAsc=function(){var a=this.config;return"string"==typeof a.data_order&&"asc"===a.data_order.toLowerCase()},i.orderTargets=function(a){var b=this,c=b.config,d=b.isOrderAsc(),e=b.isOrderDesc();return d||e?a.sort(function(a,b){var c=function(a,b){return a+Math.abs(b.value)},e=a.values.reduce(c,0),f=b.values.reduce(c,0);return d?f-e:e-f}):n(c.data_order)&&a.sort(c.data_order),a},i.filterByX=function(a,b){return this.d3.merge(a.map(function(a){return a.values})).filter(function(a){return a.x-b===0})},i.filterRemoveNull=function(a){return a.filter(function(a){return m(a.value)})},i.filterByXDomain=function(a,b){return a.map(function(a){return{id:a.id,id_org:a.id_org,values:a.values.filter(function(a){return b[0]<=a.x&&a.x<=b[1]})}})},i.hasDataLabel=function(){var a=this.config;return"boolean"==typeof a.data_labels&&a.data_labels?!0:"object"==typeof a.data_labels&&v(a.data_labels)?!0:!1},i.getDataLabelLength=function(a,b,c){var d=this,e=[0,0],f=1.3;return d.selectChart.select("svg").selectAll(".dummy").data([a,b]).enter().append("text").text(function(a){return d.dataLabelFormat(a.id)(a)}).each(function(a,b){e[b]=this.getBoundingClientRect()[c]*f}).remove(),e},i.isNoneArc=function(a){return this.hasTarget(this.data.targets,a.id)},i.isArc=function(a){return"data"in a&&this.hasTarget(this.data.targets,a.data.id)},i.findSameXOfValues=function(a,b){var c,d=a[b].x,e=[];for(c=b-1;c>=0&&d===a[c].x;c--)e.push(a[c]);for(c=b;c<a.length&&d===a[c].x;c++)e.push(a[c]);return e},i.findClosestFromTargets=function(a,b){var c,d=this;return c=a.map(function(a){return d.findClosest(a.values,b)}),d.findClosest(c,b)},i.findClosest=function(a,b){var c,d=this,e=100;return a.filter(function(a){return a&&d.isBarType(a.id)}).forEach(function(a){var b=d.main.select("."+l.bars+d.getTargetSelectorSuffix(a.id)+" ."+l.bar+"-"+a.index).node();!c&&d.isWithinBar(b)&&(c=a)}),a.filter(function(a){return a&&!d.isBarType(a.id)}).forEach(function(a){var f=d.dist(a,b);e>f&&(e=f,c=a)}),c},i.dist=function(a,b){var c=this,d=c.config,e=d.axis_rotated?1:0,f=d.axis_rotated?0:1,g=c.circleY(a,a.index),h=c.x(a.x);return Math.pow(h-b[e],2)+Math.pow(g-b[f],2)},i.convertValuesToStep=function(a){var b,c=[].concat(a);if(!this.isCategorized())return a;for(b=a.length+1;b>0;b--)c[b]=c[b-1];return c[0]={x:c[0].x-1,value:c[0].value,id:c[0].id},c[a.length+1]={x:c[a.length].x+1,value:c[a.length].value,id:c[a.length].id},c},i.updateDataAttributes=function(a,b){var c=this,d=c.config,e=d["data_"+a];return"undefined"==typeof b?e:(Object.keys(b).forEach(function(a){e[a]=b[a]}),c.redraw({withLegend:!0}),e)},i.convertUrlToData=function(a,b,c,d){var e=this,f=b?b:"csv";e.d3.xhr(a,function(a,b){var g;if(!b)throw new Error(a.responseURL+" "+a.status+" ("+a.statusText+")");g="json"===f?e.convertJsonToData(JSON.parse(b.response),c):"tsv"===f?e.convertTsvToData(b.response):e.convertCsvToData(b.response),d.call(e,g)})},i.convertXsvToData=function(a,b){var c,d=b.parseRows(a);return 1===d.length?(c=[{}],d[0].forEach(function(a){c[0][a]=null})):c=b.parse(a),c},i.convertCsvToData=function(a){return this.convertXsvToData(a,this.d3.csv)},i.convertTsvToData=function(a){return this.convertXsvToData(a,this.d3.tsv)},i.convertJsonToData=function(a,b){var c,d,e=this,f=[];return b?(b.x?(c=b.value.concat(b.x),e.config.data_x=b.x):c=b.value,f.push(c),a.forEach(function(a){var b=[];c.forEach(function(c){var d=p(a[c])?null:a[c];b.push(d)}),f.push(b)}),d=e.convertRowsToData(f)):(Object.keys(a).forEach(function(b){f.push([b].concat(a[b]))}),d=e.convertColumnsToData(f)),d},i.convertRowsToData=function(a){var b,c,d=a[0],e={},f=[];for(b=1;b<a.length;b++){for(e={},c=0;c<a[b].length;c++){if(p(a[b][c]))throw new Error("Source data is missing a component at ("+b+","+c+")!");e[d[c]]=a[b][c]}f.push(e)}return f},i.convertColumnsToData=function(a){var b,c,d,e=[];for(b=0;b<a.length;b++)for(d=a[b][0],c=1;c<a[b].length;c++){if(p(e[c-1])&&(e[c-1]={}),p(a[b][c]))throw new Error("Source data is missing a component at ("+b+","+c+")!");e[c-1][d]=a[b][c]}return e},i.convertDataToTargets=function(a,b){var c,d=this,e=d.config,f=d.d3.keys(a[0]).filter(d.isNotX,d),g=d.d3.keys(a[0]).filter(d.isX,d);return f.forEach(function(c){var f=d.getXKey(c);d.isCustomX()||d.isTimeSeries()?g.indexOf(f)>=0?d.data.xs[c]=(b&&d.data.xs[c]?d.data.xs[c]:[]).concat(a.map(function(a){return a[f]}).filter(m).map(function(a,b){return d.generateTargetX(a,c,b)})):e.data_x?d.data.xs[c]=d.getOtherTargetXs():v(e.data_xs)&&(d.data.xs[c]=d.getXValuesOfXKey(f,d.data.targets)):d.data.xs[c]=a.map(function(a,b){return b})}),f.forEach(function(a){if(!d.data.xs[a])throw new Error('x is not defined for id = "'+a+'".')}),c=f.map(function(b,c){var f=e.data_idConverter(b);return{id:f,id_org:b,values:a.map(function(a,g){var h=d.getXKey(b),i=a[h],j=d.generateTargetX(i,b,g);return d.isCustomX()&&d.isCategorized()&&0===c&&i&&(0===g&&(e.axis_x_categories=[]),e.axis_x_categories.push(i)),(p(a[b])||d.data.xs[b].length<=g)&&(j=void 0),{x:j,value:null===a[b]||isNaN(a[b])?null:+a[b],id:f}}).filter(function(a){return q(a.x)})}}),c.forEach(function(a){var b;e.data_xSort&&(a.values=a.values.sort(function(a,b){var c=a.x||0===a.x?a.x:1/0,d=b.x||0===b.x?b.x:1/0;return c-d})),b=0,a.values.forEach(function(a){a.index=b++}),d.data.xs[a.id].sort(function(a,b){return a-b})}),e.data_type&&d.setTargetType(d.mapToIds(c).filter(function(a){return!(a in e.data_types)}),e.data_type),c.forEach(function(a){d.addCache(a.id_org,a)}),c},i.load=function(a,b){var c=this;a&&(b.filter&&(a=a.filter(b.filter)),(b.type||b.types)&&a.forEach(function(a){var d=b.types&&b.types[a.id]?b.types[a.id]:b.type;c.setTargetType(a.id,d)}),c.data.targets.forEach(function(b){for(var c=0;c<a.length;c++)if(b.id===a[c].id){b.values=a[c].values,a.splice(c,1);break}}),c.data.targets=c.data.targets.concat(a)),c.updateTargets(c.data.targets),c.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0}),b.done&&b.done()},i.loadFromArgs=function(a){var b=this;a.data?b.load(b.convertDataToTargets(a.data),a):a.url?b.convertUrlToData(a.url,a.mimeType,a.keys,function(c){b.load(b.convertDataToTargets(c),a)}):a.json?b.load(b.convertDataToTargets(b.convertJsonToData(a.json,a.keys)),a):a.rows?b.load(b.convertDataToTargets(b.convertRowsToData(a.rows)),a):a.columns?b.load(b.convertDataToTargets(b.convertColumnsToData(a.columns)),a):b.load(null,a)},i.unload=function(a,b){var c=this;return b||(b=function(){}),a=a.filter(function(a){return c.hasTarget(c.data.targets,a)}),a&&0!==a.length?(c.svg.selectAll(a.map(function(a){return c.selectorTarget(a)})).transition().style("opacity",0).remove().call(c.endall,b),void a.forEach(function(a){c.withoutFadeIn[a]=!1,c.legend&&c.legend.selectAll("."+l.legendItem+c.getTargetSelectorSuffix(a)).remove(),c.data.targets=c.data.targets.filter(function(b){return b.id!==a})})):void b()},i.categoryName=function(a){var b=this.config;return a<b.axis_x_categories.length?b.axis_x_categories[a]:a},i.initEventRect=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.eventRects).style("fill-opacity",0)},i.redrawEventRect=function(){var a,b,c=this,d=c.config,e=c.isMultipleX(),f=c.main.select("."+l.eventRects).style("cursor",d.zoom_enabled?d.axis_rotated?"ns-resize":"ew-resize":null).classed(l.eventRectsMultiple,e).classed(l.eventRectsSingle,!e);f.selectAll("."+l.eventRect).remove(),c.eventRect=f.selectAll("."+l.eventRect),e?(a=c.eventRect.data([0]),c.generateEventRectsForMultipleXs(a.enter()),c.updateEventRect(a)):(b=c.getMaxDataCountTarget(c.data.targets),f.datum(b?b.values:[]),c.eventRect=f.selectAll("."+l.eventRect),a=c.eventRect.data(function(a){return a}),c.generateEventRectsForSingleX(a.enter()),c.updateEventRect(a),a.exit().remove())},i.updateEventRect=function(a){var b,c,d,e,f,g,h=this,i=h.config;a=a||h.eventRect.data(function(a){return a}),h.isMultipleX()?(b=0,c=0,d=h.width,e=h.height):(!h.isCustomX()&&!h.isTimeSeries()||h.isCategorized()?(f=h.getEventRectWidth(),g=function(a){return h.x(a.x)-f/2}):(h.updateXs(),f=function(a){var b=h.getPrevX(a.index),c=h.getNextX(a.index);return null===b&&null===c?i.axis_rotated?h.height:h.width:(null===b&&(b=h.x.domain()[0]),null===c&&(c=h.x.domain()[1]),Math.max(0,(h.x(c)-h.x(b))/2))},g=function(a){var b=h.getPrevX(a.index),c=h.getNextX(a.index),d=h.data.xs[a.id][a.index];return null===b&&null===c?0:(null===b&&(b=h.x.domain()[0]),(h.x(d)+h.x(b))/2)}),b=i.axis_rotated?0:g,c=i.axis_rotated?g:0,d=i.axis_rotated?h.width:f,e=i.axis_rotated?f:h.height),a.attr("class",h.classEvent.bind(h)).attr("x",b).attr("y",c).attr("width",d).attr("height",e)},i.generateEventRectsForSingleX=function(a){var b=this,c=b.d3,d=b.config;a.append("rect").attr("class",b.classEvent.bind(b)).style("cursor",d.data_selection_enabled&&d.data_selection_grouped?"pointer":null).on("mouseover",function(a){var c=a.index;b.dragging||b.flowing||b.hasArcType()||(d.point_focus_expand_enabled&&b.expandCircles(c,null,!0),b.expandBars(c,null,!0),b.main.selectAll("."+l.shape+"-"+c).each(function(a){d.data_onmouseover.call(b.api,a)}))}).on("mouseout",function(a){var c=a.index;b.config&&(b.hasArcType()||(b.hideXGridFocus(),b.hideTooltip(),b.unexpandCircles(),b.unexpandBars(),b.main.selectAll("."+l.shape+"-"+c).each(function(a){d.data_onmouseout.call(b.api,a)})))}).on("mousemove",function(a){var e,f=a.index,g=b.svg.select("."+l.eventRect+"-"+f);b.dragging||b.flowing||b.hasArcType()||(b.isStepType(a)&&"step-after"===b.config.line_step_type&&c.mouse(this)[0]<b.x(b.getXValue(a.id,f))&&(f-=1),e=b.filterTargetsToShow(b.data.targets).map(function(a){return b.addName(b.getValueOnIndex(a.values,f))}),d.tooltip_grouped&&(b.showTooltip(e,this),b.showXGridFocus(e)),(!d.tooltip_grouped||d.data_selection_enabled&&!d.data_selection_grouped)&&b.main.selectAll("."+l.shape+"-"+f).each(function(){c.select(this).classed(l.EXPANDED,!0),d.data_selection_enabled&&g.style("cursor",d.data_selection_grouped?"pointer":null),d.tooltip_grouped||(b.hideXGridFocus(),b.hideTooltip(),d.data_selection_grouped||(b.unexpandCircles(f),b.unexpandBars(f)))}).filter(function(a){return b.isWithinShape(this,a)}).each(function(a){d.data_selection_enabled&&(d.data_selection_grouped||d.data_selection_isselectable(a))&&g.style("cursor","pointer"),d.tooltip_grouped||(b.showTooltip([a],this),b.showXGridFocus([a]),d.point_focus_expand_enabled&&b.expandCircles(f,a.id,!0),b.expandBars(f,a.id,!0))}))}).on("click",function(a){var e=a.index;if(!b.hasArcType()&&b.toggleShape){if(b.cancelClick)return void(b.cancelClick=!1);b.isStepType(a)&&"step-after"===d.line_step_type&&c.mouse(this)[0]<b.x(b.getXValue(a.id,e))&&(e-=1),b.main.selectAll("."+l.shape+"-"+e).each(function(a){(d.data_selection_grouped||b.isWithinShape(this,a))&&(b.toggleShape(this,a,e),b.config.data_onclick.call(b.api,a,this))})}}).call(d.data_selection_draggable&&b.drag?c.behavior.drag().origin(Object).on("drag",function(){b.drag(c.mouse(this))}).on("dragstart",function(){b.dragstart(c.mouse(this))}).on("dragend",function(){b.dragend()}):function(){})},i.generateEventRectsForMultipleXs=function(a){function b(){c.svg.select("."+l.eventRect).style("cursor",null),c.hideXGridFocus(),c.hideTooltip(),c.unexpandCircles(),c.unexpandBars()}var c=this,d=c.d3,e=c.config;a.append("rect").attr("x",0).attr("y",0).attr("width",c.width).attr("height",c.height).attr("class",l.eventRect).on("mouseout",function(){c.config&&(c.hasArcType()||b())}).on("mousemove",function(){var a,f,g,h,i=c.filterTargetsToShow(c.data.targets);if(!c.dragging&&!c.hasArcType(i)){if(a=d.mouse(this),f=c.findClosestFromTargets(i,a),!c.mouseover||f&&f.id===c.mouseover.id||(e.data_onmouseout.call(c.api,c.mouseover),c.mouseover=void 0),!f)return void b();g=c.isScatterType(f)||!e.tooltip_grouped?[f]:c.filterByX(i,f.x),h=g.map(function(a){return c.addName(a)}),c.showTooltip(h,this),e.point_focus_expand_enabled&&c.expandCircles(f.index,f.id,!0),c.expandBars(f.index,f.id,!0),c.showXGridFocus(h),(c.isBarType(f.id)||c.dist(f,a)<100)&&(c.svg.select("."+l.eventRect).style("cursor","pointer"),c.mouseover||(e.data_onmouseover.call(c.api,f),c.mouseover=f))}}).on("click",function(){var a,b,f=c.filterTargetsToShow(c.data.targets);c.hasArcType(f)||(a=d.mouse(this),b=c.findClosestFromTargets(f,a),b&&(c.isBarType(b.id)||c.dist(b,a)<100)&&c.main.selectAll("."+l.shapes+c.getTargetSelectorSuffix(b.id)).selectAll("."+l.shape+"-"+b.index).each(function(){(e.data_selection_grouped||c.isWithinShape(this,b))&&(c.toggleShape(this,b,b.index),c.config.data_onclick.call(c.api,b,this))}))}).call(e.data_selection_draggable&&c.drag?d.behavior.drag().origin(Object).on("drag",function(){c.drag(d.mouse(this))}).on("dragstart",function(){c.dragstart(d.mouse(this))}).on("dragend",function(){c.dragend()}):function(){})},i.dispatchEvent=function(b,c,d){var e=this,f="."+l.eventRect+(e.isMultipleX()?"":"-"+c),g=e.main.select(f).node(),h=g.getBoundingClientRect(),i=h.left+(d?d[0]:0),j=h.top+(d?d[1]:0),k=document.createEvent("MouseEvents");k.initMouseEvent(b,!0,!0,a,0,i,j,i,j,!1,!1,!1,!1,0,null),g.dispatchEvent(k)},i.getCurrentWidth=function(){var a=this,b=a.config;return b.size_width?b.size_width:a.getParentWidth()},i.getCurrentHeight=function(){var a=this,b=a.config,c=b.size_height?b.size_height:a.getParentHeight();return c>0?c:320/(a.hasType("gauge")?2:1)},i.getCurrentPaddingTop=function(){var a=this.config;return m(a.padding_top)?a.padding_top:0},i.getCurrentPaddingBottom=function(){var a=this.config;return m(a.padding_bottom)?a.padding_bottom:0},i.getCurrentPaddingLeft=function(a){var b=this,c=b.config;return m(c.padding_left)?c.padding_left:c.axis_rotated?c.axis_x_show?Math.max(r(b.getAxisWidthByAxisId("x",a)),40):1:!c.axis_y_show||c.axis_y_inner?b.axis.getYAxisLabelPosition().isOuter?30:1:r(b.getAxisWidthByAxisId("y",a))},i.getCurrentPaddingRight=function(){var a=this,b=a.config,c=10,d=a.isLegendRight?a.getLegendWidth()+20:0;return m(b.padding_right)?b.padding_right+1:b.axis_rotated?c+d:!b.axis_y2_show||b.axis_y2_inner?2+d+(a.axis.getY2AxisLabelPosition().isOuter?20:0):r(a.getAxisWidthByAxisId("y2"))+d},i.getParentRectValue=function(a){for(var b,c=this.selectChart.node();c&&"BODY"!==c.tagName;){try{b=c.getBoundingClientRect()[a]}catch(d){"width"===a&&(b=c.offsetWidth)}if(b)break;c=c.parentNode}return b},i.getParentWidth=function(){return this.getParentRectValue("width")},i.getParentHeight=function(){var a=this.selectChart.style("height");return a.indexOf("px")>0?+a.replace("px",""):0},i.getSvgLeft=function(a){var b=this,c=b.config,d=c.axis_rotated||!c.axis_rotated&&!c.axis_y_inner,e=c.axis_rotated?l.axisX:l.axisY,f=b.main.select("."+e).node(),g=f&&d?f.getBoundingClientRect():{right:0},h=b.selectChart.node().getBoundingClientRect(),i=b.hasArcType(),j=g.right-h.left-(i?0:b.getCurrentPaddingLeft(a));return j>0?j:0},i.getAxisWidthByAxisId=function(a,b){var c=this,d=c.axis.getLabelPositionById(a);return c.axis.getMaxTickWidth(a,b)+(d.isInner?20:40)},i.getHorizontalAxisHeight=function(a){var b=this,c=b.config,d=30;return"x"!==a||c.axis_x_show?"x"===a&&c.axis_x_height?c.axis_x_height:"y"!==a||c.axis_y_show?"y2"!==a||c.axis_y2_show?("x"===a&&!c.axis_rotated&&c.axis_x_tick_rotate&&(d=30+b.axis.getMaxTickWidth(a)*Math.cos(Math.PI*(90-c.axis_x_tick_rotate)/180)),d+(b.axis.getLabelPositionById(a).isInner?0:10)+("y2"===a?-10:0)):b.rotated_padding_top:!c.legend_show||b.isLegendRight||b.isLegendInset?1:10:8},i.getEventRectWidth=function(){return Math.max(0,this.xAxis.tickInterval())},i.getShapeIndices=function(a){var b,c,d=this,e=d.config,f={},g=0;return d.filterTargetsToShow(d.data.targets.filter(a,d)).forEach(function(a){for(b=0;b<e.data_groups.length;b++)if(!(e.data_groups[b].indexOf(a.id)<0))for(c=0;c<e.data_groups[b].length;c++)if(e.data_groups[b][c]in f){f[a.id]=f[e.data_groups[b][c]];break}p(f[a.id])&&(f[a.id]=g++)}),f.__max__=g-1,f},i.getShapeX=function(a,b,c,d){var e=this,f=d?e.subX:e.x;return function(d){var e=d.id in c?c[d.id]:0;return d.x||0===d.x?f(d.x)-a*(b/2-e):0}},i.getShapeY=function(a){var b=this;return function(c){var d=a?b.getSubYScale(c.id):b.getYScale(c.id);return d(c.value)}},i.getShapeOffset=function(a,b,c){var d=this,e=d.orderTargets(d.filterTargetsToShow(d.data.targets.filter(a,d))),f=e.map(function(a){return a.id});return function(a,g){var h=c?d.getSubYScale(a.id):d.getYScale(a.id),i=h(0),j=i;return e.forEach(function(c){var e=d.isStepType(a)?d.convertValuesToStep(c.values):c.values;c.id!==a.id&&b[c.id]===b[a.id]&&f.indexOf(c.id)<f.indexOf(a.id)&&e[g].value*a.value>=0&&(j+=h(e[g].value)-i)}),j}},i.isWithinShape=function(a,b){var c,d=this,e=d.d3.select(a);return d.isTargetToShow(b.id)?"circle"===a.nodeName?c=d.isStepType(b)?d.isWithinStep(a,d.getYScale(b.id)(b.value)):d.isWithinCircle(a,1.5*d.pointSelectR(b)):"path"===a.nodeName&&(c=e.classed(l.bar)?d.isWithinBar(a):!0):c=!1,c},i.getInterpolate=function(a){var b=this;return b.isSplineType(a)?"cardinal":b.isStepType(a)?b.config.line_step_type:"linear"},i.initLine=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartLines)},i.updateTargetsForLine=function(a){var b,c,d=this,e=d.config,f=d.classChartLine.bind(d),g=d.classLines.bind(d),h=d.classAreas.bind(d),i=d.classCircles.bind(d),j=d.classFocus.bind(d);b=d.main.select("."+l.chartLines).selectAll("."+l.chartLine).data(a).attr("class",function(a){return f(a)+j(a)}),c=b.enter().append("g").attr("class",f).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",g),c.append("g").attr("class",h),c.append("g").attr("class",function(a){return d.generateClass(l.selectedCircles,a.id)}),c.append("g").attr("class",i).style("cursor",function(a){return e.data_selection_isselectable(a)?"pointer":null}),a.forEach(function(a){d.main.selectAll("."+l.selectedCircles+d.getTargetSelectorSuffix(a.id)).selectAll("."+l.selectedCircle).each(function(b){b.value=a.values[b.index].value})})},i.updateLine=function(a){var b=this;b.mainLine=b.main.selectAll("."+l.lines).selectAll("."+l.line).data(b.lineData.bind(b)),b.mainLine.enter().append("path").attr("class",b.classLine.bind(b)).style("stroke",b.color),b.mainLine.style("opacity",b.initialOpacity.bind(b)).style("shape-rendering",function(a){return b.isStepType(a)?"crispEdges":""}).attr("transform",null),b.mainLine.exit().transition().duration(a).style("opacity",0).remove()},i.redrawLine=function(a,b){return[(b?this.mainLine.transition():this.mainLine).attr("d",a).style("stroke",this.color).style("opacity",1)]},i.generateDrawLine=function(a,b){var c=this,d=c.config,e=c.d3.svg.line(),f=c.generateGetLinePoints(a,b),g=b?c.getSubYScale:c.getYScale,h=function(a){return(b?c.subxx:c.xx).call(c,a)},i=function(a,b){return d.data_groups.length>0?f(a,b)[0][1]:g.call(c,a.id)(a.value)};return e=d.axis_rotated?e.x(i).y(h):e.x(h).y(i),d.line_connectNull||(e=e.defined(function(a){return null!=a.value})),function(a){var f,h=d.line_connectNull?c.filterRemoveNull(a.values):a.values,i=b?c.x:c.subX,j=g.call(c,a.id),k=0,l=0;return c.isLineType(a)?d.data_regions[a.id]?f=c.lineWithRegions(h,i,j,d.data_regions[a.id]):(c.isStepType(a)&&(h=c.convertValuesToStep(h)),f=e.interpolate(c.getInterpolate(a))(h)):(h[0]&&(k=i(h[0].x),l=j(h[0].value)),f=d.axis_rotated?"M "+l+" "+k:"M "+k+" "+l),f?f:"M 0 0"}},i.generateGetLinePoints=function(a,b){var c=this,d=c.config,e=a.__max__+1,f=c.getShapeX(0,e,a,!!b),g=c.getShapeY(!!b),h=c.getShapeOffset(c.isLineType,a,!!b),i=b?c.getSubYScale:c.getYScale;return function(a,b){var e=i.call(c,a.id)(0),j=h(a,b)||e,k=f(a),l=g(a);return d.axis_rotated&&(0<a.value&&e>l||a.value<0&&l>e)&&(l=e),[[k,l-(e-j)],[k,l-(e-j)],[k,l-(e-j)],[k,l-(e-j)]]}},i.lineWithRegions=function(a,b,c,d){function e(a,b){var c;for(c=0;c<b.length;c++)if(b[c].start<a&&a<=b[c].end)return!0;return!1}function f(a){return"M"+a[0][0]+" "+a[0][1]+" "+a[1][0]+" "+a[1][1]}var g,h,i,j,k,l,m,n,o,r,s,t,u=this,v=u.config,w=-1,x="M",y=u.isCategorized()?.5:0,z=[];if(q(d))for(g=0;g<d.length;g++)z[g]={},z[g].start=p(d[g].start)?a[0].x:u.isTimeSeries()?u.parseDate(d[g].start):d[g].start,z[g].end=p(d[g].end)?a[a.length-1].x:u.isTimeSeries()?u.parseDate(d[g].end):d[g].end;for(s=v.axis_rotated?function(a){return c(a.value)}:function(a){return b(a.x)},t=v.axis_rotated?function(a){return b(a.x)}:function(a){return c(a.value)},i=u.isTimeSeries()?function(a,d,e,g){var h,i=a.x.getTime(),j=d.x-a.x,l=new Date(i+j*e),m=new Date(i+j*(e+g));return h=v.axis_rotated?[[c(k(e)),b(l)],[c(k(e+g)),b(m)]]:[[b(l),c(k(e))],[b(m),c(k(e+g))]],f(h)}:function(a,d,e,g){var h;return h=v.axis_rotated?[[c(k(e),!0),b(j(e))],[c(k(e+g),!0),b(j(e+g))]]:[[b(j(e),!0),c(k(e))],[b(j(e+g),!0),c(k(e+g))]],f(h)},g=0;g<a.length;g++){if(p(z)||!e(a[g].x,z))x+=" "+s(a[g])+" "+t(a[g]);else for(j=u.getScale(a[g-1].x+y,a[g].x+y,u.isTimeSeries()),k=u.getScale(a[g-1].value,a[g].value),l=b(a[g].x)-b(a[g-1].x),m=c(a[g].value)-c(a[g-1].value),n=Math.sqrt(Math.pow(l,2)+Math.pow(m,2)),o=2/n,r=2*o,h=o;1>=h;h+=r)x+=i(a[g-1],a[g],h,o);w=a[g].x}return x},i.updateArea=function(a){var b=this,c=b.d3;b.mainArea=b.main.selectAll("."+l.areas).selectAll("."+l.area).data(b.lineData.bind(b)),b.mainArea.enter().append("path").attr("class",b.classArea.bind(b)).style("fill",b.color).style("opacity",function(){return b.orgAreaOpacity=+c.select(this).style("opacity"),0}),b.mainArea.style("opacity",b.orgAreaOpacity),b.mainArea.exit().transition().duration(a).style("opacity",0).remove()},i.redrawArea=function(a,b){return[(b?this.mainArea.transition():this.mainArea).attr("d",a).style("fill",this.color).style("opacity",this.orgAreaOpacity)]},i.generateDrawArea=function(a,b){var c=this,d=c.config,e=c.d3.svg.area(),f=c.generateGetAreaPoints(a,b),g=b?c.getSubYScale:c.getYScale,h=function(a){return(b?c.subxx:c.xx).call(c,a)},i=function(a,b){return d.data_groups.length>0?f(a,b)[0][1]:g.call(c,a.id)(c.getAreaBaseValue(a.id))},j=function(a,b){return d.data_groups.length>0?f(a,b)[1][1]:g.call(c,a.id)(a.value)};return e=d.axis_rotated?e.x0(i).x1(j).y(h):e.x(h).y0(i).y1(j),d.line_connectNull||(e=e.defined(function(a){return null!==a.value})),function(a){var b,f=d.line_connectNull?c.filterRemoveNull(a.values):a.values,g=0,h=0;return c.isAreaType(a)?(c.isStepType(a)&&(f=c.convertValuesToStep(f)),b=e.interpolate(c.getInterpolate(a))(f)):(f[0]&&(g=c.x(f[0].x),h=c.getYScale(a.id)(f[0].value)),b=d.axis_rotated?"M "+h+" "+g:"M "+g+" "+h),b?b:"M 0 0"}},i.getAreaBaseValue=function(){return 0},i.generateGetAreaPoints=function(a,b){var c=this,d=c.config,e=a.__max__+1,f=c.getShapeX(0,e,a,!!b),g=c.getShapeY(!!b),h=c.getShapeOffset(c.isAreaType,a,!!b),i=b?c.getSubYScale:c.getYScale;return function(a,b){var e=i.call(c,a.id)(0),j=h(a,b)||e,k=f(a),l=g(a);return d.axis_rotated&&(0<a.value&&e>l||a.value<0&&l>e)&&(l=e),[[k,j],[k,l-(e-j)],[k,l-(e-j)],[k,j]]}},i.updateCircle=function(){var a=this;a.mainCircle=a.main.selectAll("."+l.circles).selectAll("."+l.circle).data(a.lineOrScatterData.bind(a)),a.mainCircle.enter().append("circle").attr("class",a.classCircle.bind(a)).attr("r",a.pointR.bind(a)).style("fill",a.color),a.mainCircle.style("opacity",a.initialOpacityForCircle.bind(a)),a.mainCircle.exit().remove()},i.redrawCircle=function(a,b,c){var d=this.main.selectAll("."+l.selectedCircle);return[(c?this.mainCircle.transition():this.mainCircle).style("opacity",this.opacityForCircle.bind(this)).style("fill",this.color).attr("cx",a).attr("cy",b),(c?d.transition():d).attr("cx",a).attr("cy",b)]},i.circleX=function(a){return a.x||0===a.x?this.x(a.x):null},i.updateCircleY=function(){var a,b,c=this;c.config.data_groups.length>0?(a=c.getShapeIndices(c.isLineType),b=c.generateGetLinePoints(a),c.circleY=function(a,c){return b(a,c)[0][1]}):c.circleY=function(a){return c.getYScale(a.id)(a.value)}},i.getCircles=function(a,b){var c=this;return(b?c.main.selectAll("."+l.circles+c.getTargetSelectorSuffix(b)):c.main).selectAll("."+l.circle+(m(a)?"-"+a:""))},i.expandCircles=function(a,b,c){var d=this,e=d.pointExpandedR.bind(d);c&&d.unexpandCircles(),d.getCircles(a,b).classed(l.EXPANDED,!0).attr("r",e)},i.unexpandCircles=function(a){var b=this,c=b.pointR.bind(b);b.getCircles(a).filter(function(){return b.d3.select(this).classed(l.EXPANDED)}).classed(l.EXPANDED,!1).attr("r",c)},i.pointR=function(a){var b=this,c=b.config;return b.isStepType(a)?0:n(c.point_r)?c.point_r(a):c.point_r},i.pointExpandedR=function(a){var b=this,c=b.config;return c.point_focus_expand_enabled?c.point_focus_expand_r?c.point_focus_expand_r:1.75*b.pointR(a):b.pointR(a)},i.pointSelectR=function(a){var b=this,c=b.config;return c.point_select_r?c.point_select_r:4*b.pointR(a)},i.isWithinCircle=function(a,b){var c=this.d3,d=c.mouse(a),e=c.select(a),f=+e.attr("cx"),g=+e.attr("cy");return Math.sqrt(Math.pow(f-d[0],2)+Math.pow(g-d[1],2))<b},i.isWithinStep=function(a,b){return Math.abs(b-this.d3.mouse(a)[1])<30},i.initBar=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartBars)},i.updateTargetsForBar=function(a){var b,c,d=this,e=d.config,f=d.classChartBar.bind(d),g=d.classBars.bind(d),h=d.classFocus.bind(d);b=d.main.select("."+l.chartBars).selectAll("."+l.chartBar).data(a).attr("class",function(a){return f(a)+h(a)}),c=b.enter().append("g").attr("class",f).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",g).style("cursor",function(a){return e.data_selection_isselectable(a)?"pointer":null})},i.updateBar=function(a){var b=this,c=b.barData.bind(b),d=b.classBar.bind(b),e=b.initialOpacity.bind(b),f=function(a){return b.color(a.id)};b.mainBar=b.main.selectAll("."+l.bars).selectAll("."+l.bar).data(c),b.mainBar.enter().append("path").attr("class",d).style("stroke",f).style("fill",f),b.mainBar.style("opacity",e),b.mainBar.exit().transition().duration(a).style("opacity",0).remove()},i.redrawBar=function(a,b){return[(b?this.mainBar.transition():this.mainBar).attr("d",a).style("fill",this.color).style("opacity",1)]},i.getBarW=function(a,b){var c=this,d=c.config,e="number"==typeof d.bar_width?d.bar_width:b?a.tickInterval()*d.bar_width_ratio/b:0;return d.bar_width_max&&e>d.bar_width_max?d.bar_width_max:e},i.getBars=function(a,b){var c=this;return(b?c.main.selectAll("."+l.bars+c.getTargetSelectorSuffix(b)):c.main).selectAll("."+l.bar+(m(a)?"-"+a:""))},i.expandBars=function(a,b,c){var d=this;c&&d.unexpandBars(),d.getBars(a,b).classed(l.EXPANDED,!0)},i.unexpandBars=function(a){var b=this;b.getBars(a).classed(l.EXPANDED,!1)},i.generateDrawBar=function(a,b){var c=this,d=c.config,e=c.generateGetBarPoints(a,b);return function(a,b){var c=e(a,b),f=d.axis_rotated?1:0,g=d.axis_rotated?0:1,h="M "+c[0][f]+","+c[0][g]+" L"+c[1][f]+","+c[1][g]+" L"+c[2][f]+","+c[2][g]+" L"+c[3][f]+","+c[3][g]+" z";return h}},i.generateGetBarPoints=function(a,b){var c=this,d=b?c.subXAxis:c.xAxis,e=a.__max__+1,f=c.getBarW(d,e),g=c.getShapeX(f,e,a,!!b),h=c.getShapeY(!!b),i=c.getShapeOffset(c.isBarType,a,!!b),j=b?c.getSubYScale:c.getYScale;
	return function(a,b){var d=j.call(c,a.id)(0),e=i(a,b)||d,k=g(a),l=h(a);return c.config.axis_rotated&&(0<a.value&&d>l||a.value<0&&l>d)&&(l=d),[[k,e],[k,l-(d-e)],[k+f,l-(d-e)],[k+f,e]]}},i.isWithinBar=function(a){var b=this.d3.mouse(a),c=a.getBoundingClientRect(),d=a.pathSegList.getItem(0),e=a.pathSegList.getItem(1),f=Math.min(d.x,e.x),g=Math.min(d.y,e.y),h=c.width,i=c.height,j=2,k=f-j,l=f+h+j,m=g+i+j,n=g-j;return k<b[0]&&b[0]<l&&n<b[1]&&b[1]<m},i.initText=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartTexts),a.mainText=a.d3.selectAll([])},i.updateTargetsForText=function(a){var b,c,d=this,e=d.classChartText.bind(d),f=d.classTexts.bind(d),g=d.classFocus.bind(d);b=d.main.select("."+l.chartTexts).selectAll("."+l.chartText).data(a).attr("class",function(a){return e(a)+g(a)}),c=b.enter().append("g").attr("class",e).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",f)},i.updateText=function(a){var b=this,c=b.config,d=b.barOrLineData.bind(b),e=b.classText.bind(b);b.mainText=b.main.selectAll("."+l.texts).selectAll("."+l.text).data(d),b.mainText.enter().append("text").attr("class",e).attr("text-anchor",function(a){return c.axis_rotated?a.value<0?"end":"start":"middle"}).style("stroke","none").style("fill",function(a){return b.color(a)}).style("fill-opacity",0),b.mainText.text(function(a,c,d){return b.dataLabelFormat(a.id)(a.value,a.id,c,d)}),b.mainText.exit().transition().duration(a).style("fill-opacity",0).remove()},i.redrawText=function(a,b,c,d){return[(d?this.mainText.transition():this.mainText).attr("x",a).attr("y",b).style("fill",this.color).style("fill-opacity",c?0:this.opacityForText.bind(this))]},i.getTextRect=function(a,b){var c,d=this.d3.select("body").append("div").classed("c3",!0),e=d.append("svg").style("visibility","hidden").style("position","fixed").style("top",0).style("left",0);return e.selectAll(".dummy").data([a]).enter().append("text").classed(b?b:"",!0).text(a).each(function(){c=this.getBoundingClientRect()}),d.remove(),c},i.generateXYForText=function(a,b,c,d){var e=this,f=e.generateGetAreaPoints(a,!1),g=e.generateGetBarPoints(b,!1),h=e.generateGetLinePoints(c,!1),i=d?e.getXForText:e.getYForText;return function(a,b){var c=e.isAreaType(a)?f:e.isBarType(a)?g:h;return i.call(e,c(a,b),a,this)}},i.getXForText=function(a,b,c){var d,e,f=this,g=c.getBoundingClientRect();return f.config.axis_rotated?(e=f.isBarType(b)?4:6,d=a[2][1]+e*(b.value<0?-1:1)):d=f.hasType("bar")?(a[2][0]+a[0][0])/2:a[0][0],null===b.value&&(d>f.width?d=f.width-g.width:0>d&&(d=4)),d},i.getYForText=function(a,b,c){var d,e=this,f=c.getBoundingClientRect();return e.config.axis_rotated?d=(a[0][0]+a[2][0]+.6*f.height)/2:(d=a[2][1],b.value<0?(d+=f.height,e.isBarType(b)&&e.isSafari()?d-=3:!e.isBarType(b)&&e.isChrome()&&(d+=3)):d+=e.isBarType(b)?-3:-6),null!==b.value||e.config.axis_rotated||(d<f.height?d=f.height:d>this.height&&(d=this.height-4)),d},i.setTargetType=function(a,b){var c=this,d=c.config;c.mapToTargetIds(a).forEach(function(a){c.withoutFadeIn[a]=b===d.data_types[a],d.data_types[a]=b}),a||(d.data_type=b)},i.hasType=function(a,b){var c=this,d=c.config.data_types,e=!1;return b=b||c.data.targets,b&&b.length?b.forEach(function(b){var c=d[b.id];(c&&c.indexOf(a)>=0||!c&&"line"===a)&&(e=!0)}):Object.keys(d).length?Object.keys(d).forEach(function(b){d[b]===a&&(e=!0)}):e=c.config.data_type===a,e},i.hasArcType=function(a){return this.hasType("pie",a)||this.hasType("donut",a)||this.hasType("gauge",a)},i.isLineType=function(a){var b=this.config,c=o(a)?a:a.id;return!b.data_types[c]||["line","spline","area","area-spline","step","area-step"].indexOf(b.data_types[c])>=0},i.isStepType=function(a){var b=o(a)?a:a.id;return["step","area-step"].indexOf(this.config.data_types[b])>=0},i.isSplineType=function(a){var b=o(a)?a:a.id;return["spline","area-spline"].indexOf(this.config.data_types[b])>=0},i.isAreaType=function(a){var b=o(a)?a:a.id;return["area","area-spline","area-step"].indexOf(this.config.data_types[b])>=0},i.isBarType=function(a){var b=o(a)?a:a.id;return"bar"===this.config.data_types[b]},i.isScatterType=function(a){var b=o(a)?a:a.id;return"scatter"===this.config.data_types[b]},i.isPieType=function(a){var b=o(a)?a:a.id;return"pie"===this.config.data_types[b]},i.isGaugeType=function(a){var b=o(a)?a:a.id;return"gauge"===this.config.data_types[b]},i.isDonutType=function(a){var b=o(a)?a:a.id;return"donut"===this.config.data_types[b]},i.isArcType=function(a){return this.isPieType(a)||this.isDonutType(a)||this.isGaugeType(a)},i.lineData=function(a){return this.isLineType(a)?[a]:[]},i.arcData=function(a){return this.isArcType(a.data)?[a]:[]},i.barData=function(a){return this.isBarType(a)?a.values:[]},i.lineOrScatterData=function(a){return this.isLineType(a)||this.isScatterType(a)?a.values:[]},i.barOrLineData=function(a){return this.isBarType(a)||this.isLineType(a)?a.values:[]},i.initGrid=function(){var a=this,b=a.config,c=a.d3;a.grid=a.main.append("g").attr("clip-path",a.clipPathForGrid).attr("class",l.grid),b.grid_x_show&&a.grid.append("g").attr("class",l.xgrids),b.grid_y_show&&a.grid.append("g").attr("class",l.ygrids),b.grid_focus_show&&a.grid.append("g").attr("class",l.xgridFocus).append("line").attr("class",l.xgridFocus),a.xgrid=c.selectAll([]),b.grid_lines_front||a.initGridLines()},i.initGridLines=function(){var a=this,b=a.d3;a.gridLines=a.main.append("g").attr("clip-path",a.clipPathForGrid).attr("class",l.grid+" "+l.gridLines),a.gridLines.append("g").attr("class",l.xgridLines),a.gridLines.append("g").attr("class",l.ygridLines),a.xgridLines=b.selectAll([])},i.updateXGrid=function(a){var b=this,c=b.config,d=b.d3,e=b.generateGridData(c.grid_x_type,b.x),f=b.isCategorized()?b.xAxis.tickOffset():0;b.xgridAttr=c.axis_rotated?{x1:0,x2:b.width,y1:function(a){return b.x(a)-f},y2:function(a){return b.x(a)-f}}:{x1:function(a){return b.x(a)+f},x2:function(a){return b.x(a)+f},y1:0,y2:b.height},b.xgrid=b.main.select("."+l.xgrids).selectAll("."+l.xgrid).data(e),b.xgrid.enter().append("line").attr("class",l.xgrid),a||b.xgrid.attr(b.xgridAttr).style("opacity",function(){return+d.select(this).attr(c.axis_rotated?"y1":"x1")===(c.axis_rotated?b.height:0)?0:1}),b.xgrid.exit().remove()},i.updateYGrid=function(){var a=this,b=a.config,c=a.yAxis.tickValues()||a.y.ticks(b.grid_y_ticks);a.ygrid=a.main.select("."+l.ygrids).selectAll("."+l.ygrid).data(c),a.ygrid.enter().append("line").attr("class",l.ygrid),a.ygrid.attr("x1",b.axis_rotated?a.y:0).attr("x2",b.axis_rotated?a.y:a.width).attr("y1",b.axis_rotated?0:a.y).attr("y2",b.axis_rotated?a.height:a.y),a.ygrid.exit().remove(),a.smoothLines(a.ygrid,"grid")},i.gridTextAnchor=function(a){return a.position?a.position:"end"},i.gridTextDx=function(a){return"start"===a.position?4:"middle"===a.position?0:-4},i.xGridTextX=function(a){return"start"===a.position?-this.height:"middle"===a.position?-this.height/2:0},i.yGridTextX=function(a){return"start"===a.position?0:"middle"===a.position?this.width/2:this.width},i.updateGrid=function(a){var b,c,d,e=this,f=e.main,g=e.config;e.grid.style("visibility",e.hasArcType()?"hidden":"visible"),f.select("line."+l.xgridFocus).style("visibility","hidden"),g.grid_x_show&&e.updateXGrid(),e.xgridLines=f.select("."+l.xgridLines).selectAll("."+l.xgridLine).data(g.grid_x_lines),b=e.xgridLines.enter().append("g").attr("class",function(a){return l.xgridLine+(a["class"]?" "+a["class"]:"")}),b.append("line").style("opacity",0),b.append("text").attr("text-anchor",e.gridTextAnchor).attr("transform",g.axis_rotated?"":"rotate(-90)").attr("dx",e.gridTextDx).attr("dy",-5).style("opacity",0),e.xgridLines.exit().transition().duration(a).style("opacity",0).remove(),g.grid_y_show&&e.updateYGrid(),e.ygridLines=f.select("."+l.ygridLines).selectAll("."+l.ygridLine).data(g.grid_y_lines),c=e.ygridLines.enter().append("g").attr("class",function(a){return l.ygridLine+(a["class"]?" "+a["class"]:"")}),c.append("line").style("opacity",0),c.append("text").attr("text-anchor",e.gridTextAnchor).attr("transform",g.axis_rotated?"rotate(-90)":"").attr("dx",e.gridTextDx).attr("dy",-5).style("opacity",0),d=e.yv.bind(e),e.ygridLines.select("line").transition().duration(a).attr("x1",g.axis_rotated?d:0).attr("x2",g.axis_rotated?d:e.width).attr("y1",g.axis_rotated?0:d).attr("y2",g.axis_rotated?e.height:d).style("opacity",1),e.ygridLines.select("text").transition().duration(a).attr("x",g.axis_rotated?e.xGridTextX.bind(e):e.yGridTextX.bind(e)).attr("y",d).text(function(a){return a.text}).style("opacity",1),e.ygridLines.exit().transition().duration(a).style("opacity",0).remove()},i.redrawGrid=function(a){var b=this,c=b.config,d=b.xv.bind(b),e=b.xgridLines.select("line"),f=b.xgridLines.select("text");return[(a?e.transition():e).attr("x1",c.axis_rotated?0:d).attr("x2",c.axis_rotated?b.width:d).attr("y1",c.axis_rotated?d:0).attr("y2",c.axis_rotated?d:b.height).style("opacity",1),(a?f.transition():f).attr("x",c.axis_rotated?b.yGridTextX.bind(b):b.xGridTextX.bind(b)).attr("y",d).text(function(a){return a.text}).style("opacity",1)]},i.showXGridFocus=function(a){var b=this,c=b.config,d=a.filter(function(a){return a&&m(a.value)}),e=b.main.selectAll("line."+l.xgridFocus),f=b.xx.bind(b);c.tooltip_show&&(b.hasType("scatter")||b.hasArcType()||(e.style("visibility","visible").data([d[0]]).attr(c.axis_rotated?"y1":"x1",f).attr(c.axis_rotated?"y2":"x2",f),b.smoothLines(e,"grid")))},i.hideXGridFocus=function(){this.main.select("line."+l.xgridFocus).style("visibility","hidden")},i.updateXgridFocus=function(){var a=this,b=a.config;a.main.select("line."+l.xgridFocus).attr("x1",b.axis_rotated?0:-10).attr("x2",b.axis_rotated?a.width:-10).attr("y1",b.axis_rotated?-10:0).attr("y2",b.axis_rotated?-10:a.height)},i.generateGridData=function(a,b){var c,d,e,f,g=this,h=[],i=g.main.select("."+l.axisX).selectAll(".tick").size();if("year"===a)for(c=g.getXDomain(),d=c[0].getFullYear(),e=c[1].getFullYear(),f=d;e>=f;f++)h.push(new Date(f+"-01-01 00:00:00"));else h=b.ticks(10),h.length>i&&(h=h.filter(function(a){return(""+a).indexOf(".")<0}));return h},i.getGridFilterToRemove=function(a){return a?function(b){var c=!1;return[].concat(a).forEach(function(a){("value"in a&&b.value===a.value||"class"in a&&b["class"]===a["class"])&&(c=!0)}),c}:function(){return!0}},i.removeGridLines=function(a,b){var c=this,d=c.config,e=c.getGridFilterToRemove(a),f=function(a){return!e(a)},g=b?l.xgridLines:l.ygridLines,h=b?l.xgridLine:l.ygridLine;c.main.select("."+g).selectAll("."+h).filter(e).transition().duration(d.transition_duration).style("opacity",0).remove(),b?d.grid_x_lines=d.grid_x_lines.filter(f):d.grid_y_lines=d.grid_y_lines.filter(f)},i.initTooltip=function(){var a,b=this,c=b.config;if(b.tooltip=b.selectChart.style("position","relative").append("div").attr("class",l.tooltipContainer).style("position","absolute").style("pointer-events","none").style("display","none"),c.tooltip_init_show){if(b.isTimeSeries()&&o(c.tooltip_init_x)){for(c.tooltip_init_x=b.parseDate(c.tooltip_init_x),a=0;a<b.data.targets[0].values.length&&b.data.targets[0].values[a].x-c.tooltip_init_x!==0;a++);c.tooltip_init_x=a}b.tooltip.html(c.tooltip_contents.call(b,b.data.targets.map(function(a){return b.addName(a.values[c.tooltip_init_x])}),b.axis.getXAxisTickFormat(),b.getYFormat(b.hasArcType()),b.color)),b.tooltip.style("top",c.tooltip_init_position.top).style("left",c.tooltip_init_position.left).style("display","block")}},i.getTooltipContent=function(a,b,c,d){var e,f,g,h,i,j,k=this,m=k.config,n=m.tooltip_format_title||b,o=m.tooltip_format_name||function(a){return a},p=m.tooltip_format_value||c;for(f=0;f<a.length;f++)a[f]&&(a[f].value||0===a[f].value)&&(e||(g=n?n(a[f].x):a[f].x,e="<table class='"+l.tooltip+"'>"+(g||0===g?"<tr><th colspan='2'>"+g+"</th></tr>":"")),h=p(a[f].value,a[f].ratio,a[f].id,a[f].index),void 0!==h&&(i=o(a[f].name,a[f].ratio,a[f].id,a[f].index),j=k.levelColor?k.levelColor(a[f].value):d(a[f].id),e+="<tr class='"+l.tooltipName+"-"+a[f].id+"'>",e+="<td class='name'><span style='background-color:"+j+"'></span>"+i+"</td>",e+="<td class='value'>"+h+"</td>",e+="</tr>"));return e+"</table>"},i.tooltipPosition=function(a,b,c,d){var e,f,g,h,i,j=this,k=j.config,l=j.d3,m=j.hasArcType(),n=l.mouse(d);return m?(f=(j.width-(j.isLegendRight?j.getLegendWidth():0))/2+n[0],h=j.height/2+n[1]+20):(e=j.getSvgLeft(!0),k.axis_rotated?(f=e+n[0]+100,g=f+b,i=j.currentWidth-j.getCurrentPaddingRight(),h=j.x(a[0].x)+20):(f=e+j.getCurrentPaddingLeft(!0)+j.x(a[0].x)+20,g=f+b,i=e+j.currentWidth-j.getCurrentPaddingRight(),h=n[1]+15),g>i&&(f-=g-i+20),h+c>j.currentHeight&&(h-=c+30)),0>h&&(h=0),{top:h,left:f}},i.showTooltip=function(a,b){var c,d,e,f=this,g=f.config,h=f.hasArcType(),j=a.filter(function(a){return a&&m(a.value)}),k=g.tooltip_position||i.tooltipPosition;0!==j.length&&g.tooltip_show&&(f.tooltip.html(g.tooltip_contents.call(f,a,f.axis.getXAxisTickFormat(),f.getYFormat(h),f.color)).style("display","block"),c=f.tooltip.property("offsetWidth"),d=f.tooltip.property("offsetHeight"),e=k.call(this,j,c,d,b),f.tooltip.style("top",e.top+"px").style("left",e.left+"px"))},i.hideTooltip=function(){this.tooltip.style("display","none")},i.initLegend=function(){var a=this;return a.legendItemTextBox={},a.legendHasRendered=!1,a.legend=a.svg.append("g").attr("transform",a.getTranslate("legend")),a.config.legend_show?void a.updateLegendWithDefaults():(a.legend.style("visibility","hidden"),void(a.hiddenLegendIds=a.mapToIds(a.data.targets)))},i.updateLegendWithDefaults=function(){var a=this;a.updateLegend(a.mapToIds(a.data.targets),{withTransform:!1,withTransitionForTransform:!1,withTransition:!1})},i.updateSizeForLegend=function(a,b){var c=this,d=c.config,e={top:c.isLegendTop?c.getCurrentPaddingTop()+d.legend_inset_y+5.5:c.currentHeight-a-c.getCurrentPaddingBottom()-d.legend_inset_y,left:c.isLegendLeft?c.getCurrentPaddingLeft()+d.legend_inset_x+.5:c.currentWidth-b-c.getCurrentPaddingRight()-d.legend_inset_x+.5};c.margin3={top:c.isLegendRight?0:c.isLegendInset?e.top:c.currentHeight-a,right:0/0,bottom:0,left:c.isLegendRight?c.currentWidth-b:c.isLegendInset?e.left:0}},i.transformLegend=function(a){var b=this;(a?b.legend.transition():b.legend).attr("transform",b.getTranslate("legend"))},i.updateLegendStep=function(a){this.legendStep=a},i.updateLegendItemWidth=function(a){this.legendItemWidth=a},i.updateLegendItemHeight=function(a){this.legendItemHeight=a},i.getLegendWidth=function(){var a=this;return a.config.legend_show?a.isLegendRight||a.isLegendInset?a.legendItemWidth*(a.legendStep+1):a.currentWidth:0},i.getLegendHeight=function(){var a=this,b=0;return a.config.legend_show&&(b=a.isLegendRight?a.currentHeight:Math.max(20,a.legendItemHeight)*(a.legendStep+1)),b},i.opacityForLegend=function(a){return a.classed(l.legendItemHidden)?null:1},i.opacityForUnfocusedLegend=function(a){return a.classed(l.legendItemHidden)?null:.3},i.toggleFocusLegend=function(a,b){var c=this;a=c.mapToTargetIds(a),c.legend.selectAll("."+l.legendItem).filter(function(b){return a.indexOf(b)>=0}).classed(l.legendItemFocused,b).transition().duration(100).style("opacity",function(){var a=b?c.opacityForLegend:c.opacityForUnfocusedLegend;return a.call(c,c.d3.select(this))})},i.revertLegend=function(){var a=this,b=a.d3;a.legend.selectAll("."+l.legendItem).classed(l.legendItemFocused,!1).transition().duration(100).style("opacity",function(){return a.opacityForLegend(b.select(this))})},i.showLegend=function(a){var b=this,c=b.config;c.legend_show||(c.legend_show=!0,b.legend.style("visibility","visible"),b.legendHasRendered||b.updateLegendWithDefaults()),b.removeHiddenLegendIds(a),b.legend.selectAll(b.selectorLegends(a)).style("visibility","visible").transition().style("opacity",function(){return b.opacityForLegend(b.d3.select(this))})},i.hideLegend=function(a){var b=this,c=b.config;c.legend_show&&u(a)&&(c.legend_show=!1,b.legend.style("visibility","hidden")),b.addHiddenLegendIds(a),b.legend.selectAll(b.selectorLegends(a)).style("opacity",0).style("visibility","hidden")},i.clearLegendItemTextBoxCache=function(){this.legendItemTextBox={}},i.updateLegend=function(a,b,c){function d(a,b){return u.legendItemTextBox[b]||(u.legendItemTextBox[b]=u.getTextRect(a.textContent,l.legendItem)),u.legendItemTextBox[b]}function e(b,c,e){function f(a,b){b||(g=(o-D-n)/2,B>g&&(g=(o-n)/2,D=0,J++)),I[a]=J,H[J]=u.isLegendInset?10:g,E[a]=D,D+=n}var g,h,i=0===e,j=e===a.length-1,k=d(b,c),l=k.width+C+(!j||u.isLegendRight||u.isLegendInset?y:0),m=k.height+x,n=u.isLegendRight||u.isLegendInset?m:l,o=u.isLegendRight||u.isLegendInset?u.getLegendHeight():u.getLegendWidth();return i&&(D=0,J=0,z=0,A=0),v.legend_show&&!u.isLegendToShow(c)?void(F[c]=G[c]=I[c]=E[c]=0):(F[c]=l,G[c]=m,(!z||l>=z)&&(z=l),(!A||m>=A)&&(A=m),h=u.isLegendRight||u.isLegendInset?A:z,void(v.legend_equally?(Object.keys(F).forEach(function(a){F[a]=z}),Object.keys(G).forEach(function(a){G[a]=A}),g=(o-h*a.length)/2,B>g?(D=0,J=0,a.forEach(function(a){f(a)})):f(c,!0)):f(c)))}var f,g,h,i,j,k,m,n,o,p,r,s,t,u=this,v=u.config,x=4,y=10,z=0,A=0,B=10,C=15,D=0,E={},F={},G={},H=[0],I={},J=0;b=b||{},n=w(b,"withTransition",!0),o=w(b,"withTransitionForTransform",!0),u.isLegendInset&&(J=v.legend_inset_step?v.legend_inset_step:a.length,u.updateLegendStep(J)),u.isLegendRight?(f=function(a){return z*I[a]},i=function(a){return H[I[a]]+E[a]}):u.isLegendInset?(f=function(a){return z*I[a]+10},i=function(a){return H[I[a]]+E[a]}):(f=function(a){return H[I[a]]+E[a]},i=function(a){return A*I[a]}),g=function(a,b){return f(a,b)+14},j=function(a,b){return i(a,b)+9},h=function(a,b){return f(a,b)},k=function(a,b){return i(a,b)-5},m=u.legend.selectAll("."+l.legendItem).data(a).enter().append("g").attr("class",function(a){return u.generateClass(l.legendItem,a)}).style("visibility",function(a){return u.isLegendToShow(a)?"visible":"hidden"}).style("cursor","pointer").on("click",function(a){v.legend_item_onclick?v.legend_item_onclick.call(u,a):u.d3.event.altKey?(u.api.hide(),u.api.show(a)):(u.api.toggle(a),u.isTargetToShow(a)?u.api.focus(a):u.api.revert())}).on("mouseover",function(a){u.d3.select(this).classed(l.legendItemFocused,!0),!u.transiting&&u.isTargetToShow(a)&&u.api.focus(a),v.legend_item_onmouseover&&v.legend_item_onmouseover.call(u,a)}).on("mouseout",function(a){u.d3.select(this).classed(l.legendItemFocused,!1),u.api.revert(),v.legend_item_onmouseout&&v.legend_item_onmouseout.call(u,a)}),m.append("text").text(function(a){return q(v.data_names[a])?v.data_names[a]:a}).each(function(a,b){e(this,a,b)}).style("pointer-events","none").attr("x",u.isLegendRight||u.isLegendInset?g:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:j),m.append("rect").attr("class",l.legendItemEvent).style("fill-opacity",0).attr("x",u.isLegendRight||u.isLegendInset?h:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:k),m.append("rect").attr("class",l.legendItemTile).style("pointer-events","none").style("fill",u.color).attr("x",u.isLegendRight||u.isLegendInset?g:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:i).attr("width",10).attr("height",10),t=u.legend.select("."+l.legendBackground+" rect"),u.isLegendInset&&z>0&&0===t.size()&&(t=u.legend.insert("g","."+l.legendItem).attr("class",l.legendBackground).append("rect")),p=u.legend.selectAll("text").data(a).text(function(a){return q(v.data_names[a])?v.data_names[a]:a}).each(function(a,b){e(this,a,b)}),(n?p.transition():p).attr("x",g).attr("y",j),r=u.legend.selectAll("rect."+l.legendItemEvent).data(a),(n?r.transition():r).attr("width",function(a){return F[a]}).attr("height",function(a){return G[a]}).attr("x",h).attr("y",k),s=u.legend.selectAll("rect."+l.legendItemTile).data(a),(n?s.transition():s).style("fill",u.color).attr("x",f).attr("y",i),t&&(n?t.transition():t).attr("height",u.getLegendHeight()-12).attr("width",z*(J+1)+10),u.legend.selectAll("."+l.legendItem).classed(l.legendItemHidden,function(a){return!u.isTargetToShow(a)}),u.updateLegendItemWidth(z),u.updateLegendItemHeight(A),u.updateLegendStep(J),u.updateSizes(),u.updateScales(),u.updateSvgSize(),u.transformAll(o,c),u.legendHasRendered=!0},c(b,f),f.prototype.init=function(){var a=this.owner,b=a.config,c=a.main;a.axes.x=c.append("g").attr("class",l.axis+" "+l.axisX).attr("clip-path",a.clipPathForXAxis).attr("transform",a.getTranslate("x")).style("visibility",b.axis_x_show?"visible":"hidden"),a.axes.x.append("text").attr("class",l.axisXLabel).attr("transform",b.axis_rotated?"rotate(-90)":"").style("text-anchor",this.textAnchorForXAxisLabel.bind(this)),a.axes.y=c.append("g").attr("class",l.axis+" "+l.axisY).attr("clip-path",b.axis_y_inner?"":a.clipPathForYAxis).attr("transform",a.getTranslate("y")).style("visibility",b.axis_y_show?"visible":"hidden"),a.axes.y.append("text").attr("class",l.axisYLabel).attr("transform",b.axis_rotated?"":"rotate(-90)").style("text-anchor",this.textAnchorForYAxisLabel.bind(this)),a.axes.y2=c.append("g").attr("class",l.axis+" "+l.axisY2).attr("transform",a.getTranslate("y2")).style("visibility",b.axis_y2_show?"visible":"hidden"),a.axes.y2.append("text").attr("class",l.axisY2Label).attr("transform",b.axis_rotated?"":"rotate(-90)").style("text-anchor",this.textAnchorForY2AxisLabel.bind(this))},f.prototype.getXAxis=function(a,b,c,d,e,f,h){var i=this.owner,j=i.config,k={isCategory:i.isCategorized(),withOuterTick:e,tickMultiline:j.axis_x_tick_multiline,tickWidth:j.axis_x_tick_width,tickTextRotate:h?0:j.axis_x_tick_rotate,withoutTransition:f},l=g(i.d3,k).scale(a).orient(b);return i.isTimeSeries()&&d&&(d=d.map(function(a){return i.parseDate(a)})),l.tickFormat(c).tickValues(d),i.isCategorized()&&(l.tickCentered(j.axis_x_tick_centered),u(j.axis_x_tick_culling)&&(j.axis_x_tick_culling=!1)),l},f.prototype.updateXAxisTickValues=function(a,b){var c,d=this.owner,e=d.config;return(e.axis_x_tick_fit||e.axis_x_tick_count)&&(c=this.generateTickValues(d.mapTargetsToUniqueXs(a),e.axis_x_tick_count,d.isTimeSeries())),b?b.tickValues(c):(d.xAxis.tickValues(c),d.subXAxis.tickValues(c)),c},f.prototype.getYAxis=function(a,b,c,d,e,f){var h={withOuterTick:e,withoutTransition:f},i=this.owner,j=i.d3,k=i.config,l=g(j,h).scale(a).orient(b).tickFormat(c);return i.isTimeSeriesY()?l.ticks(j.time[k.axis_y_tick_time_value],k.axis_y_tick_time_interval):l.tickValues(d),l},f.prototype.getId=function(a){var b=this.owner.config;return a in b.data_axes?b.data_axes[a]:"y"},f.prototype.getXAxisTickFormat=function(){var a=this.owner,b=a.config,c=a.isTimeSeries()?a.defaultAxisTimeFormat:a.isCategorized()?a.categoryName:function(a){return 0>a?a.toFixed(0):a};return b.axis_x_tick_format&&(n(b.axis_x_tick_format)?c=b.axis_x_tick_format:a.isTimeSeries()&&(c=function(c){return c?a.axisTimeFormat(b.axis_x_tick_format)(c):""})),n(c)?function(b){return c.call(a,b)}:c},f.prototype.getTickValues=function(a,b){return a?a:b?b.tickValues():void 0},f.prototype.getXAxisTickValues=function(){return this.getTickValues(this.owner.config.axis_x_tick_values,this.owner.xAxis)},f.prototype.getYAxisTickValues=function(){return this.getTickValues(this.owner.config.axis_y_tick_values,this.owner.yAxis)},f.prototype.getY2AxisTickValues=function(){return this.getTickValues(this.owner.config.axis_y2_tick_values,this.owner.y2Axis)},f.prototype.getLabelOptionByAxisId=function(a){var b,c=this.owner,d=c.config;return"y"===a?b=d.axis_y_label:"y2"===a?b=d.axis_y2_label:"x"===a&&(b=d.axis_x_label),b},f.prototype.getLabelText=function(a){var b=this.getLabelOptionByAxisId(a);return o(b)?b:b?b.text:null},f.prototype.setLabelText=function(a,b){var c=this.owner,d=c.config,e=this.getLabelOptionByAxisId(a);o(e)?"y"===a?d.axis_y_label=b:"y2"===a?d.axis_y2_label=b:"x"===a&&(d.axis_x_label=b):e&&(e.text=b)},f.prototype.getLabelPosition=function(a,b){var c=this.getLabelOptionByAxisId(a),d=c&&"object"==typeof c&&c.position?c.position:b;return{isInner:d.indexOf("inner")>=0,isOuter:d.indexOf("outer")>=0,isLeft:d.indexOf("left")>=0,isCenter:d.indexOf("center")>=0,isRight:d.indexOf("right")>=0,isTop:d.indexOf("top")>=0,isMiddle:d.indexOf("middle")>=0,isBottom:d.indexOf("bottom")>=0}},f.prototype.getXAxisLabelPosition=function(){return this.getLabelPosition("x",this.owner.config.axis_rotated?"inner-top":"inner-right")},f.prototype.getYAxisLabelPosition=function(){return this.getLabelPosition("y",this.owner.config.axis_rotated?"inner-right":"inner-top")},f.prototype.getY2AxisLabelPosition=function(){return this.getLabelPosition("y2",this.owner.config.axis_rotated?"inner-right":"inner-top")},f.prototype.getLabelPositionById=function(a){return"y2"===a?this.getY2AxisLabelPosition():"y"===a?this.getYAxisLabelPosition():this.getXAxisLabelPosition()},f.prototype.textForXAxisLabel=function(){return this.getLabelText("x")},f.prototype.textForYAxisLabel=function(){return this.getLabelText("y")},f.prototype.textForY2AxisLabel=function(){return this.getLabelText("y2")},f.prototype.xForAxisLabel=function(a,b){var c=this.owner;return a?b.isLeft?0:b.isCenter?c.width/2:c.width:b.isBottom?-c.height:b.isMiddle?-c.height/2:0},f.prototype.dxForAxisLabel=function(a,b){return a?b.isLeft?"0.5em":b.isRight?"-0.5em":"0":b.isTop?"-0.5em":b.isBottom?"0.5em":"0"},f.prototype.textAnchorForAxisLabel=function(a,b){return a?b.isLeft?"start":b.isCenter?"middle":"end":b.isBottom?"start":b.isMiddle?"middle":"end"},f.prototype.xForXAxisLabel=function(){return this.xForAxisLabel(!this.owner.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.xForYAxisLabel=function(){return this.xForAxisLabel(this.owner.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.xForY2AxisLabel=function(){return this.xForAxisLabel(this.owner.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.dxForXAxisLabel=function(){return this.dxForAxisLabel(!this.owner.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.dxForYAxisLabel=function(){return this.dxForAxisLabel(this.owner.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.dxForY2AxisLabel=function(){return this.dxForAxisLabel(this.owner.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.dyForXAxisLabel=function(){var a=this.owner,b=a.config,c=this.getXAxisLabelPosition();return b.axis_rotated?c.isInner?"1.2em":-25-this.getMaxTickWidth("x"):c.isInner?"-0.5em":b.axis_x_height?b.axis_x_height-10:"3em"},f.prototype.dyForYAxisLabel=function(){var a=this.owner,b=this.getYAxisLabelPosition();return a.config.axis_rotated?b.isInner?"-0.5em":"3em":b.isInner?"1.2em":-10-(a.config.axis_y_inner?0:this.getMaxTickWidth("y")+10)},f.prototype.dyForY2AxisLabel=function(){var a=this.owner,b=this.getY2AxisLabelPosition();return a.config.axis_rotated?b.isInner?"1.2em":"-2.2em":b.isInner?"-0.5em":15+(a.config.axis_y2_inner?0:this.getMaxTickWidth("y2")+15)},f.prototype.textAnchorForXAxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(!a.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.textAnchorForYAxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(a.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.textAnchorForY2AxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(a.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.getMaxTickWidth=function(a,b){var c,d,e,f,g,h=this.owner,i=h.config,j=0;return b&&h.currentMaxTickWidths[a]?h.currentMaxTickWidths[a]:(h.svg&&(c=h.filterTargetsToShow(h.data.targets),"y"===a?(d=h.y.copy().domain(h.getYDomain(c,"y")),e=this.getYAxis(d,h.yOrient,i.axis_y_tick_format,h.yAxisTickValues,!1,!0)):"y2"===a?(d=h.y2.copy().domain(h.getYDomain(c,"y2")),e=this.getYAxis(d,h.y2Orient,i.axis_y2_tick_format,h.y2AxisTickValues,!1,!0)):(d=h.x.copy().domain(h.getXDomain(c)),e=this.getXAxis(d,h.xOrient,h.xAxisTickFormat,h.xAxisTickValues,!1,!0,!0),this.updateXAxisTickValues(c,e)),f=h.d3.select("body").append("div").classed("c3",!0),g=f.append("svg").style("visibility","hidden").style("position","fixed").style("top",0).style("left",0),g.append("g").call(e).each(function(){h.d3.select(this).selectAll("text").each(function(){var a=this.getBoundingClientRect();j<a.width&&(j=a.width)}),f.remove()})),h.currentMaxTickWidths[a]=0>=j?h.currentMaxTickWidths[a]:j,h.currentMaxTickWidths[a])},f.prototype.updateLabels=function(a){var b=this.owner,c=b.main.select("."+l.axisX+" ."+l.axisXLabel),d=b.main.select("."+l.axisY+" ."+l.axisYLabel),e=b.main.select("."+l.axisY2+" ."+l.axisY2Label);(a?c.transition():c).attr("x",this.xForXAxisLabel.bind(this)).attr("dx",this.dxForXAxisLabel.bind(this)).attr("dy",this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this)),(a?d.transition():d).attr("x",this.xForYAxisLabel.bind(this)).attr("dx",this.dxForYAxisLabel.bind(this)).attr("dy",this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this)),(a?e.transition():e).attr("x",this.xForY2AxisLabel.bind(this)).attr("dx",this.dxForY2AxisLabel.bind(this)).attr("dy",this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this))},f.prototype.getPadding=function(a,b,c,d){return m(a[b])?"ratio"===a.unit?a[b]*d:this.convertPixelsToAxisPadding(a[b],d):c},f.prototype.convertPixelsToAxisPadding=function(a,b){var c=this.owner,d=c.config.axis_rotated?c.width:c.height;return b*(a/d)},f.prototype.generateTickValues=function(a,b,c){var d,e,f,g,h,i,j,k=a;if(b)if(d=n(b)?b():b,1===d)k=[a[0]];else if(2===d)k=[a[0],a[a.length-1]];else if(d>2){for(g=d-2,e=a[0],f=a[a.length-1],h=(f-e)/(g+1),k=[e],i=0;g>i;i++)j=+e+h*(i+1),k.push(c?new Date(j):j);k.push(f)}return c||(k=k.sort(function(a,b){return a-b})),k},f.prototype.generateTransitions=function(a){var b=this.owner,c=b.axes;return{axisX:a?c.x.transition().duration(a):c.x,axisY:a?c.y.transition().duration(a):c.y,axisY2:a?c.y2.transition().duration(a):c.y2,axisSubX:a?c.subx.transition().duration(a):c.subx}},f.prototype.redraw=function(a,b){var c=this.owner;c.axes.x.style("opacity",b?0:1),c.axes.y.style("opacity",b?0:1),c.axes.y2.style("opacity",b?0:1),c.axes.subx.style("opacity",b?0:1),a.axisX.call(c.xAxis),a.axisY.call(c.yAxis),a.axisY2.call(c.y2Axis),a.axisSubX.call(c.subXAxis)},i.getClipPath=function(b){var c=a.navigator.appVersion.toLowerCase().indexOf("msie 9.")>=0;return"url("+(c?"":document.URL.split("#")[0])+"#"+b+")"},i.appendClip=function(a,b){return a.append("clipPath").attr("id",b).append("rect")},i.getAxisClipX=function(a){var b=Math.max(30,this.margin.left);return a?-(1+b):-(b-1)},i.getAxisClipY=function(a){return a?-20:-this.margin.top},i.getXAxisClipX=function(){var a=this;return a.getAxisClipX(!a.config.axis_rotated)},i.getXAxisClipY=function(){var a=this;return a.getAxisClipY(!a.config.axis_rotated)},i.getYAxisClipX=function(){var a=this;return a.config.axis_y_inner?-1:a.getAxisClipX(a.config.axis_rotated)},i.getYAxisClipY=function(){var a=this;return a.getAxisClipY(a.config.axis_rotated)},i.getAxisClipWidth=function(a){var b=this,c=Math.max(30,b.margin.left),d=Math.max(30,b.margin.right);return a?b.width+2+c+d:b.margin.left+20},i.getAxisClipHeight=function(a){return(a?this.margin.bottom:this.margin.top+this.height)+20},i.getXAxisClipWidth=function(){var a=this;return a.getAxisClipWidth(!a.config.axis_rotated)},i.getXAxisClipHeight=function(){var a=this;return a.getAxisClipHeight(!a.config.axis_rotated)},i.getYAxisClipWidth=function(){var a=this;return a.getAxisClipWidth(a.config.axis_rotated)+(a.config.axis_y_inner?20:0)},i.getYAxisClipHeight=function(){var a=this;return a.getAxisClipHeight(a.config.axis_rotated)},i.initPie=function(){var a=this,b=a.d3,c=a.config;a.pie=b.layout.pie().value(function(a){return a.values.reduce(function(a,b){return a+b.value},0)}),c.data_order||a.pie.sort(null)},i.updateRadius=function(){var a=this,b=a.config,c=b.gauge_width||b.donut_width;a.radiusExpanded=Math.min(a.arcWidth,a.arcHeight)/2,a.radius=.95*a.radiusExpanded,a.innerRadiusRatio=c?(a.radius-c)/a.radius:.6,a.innerRadius=a.hasType("donut")||a.hasType("gauge")?a.radius*a.innerRadiusRatio:0},i.updateArc=function(){var a=this;a.svgArc=a.getSvgArc(),a.svgArcExpanded=a.getSvgArcExpanded(),a.svgArcExpandedSub=a.getSvgArcExpanded(.98)},i.updateAngle=function(a){var b,c,d=this,e=d.config,f=!1,g=0,h=e.gauge_min,i=e.gauge_max;
	return d.pie(d.filterTargetsToShow(d.data.targets)).forEach(function(b){f||b.data.id!==a.data.id||(f=!0,a=b,a.index=g),g++}),isNaN(a.startAngle)&&(a.startAngle=0),isNaN(a.endAngle)&&(a.endAngle=a.startAngle),d.isGaugeType(a.data)&&(b=Math.PI/(i-h),c=a.value<h?0:a.value<i?a.value-h:i-h,a.startAngle=-1*(Math.PI/2),a.endAngle=a.startAngle+b*c),f?a:null},i.getSvgArc=function(){var a=this,b=a.d3.svg.arc().outerRadius(a.radius).innerRadius(a.innerRadius),c=function(c,d){var e;return d?b(c):(e=a.updateAngle(c),e?b(e):"M 0 0")};return c.centroid=b.centroid,c},i.getSvgArcExpanded=function(a){var b=this,c=b.d3.svg.arc().outerRadius(b.radiusExpanded*(a?a:1)).innerRadius(b.innerRadius);return function(a){var d=b.updateAngle(a);return d?c(d):"M 0 0"}},i.getArc=function(a,b,c){return c||this.isArcType(a.data)?this.svgArc(a,b):"M 0 0"},i.transformForArcLabel=function(a){var b,c,d,e,f,g=this,h=g.updateAngle(a),i="";return h&&!g.hasType("gauge")&&(b=this.svgArc.centroid(h),c=isNaN(b[0])?0:b[0],d=isNaN(b[1])?0:b[1],e=Math.sqrt(c*c+d*d),f=g.radius&&e?(36/g.radius>.375?1.175-36/g.radius:.8)*g.radius/e:0,i="translate("+c*f+","+d*f+")"),i},i.getArcRatio=function(a){var b=this,c=b.hasType("gauge")?Math.PI:2*Math.PI;return a?(a.endAngle-a.startAngle)/c:null},i.convertToArcData=function(a){return this.addName({id:a.data.id,value:a.value,ratio:this.getArcRatio(a),index:a.index})},i.textForArcLabel=function(a){var b,c,d,e,f,g=this;return g.shouldShowArcLabel()?(b=g.updateAngle(a),c=b?b.value:null,d=g.getArcRatio(b),e=a.data.id,g.hasType("gauge")||g.meetsArcLabelThreshold(d)?(f=g.getArcLabelFormat(),f?f(c,d,e):g.defaultArcValueFormat(c,d)):""):""},i.expandArc=function(b){var c,d=this;return d.transiting?void(c=a.setInterval(function(){d.transiting||(a.clearInterval(c),d.legend.selectAll(".c3-legend-item-focused").size()>0&&d.expandArc(b))},10)):(b=d.mapToTargetIds(b),void d.svg.selectAll(d.selectorTargets(b,"."+l.chartArc)).each(function(a){d.shouldExpand(a.data.id)&&d.d3.select(this).selectAll("path").transition().duration(50).attr("d",d.svgArcExpanded).transition().duration(100).attr("d",d.svgArcExpandedSub).each(function(a){d.isDonutType(a.data)})}))},i.unexpandArc=function(a){var b=this;b.transiting||(a=b.mapToTargetIds(a),b.svg.selectAll(b.selectorTargets(a,"."+l.chartArc)).selectAll("path").transition().duration(50).attr("d",b.svgArc),b.svg.selectAll("."+l.arc).style("opacity",1))},i.shouldExpand=function(a){var b=this,c=b.config;return b.isDonutType(a)&&c.donut_expand||b.isGaugeType(a)&&c.gauge_expand||b.isPieType(a)&&c.pie_expand},i.shouldShowArcLabel=function(){var a=this,b=a.config,c=!0;return a.hasType("donut")?c=b.donut_label_show:a.hasType("pie")&&(c=b.pie_label_show),c},i.meetsArcLabelThreshold=function(a){var b=this,c=b.config,d=b.hasType("donut")?c.donut_label_threshold:c.pie_label_threshold;return a>=d},i.getArcLabelFormat=function(){var a=this,b=a.config,c=b.pie_label_format;return a.hasType("gauge")?c=b.gauge_label_format:a.hasType("donut")&&(c=b.donut_label_format),c},i.getArcTitle=function(){var a=this;return a.hasType("donut")?a.config.donut_title:""},i.updateTargetsForArc=function(a){var b,c,d=this,e=d.main,f=d.classChartArc.bind(d),g=d.classArcs.bind(d),h=d.classFocus.bind(d);b=e.select("."+l.chartArcs).selectAll("."+l.chartArc).data(d.pie(a)).attr("class",function(a){return f(a)+h(a.data)}),c=b.enter().append("g").attr("class",f),c.append("g").attr("class",g),c.append("text").attr("dy",d.hasType("gauge")?"-.1em":".35em").style("opacity",0).style("text-anchor","middle").style("pointer-events","none")},i.initArc=function(){var a=this;a.arcs=a.main.select("."+l.chart).append("g").attr("class",l.chartArcs).attr("transform",a.getTranslate("arc")),a.arcs.append("text").attr("class",l.chartArcsTitle).style("text-anchor","middle").text(a.getArcTitle())},i.redrawArc=function(a,b,c){var d,e=this,f=e.d3,g=e.config,h=e.main;d=h.selectAll("."+l.arcs).selectAll("."+l.arc).data(e.arcData.bind(e)),d.enter().append("path").attr("class",e.classArc.bind(e)).style("fill",function(a){return e.color(a.data)}).style("cursor",function(a){return g.interaction_enabled&&g.data_selection_isselectable(a)?"pointer":null}).style("opacity",0).each(function(a){e.isGaugeType(a.data)&&(a.startAngle=a.endAngle=-1*(Math.PI/2)),this._current=a}),d.attr("transform",function(a){return!e.isGaugeType(a.data)&&c?"scale(0)":""}).style("opacity",function(a){return a===this._current?0:1}).on("mouseover",g.interaction_enabled?function(a){var b,c;e.transiting||(b=e.updateAngle(a),c=e.convertToArcData(b),e.expandArc(b.data.id),e.api.focus(b.data.id),e.toggleFocusLegend(b.data.id,!0),e.config.data_onmouseover(c,this))}:null).on("mousemove",g.interaction_enabled?function(a){var b=e.updateAngle(a),c=e.convertToArcData(b),d=[c];e.showTooltip(d,this)}:null).on("mouseout",g.interaction_enabled?function(a){var b,c;e.transiting||(b=e.updateAngle(a),c=e.convertToArcData(b),e.unexpandArc(b.data.id),e.api.revert(),e.revertLegend(),e.hideTooltip(),e.config.data_onmouseout(c,this))}:null).on("click",g.interaction_enabled?function(a,b){var c=e.updateAngle(a),d=e.convertToArcData(c);e.toggleShape&&e.toggleShape(this,d,b),e.config.data_onclick.call(e.api,d,this)}:null).each(function(){e.transiting=!0}).transition().duration(a).attrTween("d",function(a){var b,c=e.updateAngle(a);return c?(isNaN(this._current.startAngle)&&(this._current.startAngle=0),isNaN(this._current.endAngle)&&(this._current.endAngle=this._current.startAngle),b=f.interpolate(this._current,c),this._current=b(0),function(c){var d=b(c);return d.data=a.data,e.getArc(d,!0)}):function(){return"M 0 0"}}).attr("transform",c?"scale(1)":"").style("fill",function(a){return e.levelColor?e.levelColor(a.data.values[0].value):e.color(a.data.id)}).style("opacity",1).call(e.endall,function(){e.transiting=!1}),d.exit().transition().duration(b).style("opacity",0).remove(),h.selectAll("."+l.chartArc).select("text").style("opacity",0).attr("class",function(a){return e.isGaugeType(a.data)?l.gaugeValue:""}).text(e.textForArcLabel.bind(e)).attr("transform",e.transformForArcLabel.bind(e)).style("font-size",function(a){return e.isGaugeType(a.data)?Math.round(e.radius/5)+"px":""}).transition().duration(a).style("opacity",function(a){return e.isTargetToShow(a.data.id)&&e.isArcType(a.data)?1:0}),h.select("."+l.chartArcsTitle).style("opacity",e.hasType("donut")||e.hasType("gauge")?1:0),e.hasType("gauge")&&(e.arcs.select("."+l.chartArcsBackground).attr("d",function(){var a={data:[{value:g.gauge_max}],startAngle:-1*(Math.PI/2),endAngle:Math.PI/2};return e.getArc(a,!0,!0)}),e.arcs.select("."+l.chartArcsGaugeUnit).attr("dy",".75em").text(g.gauge_label_show?g.gauge_units:""),e.arcs.select("."+l.chartArcsGaugeMin).attr("dx",-1*(e.innerRadius+(e.radius-e.innerRadius)/2)+"px").attr("dy","1.2em").text(g.gauge_label_show?g.gauge_min:""),e.arcs.select("."+l.chartArcsGaugeMax).attr("dx",e.innerRadius+(e.radius-e.innerRadius)/2+"px").attr("dy","1.2em").text(g.gauge_label_show?g.gauge_max:""))},i.initGauge=function(){var a=this.arcs;this.hasType("gauge")&&(a.append("path").attr("class",l.chartArcsBackground),a.append("text").attr("class",l.chartArcsGaugeUnit).style("text-anchor","middle").style("pointer-events","none"),a.append("text").attr("class",l.chartArcsGaugeMin).style("text-anchor","middle").style("pointer-events","none"),a.append("text").attr("class",l.chartArcsGaugeMax).style("text-anchor","middle").style("pointer-events","none"))},i.getGaugeLabelHeight=function(){return this.config.gauge_label_show?20:0},i.initRegion=function(){var a=this;a.region=a.main.append("g").attr("clip-path",a.clipPath).attr("class",l.regions)},i.updateRegion=function(a){var b=this,c=b.config;b.region.style("visibility",b.hasArcType()?"hidden":"visible"),b.mainRegion=b.main.select("."+l.regions).selectAll("."+l.region).data(c.regions),b.mainRegion.enter().append("g").attr("class",b.classRegion.bind(b)).append("rect").style("fill-opacity",0),b.mainRegion.exit().transition().duration(a).style("opacity",0).remove()},i.redrawRegion=function(a){var b=this,c=b.mainRegion.selectAll("rect"),d=b.regionX.bind(b),e=b.regionY.bind(b),f=b.regionWidth.bind(b),g=b.regionHeight.bind(b);return[(a?c.transition():c).attr("x",d).attr("y",e).attr("width",f).attr("height",g).style("fill-opacity",function(a){return m(a.opacity)?a.opacity:.1})]},i.regionX=function(a){var b,c=this,d=c.config,e="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated&&"start"in a?e(a.start):0:d.axis_rotated?0:"start"in a?c.x(c.isTimeSeries()?c.parseDate(a.start):a.start):0},i.regionY=function(a){var b,c=this,d=c.config,e="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated?0:"end"in a?e(a.end):0:d.axis_rotated&&"start"in a?c.x(c.isTimeSeries()?c.parseDate(a.start):a.start):0},i.regionWidth=function(a){var b,c=this,d=c.config,e=c.regionX(a),f="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated&&"end"in a?f(a.end):c.width:d.axis_rotated?c.width:"end"in a?c.x(c.isTimeSeries()?c.parseDate(a.end):a.end):c.width,e>b?0:b-e},i.regionHeight=function(a){var b,c=this,d=c.config,e=this.regionY(a),f="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated?c.height:"start"in a?f(a.start):c.height:d.axis_rotated&&"end"in a?c.x(c.isTimeSeries()?c.parseDate(a.end):a.end):c.height,e>b?0:b-e},i.isRegionOnX=function(a){return!a.axis||"x"===a.axis},i.drag=function(a){var b,c,d,e,f,g,h,i,j=this,k=j.config,m=j.main,n=j.d3;j.hasArcType()||k.data_selection_enabled&&(!k.zoom_enabled||j.zoom.altDomain)&&k.data_selection_multiple&&(b=j.dragStart[0],c=j.dragStart[1],d=a[0],e=a[1],f=Math.min(b,d),g=Math.max(b,d),h=k.data_selection_grouped?j.margin.top:Math.min(c,e),i=k.data_selection_grouped?j.height:Math.max(c,e),m.select("."+l.dragarea).attr("x",f).attr("y",h).attr("width",g-f).attr("height",i-h),m.selectAll("."+l.shapes).selectAll("."+l.shape).filter(function(a){return k.data_selection_isselectable(a)}).each(function(a,b){var c,d,e,k,m,o,p=n.select(this),q=p.classed(l.SELECTED),r=p.classed(l.INCLUDED),s=!1;if(p.classed(l.circle))c=1*p.attr("cx"),d=1*p.attr("cy"),m=j.togglePoint,s=c>f&&g>c&&d>h&&i>d;else{if(!p.classed(l.bar))return;o=y(this),c=o.x,d=o.y,e=o.width,k=o.height,m=j.togglePath,s=!(c>g||f>c+e||d>i||h>d+k)}s^r&&(p.classed(l.INCLUDED,!r),p.classed(l.SELECTED,!q),m.call(j,!q,p,a,b))}))},i.dragstart=function(a){var b=this,c=b.config;b.hasArcType()||c.data_selection_enabled&&(b.dragStart=a,b.main.select("."+l.chart).append("rect").attr("class",l.dragarea).style("opacity",.1),b.dragging=!0)},i.dragend=function(){var a=this,b=a.config;a.hasArcType()||b.data_selection_enabled&&(a.main.select("."+l.dragarea).transition().duration(100).style("opacity",0).remove(),a.main.selectAll("."+l.shape).classed(l.INCLUDED,!1),a.dragging=!1)},i.selectPoint=function(a,b,c){var d=this,e=d.config,f=(e.axis_rotated?d.circleY:d.circleX).bind(d),g=(e.axis_rotated?d.circleX:d.circleY).bind(d),h=d.pointSelectR.bind(d);e.data_onselected.call(d.api,b,a.node()),d.main.select("."+l.selectedCircles+d.getTargetSelectorSuffix(b.id)).selectAll("."+l.selectedCircle+"-"+c).data([b]).enter().append("circle").attr("class",function(){return d.generateClass(l.selectedCircle,c)}).attr("cx",f).attr("cy",g).attr("stroke",function(){return d.color(b)}).attr("r",function(a){return 1.4*d.pointSelectR(a)}).transition().duration(100).attr("r",h)},i.unselectPoint=function(a,b,c){var d=this;d.config.data_onunselected(b,a.node()),d.main.select("."+l.selectedCircles+d.getTargetSelectorSuffix(b.id)).selectAll("."+l.selectedCircle+"-"+c).transition().duration(100).attr("r",0).remove()},i.togglePoint=function(a,b,c,d){a?this.selectPoint(b,c,d):this.unselectPoint(b,c,d)},i.selectPath=function(a,b){var c=this;c.config.data_onselected.call(c,b,a.node()),a.transition().duration(100).style("fill",function(){return c.d3.rgb(c.color(b)).brighter(.75)})},i.unselectPath=function(a,b){var c=this;c.config.data_onunselected.call(c,b,a.node()),a.transition().duration(100).style("fill",function(){return c.color(b)})},i.togglePath=function(a,b,c,d){a?this.selectPath(b,c,d):this.unselectPath(b,c,d)},i.getToggle=function(a,b){var c,d=this;return"circle"===a.nodeName?c=d.isStepType(b)?function(){}:d.togglePoint:"path"===a.nodeName&&(c=d.togglePath),c},i.toggleShape=function(a,b,c){var d=this,e=d.d3,f=d.config,g=e.select(a),h=g.classed(l.SELECTED),i=d.getToggle(a,b).bind(d);f.data_selection_enabled&&f.data_selection_isselectable(b)&&(f.data_selection_multiple||d.main.selectAll("."+l.shapes+(f.data_selection_grouped?d.getTargetSelectorSuffix(b.id):"")).selectAll("."+l.shape).each(function(a,b){var c=e.select(this);c.classed(l.SELECTED)&&i(!1,c.classed(l.SELECTED,!1),a,b)}),g.classed(l.SELECTED,!h),i(!h,g,b,c))},i.initBrush=function(){var a=this,b=a.d3;a.brush=b.svg.brush().on("brush",function(){a.redrawForBrush()}),a.brush.update=function(){return a.context&&a.context.select("."+l.brush).call(this),this},a.brush.scale=function(b){return a.config.axis_rotated?this.y(b):this.x(b)}},i.initSubchart=function(){var a=this,b=a.config,c=a.context=a.svg.append("g").attr("transform",a.getTranslate("context"));c.style("visibility",b.subchart_show?"visible":"hidden"),c.append("g").attr("clip-path",a.clipPathForSubchart).attr("class",l.chart),c.select("."+l.chart).append("g").attr("class",l.chartBars),c.select("."+l.chart).append("g").attr("class",l.chartLines),c.append("g").attr("clip-path",a.clipPath).attr("class",l.brush).call(a.brush),a.axes.subx=c.append("g").attr("class",l.axisX).attr("transform",a.getTranslate("subx")).attr("clip-path",b.axis_rotated?"":a.clipPathForXAxis)},i.updateTargetsForSubchart=function(a){var b,c,d,e,f=this,g=f.context,h=f.config,i=f.classChartBar.bind(f),j=f.classBars.bind(f),k=f.classChartLine.bind(f),m=f.classLines.bind(f),n=f.classAreas.bind(f);h.subchart_show&&(e=g.select("."+l.chartBars).selectAll("."+l.chartBar).data(a).attr("class",i),d=e.enter().append("g").style("opacity",0).attr("class",i),d.append("g").attr("class",j),c=g.select("."+l.chartLines).selectAll("."+l.chartLine).data(a).attr("class",k),b=c.enter().append("g").style("opacity",0).attr("class",k),b.append("g").attr("class",m),b.append("g").attr("class",n),g.selectAll("."+l.brush+" rect").attr(h.axis_rotated?"width":"height",h.axis_rotated?f.width2:f.height2))},i.updateBarForSubchart=function(a){var b=this;b.contextBar=b.context.selectAll("."+l.bars).selectAll("."+l.bar).data(b.barData.bind(b)),b.contextBar.enter().append("path").attr("class",b.classBar.bind(b)).style("stroke","none").style("fill",b.color),b.contextBar.style("opacity",b.initialOpacity.bind(b)),b.contextBar.exit().transition().duration(a).style("opacity",0).remove()},i.redrawBarForSubchart=function(a,b,c){(b?this.contextBar.transition().duration(c):this.contextBar).attr("d",a).style("opacity",1)},i.updateLineForSubchart=function(a){var b=this;b.contextLine=b.context.selectAll("."+l.lines).selectAll("."+l.line).data(b.lineData.bind(b)),b.contextLine.enter().append("path").attr("class",b.classLine.bind(b)).style("stroke",b.color),b.contextLine.style("opacity",b.initialOpacity.bind(b)),b.contextLine.exit().transition().duration(a).style("opacity",0).remove()},i.redrawLineForSubchart=function(a,b,c){(b?this.contextLine.transition().duration(c):this.contextLine).attr("d",a).style("opacity",1)},i.updateAreaForSubchart=function(a){var b=this,c=b.d3;b.contextArea=b.context.selectAll("."+l.areas).selectAll("."+l.area).data(b.lineData.bind(b)),b.contextArea.enter().append("path").attr("class",b.classArea.bind(b)).style("fill",b.color).style("opacity",function(){return b.orgAreaOpacity=+c.select(this).style("opacity"),0}),b.contextArea.style("opacity",0),b.contextArea.exit().transition().duration(a).style("opacity",0).remove()},i.redrawAreaForSubchart=function(a,b,c){(b?this.contextArea.transition().duration(c):this.contextArea).attr("d",a).style("fill",this.color).style("opacity",this.orgAreaOpacity)},i.redrawSubchart=function(a,b,c,d,e,f,g){var h,i,j,k=this,l=k.d3,m=k.config;k.context.style("visibility",m.subchart_show?"visible":"hidden"),m.subchart_show&&(l.event&&"zoom"===l.event.type&&k.brush.extent(k.x.orgDomain()).update(),a&&(k.brush.empty()||k.brush.extent(k.x.orgDomain()).update(),h=k.generateDrawArea(e,!0),i=k.generateDrawBar(f,!0),j=k.generateDrawLine(g,!0),k.updateBarForSubchart(c),k.updateLineForSubchart(c),k.updateAreaForSubchart(c),k.redrawBarForSubchart(i,c,c),k.redrawLineForSubchart(j,c,c),k.redrawAreaForSubchart(h,c,c)))},i.redrawForBrush=function(){var a=this,b=a.x;a.redraw({withTransition:!1,withY:a.config.zoom_rescale,withSubchart:!1,withUpdateXDomain:!0,withDimension:!1}),a.config.subchart_onbrush.call(a.api,b.orgDomain())},i.transformContext=function(a,b){var c,d=this;b&&b.axisSubX?c=b.axisSubX:(c=d.context.select("."+l.axisX),a&&(c=c.transition())),d.context.attr("transform",d.getTranslate("context")),c.attr("transform",d.getTranslate("subx"))},i.getDefaultExtent=function(){var a=this,b=a.config,c=n(b.axis_x_extent)?b.axis_x_extent(a.getXDomain(a.data.targets)):b.axis_x_extent;return a.isTimeSeries()&&(c=[a.parseDate(c[0]),a.parseDate(c[1])]),c},i.initZoom=function(){var a,b=this,c=b.d3,d=b.config;b.zoom=c.behavior.zoom().on("zoomstart",function(){a=c.event.sourceEvent,b.zoom.altDomain=c.event.sourceEvent.altKey?b.x.orgDomain():null,d.zoom_onzoomstart.call(b.api,c.event.sourceEvent)}).on("zoom",function(){b.redrawForZoom.call(b)}).on("zoomend",function(){var e=c.event.sourceEvent;e&&a.clientX===e.clientX&&a.clientY===e.clientY||(b.redrawEventRect(),b.updateZoom(),d.zoom_onzoomend.call(b.api,b.x.orgDomain()))}),b.zoom.scale=function(a){return d.axis_rotated?this.y(a):this.x(a)},b.zoom.orgScaleExtent=function(){var a=d.zoom_extent?d.zoom_extent:[1,10];return[a[0],Math.max(b.getMaxDataCount()/a[1],a[1])]},b.zoom.updateScaleExtent=function(){var a=t(b.x.orgDomain())/t(b.orgXDomain),c=this.orgScaleExtent();return this.scaleExtent([c[0]*a,c[1]*a]),this}},i.updateZoom=function(){var a=this,b=a.config.zoom_enabled?a.zoom:function(){};a.main.select("."+l.zoomRect).call(b).on("dblclick.zoom",null),a.main.selectAll("."+l.eventRect).call(b).on("dblclick.zoom",null)},i.redrawForZoom=function(){var a=this,b=a.d3,c=a.config,d=a.zoom,e=a.x;if(c.zoom_enabled&&0!==a.filterTargetsToShow(a.data.targets).length){if("mousemove"===b.event.sourceEvent.type&&d.altDomain)return e.domain(d.altDomain),void d.scale(e).updateScaleExtent();a.isCategorized()&&e.orgDomain()[0]===a.orgXDomain[0]&&e.domain([a.orgXDomain[0]-1e-10,e.orgDomain()[1]]),a.redraw({withTransition:!1,withY:c.zoom_rescale,withSubchart:!1,withEventRect:!1,withDimension:!1}),"mousemove"===b.event.sourceEvent.type&&(a.cancelClick=!0),c.zoom_onzoom.call(a.api,e.orgDomain())}},i.generateColor=function(){var a=this,b=a.config,c=a.d3,d=b.data_colors,e=v(b.color_pattern)?b.color_pattern:c.scale.category10().range(),f=b.data_color,g=[];return function(a){var b,c=a.id||a.data&&a.data.id||a;return d[c]instanceof Function?b=d[c](a):d[c]?b=d[c]:(g.indexOf(c)<0&&g.push(c),b=e[g.indexOf(c)%e.length],d[c]=b),f instanceof Function?f(b,a):b}},i.generateLevelColor=function(){var a=this,b=a.config,c=b.color_pattern,d=b.color_threshold,e="value"===d.unit,f=d.values&&d.values.length?d.values:[],g=d.max||100;return v(b.color_threshold)?function(a){var b,d,h=c[c.length-1];for(b=0;b<f.length;b++)if(d=e?a:100*a/g,d<f[b]){h=c[b];break}return h}:null},i.getYFormat=function(a){var b=this,c=a&&!b.hasType("gauge")?b.defaultArcValueFormat:b.yFormat,d=a&&!b.hasType("gauge")?b.defaultArcValueFormat:b.y2Format;return function(a,e,f){var g="y2"===b.axis.getId(f)?d:c;return g.call(b,a,e)}},i.yFormat=function(a){var b=this,c=b.config,d=c.axis_y_tick_format?c.axis_y_tick_format:b.defaultValueFormat;return d(a)},i.y2Format=function(a){var b=this,c=b.config,d=c.axis_y2_tick_format?c.axis_y2_tick_format:b.defaultValueFormat;return d(a)},i.defaultValueFormat=function(a){return m(a)?+a:""},i.defaultArcValueFormat=function(a,b){return(100*b).toFixed(1)+"%"},i.dataLabelFormat=function(a){var b,c=this,d=c.config.data_labels,e=function(a){return m(a)?+a:""};return b="function"==typeof d.format?d.format:"object"==typeof d.format?d.format[a]?d.format[a]===!0?e:d.format[a]:function(){return""}:e},i.hasCaches=function(a){for(var b=0;b<a.length;b++)if(!(a[b]in this.cache))return!1;return!0},i.addCache=function(a,b){this.cache[a]=this.cloneTarget(b)},i.getCaches=function(a){var b,c=[];for(b=0;b<a.length;b++)a[b]in this.cache&&c.push(this.cloneTarget(this.cache[a[b]]));return c};var l=i.CLASS={target:"c3-target",chart:"c3-chart",chartLine:"c3-chart-line",chartLines:"c3-chart-lines",chartBar:"c3-chart-bar",chartBars:"c3-chart-bars",chartText:"c3-chart-text",chartTexts:"c3-chart-texts",chartArc:"c3-chart-arc",chartArcs:"c3-chart-arcs",chartArcsTitle:"c3-chart-arcs-title",chartArcsBackground:"c3-chart-arcs-background",chartArcsGaugeUnit:"c3-chart-arcs-gauge-unit",chartArcsGaugeMax:"c3-chart-arcs-gauge-max",chartArcsGaugeMin:"c3-chart-arcs-gauge-min",selectedCircle:"c3-selected-circle",selectedCircles:"c3-selected-circles",eventRect:"c3-event-rect",eventRects:"c3-event-rects",eventRectsSingle:"c3-event-rects-single",eventRectsMultiple:"c3-event-rects-multiple",zoomRect:"c3-zoom-rect",brush:"c3-brush",focused:"c3-focused",defocused:"c3-defocused",region:"c3-region",regions:"c3-regions",tooltipContainer:"c3-tooltip-container",tooltip:"c3-tooltip",tooltipName:"c3-tooltip-name",shape:"c3-shape",shapes:"c3-shapes",line:"c3-line",lines:"c3-lines",bar:"c3-bar",bars:"c3-bars",circle:"c3-circle",circles:"c3-circles",arc:"c3-arc",arcs:"c3-arcs",area:"c3-area",areas:"c3-areas",empty:"c3-empty",text:"c3-text",texts:"c3-texts",gaugeValue:"c3-gauge-value",grid:"c3-grid",gridLines:"c3-grid-lines",xgrid:"c3-xgrid",xgrids:"c3-xgrids",xgridLine:"c3-xgrid-line",xgridLines:"c3-xgrid-lines",xgridFocus:"c3-xgrid-focus",ygrid:"c3-ygrid",ygrids:"c3-ygrids",ygridLine:"c3-ygrid-line",ygridLines:"c3-ygrid-lines",axis:"c3-axis",axisX:"c3-axis-x",axisXLabel:"c3-axis-x-label",axisY:"c3-axis-y",axisYLabel:"c3-axis-y-label",axisY2:"c3-axis-y2",axisY2Label:"c3-axis-y2-label",legendBackground:"c3-legend-background",legendItem:"c3-legend-item",legendItemEvent:"c3-legend-item-event",legendItemTile:"c3-legend-item-tile",legendItemHidden:"c3-legend-item-hidden",legendItemFocused:"c3-legend-item-focused",dragarea:"c3-dragarea",EXPANDED:"_expanded_",SELECTED:"_selected_",INCLUDED:"_included_"};i.generateClass=function(a,b){return" "+a+" "+a+this.getTargetSelectorSuffix(b)},i.classText=function(a){return this.generateClass(l.text,a.index)},i.classTexts=function(a){return this.generateClass(l.texts,a.id)},i.classShape=function(a){return this.generateClass(l.shape,a.index)},i.classShapes=function(a){return this.generateClass(l.shapes,a.id)},i.classLine=function(a){return this.classShape(a)+this.generateClass(l.line,a.id)},i.classLines=function(a){return this.classShapes(a)+this.generateClass(l.lines,a.id)},i.classCircle=function(a){return this.classShape(a)+this.generateClass(l.circle,a.index)},i.classCircles=function(a){return this.classShapes(a)+this.generateClass(l.circles,a.id)},i.classBar=function(a){return this.classShape(a)+this.generateClass(l.bar,a.index)},i.classBars=function(a){return this.classShapes(a)+this.generateClass(l.bars,a.id)},i.classArc=function(a){return this.classShape(a.data)+this.generateClass(l.arc,a.data.id)},i.classArcs=function(a){return this.classShapes(a.data)+this.generateClass(l.arcs,a.data.id)},i.classArea=function(a){return this.classShape(a)+this.generateClass(l.area,a.id)},i.classAreas=function(a){return this.classShapes(a)+this.generateClass(l.areas,a.id)},i.classRegion=function(a,b){return this.generateClass(l.region,b)+" "+("class"in a?a["class"]:"")},i.classEvent=function(a){return this.generateClass(l.eventRect,a.index)},i.classTarget=function(a){var b=this,c=b.config.data_classes[a],d="";return c&&(d=" "+l.target+"-"+c),b.generateClass(l.target,a)+d},i.classFocus=function(a){return this.classFocused(a)+this.classDefocused(a)},i.classFocused=function(a){return" "+(this.focusedTargetIds.indexOf(a.id)>=0?l.focused:"")},i.classDefocused=function(a){return" "+(this.defocusedTargetIds.indexOf(a.id)>=0?l.defocused:"")},i.classChartText=function(a){return l.chartText+this.classTarget(a.id)},i.classChartLine=function(a){return l.chartLine+this.classTarget(a.id)},i.classChartBar=function(a){return l.chartBar+this.classTarget(a.id)},i.classChartArc=function(a){return l.chartArc+this.classTarget(a.data.id)},i.getTargetSelectorSuffix=function(a){return a||0===a?("-"+a).replace(/[\s?!@#$%^&*()_=+,.<>'":;\[\]\/|~`{}\\]/g,"-"):""},i.selectorTarget=function(a,b){return(b||"")+"."+l.target+this.getTargetSelectorSuffix(a)},i.selectorTargets=function(a,b){var c=this;return a=a||[],a.length?a.map(function(a){return c.selectorTarget(a,b)}):null},i.selectorLegend=function(a){return"."+l.legendItem+this.getTargetSelectorSuffix(a)},i.selectorLegends=function(a){var b=this;return a&&a.length?a.map(function(a){return b.selectorLegend(a)}):null};var m=i.isValue=function(a){return a||0===a},n=i.isFunction=function(a){return"function"==typeof a},o=i.isString=function(a){return"string"==typeof a},p=i.isUndefined=function(a){return"undefined"==typeof a},q=i.isDefined=function(a){return"undefined"!=typeof a},r=i.ceil10=function(a){return 10*Math.ceil(a/10)},s=i.asHalfPixel=function(a){return Math.ceil(a)+.5},t=i.diffDomain=function(a){return a[1]-a[0]},u=i.isEmpty=function(a){return!a||o(a)&&0===a.length||"object"==typeof a&&0===Object.keys(a).length},v=i.notEmpty=function(a){return Object.keys(a).length>0},w=i.getOption=function(a,b,c){return q(a[b])?a[b]:c},x=i.hasValue=function(a,b){var c=!1;return Object.keys(a).forEach(function(d){a[d]===b&&(c=!0)}),c},y=i.getPathBox=function(a){var b=a.getBoundingClientRect(),c=[a.pathSegList.getItem(0),a.pathSegList.getItem(1)],d=c[0].x,e=Math.min(c[0].y,c[1].y);return{x:d,y:e,width:b.width,height:b.height}};h.focus=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a.filter(c.isTargetToShow,c))),this.revert(),this.defocus(),b.classed(l.focused,!0).classed(l.defocused,!1),c.hasArcType()&&c.expandArc(a),c.toggleFocusLegend(a,!0),c.focusedTargetIds=a,c.defocusedTargetIds=c.defocusedTargetIds.filter(function(b){return a.indexOf(b)<0})},h.defocus=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a.filter(c.isTargetToShow,c))),b.classed(l.focused,!1).classed(l.defocused,!0),c.hasArcType()&&c.unexpandArc(a),c.toggleFocusLegend(a,!1),c.focusedTargetIds=c.focusedTargetIds.filter(function(b){return a.indexOf(b)<0}),c.defocusedTargetIds=a},h.revert=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a)),b.classed(l.focused,!1).classed(l.defocused,!1),c.hasArcType()&&c.unexpandArc(a),c.config.legend_show&&(c.showLegend(a.filter(c.isLegendToShow.bind(c))),c.legend.selectAll(c.selectorLegends(a)).filter(function(){return c.d3.select(this).classed(l.legendItemFocused)}).classed(l.legendItemFocused,!1)),c.focusedTargetIds=[],c.defocusedTargetIds=[]},h.show=function(a,b){var c,d=this.internal;a=d.mapToTargetIds(a),b=b||{},d.removeHiddenTargetIds(a),c=d.svg.selectAll(d.selectorTargets(a)),c.transition().style("opacity",1,"important").call(d.endall,function(){c.style("opacity",null).style("opacity",1)}),b.withLegend&&d.showLegend(a),d.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0})},h.hide=function(a,b){var c,d=this.internal;a=d.mapToTargetIds(a),b=b||{},d.addHiddenTargetIds(a),c=d.svg.selectAll(d.selectorTargets(a)),c.transition().style("opacity",0,"important").call(d.endall,function(){c.style("opacity",null).style("opacity",0)}),b.withLegend&&d.hideLegend(a),d.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0})},h.toggle=function(a,b){var c=this,d=this.internal;d.mapToTargetIds(a).forEach(function(a){d.isTargetToShow(a)?c.hide(a,b):c.show(a,b)})},h.zoom=function(a){var b=this.internal;return a&&(b.isTimeSeries()&&(a=a.map(function(a){return b.parseDate(a)})),b.brush.extent(a),b.redraw({withUpdateXDomain:!0,withY:b.config.zoom_rescale}),b.config.zoom_onzoom.call(this,b.x.orgDomain())),b.brush.extent()},h.zoom.enable=function(a){var b=this.internal;b.config.zoom_enabled=a,b.updateAndRedraw()},h.unzoom=function(){var a=this.internal;a.brush.clear().update(),a.redraw({withUpdateXDomain:!0})},h.load=function(a){var b=this.internal,c=b.config;return a.xs&&b.addXs(a.xs),"classes"in a&&Object.keys(a.classes).forEach(function(b){c.data_classes[b]=a.classes[b]}),"categories"in a&&b.isCategorized()&&(c.axis_x_categories=a.categories),"axes"in a&&Object.keys(a.axes).forEach(function(b){c.data_axes[b]=a.axes[b]}),"colors"in a&&Object.keys(a.colors).forEach(function(b){c.data_colors[b]=a.colors[b]}),"cacheIds"in a&&b.hasCaches(a.cacheIds)?void b.load(b.getCaches(a.cacheIds),a.done):void("unload"in a?b.unload(b.mapToTargetIds("boolean"==typeof a.unload&&a.unload?null:a.unload),function(){b.loadFromArgs(a)}):b.loadFromArgs(a))},h.unload=function(a){var b=this.internal;a=a||{},a instanceof Array?a={ids:a}:"string"==typeof a&&(a={ids:[a]}),b.unload(b.mapToTargetIds(a.ids),function(){b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0}),a.done&&a.done()})},h.flow=function(a){var b,c,d,e,f,g,h,i,j=this.internal,k=[],l=j.getMaxDataCount(),n=0,o=0;if(a.json)c=j.convertJsonToData(a.json,a.keys);else if(a.rows)c=j.convertRowsToData(a.rows);else{if(!a.columns)return;c=j.convertColumnsToData(a.columns)}b=j.convertDataToTargets(c,!0),j.data.targets.forEach(function(a){var c,d,e=!1;for(c=0;c<b.length;c++)if(a.id===b[c].id){for(e=!0,a.values[a.values.length-1]&&(o=a.values[a.values.length-1].index+1),n=b[c].values.length,d=0;n>d;d++)b[c].values[d].index=o+d,j.isTimeSeries()||(b[c].values[d].x=o+d);a.values=a.values.concat(b[c].values),b.splice(c,1);break}e||k.push(a.id)}),j.data.targets.forEach(function(a){var b,c;for(b=0;b<k.length;b++)if(a.id===k[b])for(o=a.values[a.values.length-1].index+1,c=0;n>c;c++)a.values.push({id:a.id,index:o+c,x:j.isTimeSeries()?j.getOtherTargetX(o+c):o+c,value:null})}),j.data.targets.length&&b.forEach(function(a){var b,c=[];for(b=j.data.targets[0].values[0].index;o>b;b++)c.push({id:a.id,index:b,x:j.isTimeSeries()?j.getOtherTargetX(b):b,value:null});a.values.forEach(function(a){a.index+=o,j.isTimeSeries()||(a.x+=o)}),a.values=c.concat(a.values)}),j.data.targets=j.data.targets.concat(b),d=j.getMaxDataCount(),f=j.data.targets[0],g=f.values[0],q(a.to)?(n=0,i=j.isTimeSeries()?j.parseDate(a.to):a.to,f.values.forEach(function(a){a.x<i&&n++})):q(a.length)&&(n=a.length),l?1===l&&j.isTimeSeries()&&(h=(f.values[f.values.length-1].x-g.x)/2,e=[new Date(+g.x-h),new Date(+g.x+h)],j.updateXDomain(null,!0,!0,!1,e)):(h=j.isTimeSeries()?f.values.length>1?f.values[f.values.length-1].x-g.x:g.x-j.getXDomain(j.data.targets)[0]:1,e=[g.x-h,g.x],j.updateXDomain(null,!0,!0,!1,e)),j.updateTargets(j.data.targets),j.redraw({flow:{index:g.index,length:n,duration:m(a.duration)?a.duration:j.config.transition_duration,done:a.done,orgDataCount:l},withLegend:!0,withTransition:l>1,withTrimXDomain:!1,withUpdateXAxis:!0})},i.generateFlow=function(a){var b=this,c=b.config,d=b.d3;return function(){var e,f,g,h=a.targets,i=a.flow,j=a.drawBar,k=a.drawLine,m=a.drawArea,n=a.cx,o=a.cy,p=a.xv,q=a.xForText,r=a.yForText,s=a.duration,u=1,v=i.index,w=i.length,x=b.getValueOnIndex(b.data.targets[0].values,v),y=b.getValueOnIndex(b.data.targets[0].values,v+w),z=b.x.domain(),A=i.duration||s,B=i.done||function(){},C=b.generateWait(),D=b.xgrid||d.selectAll([]),E=b.xgridLines||d.selectAll([]),F=b.mainRegion||d.selectAll([]),G=b.mainText||d.selectAll([]),H=b.mainBar||d.selectAll([]),I=b.mainLine||d.selectAll([]),J=b.mainArea||d.selectAll([]),K=b.mainCircle||d.selectAll([]);b.flowing=!0,b.data.targets.forEach(function(a){a.values.splice(0,w)}),g=b.updateXDomain(h,!0,!0),b.updateXGrid&&b.updateXGrid(!0),i.orgDataCount?e=1===i.orgDataCount||x.x===y.x?b.x(z[0])-b.x(g[0]):b.isTimeSeries()?b.x(z[0])-b.x(g[0]):b.x(x.x)-b.x(y.x):1!==b.data.targets[0].values.length?e=b.x(z[0])-b.x(g[0]):b.isTimeSeries()?(x=b.getValueOnIndex(b.data.targets[0].values,0),y=b.getValueOnIndex(b.data.targets[0].values,b.data.targets[0].values.length-1),e=b.x(x.x)-b.x(y.x)):e=t(g)/2,u=t(z)/t(g),f="translate("+e+",0) scale("+u+",1)",b.hideXGridFocus(),b.hideTooltip(),d.transition().ease("linear").duration(A).each(function(){C.add(b.axes.x.transition().call(b.xAxis)),C.add(H.transition().attr("transform",f)),C.add(I.transition().attr("transform",f)),C.add(J.transition().attr("transform",f)),C.add(K.transition().attr("transform",f)),C.add(G.transition().attr("transform",f)),C.add(F.filter(b.isRegionOnX).transition().attr("transform",f)),C.add(D.transition().attr("transform",f)),C.add(E.transition().attr("transform",f))
	}).call(C,function(){var a,d=[],e=[],f=[];if(w){for(a=0;w>a;a++)d.push("."+l.shape+"-"+(v+a)),e.push("."+l.text+"-"+(v+a)),f.push("."+l.eventRect+"-"+(v+a));b.svg.selectAll("."+l.shapes).selectAll(d).remove(),b.svg.selectAll("."+l.texts).selectAll(e).remove(),b.svg.selectAll("."+l.eventRects).selectAll(f).remove(),b.svg.select("."+l.xgrid).remove()}D.attr("transform",null).attr(b.xgridAttr),E.attr("transform",null),E.select("line").attr("x1",c.axis_rotated?0:p).attr("x2",c.axis_rotated?b.width:p),E.select("text").attr("x",c.axis_rotated?b.width:0).attr("y",p),H.attr("transform",null).attr("d",j),I.attr("transform",null).attr("d",k),J.attr("transform",null).attr("d",m),K.attr("transform",null).attr("cx",n).attr("cy",o),G.attr("transform",null).attr("x",q).attr("y",r).style("fill-opacity",b.opacityForText.bind(b)),F.attr("transform",null),F.select("rect").filter(b.isRegionOnX).attr("x",b.regionX.bind(b)).attr("width",b.regionWidth.bind(b)),c.interaction_enabled&&b.redrawEventRect(),B(),b.flowing=!1})}},h.selected=function(a){var b=this.internal,c=b.d3;return c.merge(b.main.selectAll("."+l.shapes+b.getTargetSelectorSuffix(a)).selectAll("."+l.shape).filter(function(){return c.select(this).classed(l.SELECTED)}).map(function(a){return a.map(function(a){var b=a.__data__;return b.data?b.data:b})}))},h.select=function(a,b,c){var d=this.internal,e=d.d3,f=d.config;f.data_selection_enabled&&d.main.selectAll("."+l.shapes).selectAll("."+l.shape).each(function(g,h){var i=e.select(this),j=g.data?g.data.id:g.id,k=d.getToggle(this,g).bind(d),m=f.data_selection_grouped||!a||a.indexOf(j)>=0,n=!b||b.indexOf(h)>=0,o=i.classed(l.SELECTED);i.classed(l.line)||i.classed(l.area)||(m&&n?f.data_selection_isselectable(g)&&!o&&k(!0,i.classed(l.SELECTED,!0),g,h):q(c)&&c&&o&&k(!1,i.classed(l.SELECTED,!1),g,h))})},h.unselect=function(a,b){var c=this.internal,d=c.d3,e=c.config;e.data_selection_enabled&&c.main.selectAll("."+l.shapes).selectAll("."+l.shape).each(function(f,g){var h=d.select(this),i=f.data?f.data.id:f.id,j=c.getToggle(this,f).bind(c),k=e.data_selection_grouped||!a||a.indexOf(i)>=0,m=!b||b.indexOf(g)>=0,n=h.classed(l.SELECTED);h.classed(l.line)||h.classed(l.area)||k&&m&&e.data_selection_isselectable(f)&&n&&j(!1,h.classed(l.SELECTED,!1),f,g)})},h.transform=function(a,b){var c=this.internal,d=["pie","donut"].indexOf(a)>=0?{withTransform:!0}:null;c.transformTo(b,a,d)},i.transformTo=function(a,b,c){var d=this,e=!d.hasArcType(),f=c||{withTransitionForAxis:e};f.withTransitionForTransform=!1,d.transiting=!1,d.setTargetType(a,b),d.updateTargets(d.data.targets),d.updateAndRedraw(f)},h.groups=function(a){var b=this.internal,c=b.config;return p(a)?c.data_groups:(c.data_groups=a,b.redraw(),c.data_groups)},h.xgrids=function(a){var b=this.internal,c=b.config;return a?(c.grid_x_lines=a,b.redrawWithoutRescale(),c.grid_x_lines):c.grid_x_lines},h.xgrids.add=function(a){var b=this.internal;return this.xgrids(b.config.grid_x_lines.concat(a?a:[]))},h.xgrids.remove=function(a){var b=this.internal;b.removeGridLines(a,!0)},h.ygrids=function(a){var b=this.internal,c=b.config;return a?(c.grid_y_lines=a,b.redrawWithoutRescale(),c.grid_y_lines):c.grid_y_lines},h.ygrids.add=function(a){var b=this.internal;return this.ygrids(b.config.grid_y_lines.concat(a?a:[]))},h.ygrids.remove=function(a){var b=this.internal;b.removeGridLines(a,!1)},h.regions=function(a){var b=this.internal,c=b.config;return a?(c.regions=a,b.redrawWithoutRescale(),c.regions):c.regions},h.regions.add=function(a){var b=this.internal,c=b.config;return a?(c.regions=c.regions.concat(a),b.redrawWithoutRescale(),c.regions):c.regions},h.regions.remove=function(a){var b,c,d,e=this.internal,f=e.config;return a=a||{},b=e.getOption(a,"duration",f.transition_duration),c=e.getOption(a,"classes",[l.region]),d=e.main.select("."+l.regions).selectAll(c.map(function(a){return"."+a})),(b?d.transition().duration(b):d).style("opacity",0).remove(),f.regions=f.regions.filter(function(a){var b=!1;return a["class"]?(a["class"].split(" ").forEach(function(a){c.indexOf(a)>=0&&(b=!0)}),!b):!0}),f.regions},h.data=function(a){var b=this.internal.data.targets;return"undefined"==typeof a?b:b.filter(function(b){return[].concat(a).indexOf(b.id)>=0})},h.data.shown=function(a){return this.internal.filterTargetsToShow(this.data(a))},h.data.values=function(a){var b,c=null;return a&&(b=this.data(a),c=b[0]?b[0].values.map(function(a){return a.value}):null),c},h.data.names=function(a){return this.internal.clearLegendItemTextBoxCache(),this.internal.updateDataAttributes("names",a)},h.data.colors=function(a){return this.internal.updateDataAttributes("colors",a)},h.data.axes=function(a){return this.internal.updateDataAttributes("axes",a)},h.category=function(a,b){var c=this.internal,d=c.config;return arguments.length>1&&(d.axis_x_categories[a]=b,c.redraw()),d.axis_x_categories[a]},h.categories=function(a){var b=this.internal,c=b.config;return arguments.length?(c.axis_x_categories=a,b.redraw(),c.axis_x_categories):c.axis_x_categories},h.color=function(a){var b=this.internal;return b.color(a)},h.x=function(a){var b=this.internal;return arguments.length&&(b.updateTargetX(b.data.targets,a),b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})),b.data.xs},h.xs=function(a){var b=this.internal;return arguments.length&&(b.updateTargetXs(b.data.targets,a),b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})),b.data.xs},h.axis=function(){},h.axis.labels=function(a){var b=this.internal;arguments.length&&(Object.keys(a).forEach(function(c){b.axis.setLabelText(c,a[c])}),b.axis.updateLabels())},h.axis.max=function(a){var b=this.internal,c=b.config;return arguments.length?("object"==typeof a?(m(a.x)&&(c.axis_x_max=a.x),m(a.y)&&(c.axis_y_max=a.y),m(a.y2)&&(c.axis_y2_max=a.y2)):c.axis_y_max=c.axis_y2_max=a,void b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})):{x:c.axis_x_max,y:c.axis_y_max,y2:c.axis_y2_max}},h.axis.min=function(a){var b=this.internal,c=b.config;return arguments.length?("object"==typeof a?(m(a.x)&&(c.axis_x_min=a.x),m(a.y)&&(c.axis_y_min=a.y),m(a.y2)&&(c.axis_y2_min=a.y2)):c.axis_y_min=c.axis_y2_min=a,void b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})):{x:c.axis_x_min,y:c.axis_y_min,y2:c.axis_y2_min}},h.axis.range=function(a){return arguments.length?(q(a.max)&&this.axis.max(a.max),void(q(a.min)&&this.axis.min(a.min))):{max:this.axis.max(),min:this.axis.min()}},h.legend=function(){},h.legend.show=function(a){var b=this.internal;b.showLegend(b.mapToTargetIds(a)),b.updateAndRedraw({withLegend:!0})},h.legend.hide=function(a){var b=this.internal;b.hideLegend(b.mapToTargetIds(a)),b.updateAndRedraw({withLegend:!0})},h.resize=function(a){var b=this.internal,c=b.config;c.size_width=a?a.width:null,c.size_height=a?a.height:null,this.flush()},h.flush=function(){var a=this.internal;a.updateAndRedraw({withLegend:!0,withTransition:!1,withTransitionForTransform:!1})},h.destroy=function(){var b=this.internal;return a.clearInterval(b.intervalForObserveInserted),a.onresize=null,b.selectChart.classed("c3",!1).html(""),Object.keys(b).forEach(function(a){b[a]=null}),null},h.tooltip=function(){},h.tooltip.show=function(a){var b,c,d=this.internal;a.mouse&&(c=a.mouse),a.data?d.isMultipleX()?(c=[d.x(a.data.x),d.getYScale(a.data.id)(a.data.value)],b=null):b=m(a.data.index)?a.data.index:d.getIndexByX(a.data.x):"undefined"!=typeof a.x?b=d.getIndexByX(a.x):"undefined"!=typeof a.index&&(b=a.index),d.dispatchEvent("mouseover",b,c),d.dispatchEvent("mousemove",b,c)},h.tooltip.hide=function(){this.internal.dispatchEvent("mouseout",0)};var z;i.isSafari=function(){var b=a.navigator.userAgent;return b.indexOf("Safari")>=0&&b.indexOf("Chrome")<0},i.isChrome=function(){var b=a.navigator.userAgent;return b.indexOf("Chrome")>=0},Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}), true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(26)], __WEBPACK_AMD_DEFINE_FACTORY__ = (k), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"undefined"!=typeof exports&&"undefined"!=typeof module?module.exports=k:a.c3=k}(window);

/***/ },

/***/ 26:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {!function(){function n(n){return n&&(n.ownerDocument||n.document||n).documentElement}function t(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}function e(n,t){return t>n?-1:n>t?1:n>=t?0:NaN}function r(n){return null===n?NaN:+n}function u(n){return!isNaN(n)}function i(n){return{left:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)<0?r=i+1:u=i}return r},right:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)>0?u=i:r=i+1}return r}}}function a(n){return n.length}function o(n){for(var t=1;n*t%1;)t*=10;return t}function l(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function c(){this._=Object.create(null)}function s(n){return(n+="")===xa||n[0]===ba?ba+n:n}function f(n){return(n+="")[0]===ba?n.slice(1):n}function h(n){return s(n)in this._}function g(n){return(n=s(n))in this._&&delete this._[n]}function p(){var n=[];for(var t in this._)n.push(f(t));return n}function v(){var n=0;for(var t in this._)++n;return n}function d(){for(var n in this._)return!1;return!0}function m(){this._=Object.create(null)}function y(n){return n}function M(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function x(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=_a.length;r>e;++e){var u=_a[e]+t;if(u in n)return u}}function b(){}function _(){}function w(n){function t(){for(var t,r=e,u=-1,i=r.length;++u<i;)(t=r[u].on)&&t.apply(this,arguments);return n}var e=[],r=new c;return t.on=function(t,u){var i,a=r.get(t);return arguments.length<2?a&&a.on:(a&&(a.on=null,e=e.slice(0,i=e.indexOf(a)).concat(e.slice(i+1)),r.remove(t)),u&&e.push(r.set(t,{on:u})),n)},t}function S(){oa.event.preventDefault()}function k(){for(var n,t=oa.event;n=t.sourceEvent;)t=n;return t}function N(n){for(var t=new _,e=0,r=arguments.length;++e<r;)t[arguments[e]]=w(t);return t.of=function(e,r){return function(u){try{var i=u.sourceEvent=oa.event;u.target=n,oa.event=u,t[u.type].apply(e,r)}finally{oa.event=i}}},t}function E(n){return Sa(n,Aa),n}function A(n){return"function"==typeof n?n:function(){return ka(n,this)}}function C(n){return"function"==typeof n?n:function(){return Na(n,this)}}function z(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function u(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=oa.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?o:a:n.local?i:u}function L(n){return n.trim().replace(/\s+/g," ")}function q(n){return new RegExp("(?:^|\\s+)"+oa.requote(n)+"(?:\\s+|$)","g")}function T(n){return(n+"").trim().split(/^|\s+/)}function R(n,t){function e(){for(var e=-1;++e<u;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<u;)n[e](this,r)}n=T(n).map(D);var u=n.length;return"function"==typeof t?r:e}function D(n){var t=q(n);return function(e,r){if(u=e.classList)return r?u.add(n):u.remove(n);var u=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(u)||e.setAttribute("class",L(u+" "+n))):e.setAttribute("class",L(u.replace(t," ")))}}function P(n,t,e){function r(){this.style.removeProperty(n)}function u(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:u}function U(n,t){function e(){delete this[n]}function r(){this[n]=t}function u(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?u:r}function j(n){function t(){var t=this.ownerDocument,e=this.namespaceURI;return e===Ca&&t.documentElement.namespaceURI===Ca?t.createElement(n):t.createElementNS(e,n)}function e(){return this.ownerDocument.createElementNS(n.space,n.local)}return"function"==typeof n?n:(n=oa.ns.qualify(n)).local?e:t}function F(){var n=this.parentNode;n&&n.removeChild(this)}function H(n){return{__data__:n}}function O(n){return function(){return Ea(this,n)}}function I(n){return arguments.length||(n=e),function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}function Y(n,t){for(var e=0,r=n.length;r>e;e++)for(var u,i=n[e],a=0,o=i.length;o>a;a++)(u=i[a])&&t(u,a,e);return n}function Z(n){return Sa(n,La),n}function V(n){var t,e;return function(r,u,i){var a,o=n[i].update,l=o.length;for(i!=e&&(e=i,t=0),u>=t&&(t=u+1);!(a=o[t])&&++t<l;);return a}}function X(n,t,e){function r(){var t=this[a];t&&(this.removeEventListener(n,t,t.$),delete this[a])}function u(){var u=l(t,ca(arguments));r.call(this),this.addEventListener(n,this[a]=u,u.$=e),u._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+oa.requote(n)+"$");for(var r in this)if(t=r.match(e)){var u=this[r];this.removeEventListener(t[1],u,u.$),delete this[r]}}var a="__on"+n,o=n.indexOf("."),l=$;o>0&&(n=n.slice(0,o));var c=qa.get(n);return c&&(n=c,l=B),o?t?u:r:t?b:i}function $(n,t){return function(e){var r=oa.event;oa.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{oa.event=r}}}function B(n,t){var e=$(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function W(e){var r=".dragsuppress-"+ ++Ra,u="click"+r,i=oa.select(t(e)).on("touchmove"+r,S).on("dragstart"+r,S).on("selectstart"+r,S);if(null==Ta&&(Ta="onselectstart"in e?!1:x(e.style,"userSelect")),Ta){var a=n(e).style,o=a[Ta];a[Ta]="none"}return function(n){if(i.on(r,null),Ta&&(a[Ta]=o),n){var t=function(){i.on(u,null)};i.on(u,function(){S(),t()},!0),setTimeout(t,0)}}}function J(n,e){e.changedTouches&&(e=e.changedTouches[0]);var r=n.ownerSVGElement||n;if(r.createSVGPoint){var u=r.createSVGPoint();if(0>Da){var i=t(n);if(i.scrollX||i.scrollY){r=oa.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var a=r[0][0].getScreenCTM();Da=!(a.f||a.e),r.remove()}}return Da?(u.x=e.pageX,u.y=e.pageY):(u.x=e.clientX,u.y=e.clientY),u=u.matrixTransform(n.getScreenCTM().inverse()),[u.x,u.y]}var o=n.getBoundingClientRect();return[e.clientX-o.left-n.clientLeft,e.clientY-o.top-n.clientTop]}function G(){return oa.event.changedTouches[0].identifier}function K(n){return n>0?1:0>n?-1:0}function Q(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function nn(n){return n>1?0:-1>n?ja:Math.acos(n)}function tn(n){return n>1?Oa:-1>n?-Oa:Math.asin(n)}function en(n){return((n=Math.exp(n))-1/n)/2}function rn(n){return((n=Math.exp(n))+1/n)/2}function un(n){return((n=Math.exp(2*n))-1)/(n+1)}function an(n){return(n=Math.sin(n/2))*n}function on(){}function ln(n,t,e){return this instanceof ln?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof ln?new ln(n.h,n.s,n.l):_n(""+n,wn,ln):new ln(n,t,e)}function cn(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(a-i)*n/60:180>n?a:240>n?i+(a-i)*(240-n)/60:i}function u(n){return Math.round(255*r(n))}var i,a;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,a=.5>=e?e*(1+t):e+t-e*t,i=2*e-a,new yn(u(n+120),u(n),u(n-120))}function sn(n,t,e){return this instanceof sn?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof sn?new sn(n.h,n.c,n.l):n instanceof hn?pn(n.l,n.a,n.b):pn((n=Sn((n=oa.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new sn(n,t,e)}function fn(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new hn(e,Math.cos(n*=Ia)*t,Math.sin(n)*t)}function hn(n,t,e){return this instanceof hn?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof hn?new hn(n.l,n.a,n.b):n instanceof sn?fn(n.h,n.c,n.l):Sn((n=yn(n)).r,n.g,n.b):new hn(n,t,e)}function gn(n,t,e){var r=(n+16)/116,u=r+t/500,i=r-e/200;return u=vn(u)*Qa,r=vn(r)*no,i=vn(i)*to,new yn(mn(3.2404542*u-1.5371385*r-.4985314*i),mn(-.969266*u+1.8760108*r+.041556*i),mn(.0556434*u-.2040259*r+1.0572252*i))}function pn(n,t,e){return n>0?new sn(Math.atan2(e,t)*Ya,Math.sqrt(t*t+e*e),n):new sn(NaN,NaN,n)}function vn(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function dn(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function mn(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function yn(n,t,e){return this instanceof yn?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof yn?new yn(n.r,n.g,n.b):_n(""+n,yn,cn):new yn(n,t,e)}function Mn(n){return new yn(n>>16,n>>8&255,255&n)}function xn(n){return Mn(n)+""}function bn(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function _n(n,t,e){var r,u,i,a=0,o=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(n=n.toLowerCase()))switch(u=r[2].split(","),r[1]){case"hsl":return e(parseFloat(u[0]),parseFloat(u[1])/100,parseFloat(u[2])/100);case"rgb":return t(Nn(u[0]),Nn(u[1]),Nn(u[2]))}return(i=uo.get(n))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(a=(3840&i)>>4,a=a>>4|a,o=240&i,o=o>>4|o,l=15&i,l=l<<4|l):7===n.length&&(a=(16711680&i)>>16,o=(65280&i)>>8,l=255&i)),t(a,o,l))}function wn(n,t,e){var r,u,i=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),o=a-i,l=(a+i)/2;return o?(u=.5>l?o/(a+i):o/(2-a-i),r=n==a?(t-e)/o+(e>t?6:0):t==a?(e-n)/o+2:(n-t)/o+4,r*=60):(r=NaN,u=l>0&&1>l?0:r),new ln(r,u,l)}function Sn(n,t,e){n=kn(n),t=kn(t),e=kn(e);var r=dn((.4124564*n+.3575761*t+.1804375*e)/Qa),u=dn((.2126729*n+.7151522*t+.072175*e)/no),i=dn((.0193339*n+.119192*t+.9503041*e)/to);return hn(116*u-16,500*(r-u),200*(u-i))}function kn(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function Nn(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function En(n){return"function"==typeof n?n:function(){return n}}function An(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),Cn(t,e,n,r)}}function Cn(n,t,e,r){function u(){var n,t=l.status;if(!t&&Ln(l)||t>=200&&300>t||304===t){try{n=e.call(i,l)}catch(r){return void a.error.call(i,r)}a.load.call(i,n)}else a.error.call(i,l)}var i={},a=oa.dispatch("beforesend","progress","load","error"),o={},l=new XMLHttpRequest,c=null;return!this.XDomainRequest||"withCredentials"in l||!/^(http(s)?:)?\/\//.test(n)||(l=new XDomainRequest),"onload"in l?l.onload=l.onerror=u:l.onreadystatechange=function(){l.readyState>3&&u()},l.onprogress=function(n){var t=oa.event;oa.event=n;try{a.progress.call(i,l)}finally{oa.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?o[n]:(null==t?delete o[n]:o[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(c=n,i):c},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(ca(arguments)))}}),i.send=function(e,r,u){if(2===arguments.length&&"function"==typeof r&&(u=r,r=null),l.open(e,n,!0),null==t||"accept"in o||(o.accept=t+",*/*"),l.setRequestHeader)for(var s in o)l.setRequestHeader(s,o[s]);return null!=t&&l.overrideMimeType&&l.overrideMimeType(t),null!=c&&(l.responseType=c),null!=u&&i.on("error",u).on("load",function(n){u(null,n)}),a.beforesend.call(i,l),l.send(null==r?null:r),i},i.abort=function(){return l.abort(),i},oa.rebind(i,a,"on"),null==r?i:i.get(zn(r))}function zn(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function Ln(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function qn(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var u=e+t,i={c:n,t:u,n:null};return ao?ao.n=i:io=i,ao=i,oo||(lo=clearTimeout(lo),oo=1,co(Tn)),i}function Tn(){var n=Rn(),t=Dn()-n;t>24?(isFinite(t)&&(clearTimeout(lo),lo=setTimeout(Tn,t)),oo=0):(oo=1,co(Tn))}function Rn(){for(var n=Date.now(),t=io;t;)n>=t.t&&t.c(n-t.t)&&(t.c=null),t=t.n;return n}function Dn(){for(var n,t=io,e=1/0;t;)t.c?(t.t<e&&(e=t.t),t=(n=t).n):t=n?n.n=t.n:io=t.n;return ao=n,e}function Pn(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Un(n,t){var e=Math.pow(10,3*Ma(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function jn(n){var t=n.decimal,e=n.thousands,r=n.grouping,u=n.currency,i=r&&e?function(n,t){for(var u=n.length,i=[],a=0,o=r[0],l=0;u>0&&o>0&&(l+o+1>t&&(o=Math.max(1,t-l)),i.push(n.substring(u-=o,u+o)),!((l+=o+1)>t));)o=r[a=(a+1)%r.length];return i.reverse().join(e)}:y;return function(n){var e=fo.exec(n),r=e[1]||" ",a=e[2]||">",o=e[3]||"-",l=e[4]||"",c=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,v="",d="",m=!1,y=!0;switch(h&&(h=+h.substring(1)),(c||"0"===r&&"="===a)&&(c=r="0",a="="),g){case"n":f=!0,g="g";break;case"%":p=100,d="%",g="f";break;case"p":p=100,d="%",g="r";break;case"b":case"o":case"x":case"X":"#"===l&&(v="0"+g.toLowerCase());case"c":y=!1;case"d":m=!0,h=0;break;case"s":p=-1,g="r"}"$"===l&&(v=u[0],d=u[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=ho.get(g)||Fn;var M=c&&f;return function(n){var e=d;if(m&&n%1)return"";var u=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===o?"":o;if(0>p){var l=oa.formatPrefix(n,h);n=l.scale(n),e=l.symbol+d}else n*=p;n=g(n,h);var x,b,_=n.lastIndexOf(".");if(0>_){var w=y?n.lastIndexOf("e"):-1;0>w?(x=n,b=""):(x=n.substring(0,w),b=n.substring(w))}else x=n.substring(0,_),b=t+n.substring(_+1);!c&&f&&(x=i(x,1/0));var S=v.length+x.length+b.length+(M?0:u.length),k=s>S?new Array(S=s-S+1).join(r):"";return M&&(x=i(k+x,k.length?s-b.length:1/0)),u+=v,n=x+b,("<"===a?u+n+k:">"===a?k+u+n:"^"===a?k.substring(0,S>>=1)+u+n+k.substring(S):u+(M?n:k+n))+e}}}function Fn(n){return n+""}function Hn(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function On(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function u(e){return t(e=n(new po(e-1)),1),e}function i(n,e){return t(n=new po(+n),e),n}function a(n,r,i){var a=u(n),o=[];if(i>1)for(;r>a;)e(a)%i||o.push(new Date(+a)),t(a,1);else for(;r>a;)o.push(new Date(+a)),t(a,1);return o}function o(n,t,e){try{po=Hn;var r=new Hn;return r._=n,a(r,t,e)}finally{po=Date}}n.floor=n,n.round=r,n.ceil=u,n.offset=i,n.range=a;var l=n.utc=In(n);return l.floor=l,l.round=In(r),l.ceil=In(u),l.offset=In(i),l.range=o,n}function In(n){return function(t,e){try{po=Hn;var r=new Hn;return r._=t,n(r,e)._}finally{po=Date}}}function Yn(n){function t(n){function t(t){for(var e,u,i,a=[],o=-1,l=0;++o<r;)37===n.charCodeAt(o)&&(a.push(n.slice(l,o)),null!=(u=mo[e=n.charAt(++o)])&&(e=n.charAt(++o)),(i=A[e])&&(e=i(t,null==u?"e"===e?" ":"0":u)),a.push(e),l=o+1);return a.push(n.slice(l,o)),a.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},u=e(r,n,t,0);if(u!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&po!==Hn,a=new(i?Hn:po);return"j"in r?a.setFullYear(r.y,0,r.j):"W"in r||"U"in r?("w"in r||(r.w="W"in r?1:0),a.setFullYear(r.y,0,1),a.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(a.getDay()+5)%7:r.w+7*r.U-(a.getDay()+6)%7)):a.setFullYear(r.y,r.m,r.d),a.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),i?a._:a},t.toString=function(){return n},t}function e(n,t,e,r){for(var u,i,a,o=0,l=t.length,c=e.length;l>o;){if(r>=c)return-1;if(u=t.charCodeAt(o++),37===u){if(a=t.charAt(o++),i=C[a in mo?t.charAt(o++):a],!i||(r=i(n,e,r))<0)return-1}else if(u!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){_.lastIndex=0;var r=_.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=b.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){N.lastIndex=0;var r=N.exec(t.slice(e));return r?(n.m=E.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=k.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,r){return e(n,A.c.toString(),t,r)}function l(n,t,r){return e(n,A.x.toString(),t,r)}function c(n,t,r){return e(n,A.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,v=n.days,d=n.shortDays,m=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{po=Hn;var t=new po;return t._=n,r(t)}finally{po=Date}}var r=t(n);return e.parse=function(n){try{po=Hn;var t=r.parse(n);return t&&t._}finally{po=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=ct;var M=oa.map(),x=Vn(v),b=Xn(v),_=Vn(d),w=Xn(d),S=Vn(m),k=Xn(m),N=Vn(y),E=Xn(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var A={a:function(n){return d[n.getDay()]},A:function(n){return v[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return m[n.getMonth()]},c:t(f),d:function(n,t){return Zn(n.getDate(),t,2)},e:function(n,t){return Zn(n.getDate(),t,2)},H:function(n,t){return Zn(n.getHours(),t,2)},I:function(n,t){return Zn(n.getHours()%12||12,t,2)},j:function(n,t){return Zn(1+go.dayOfYear(n),t,3)},L:function(n,t){return Zn(n.getMilliseconds(),t,3)},m:function(n,t){return Zn(n.getMonth()+1,t,2)},M:function(n,t){return Zn(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return Zn(n.getSeconds(),t,2)},U:function(n,t){return Zn(go.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Zn(go.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return Zn(n.getFullYear()%100,t,2)},Y:function(n,t){return Zn(n.getFullYear()%1e4,t,4)},Z:ot,"%":function(){return"%"}},C={a:r,A:u,b:i,B:a,c:o,d:tt,e:tt,H:rt,I:rt,j:et,L:at,m:nt,M:ut,p:s,S:it,U:Bn,w:$n,W:Wn,x:l,X:c,y:Gn,Y:Jn,Z:Kn,"%":lt};return t}function Zn(n,t,e){var r=0>n?"-":"",u=(r?-n:n)+"",i=u.length;return r+(e>i?new Array(e-i+1).join(t)+u:u)}function Vn(n){return new RegExp("^(?:"+n.map(oa.requote).join("|")+")","i")}function Xn(n){for(var t=new c,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function $n(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Bn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function Wn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Jn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Gn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.y=Qn(+r[0]),e+r[0].length):-1}function Kn(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Qn(n){return n+(n>68?1900:2e3)}function nt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function tt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function et(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function rt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function ut(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function it(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function at(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function ot(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=Ma(t)/60|0,u=Ma(t)%60;return e+Zn(r,"0",2)+Zn(u,"0",2)}function lt(n,t,e){Mo.lastIndex=0;var r=Mo.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function ct(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function st(){}function ft(n,t,e){var r=e.s=n+t,u=r-n,i=r-u;e.t=n-i+(t-u)}function ht(n,t){n&&wo.hasOwnProperty(n.type)&&wo[n.type](n,t)}function gt(n,t,e){var r,u=-1,i=n.length-e;for(t.lineStart();++u<i;)r=n[u],t.point(r[0],r[1],r[2]);t.lineEnd()}function pt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)gt(n[e],t,1);t.polygonEnd()}function vt(){function n(n,t){n*=Ia,t=t*Ia/2+ja/4;var e=n-r,a=e>=0?1:-1,o=a*e,l=Math.cos(t),c=Math.sin(t),s=i*c,f=u*l+s*Math.cos(o),h=s*a*Math.sin(o);ko.add(Math.atan2(h,f)),r=n,u=l,i=c}var t,e,r,u,i;No.point=function(a,o){No.point=n,r=(t=a)*Ia,u=Math.cos(o=(e=o)*Ia/2+ja/4),i=Math.sin(o)},No.lineEnd=function(){n(t,e)}}function dt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function mt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function yt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function Mt(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function xt(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function bt(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function _t(n){return[Math.atan2(n[1],n[0]),tn(n[2])]}function wt(n,t){return Ma(n[0]-t[0])<Pa&&Ma(n[1]-t[1])<Pa}function St(n,t){n*=Ia;var e=Math.cos(t*=Ia);kt(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function kt(n,t,e){++Eo,Co+=(n-Co)/Eo,zo+=(t-zo)/Eo,Lo+=(e-Lo)/Eo}function Nt(){function n(n,u){n*=Ia;var i=Math.cos(u*=Ia),a=i*Math.cos(n),o=i*Math.sin(n),l=Math.sin(u),c=Math.atan2(Math.sqrt((c=e*l-r*o)*c+(c=r*a-t*l)*c+(c=t*o-e*a)*c),t*a+e*o+r*l);Ao+=c,qo+=c*(t+(t=a)),To+=c*(e+(e=o)),Ro+=c*(r+(r=l)),kt(t,e,r)}var t,e,r;jo.point=function(u,i){u*=Ia;var a=Math.cos(i*=Ia);t=a*Math.cos(u),e=a*Math.sin(u),r=Math.sin(i),jo.point=n,kt(t,e,r)}}function Et(){jo.point=St}function At(){function n(n,t){n*=Ia;var e=Math.cos(t*=Ia),a=e*Math.cos(n),o=e*Math.sin(n),l=Math.sin(t),c=u*l-i*o,s=i*a-r*l,f=r*o-u*a,h=Math.sqrt(c*c+s*s+f*f),g=r*a+u*o+i*l,p=h&&-nn(g)/h,v=Math.atan2(h,g);Do+=p*c,Po+=p*s,Uo+=p*f,Ao+=v,qo+=v*(r+(r=a)),To+=v*(u+(u=o)),Ro+=v*(i+(i=l)),kt(r,u,i)}var t,e,r,u,i;jo.point=function(a,o){t=a,e=o,jo.point=n,a*=Ia;var l=Math.cos(o*=Ia);r=l*Math.cos(a),u=l*Math.sin(a),i=Math.sin(o),kt(r,u,i)},jo.lineEnd=function(){n(t,e),jo.lineEnd=Et,jo.point=St}}function Ct(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function zt(){return!0}function Lt(n,t,e,r,u){var i=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(wt(e,r)){u.lineStart();for(var o=0;t>o;++o)u.point((e=n[o])[0],e[1]);return void u.lineEnd()}var l=new Tt(e,n,null,!0),c=new Tt(e,null,l,!1);l.o=c,i.push(l),a.push(c),l=new Tt(r,n,null,!1),c=new Tt(r,null,l,!0),l.o=c,i.push(l),a.push(c)}}),a.sort(t),qt(i),qt(a),i.length){for(var o=0,l=e,c=a.length;c>o;++o)a[o].e=l=!l;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,u.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var o=0,c=s.length;c>o;++o)u.point((f=s[o])[0],f[1]);else r(g.x,g.n.x,1,u);g=g.n}else{if(p){s=g.p.z;for(var o=s.length-1;o>=0;--o)u.point((f=s[o])[0],f[1])}else r(g.x,g.p.x,-1,u);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);u.lineEnd()}}}function qt(n){if(t=n.length){for(var t,e,r=0,u=n[0];++r<t;)u.n=e=n[r],e.p=u,u=e;u.n=e=n[0],e.p=u}}function Tt(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Rt(n,t,e,r){return function(u,i){function a(t,e){var r=u(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function o(n,t){var e=u(n,t);d.point(e[0],e[1])}function l(){y.point=o,d.lineStart()}function c(){y.point=a,d.lineEnd()}function s(n,t){v.push([n,t]);var e=u(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),v=[]}function h(){s(v[0][0],v[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(v.pop(),p.push(v),v=null,r)if(1&t){n=e[0];var u,r=n.length-1,a=-1;if(r>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++a<r;)i.point((u=n[a])[0],u[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Dt))}var g,p,v,d=t(i),m=u.invert(r[0],r[1]),y={point:a,lineStart:l,lineEnd:c,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=a,y.lineStart=l,y.lineEnd=c,g=oa.merge(g);var n=Ot(m,p);g.length?(b||(i.polygonStart(),b=!0),Lt(g,Ut,n,e,i)):n&&(b||(i.polygonStart(),b=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=Pt(),x=t(M),b=!1;return y}}function Dt(n){return n.length>1}function Pt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:b,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function Ut(n,t){return((n=n.x)[0]<0?n[1]-Oa-Pa:Oa-n[1])-((t=t.x)[0]<0?t[1]-Oa-Pa:Oa-t[1])}function jt(n){var t,e=NaN,r=NaN,u=NaN;return{lineStart:function(){n.lineStart(),t=1},point:function(i,a){var o=i>0?ja:-ja,l=Ma(i-e);Ma(l-ja)<Pa?(n.point(e,r=(r+a)/2>0?Oa:-Oa),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(o,r),n.point(i,r),t=0):u!==o&&l>=ja&&(Ma(e-u)<Pa&&(e-=u*Pa),Ma(i-o)<Pa&&(i-=o*Pa),r=Ft(e,r,i,a),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(o,r),t=0),n.point(e=i,r=a),u=o},lineEnd:function(){n.lineEnd(),e=r=NaN},clean:function(){return 2-t}}}function Ft(n,t,e,r){var u,i,a=Math.sin(n-e);return Ma(a)>Pa?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(u=Math.cos(t))*Math.sin(n))/(u*i*a)):(t+r)/2}function Ht(n,t,e,r){var u;if(null==n)u=e*Oa,r.point(-ja,u),r.point(0,u),r.point(ja,u),r.point(ja,0),r.point(ja,-u),r.point(0,-u),r.point(-ja,-u),r.point(-ja,0),r.point(-ja,u);else if(Ma(n[0]-t[0])>Pa){var i=n[0]<t[0]?ja:-ja;u=e*i/2,r.point(-i,u),r.point(0,u),r.point(i,u)}else r.point(t[0],t[1])}function Ot(n,t){var e=n[0],r=n[1],u=[Math.sin(e),-Math.cos(e),0],i=0,a=0;ko.reset();for(var o=0,l=t.length;l>o;++o){var c=t[o],s=c.length;if(s)for(var f=c[0],h=f[0],g=f[1]/2+ja/4,p=Math.sin(g),v=Math.cos(g),d=1;;){d===s&&(d=0),n=c[d];var m=n[0],y=n[1]/2+ja/4,M=Math.sin(y),x=Math.cos(y),b=m-h,_=b>=0?1:-1,w=_*b,S=w>ja,k=p*M;if(ko.add(Math.atan2(k*_*Math.sin(w),v*x+k*Math.cos(w))),i+=S?b+_*Fa:b,S^h>=e^m>=e){var N=yt(dt(f),dt(n));bt(N);var E=yt(u,N);bt(E);var A=(S^b>=0?-1:1)*tn(E[2]);(r>A||r===A&&(N[0]||N[1]))&&(a+=S^b>=0?1:-1)}if(!d++)break;h=m,p=M,v=x,f=n}}return(-Pa>i||Pa>i&&0>ko)^1&a}function It(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,h){var g,p=[f,h],v=t(f,h),d=a?v?0:u(f,h):v?u(f+(0>f?ja:-ja),h):0;if(!e&&(c=l=v)&&n.lineStart(),v!==l&&(g=r(e,p),(wt(e,g)||wt(p,g))&&(p[0]+=Pa,p[1]+=Pa,v=t(p[0],p[1]))),v!==l)s=0,v?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(o&&e&&a^v){var m;d&i||!(m=r(p,e,!0))||(s=0,a?(n.lineStart(),n.point(m[0][0],m[0][1]),n.point(m[1][0],m[1][1]),n.lineEnd()):(n.point(m[1][0],m[1][1]),n.lineEnd(),n.lineStart(),n.point(m[0][0],m[0][1])))}!v||e&&wt(e,p)||n.point(p[0],p[1]),e=p,l=v,i=d},lineEnd:function(){l&&n.lineEnd(),e=null},clean:function(){return s|(c&&l)<<1}}}function r(n,t,e){var r=dt(n),u=dt(t),a=[1,0,0],o=yt(r,u),l=mt(o,o),c=o[0],s=l-c*c;if(!s)return!e&&n;var f=i*l/s,h=-i*c/s,g=yt(a,o),p=xt(a,f),v=xt(o,h);Mt(p,v);var d=g,m=mt(p,d),y=mt(d,d),M=m*m-y*(mt(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),b=xt(d,(-m-x)/y);if(Mt(b,p),b=_t(b),!e)return b;var _,w=n[0],S=t[0],k=n[1],N=t[1];w>S&&(_=w,w=S,S=_);var E=S-w,A=Ma(E-ja)<Pa,C=A||Pa>E;if(!A&&k>N&&(_=k,k=N,N=_),C?A?k+N>0^b[1]<(Ma(b[0]-w)<Pa?k:N):k<=b[1]&&b[1]<=N:E>ja^(w<=b[0]&&b[0]<=S)){var z=xt(d,(-m+x)/y);return Mt(z,p),[b,_t(z)]}}}function u(t,e){var r=a?n:ja-n,u=0;return-r>t?u|=1:t>r&&(u|=2),-r>e?u|=4:e>r&&(u|=8),u}var i=Math.cos(n),a=i>0,o=Ma(i)>Pa,l=ve(n,6*Ia);return Rt(t,e,l,a?[0,-n]:[-ja,n-ja])}function Yt(n,t,e,r){return function(u){var i,a=u.a,o=u.b,l=a.x,c=a.y,s=o.x,f=o.y,h=0,g=1,p=s-l,v=f-c;if(i=n-l,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-l,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-c,v||!(i>0)){if(i/=v,0>v){if(h>i)return;g>i&&(g=i)}else if(v>0){if(i>g)return;i>h&&(h=i)}if(i=r-c,v||!(0>i)){if(i/=v,0>v){if(i>g)return;i>h&&(h=i)}else if(v>0){if(h>i)return;g>i&&(g=i)}return h>0&&(u.a={x:l+h*p,y:c+h*v}),1>g&&(u.b={x:l+g*p,y:c+g*v}),u}}}}}}function Zt(n,t,e,r){function u(r,u){return Ma(r[0]-n)<Pa?u>0?0:3:Ma(r[0]-e)<Pa?u>0?2:1:Ma(r[1]-t)<Pa?u>0?1:0:u>0?3:2}function i(n,t){return a(n.x,t.x)}function a(n,t){var e=u(n,1),r=u(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(o){function l(n){for(var t=0,e=d.length,r=n[1],u=0;e>u;++u)for(var i,a=1,o=d[u],l=o.length,c=o[0];l>a;++a)i=o[a],c[1]<=r?i[1]>r&&Q(c,i,n)>0&&++t:i[1]<=r&&Q(c,i,n)<0&&--t,c=i;return 0!==t}function c(i,o,l,c){var s=0,f=0;if(null==i||(s=u(i,l))!==(f=u(o,l))||a(i,o)<0^l>0){do c.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+l+4)%4)!==f)}else c.point(o[0],o[1])}function s(u,i){return u>=n&&e>=u&&i>=t&&r>=i}function f(n,t){s(n,t)&&o.point(n,t)}function h(){C.point=p,d&&d.push(m=[]),S=!0,w=!1,b=_=NaN}function g(){v&&(p(y,M),x&&w&&E.rejoin(),v.push(E.buffer())),C.point=f,w&&o.lineEnd()}function p(n,t){n=Math.max(-Ho,Math.min(Ho,n)),t=Math.max(-Ho,Math.min(Ho,t));var e=s(n,t);if(d&&m.push([n,t]),S)y=n,M=t,x=e,S=!1,e&&(o.lineStart(),o.point(n,t));else if(e&&w)o.point(n,t);else{var r={a:{x:b,y:_},b:{x:n,y:t}};A(r)?(w||(o.lineStart(),o.point(r.a.x,r.a.y)),o.point(r.b.x,r.b.y),e||o.lineEnd(),k=!1):e&&(o.lineStart(),o.point(n,t),k=!1)}b=n,_=t,w=e}var v,d,m,y,M,x,b,_,w,S,k,N=o,E=Pt(),A=Yt(n,t,e,r),C={point:f,lineStart:h,lineEnd:g,polygonStart:function(){o=E,v=[],d=[],k=!0},polygonEnd:function(){o=N,v=oa.merge(v);var t=l([n,r]),e=k&&t,u=v.length;(e||u)&&(o.polygonStart(),e&&(o.lineStart(),c(null,null,1,o),o.lineEnd()),u&&Lt(v,i,t,c,o),o.polygonEnd()),v=d=m=null}};return C}}function Vt(n){var t=0,e=ja/3,r=oe(n),u=r(t,e);return u.parallels=function(n){return arguments.length?r(t=n[0]*ja/180,e=n[1]*ja/180):[t/ja*180,e/ja*180]},u}function Xt(n,t){function e(n,t){var e=Math.sqrt(i-2*u*Math.sin(t))/u;return[e*Math.sin(n*=u),a-e*Math.cos(n)]}var r=Math.sin(n),u=(r+Math.sin(t))/2,i=1+r*(2*u-r),a=Math.sqrt(i)/u;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/u,tn((i-(n*n+e*e)*u*u)/(2*u))]},e}function $t(){function n(n,t){Io+=u*n-r*t,r=n,u=t}var t,e,r,u;$o.point=function(i,a){$o.point=n,t=r=i,e=u=a},$o.lineEnd=function(){n(t,e)}}function Bt(n,t){Yo>n&&(Yo=n),n>Vo&&(Vo=n),Zo>t&&(Zo=t),t>Xo&&(Xo=t)}function Wt(){function n(n,t){a.push("M",n,",",t,i)}function t(n,t){a.push("M",n,",",t),o.point=e}function e(n,t){a.push("L",n,",",t)}function r(){o.point=n}function u(){a.push("Z")}var i=Jt(4.5),a=[],o={point:n,lineStart:function(){o.point=t},lineEnd:r,polygonStart:function(){o.lineEnd=u},polygonEnd:function(){o.lineEnd=r,o.point=n},pointRadius:function(n){return i=Jt(n),o},result:function(){if(a.length){var n=a.join("");return a=[],n}}};return o}function Jt(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Gt(n,t){Co+=n,zo+=t,++Lo}function Kt(){function n(n,r){var u=n-t,i=r-e,a=Math.sqrt(u*u+i*i);qo+=a*(t+n)/2,To+=a*(e+r)/2,Ro+=a,Gt(t=n,e=r)}var t,e;Wo.point=function(r,u){Wo.point=n,Gt(t=r,e=u)}}function Qt(){Wo.point=Gt}function ne(){function n(n,t){var e=n-r,i=t-u,a=Math.sqrt(e*e+i*i);qo+=a*(r+n)/2,To+=a*(u+t)/2,Ro+=a,a=u*n-r*t,Do+=a*(r+n),Po+=a*(u+t),Uo+=3*a,Gt(r=n,u=t)}var t,e,r,u;Wo.point=function(i,a){Wo.point=n,Gt(t=r=i,e=u=a)},Wo.lineEnd=function(){n(t,e)}}function te(n){function t(t,e){n.moveTo(t+a,e),n.arc(t,e,a,0,Fa)}function e(t,e){n.moveTo(t,e),o.point=r}function r(t,e){n.lineTo(t,e)}function u(){o.point=t}function i(){n.closePath()}var a=4.5,o={point:t,lineStart:function(){o.point=e},lineEnd:u,polygonStart:function(){o.lineEnd=i},polygonEnd:function(){o.lineEnd=u,o.point=t},pointRadius:function(n){return a=n,o},result:b};return o}function ee(n){function t(n){return(o?r:e)(n)}function e(t){return ie(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=NaN,S.point=i,t.lineStart()}function i(e,r){var i=dt([e,r]),a=n(e,r);u(M,x,y,b,_,w,M=a[0],x=a[1],y=e,b=i[0],_=i[1],w=i[2],o,t),t.point(M,x)}function a(){S.point=e,t.lineEnd()}function l(){
	r(),S.point=c,S.lineEnd=s}function c(n,t){i(f=n,h=t),g=M,p=x,v=b,d=_,m=w,S.point=i}function s(){u(M,x,y,b,_,w,g,p,f,v,d,m,o,t),S.lineEnd=a,a()}var f,h,g,p,v,d,m,y,M,x,b,_,w,S={point:e,lineStart:r,lineEnd:a,polygonStart:function(){t.polygonStart(),S.lineStart=l},polygonEnd:function(){t.polygonEnd(),S.lineStart=r}};return S}function u(t,e,r,o,l,c,s,f,h,g,p,v,d,m){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&d--){var b=o+g,_=l+p,w=c+v,S=Math.sqrt(b*b+_*_+w*w),k=Math.asin(w/=S),N=Ma(Ma(w)-1)<Pa||Ma(r-h)<Pa?(r+h)/2:Math.atan2(_,b),E=n(N,k),A=E[0],C=E[1],z=A-t,L=C-e,q=M*z-y*L;(q*q/x>i||Ma((y*z+M*L)/x-.5)>.3||a>o*g+l*p+c*v)&&(u(t,e,r,o,l,c,A,C,N,b/=S,_/=S,w,d,m),m.point(A,C),u(A,C,N,b,_,w,s,f,h,g,p,v,d,m))}}var i=.5,a=Math.cos(30*Ia),o=16;return t.precision=function(n){return arguments.length?(o=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function re(n){var t=ee(function(t,e){return n([t*Ya,e*Ya])});return function(n){return le(t(n))}}function ue(n){this.stream=n}function ie(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ae(n){return oe(function(){return n})()}function oe(n){function t(n){return n=o(n[0]*Ia,n[1]*Ia),[n[0]*h+l,c-n[1]*h]}function e(n){return n=o.invert((n[0]-l)/h,(c-n[1])/h),n&&[n[0]*Ya,n[1]*Ya]}function r(){o=Ct(a=fe(m,M,x),i);var n=i(v,d);return l=g-n[0]*h,c=p+n[1]*h,u()}function u(){return s&&(s.valid=!1,s=null),t}var i,a,o,l,c,s,f=ee(function(n,t){return n=i(n,t),[n[0]*h+l,c-n[1]*h]}),h=150,g=480,p=250,v=0,d=0,m=0,M=0,x=0,b=Fo,_=y,w=null,S=null;return t.stream=function(n){return s&&(s.valid=!1),s=le(b(a,f(_(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(b=null==n?(w=n,Fo):It((w=+n)*Ia),u()):w},t.clipExtent=function(n){return arguments.length?(S=n,_=n?Zt(n[0][0],n[0][1],n[1][0],n[1][1]):y,u()):S},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(v=n[0]%360*Ia,d=n[1]%360*Ia,r()):[v*Ya,d*Ya]},t.rotate=function(n){return arguments.length?(m=n[0]%360*Ia,M=n[1]%360*Ia,x=n.length>2?n[2]%360*Ia:0,r()):[m*Ya,M*Ya,x*Ya]},oa.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function le(n){return ie(n,function(t,e){n.point(t*Ia,e*Ia)})}function ce(n,t){return[n,t]}function se(n,t){return[n>ja?n-Fa:-ja>n?n+Fa:n,t]}function fe(n,t,e){return n?t||e?Ct(ge(n),pe(t,e)):ge(n):t||e?pe(t,e):se}function he(n){return function(t,e){return t+=n,[t>ja?t-Fa:-ja>t?t+Fa:t,e]}}function ge(n){var t=he(n);return t.invert=he(-n),t}function pe(n,t){function e(n,t){var e=Math.cos(t),o=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*r+o*u;return[Math.atan2(l*i-s*a,o*r-c*u),tn(s*i+l*a)]}var r=Math.cos(n),u=Math.sin(n),i=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),o=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*i-l*a;return[Math.atan2(l*i+c*a,o*r+s*u),tn(s*r-o*u)]},e}function ve(n,t){var e=Math.cos(n),r=Math.sin(n);return function(u,i,a,o){var l=a*t;null!=u?(u=de(e,u),i=de(e,i),(a>0?i>u:u>i)&&(u+=a*Fa)):(u=n+a*Fa,i=n-.5*l);for(var c,s=u;a>0?s>i:i>s;s-=l)o.point((c=_t([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function de(n,t){var e=dt(t);e[0]-=n,bt(e);var r=nn(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Pa)%(2*Math.PI)}function me(n,t,e){var r=oa.range(n,t-Pa,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function ye(n,t,e){var r=oa.range(n,t-Pa,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function Me(n){return n.source}function xe(n){return n.target}function be(n,t,e,r){var u=Math.cos(t),i=Math.sin(t),a=Math.cos(r),o=Math.sin(r),l=u*Math.cos(n),c=u*Math.sin(n),s=a*Math.cos(e),f=a*Math.sin(e),h=2*Math.asin(Math.sqrt(an(r-t)+u*a*an(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*l+t*s,u=e*c+t*f,a=e*i+t*o;return[Math.atan2(u,r)*Ya,Math.atan2(a,Math.sqrt(r*r+u*u))*Ya]}:function(){return[n*Ya,t*Ya]};return p.distance=h,p}function _e(){function n(n,u){var i=Math.sin(u*=Ia),a=Math.cos(u),o=Ma((n*=Ia)-t),l=Math.cos(o);Jo+=Math.atan2(Math.sqrt((o=a*Math.sin(o))*o+(o=r*i-e*a*l)*o),e*i+r*a*l),t=n,e=i,r=a}var t,e,r;Go.point=function(u,i){t=u*Ia,e=Math.sin(i*=Ia),r=Math.cos(i),Go.point=n},Go.lineEnd=function(){Go.point=Go.lineEnd=b}}function we(n,t){function e(t,e){var r=Math.cos(t),u=Math.cos(e),i=n(r*u);return[i*u*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),u=t(r),i=Math.sin(u),a=Math.cos(u);return[Math.atan2(n*i,r*a),Math.asin(r&&e*i/r)]},e}function Se(n,t){function e(n,t){a>0?-Oa+Pa>t&&(t=-Oa+Pa):t>Oa-Pa&&(t=Oa-Pa);var e=a/Math.pow(u(t),i);return[e*Math.sin(i*n),a-e*Math.cos(i*n)]}var r=Math.cos(n),u=function(n){return Math.tan(ja/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(u(t)/u(n)),a=r*Math.pow(u(n),i)/i;return i?(e.invert=function(n,t){var e=a-t,r=K(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(a/r,1/i))-Oa]},e):Ne}function ke(n,t){function e(n,t){var e=i-t;return[e*Math.sin(u*n),i-e*Math.cos(u*n)]}var r=Math.cos(n),u=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/u+n;return Ma(u)<Pa?ce:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/u,i-K(u)*Math.sqrt(n*n+e*e)]},e)}function Ne(n,t){return[n,Math.log(Math.tan(ja/4+t/2))]}function Ee(n){var t,e=ae(n),r=e.scale,u=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=u.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=i.apply(e,arguments);if(a===e){if(t=null==n){var o=ja*r(),l=u();i([[l[0]-o,l[1]-o],[l[0]+o,l[1]+o]])}}else t&&(a=null);return a},e.clipExtent(null)}function Ae(n,t){return[Math.log(Math.tan(ja/4+t/2)),-n]}function Ce(n){return n[0]}function ze(n){return n[1]}function Le(n){for(var t=n.length,e=[0,1],r=2,u=2;t>u;u++){for(;r>1&&Q(n[e[r-2]],n[e[r-1]],n[u])<=0;)--r;e[r++]=u}return e.slice(0,r)}function qe(n,t){return n[0]-t[0]||n[1]-t[1]}function Te(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Re(n,t,e,r){var u=n[0],i=e[0],a=t[0]-u,o=r[0]-i,l=n[1],c=e[1],s=t[1]-l,f=r[1]-c,h=(o*(l-c)-f*(u-i))/(f*a-o*s);return[u+h*a,l+h*s]}function De(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function Pe(){rr(this),this.edge=this.site=this.circle=null}function Ue(n){var t=cl.pop()||new Pe;return t.site=n,t}function je(n){Be(n),al.remove(n),cl.push(n),rr(n)}function Fe(n){var t=n.circle,e=t.x,r=t.cy,u={x:e,y:r},i=n.P,a=n.N,o=[n];je(n);for(var l=i;l.circle&&Ma(e-l.circle.x)<Pa&&Ma(r-l.circle.cy)<Pa;)i=l.P,o.unshift(l),je(l),l=i;o.unshift(l),Be(l);for(var c=a;c.circle&&Ma(e-c.circle.x)<Pa&&Ma(r-c.circle.cy)<Pa;)a=c.N,o.push(c),je(c),c=a;o.push(c),Be(c);var s,f=o.length;for(s=1;f>s;++s)c=o[s],l=o[s-1],nr(c.edge,l.site,c.site,u);l=o[0],c=o[f-1],c.edge=Ke(l.site,c.site,null,u),$e(l),$e(c)}function He(n){for(var t,e,r,u,i=n.x,a=n.y,o=al._;o;)if(r=Oe(o,a)-i,r>Pa)o=o.L;else{if(u=i-Ie(o,a),!(u>Pa)){r>-Pa?(t=o.P,e=o):u>-Pa?(t=o,e=o.N):t=e=o;break}if(!o.R){t=o;break}o=o.R}var l=Ue(n);if(al.insert(t,l),t||e){if(t===e)return Be(t),e=Ue(t.site),al.insert(l,e),l.edge=e.edge=Ke(t.site,l.site),$e(t),void $e(e);if(!e)return void(l.edge=Ke(t.site,l.site));Be(t),Be(e);var c=t.site,s=c.x,f=c.y,h=n.x-s,g=n.y-f,p=e.site,v=p.x-s,d=p.y-f,m=2*(h*d-g*v),y=h*h+g*g,M=v*v+d*d,x={x:(d*y-g*M)/m+s,y:(h*M-v*y)/m+f};nr(e.edge,c,p,x),l.edge=Ke(c,n,null,x),e.edge=Ke(n,p,null,x),$e(t),$e(e)}}function Oe(n,t){var e=n.site,r=e.x,u=e.y,i=u-t;if(!i)return r;var a=n.P;if(!a)return-(1/0);e=a.site;var o=e.x,l=e.y,c=l-t;if(!c)return o;var s=o-r,f=1/i-1/c,h=s/c;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*c)-l+c/2+u-i/2)))/f+r:(r+o)/2}function Ie(n,t){var e=n.N;if(e)return Oe(e,t);var r=n.site;return r.y===t?r.x:1/0}function Ye(n){this.site=n,this.edges=[]}function Ze(n){for(var t,e,r,u,i,a,o,l,c,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],v=il,d=v.length;d--;)if(i=v[d],i&&i.prepare())for(o=i.edges,l=o.length,a=0;l>a;)s=o[a].end(),r=s.x,u=s.y,c=o[++a%l].start(),t=c.x,e=c.y,(Ma(r-t)>Pa||Ma(u-e)>Pa)&&(o.splice(a,0,new tr(Qe(i.site,s,Ma(r-f)<Pa&&p-u>Pa?{x:f,y:Ma(t-f)<Pa?e:p}:Ma(u-p)<Pa&&h-r>Pa?{x:Ma(e-p)<Pa?t:h,y:p}:Ma(r-h)<Pa&&u-g>Pa?{x:h,y:Ma(t-h)<Pa?e:g}:Ma(u-g)<Pa&&r-f>Pa?{x:Ma(e-g)<Pa?t:f,y:g}:null),i.site,null)),++l)}function Ve(n,t){return t.angle-n.angle}function Xe(){rr(this),this.x=this.y=this.arc=this.site=this.cy=null}function $e(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,u=n.site,i=e.site;if(r!==i){var a=u.x,o=u.y,l=r.x-a,c=r.y-o,s=i.x-a,f=i.y-o,h=2*(l*f-c*s);if(!(h>=-Ua)){var g=l*l+c*c,p=s*s+f*f,v=(f*g-c*p)/h,d=(l*p-s*g)/h,f=d+o,m=sl.pop()||new Xe;m.arc=n,m.site=u,m.x=v+a,m.y=f+Math.sqrt(v*v+d*d),m.cy=f,n.circle=m;for(var y=null,M=ll._;M;)if(m.y<M.y||m.y===M.y&&m.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}ll.insert(y,m),y||(ol=m)}}}}function Be(n){var t=n.circle;t&&(t.P||(ol=t.N),ll.remove(t),sl.push(t),rr(t),n.circle=null)}function We(n){for(var t,e=ul,r=Yt(n[0][0],n[0][1],n[1][0],n[1][1]),u=e.length;u--;)t=e[u],(!Je(t,n)||!r(t)||Ma(t.a.x-t.b.x)<Pa&&Ma(t.a.y-t.b.y)<Pa)&&(t.a=t.b=null,e.splice(u,1))}function Je(n,t){var e=n.b;if(e)return!0;var r,u,i=n.a,a=t[0][0],o=t[1][0],l=t[0][1],c=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,v=f.y,d=(h+p)/2,m=(g+v)/2;if(v===g){if(a>d||d>=o)return;if(h>p){if(i){if(i.y>=c)return}else i={x:d,y:l};e={x:d,y:c}}else{if(i){if(i.y<l)return}else i={x:d,y:c};e={x:d,y:l}}}else if(r=(h-p)/(v-g),u=m-r*d,-1>r||r>1)if(h>p){if(i){if(i.y>=c)return}else i={x:(l-u)/r,y:l};e={x:(c-u)/r,y:c}}else{if(i){if(i.y<l)return}else i={x:(c-u)/r,y:c};e={x:(l-u)/r,y:l}}else if(v>g){if(i){if(i.x>=o)return}else i={x:a,y:r*a+u};e={x:o,y:r*o+u}}else{if(i){if(i.x<a)return}else i={x:o,y:r*o+u};e={x:a,y:r*a+u}}return n.a=i,n.b=e,!0}function Ge(n,t){this.l=n,this.r=t,this.a=this.b=null}function Ke(n,t,e,r){var u=new Ge(n,t);return ul.push(u),e&&nr(u,n,t,e),r&&nr(u,t,n,r),il[n.i].edges.push(new tr(u,n,t)),il[t.i].edges.push(new tr(u,t,n)),u}function Qe(n,t,e){var r=new Ge(n,null);return r.a=t,r.b=e,ul.push(r),r}function nr(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function tr(n,t,e){var r=n.a,u=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(u.x-r.x,r.y-u.y):Math.atan2(r.x-u.x,u.y-r.y)}function er(){this._=null}function rr(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function ur(n,t){var e=t,r=t.R,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function ir(n,t){var e=t,r=t.L,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function ar(n){for(;n.L;)n=n.L;return n}function or(n,t){var e,r,u,i=n.sort(lr).pop();for(ul=[],il=new Array(n.length),al=new er,ll=new er;;)if(u=ol,i&&(!u||i.y<u.y||i.y===u.y&&i.x<u.x))(i.x!==e||i.y!==r)&&(il[i.i]=new Ye(i),He(i),e=i.x,r=i.y),i=n.pop();else{if(!u)break;Fe(u.arc)}t&&(We(t),Ze(t));var a={cells:il,edges:ul};return al=ll=ul=il=null,a}function lr(n,t){return t.y-n.y||t.x-n.x}function cr(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function sr(n){return n.x}function fr(n){return n.y}function hr(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function gr(n,t,e,r,u,i){if(!n(t,e,r,u,i)){var a=.5*(e+u),o=.5*(r+i),l=t.nodes;l[0]&&gr(n,l[0],e,r,a,o),l[1]&&gr(n,l[1],a,r,u,o),l[2]&&gr(n,l[2],e,o,a,i),l[3]&&gr(n,l[3],a,o,u,i)}}function pr(n,t,e,r,u,i,a){var o,l=1/0;return function c(n,s,f,h,g){if(!(s>i||f>a||r>h||u>g)){if(p=n.point){var p,v=t-n.x,d=e-n.y,m=v*v+d*d;if(l>m){var y=Math.sqrt(l=m);r=t-y,u=e-y,i=t+y,a=e+y,o=p}}for(var M=n.nodes,x=.5*(s+h),b=.5*(f+g),_=t>=x,w=e>=b,S=w<<1|_,k=S+4;k>S;++S)if(n=M[3&S])switch(3&S){case 0:c(n,s,f,x,b);break;case 1:c(n,x,f,h,b);break;case 2:c(n,s,b,x,g);break;case 3:c(n,x,b,h,g)}}}(n,r,u,i,a),o}function vr(n,t){n=oa.rgb(n),t=oa.rgb(t);var e=n.r,r=n.g,u=n.b,i=t.r-e,a=t.g-r,o=t.b-u;return function(n){return"#"+bn(Math.round(e+i*n))+bn(Math.round(r+a*n))+bn(Math.round(u+o*n))}}function dr(n,t){var e,r={},u={};for(e in n)e in t?r[e]=Mr(n[e],t[e]):u[e]=n[e];for(e in t)e in n||(u[e]=t[e]);return function(n){for(e in r)u[e]=r[e](n);return u}}function mr(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function yr(n,t){var e,r,u,i=hl.lastIndex=gl.lastIndex=0,a=-1,o=[],l=[];for(n+="",t+="";(e=hl.exec(n))&&(r=gl.exec(t));)(u=r.index)>i&&(u=t.slice(i,u),o[a]?o[a]+=u:o[++a]=u),(e=e[0])===(r=r[0])?o[a]?o[a]+=r:o[++a]=r:(o[++a]=null,l.push({i:a,x:mr(e,r)})),i=gl.lastIndex;return i<t.length&&(u=t.slice(i),o[a]?o[a]+=u:o[++a]=u),o.length<2?l[0]?(t=l[0].x,function(n){return t(n)+""}):function(){return t}:(t=l.length,function(n){for(var e,r=0;t>r;++r)o[(e=l[r]).i]=e.x(n);return o.join("")})}function Mr(n,t){for(var e,r=oa.interpolators.length;--r>=0&&!(e=oa.interpolators[r](n,t)););return e}function xr(n,t){var e,r=[],u=[],i=n.length,a=t.length,o=Math.min(n.length,t.length);for(e=0;o>e;++e)r.push(Mr(n[e],t[e]));for(;i>e;++e)u[e]=n[e];for(;a>e;++e)u[e]=t[e];return function(n){for(e=0;o>e;++e)u[e]=r[e](n);return u}}function br(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function _r(n){return function(t){return 1-n(1-t)}}function wr(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function Sr(n){return n*n}function kr(n){return n*n*n}function Nr(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function Er(n){return function(t){return Math.pow(t,n)}}function Ar(n){return 1-Math.cos(n*Oa)}function Cr(n){return Math.pow(2,10*(n-1))}function zr(n){return 1-Math.sqrt(1-n*n)}function Lr(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/Fa*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Fa/t)}}function qr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function Tr(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Rr(n,t){n=oa.hcl(n),t=oa.hcl(t);var e=n.h,r=n.c,u=n.l,i=t.h-e,a=t.c-r,o=t.l-u;return isNaN(a)&&(a=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return fn(e+i*n,r+a*n,u+o*n)+""}}function Dr(n,t){n=oa.hsl(n),t=oa.hsl(t);var e=n.h,r=n.s,u=n.l,i=t.h-e,a=t.s-r,o=t.l-u;return isNaN(a)&&(a=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return cn(e+i*n,r+a*n,u+o*n)+""}}function Pr(n,t){n=oa.lab(n),t=oa.lab(t);var e=n.l,r=n.a,u=n.b,i=t.l-e,a=t.a-r,o=t.b-u;return function(n){return gn(e+i*n,r+a*n,u+o*n)+""}}function Ur(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function jr(n){var t=[n.a,n.b],e=[n.c,n.d],r=Hr(t),u=Fr(t,e),i=Hr(Or(e,t,-u))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,u*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*Ya,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(u,i)*Ya:0}function Fr(n,t){return n[0]*t[0]+n[1]*t[1]}function Hr(n){var t=Math.sqrt(Fr(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Or(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Ir(n){return n.length?n.pop()+",":""}function Yr(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var u=e.push("translate(",null,",",null,")");r.push({i:u-4,x:mr(n[0],t[0])},{i:u-2,x:mr(n[1],t[1])})}else(t[0]||t[1])&&e.push("translate("+t+")")}function Zr(n,t,e,r){n!==t?(n-t>180?t+=360:t-n>180&&(n+=360),r.push({i:e.push(Ir(e)+"rotate(",null,")")-2,x:mr(n,t)})):t&&e.push(Ir(e)+"rotate("+t+")")}function Vr(n,t,e,r){n!==t?r.push({i:e.push(Ir(e)+"skewX(",null,")")-2,x:mr(n,t)}):t&&e.push(Ir(e)+"skewX("+t+")")}function Xr(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var u=e.push(Ir(e)+"scale(",null,",",null,")");r.push({i:u-4,x:mr(n[0],t[0])},{i:u-2,x:mr(n[1],t[1])})}else(1!==t[0]||1!==t[1])&&e.push(Ir(e)+"scale("+t+")")}function $r(n,t){var e=[],r=[];return n=oa.transform(n),t=oa.transform(t),Yr(n.translate,t.translate,e,r),Zr(n.rotate,t.rotate,e,r),Vr(n.skew,t.skew,e,r),Xr(n.scale,t.scale,e,r),n=t=null,function(n){for(var t,u=-1,i=r.length;++u<i;)e[(t=r[u]).i]=t.x(n);return e.join("")}}function Br(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Wr(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Jr(n){for(var t=n.source,e=n.target,r=Kr(t,e),u=[t];t!==r;)t=t.parent,u.push(t);for(var i=u.length;e!==r;)u.splice(i,0,e),e=e.parent;return u}function Gr(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Kr(n,t){if(n===t)return n;for(var e=Gr(n),r=Gr(t),u=e.pop(),i=r.pop(),a=null;u===i;)a=u,u=e.pop(),i=r.pop();return a}function Qr(n){n.fixed|=2}function nu(n){n.fixed&=-7}function tu(n){n.fixed|=4,n.px=n.x,n.py=n.y}function eu(n){n.fixed&=-5}function ru(n,t,e){var r=0,u=0;if(n.charge=0,!n.leaf)for(var i,a=n.nodes,o=a.length,l=-1;++l<o;)i=a[l],null!=i&&(ru(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,u+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var c=t*e[n.point.index];n.charge+=n.pointCharge=c,r+=c*n.point.x,u+=c*n.point.y}n.cx=r/n.charge,n.cy=u/n.charge}function uu(n,t){return oa.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=su,n}function iu(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(u=n.children)&&(r=u.length))for(var r,u;--r>=0;)e.push(u[r])}function au(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(u=i.length))for(var u,i,a=-1;++a<u;)e.push(i[a]);for(;null!=(n=r.pop());)t(n)}function ou(n){return n.children}function lu(n){return n.value}function cu(n,t){return t.value-n.value}function su(n){return oa.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function fu(n){return n.x}function hu(n){return n.y}function gu(n,t,e){n.y0=t,n.y=e}function pu(n){return oa.range(n.length)}function vu(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function du(n){for(var t,e=1,r=0,u=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>u&&(r=e,u=t);return r}function mu(n){return n.reduce(yu,0)}function yu(n,t){return n+t[1]}function Mu(n,t){return xu(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function xu(n,t){for(var e=-1,r=+n[0],u=(n[1]-r)/t,i=[];++e<=t;)i[e]=u*e+r;return i}function bu(n){return[oa.min(n),oa.max(n)]}function _u(n,t){return n.value-t.value}function wu(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function Su(n,t){n._pack_next=t,t._pack_prev=n}function ku(n,t){var e=t.x-n.x,r=t.y-n.y,u=n.r+t.r;return.999*u*u>e*e+r*r}function Nu(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(c=e.length)){var e,r,u,i,a,o,l,c,s=1/0,f=-(1/0),h=1/0,g=-(1/0);if(e.forEach(Eu),r=e[0],r.x=-r.r,r.y=0,t(r),c>1&&(u=e[1],u.x=u.r,u.y=0,t(u),c>2))for(i=e[2],zu(r,u,i),t(i),wu(r,i),r._pack_prev=i,wu(i,u),u=r._pack_next,a=3;c>a;a++){zu(r,u,i=e[a]);var p=0,v=1,d=1;for(o=u._pack_next;o!==u;o=o._pack_next,v++)if(ku(o,i)){p=1;break}if(1==p)for(l=r._pack_prev;l!==o._pack_prev&&!ku(l,i);l=l._pack_prev,d++);p?(d>v||v==d&&u.r<r.r?Su(r,u=o):Su(r=l,u),a--):(wu(r,i),u=i,t(i))}var m=(s+f)/2,y=(h+g)/2,M=0;for(a=0;c>a;a++)i=e[a],i.x-=m,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(Au)}}function Eu(n){n._pack_next=n._pack_prev=n}function Au(n){delete n._pack_next,delete n._pack_prev}function Cu(n,t,e,r){var u=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,u)for(var i=-1,a=u.length;++i<a;)Cu(u[i],t,e,r)}function zu(n,t,e){var r=n.r+e.r,u=t.x-n.x,i=t.y-n.y;if(r&&(u||i)){var a=t.r+e.r,o=u*u+i*i;a*=a,r*=r;var l=.5+(r-a)/(2*o),c=Math.sqrt(Math.max(0,2*a*(r+o)-(r-=o)*r-a*a))/(2*o);e.x=n.x+l*u+c*i,e.y=n.y+l*i-c*u}else e.x=n.x+r,e.y=n.y}function Lu(n,t){return n.parent==t.parent?1:2}function qu(n){var t=n.children;return t.length?t[0]:n.t}function Tu(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function Ru(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function Du(n){for(var t,e=0,r=0,u=n.children,i=u.length;--i>=0;)t=u[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Pu(n,t,e){return n.a.parent===t.parent?n.a:e}function Uu(n){return 1+oa.max(n,function(n){return n.y})}function ju(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Fu(n){var t=n.children;return t&&t.length?Fu(t[0]):n}function Hu(n){var t,e=n.children;return e&&(t=e.length)?Hu(e[t-1]):n}function Ou(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function Iu(n,t){var e=n.x+t[3],r=n.y+t[0],u=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>u&&(e+=u/2,u=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:u,dy:i}}function Yu(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function Zu(n){return n.rangeExtent?n.rangeExtent():Yu(n.range())}function Vu(n,t,e,r){var u=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(u(n))}}function Xu(n,t){var e,r=0,u=n.length-1,i=n[r],a=n[u];return i>a&&(e=r,r=u,u=e,e=i,i=a,a=e),n[r]=t.floor(i),n[u]=t.ceil(a),n}function $u(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:Sl}function Bu(n,t,e,r){var u=[],i=[],a=0,o=Math.min(n.length,t.length)-1;for(n[o]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=o;)u.push(e(n[a-1],n[a])),i.push(r(t[a-1],t[a]));return function(t){var e=oa.bisect(n,t,1,o)-1;return i[e](u[e](t))}}function Wu(n,t,e,r){function u(){var u=Math.min(n.length,t.length)>2?Bu:Vu,l=r?Wr:Br;return a=u(n,t,l,e),o=u(t,n,l,Mr),i}function i(n){return a(n)}var a,o;return i.invert=function(n){return o(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),u()):n},i.range=function(n){return arguments.length?(t=n,u()):t},i.rangeRound=function(n){return i.range(n).interpolate(Ur)},i.clamp=function(n){return arguments.length?(r=n,u()):r},i.interpolate=function(n){return arguments.length?(e=n,u()):e},i.ticks=function(t){return Qu(n,t)},i.tickFormat=function(t,e){return ni(n,t,e)},i.nice=function(t){return Gu(n,t),u()},i.copy=function(){return Wu(n,t,e,r)},u()}function Ju(n,t){return oa.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Gu(n,t){return Xu(n,$u(Ku(n,t)[2])),Xu(n,$u(Ku(n,t)[2])),n}function Ku(n,t){null==t&&(t=10);var e=Yu(n),r=e[1]-e[0],u=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*u;return.15>=i?u*=10:.35>=i?u*=5:.75>=i&&(u*=2),e[0]=Math.ceil(e[0]/u)*u,e[1]=Math.floor(e[1]/u)*u+.5*u,e[2]=u,e}function Qu(n,t){return oa.range.apply(oa,Ku(n,t))}function ni(n,t,e){var r=Ku(n,t);if(e){var u=fo.exec(e);if(u.shift(),"s"===u[8]){var i=oa.formatPrefix(Math.max(Ma(r[0]),Ma(r[1])));return u[7]||(u[7]="."+ti(i.scale(r[2]))),u[8]="f",e=oa.format(u.join("")),function(n){return e(i.scale(n))+i.symbol}}u[7]||(u[7]="."+ei(u[8],r)),e=u.join("")}else e=",."+ti(r[2])+"f";return oa.format(e)}function ti(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function ei(n,t){var e=ti(t[2]);return n in kl?Math.abs(e-ti(Math.max(Ma(t[0]),Ma(t[1]))))+ +("e"!==n):e-2*("%"===n)}function ri(n,t,e,r){function u(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function a(t){return n(u(t))}return a.invert=function(t){return i(n.invert(t))},a.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(u)),a):r},a.base=function(e){return arguments.length?(t=+e,n.domain(r.map(u)),a):t},a.nice=function(){var t=Xu(r.map(u),e?Math:El);return n.domain(t),r=t.map(i),a},a.ticks=function(){var n=Yu(r),a=[],o=n[0],l=n[1],c=Math.floor(u(o)),s=Math.ceil(u(l)),f=t%1?2:t;if(isFinite(s-c)){if(e){for(;s>c;c++)for(var h=1;f>h;h++)a.push(i(c)*h);a.push(i(c))}else for(a.push(i(c));c++<s;)for(var h=f-1;h>0;h--)a.push(i(c)*h);for(c=0;a[c]<o;c++);for(s=a.length;a[s-1]>l;s--);a=a.slice(c,s)}return a},a.tickFormat=function(n,e){if(!arguments.length)return Nl;arguments.length<2?e=Nl:"function"!=typeof e&&(e=oa.format(e));var r=Math.max(1,t*n/a.ticks().length);return function(n){var a=n/i(Math.round(u(n)));return t-.5>a*t&&(a*=t),r>=a?e(n):""}},a.copy=function(){return ri(n.copy(),t,e,r)},Ju(a,n)}function ui(n,t,e){function r(t){return n(u(t))}var u=ii(t),i=ii(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(u)),r):e},r.ticks=function(n){return Qu(e,n)},r.tickFormat=function(n,t){return ni(e,n,t)},r.nice=function(n){return r.domain(Gu(e,n))},r.exponent=function(a){return arguments.length?(u=ii(t=a),i=ii(1/t),n.domain(e.map(u)),r):t},r.copy=function(){return ui(n.copy(),t,e)},Ju(r,n)}function ii(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function ai(n,t){function e(e){return i[((u.get(e)||("range"===t.t?u.set(e,n.push(e)):NaN))-1)%i.length]}function r(t,e){return oa.range(n.length).map(function(n){return t+e*n})}var u,i,a;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new c;for(var i,a=-1,o=r.length;++a<o;)u.has(i=r[a])||u.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,a=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(u,o){arguments.length<2&&(o=0);var l=u[0],c=u[1],s=n.length<2?(l=(l+c)/2,0):(c-l)/(n.length-1+o);return i=r(l+s*o/2,s),a=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(u,o){arguments.length<2&&(o=0);var l=u[0],c=u[1],s=n.length<2?(l=c=Math.round((l+c)/2),0):(c-l)/(n.length-1+o)|0;return i=r(l+Math.round(s*o/2+(c-l-(n.length-1+o)*s)/2),s),a=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(u,o,l){arguments.length<2&&(o=0),arguments.length<3&&(l=o);var c=u[1]<u[0],s=u[c-0],f=u[1-c],h=(f-s)/(n.length-o+2*l);return i=r(s+h*l,h),c&&i.reverse(),a=h*(1-o),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(u,o,l){arguments.length<2&&(o=0),arguments.length<3&&(l=o);var c=u[1]<u[0],s=u[c-0],f=u[1-c],h=Math.floor((f-s)/(n.length-o+2*l));return i=r(s+Math.round((f-s-(n.length-o)*h)/2),h),c&&i.reverse(),a=Math.round(h*(1-o)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return a},e.rangeExtent=function(){return Yu(t.a[0])},e.copy=function(){return ai(n,t)},e.domain(n)}function oi(n,t){function i(){var e=0,r=t.length;for(o=[];++e<r;)o[e-1]=oa.quantile(n,e/r);return a}function a(n){return isNaN(n=+n)?void 0:t[oa.bisect(o,n)]}var o;return a.domain=function(t){return arguments.length?(n=t.map(r).filter(u).sort(e),i()):n},a.range=function(n){return arguments.length?(t=n,i()):t},a.quantiles=function(){return o},a.invertExtent=function(e){return e=t.indexOf(e),0>e?[NaN,NaN]:[e>0?o[e-1]:n[0],e<o.length?o[e]:n[n.length-1]]},a.copy=function(){return oi(n,t)},i()}function li(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(i*(t-n))))]}function u(){return i=e.length/(t-n),a=e.length-1,r}var i,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],u()):[n,t]},r.range=function(n){return arguments.length?(e=n,u()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?NaN:t/i+n,[t,t+1/i]},r.copy=function(){return li(n,t,e)},u()}function ci(n,t){function e(e){return e>=e?t[oa.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return ci(n,t)},e}function si(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Qu(n,t)},t.tickFormat=function(t,e){return ni(n,t,e)},t.copy=function(){return si(n)},t}function fi(){return 0}function hi(n){return n.innerRadius}function gi(n){return n.outerRadius}function pi(n){return n.startAngle}function vi(n){return n.endAngle}function di(n){return n&&n.padAngle}function mi(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function yi(n,t,e,r,u){var i=n[0]-t[0],a=n[1]-t[1],o=(u?r:-r)/Math.sqrt(i*i+a*a),l=o*a,c=-o*i,s=n[0]+l,f=n[1]+c,h=t[0]+l,g=t[1]+c,p=(s+h)/2,v=(f+g)/2,d=h-s,m=g-f,y=d*d+m*m,M=e-r,x=s*g-h*f,b=(0>m?-1:1)*Math.sqrt(Math.max(0,M*M*y-x*x)),_=(x*m-d*b)/y,w=(-x*d-m*b)/y,S=(x*m+d*b)/y,k=(-x*d+m*b)/y,N=_-p,E=w-v,A=S-p,C=k-v;return N*N+E*E>A*A+C*C&&(_=S,w=k),[[_-l,w-c],[_*e/M,w*e/M]]}function Mi(n){function t(t){function a(){c.push("M",i(n(s),o))}for(var l,c=[],s=[],f=-1,h=t.length,g=En(e),p=En(r);++f<h;)u.call(this,l=t[f],f)?s.push([+g.call(this,l,f),+p.call(this,l,f)]):s.length&&(a(),s=[]);return s.length&&a(),c.length?c.join(""):null}var e=Ce,r=ze,u=zt,i=xi,a=i.key,o=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(u=n,t):u},t.interpolate=function(n){return arguments.length?(a="function"==typeof n?i=n:(i=Tl.get(n)||xi).key,t):a},t.tension=function(n){return arguments.length?(o=n,t):o},t}function xi(n){return n.length>1?n.join("L"):n+"Z"}function bi(n){return n.join("L")+"Z"}function _i(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&u.push("H",r[0]),u.join("")}function wi(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("V",(r=n[t])[1],"H",r[0]);return u.join("")}function Si(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r=n[t])[0],"V",r[1]);return u.join("")}function ki(n,t){return n.length<4?xi(n):n[1]+Ai(n.slice(1,-1),Ci(n,t))}function Ni(n,t){return n.length<3?bi(n):n[0]+Ai((n.push(n[0]),n),Ci([n[n.length-2]].concat(n,[n[1]]),t))}function Ei(n,t){return n.length<3?xi(n):n[0]+Ai(n,Ci(n,t))}function Ai(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return xi(n);var e=n.length!=t.length,r="",u=n[0],i=n[1],a=t[0],o=a,l=1;if(e&&(r+="Q"+(i[0]-2*a[0]/3)+","+(i[1]-2*a[1]/3)+","+i[0]+","+i[1],u=n[1],l=2),t.length>1){o=t[1],i=n[l],l++,r+="C"+(u[0]+a[0])+","+(u[1]+a[1])+","+(i[0]-o[0])+","+(i[1]-o[1])+","+i[0]+","+i[1];for(var c=2;c<t.length;c++,l++)i=n[l],o=t[c],r+="S"+(i[0]-o[0])+","+(i[1]-o[1])+","+i[0]+","+i[1]}if(e){var s=n[l];r+="Q"+(i[0]+2*o[0]/3)+","+(i[1]+2*o[1]/3)+","+s[0]+","+s[1]}return r}function Ci(n,t){for(var e,r=[],u=(1-t)/2,i=n[0],a=n[1],o=1,l=n.length;++o<l;)e=i,i=a,a=n[o],r.push([u*(a[0]-e[0]),u*(a[1]-e[1])]);return r}function zi(n){if(n.length<3)return xi(n);var t=1,e=n.length,r=n[0],u=r[0],i=r[1],a=[u,u,u,(r=n[1])[0]],o=[i,i,i,r[1]],l=[u,",",i,"L",Ri(Pl,a),",",Ri(Pl,o)];for(n.push(n[e-1]);++t<=e;)r=n[t],a.shift(),a.push(r[0]),o.shift(),o.push(r[1]),Di(l,a,o);return n.pop(),l.push("L",r),l.join("")}function Li(n){if(n.length<4)return xi(n);for(var t,e=[],r=-1,u=n.length,i=[0],a=[0];++r<3;)t=n[r],i.push(t[0]),a.push(t[1]);for(e.push(Ri(Pl,i)+","+Ri(Pl,a)),--r;++r<u;)t=n[r],i.shift(),i.push(t[0]),a.shift(),a.push(t[1]),Di(e,i,a);return e.join("")}function qi(n){for(var t,e,r=-1,u=n.length,i=u+4,a=[],o=[];++r<4;)e=n[r%u],a.push(e[0]),o.push(e[1]);for(t=[Ri(Pl,a),",",Ri(Pl,o)],--r;++r<i;)e=n[r%u],a.shift(),a.push(e[0]),o.shift(),o.push(e[1]),Di(t,a,o);return t.join("")}function Ti(n,t){var e=n.length-1;if(e)for(var r,u,i=n[0][0],a=n[0][1],o=n[e][0]-i,l=n[e][1]-a,c=-1;++c<=e;)r=n[c],u=c/e,r[0]=t*r[0]+(1-t)*(i+u*o),r[1]=t*r[1]+(1-t)*(a+u*l);return zi(n)}function Ri(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Di(n,t,e){n.push("C",Ri(Rl,t),",",Ri(Rl,e),",",Ri(Dl,t),",",Ri(Dl,e),",",Ri(Pl,t),",",Ri(Pl,e))}function Pi(n,t){return(t[1]-n[1])/(t[0]-n[0])}function Ui(n){for(var t=0,e=n.length-1,r=[],u=n[0],i=n[1],a=r[0]=Pi(u,i);++t<e;)r[t]=(a+(a=Pi(u=i,i=n[t+1])))/2;return r[t]=a,r}function ji(n){for(var t,e,r,u,i=[],a=Ui(n),o=-1,l=n.length-1;++o<l;)t=Pi(n[o],n[o+1]),Ma(t)<Pa?a[o]=a[o+1]=0:(e=a[o]/t,r=a[o+1]/t,u=e*e+r*r,u>9&&(u=3*t/Math.sqrt(u),a[o]=u*e,a[o+1]=u*r));for(o=-1;++o<=l;)u=(n[Math.min(l,o+1)][0]-n[Math.max(0,o-1)][0])/(6*(1+a[o]*a[o])),i.push([u||0,a[o]*u||0]);return i}function Fi(n){return n.length<3?xi(n):n[0]+Ai(n,ji(n))}function Hi(n){for(var t,e,r,u=-1,i=n.length;++u<i;)t=n[u],e=t[0],r=t[1]-Oa,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Oi(n){function t(t){function l(){v.push("M",o(n(m),f),s,c(n(d.reverse()),f),"Z")}for(var h,g,p,v=[],d=[],m=[],y=-1,M=t.length,x=En(e),b=En(u),_=e===r?function(){
	return g}:En(r),w=u===i?function(){return p}:En(i);++y<M;)a.call(this,h=t[y],y)?(d.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),m.push([+_.call(this,h,y),+w.call(this,h,y)])):d.length&&(l(),d=[],m=[]);return d.length&&l(),v.length?v.join(""):null}var e=Ce,r=Ce,u=0,i=ze,a=zt,o=xi,l=o.key,c=o,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(u=i=n,t):i},t.y0=function(n){return arguments.length?(u=n,t):u},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(l="function"==typeof n?o=n:(o=Tl.get(n)||xi).key,c=o.reverse||o,s=o.closed?"M":"L",t):l},t.tension=function(n){return arguments.length?(f=n,t):f},t}function Ii(n){return n.radius}function Yi(n){return[n.x,n.y]}function Zi(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-Oa;return[e*Math.cos(r),e*Math.sin(r)]}}function Vi(){return 64}function Xi(){return"circle"}function $i(n){var t=Math.sqrt(n/ja);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Bi(n){return function(){var t,e,r;(t=this[n])&&(r=t[e=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[e]:delete this[n],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function Wi(n,t,e){return Sa(n,Yl),n.namespace=t,n.id=e,n}function Ji(n,t,e,r){var u=n.id,i=n.namespace;return Y(n,"function"==typeof e?function(n,a,o){n[i][u].tween.set(t,r(e.call(n,n.__data__,a,o)))}:(e=r(e),function(n){n[i][u].tween.set(t,e)}))}function Gi(n){return null==n&&(n=""),function(){this.textContent=n}}function Ki(n){return null==n?"__transition__":"__transition_"+n+"__"}function Qi(n,t,e,r,u){function i(n){var t=v.delay;return s.t=t+l,n>=t?a(n-t):void(s.c=a)}function a(e){var u=p.active,i=p[u];i&&(i.timer.c=null,i.timer.t=NaN,--p.count,delete p[u],i.event&&i.event.interrupt.call(n,n.__data__,i.index));for(var a in p)if(r>+a){var c=p[a];c.timer.c=null,c.timer.t=NaN,--p.count,delete p[a]}s.c=o,qn(function(){return s.c&&o(e||1)&&(s.c=null,s.t=NaN),1},0,l),p.active=r,v.event&&v.event.start.call(n,n.__data__,t),g=[],v.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&g.push(r)}),h=v.ease,f=v.duration}function o(u){for(var i=u/f,a=h(i),o=g.length;o>0;)g[--o].call(n,a);return i>=1?(v.event&&v.event.end.call(n,n.__data__,t),--p.count?delete p[r]:delete n[e],1):void 0}var l,s,f,h,g,p=n[e]||(n[e]={active:0,count:0}),v=p[r];v||(l=u.time,s=qn(i,0,l),v=p[r]={tween:new c,time:l,timer:s,delay:u.delay,duration:u.duration,ease:u.ease,index:t},u=null,++p.count)}function na(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function ta(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function ea(n){return n.toISOString()}function ra(n,t,e){function r(t){return n(t)}function u(n,e){var r=n[1]-n[0],u=r/e,i=oa.bisect(Kl,u);return i==Kl.length?[t.year,Ku(n.map(function(n){return n/31536e6}),e)[2]]:i?t[u/Kl[i-1]<Kl[i]/u?i-1:i]:[tc,Ku(n,e)[2]]}return r.invert=function(t){return ua(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(ua)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,ua(+e+1),t).length}var i=r.domain(),a=Yu(i),o=null==n?u(a,10):"number"==typeof n&&u(a,n);return o&&(n=o[0],t=o[1]),r.domain(Xu(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=ua(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=ua(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Yu(r.domain()),i=null==n?u(e,10):"number"==typeof n?u(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],ua(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return ra(n.copy(),t,e)},Ju(r,n)}function ua(n){return new Date(n)}function ia(n){return JSON.parse(n.responseText)}function aa(n){var t=sa.createRange();return t.selectNode(sa.body),t.createContextualFragment(n.responseText)}var oa={version:"3.5.16"},la=[].slice,ca=function(n){return la.call(n)},sa=this.document;if(sa)try{ca(sa.documentElement.childNodes)[0].nodeType}catch(fa){ca=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),sa)try{sa.createElement("DIV").style.setProperty("opacity",0,"")}catch(ha){var ga=this.Element.prototype,pa=ga.setAttribute,va=ga.setAttributeNS,da=this.CSSStyleDeclaration.prototype,ma=da.setProperty;ga.setAttribute=function(n,t){pa.call(this,n,t+"")},ga.setAttributeNS=function(n,t,e){va.call(this,n,t,e+"")},da.setProperty=function(n,t,e){ma.call(this,n,t+"",e)}}oa.ascending=e,oa.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:NaN},oa.min=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&e>r&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&e>r&&(e=r)}return e},oa.max=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&r>e&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&r>e&&(e=r)}return e},oa.extent=function(n,t){var e,r,u,i=-1,a=n.length;if(1===arguments.length){for(;++i<a;)if(null!=(r=n[i])&&r>=r){e=u=r;break}for(;++i<a;)null!=(r=n[i])&&(e>r&&(e=r),r>u&&(u=r))}else{for(;++i<a;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=u=r;break}for(;++i<a;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>u&&(u=r))}return[e,u]},oa.sum=function(n,t){var e,r=0,i=n.length,a=-1;if(1===arguments.length)for(;++a<i;)u(e=+n[a])&&(r+=e);else for(;++a<i;)u(e=+t.call(n,n[a],a))&&(r+=e);return r},oa.mean=function(n,t){var e,i=0,a=n.length,o=-1,l=a;if(1===arguments.length)for(;++o<a;)u(e=r(n[o]))?i+=e:--l;else for(;++o<a;)u(e=r(t.call(n,n[o],o)))?i+=e:--l;return l?i/l:void 0},oa.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),u=+n[r-1],i=e-r;return i?u+i*(n[r]-u):u},oa.median=function(n,t){var i,a=[],o=n.length,l=-1;if(1===arguments.length)for(;++l<o;)u(i=r(n[l]))&&a.push(i);else for(;++l<o;)u(i=r(t.call(n,n[l],l)))&&a.push(i);return a.length?oa.quantile(a.sort(e),.5):void 0},oa.variance=function(n,t){var e,i,a=n.length,o=0,l=0,c=-1,s=0;if(1===arguments.length)for(;++c<a;)u(e=r(n[c]))&&(i=e-o,o+=i/++s,l+=i*(e-o));else for(;++c<a;)u(e=r(t.call(n,n[c],c)))&&(i=e-o,o+=i/++s,l+=i*(e-o));return s>1?l/(s-1):void 0},oa.deviation=function(){var n=oa.variance.apply(this,arguments);return n?Math.sqrt(n):n};var ya=i(e);oa.bisectLeft=ya.left,oa.bisect=oa.bisectRight=ya.right,oa.bisector=function(n){return i(1===n.length?function(t,r){return e(n(t),r)}:n)},oa.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,u,i=e-t;i;)u=Math.random()*i--|0,r=n[i+t],n[i+t]=n[u+t],n[u+t]=r;return n},oa.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},oa.pairs=function(n){for(var t,e=0,r=n.length-1,u=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=u,u=n[++e]];return i},oa.transpose=function(n){if(!(u=n.length))return[];for(var t=-1,e=oa.min(n,a),r=new Array(e);++t<e;)for(var u,i=-1,o=r[t]=new Array(u);++i<u;)o[i]=n[i][t];return r},oa.zip=function(){return oa.transpose(arguments)},oa.keys=function(n){var t=[];for(var e in n)t.push(e);return t},oa.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},oa.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},oa.merge=function(n){for(var t,e,r,u=n.length,i=-1,a=0;++i<u;)a+=n[i].length;for(e=new Array(a);--u>=0;)for(r=n[u],t=r.length;--t>=0;)e[--a]=r[t];return e};var Ma=Math.abs;oa.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e===1/0)throw new Error("infinite range");var r,u=[],i=o(Ma(e)),a=-1;if(n*=i,t*=i,e*=i,0>e)for(;(r=n+e*++a)>t;)u.push(r/i);else for(;(r=n+e*++a)<t;)u.push(r/i);return u},oa.map=function(n,t){var e=new c;if(n instanceof c)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,u=-1,i=n.length;if(1===arguments.length)for(;++u<i;)e.set(u,n[u]);else for(;++u<i;)e.set(t.call(n,r=n[u],u),r)}else for(var a in n)e.set(a,n[a]);return e};var xa="__proto__",ba="\x00";l(c,{has:h,get:function(n){return this._[s(n)]},set:function(n,t){return this._[s(n)]=t},remove:g,keys:p,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:f(t),value:this._[t]});return n},size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t),this._[t])}}),oa.nest=function(){function n(t,a,o){if(o>=i.length)return r?r.call(u,a):e?a.sort(e):a;for(var l,s,f,h,g=-1,p=a.length,v=i[o++],d=new c;++g<p;)(h=d.get(l=v(s=a[g])))?h.push(s):d.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,o))}):(s={},f=function(e,r){s[e]=n(t,r,o)}),d.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],u=a[e++];return n.forEach(function(n,u){r.push({key:n,values:t(u,e)})}),u?r.sort(function(n,t){return u(n.key,t.key)}):r}var e,r,u={},i=[],a=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(oa.map,e,0),0)},u.key=function(n){return i.push(n),u},u.sortKeys=function(n){return a[i.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},oa.set=function(n){var t=new m;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},l(m,{has:h,add:function(n){return this._[s(n+="")]=!0,n},remove:g,values:p,size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t))}}),oa.behavior={},oa.rebind=function(n,t){for(var e,r=1,u=arguments.length;++r<u;)n[e=arguments[r]]=M(n,t,t[e]);return n};var _a=["webkit","ms","moz","Moz","o","O"];oa.dispatch=function(){for(var n=new _,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=w(n);return n},_.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},oa.event=null,oa.requote=function(n){return n.replace(wa,"\\$&")};var wa=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Sa={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},ka=function(n,t){return t.querySelector(n)},Na=function(n,t){return t.querySelectorAll(n)},Ea=function(n,t){var e=n.matches||n[x(n,"matchesSelector")];return(Ea=function(n,t){return e.call(n,t)})(n,t)};"function"==typeof Sizzle&&(ka=function(n,t){return Sizzle(n,t)[0]||null},Na=Sizzle,Ea=Sizzle.matchesSelector),oa.selection=function(){return oa.select(sa.documentElement)};var Aa=oa.selection.prototype=[];Aa.select=function(n){var t,e,r,u,i=[];n=A(n);for(var a=-1,o=this.length;++a<o;){i.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var l=-1,c=r.length;++l<c;)(u=r[l])?(t.push(e=n.call(u,u.__data__,l,a)),e&&"__data__"in u&&(e.__data__=u.__data__)):t.push(null)}return E(i)},Aa.selectAll=function(n){var t,e,r=[];n=C(n);for(var u=-1,i=this.length;++u<i;)for(var a=this[u],o=-1,l=a.length;++o<l;)(e=a[o])&&(r.push(t=ca(n.call(e,e.__data__,o,u))),t.parentNode=e);return E(r)};var Ca="http://www.w3.org/1999/xhtml",za={svg:"http://www.w3.org/2000/svg",xhtml:Ca,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};oa.ns={prefix:za,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&"xmlns"!==(e=n.slice(0,t))&&(n=n.slice(t+1)),za.hasOwnProperty(e)?{space:za[e],local:n}:n}},Aa.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=oa.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(z(t,n[t]));return this}return this.each(z(n,t))},Aa.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=T(n)).length,u=-1;if(t=e.classList){for(;++u<r;)if(!t.contains(n[u]))return!1}else for(t=e.getAttribute("class");++u<r;)if(!q(n[u]).test(t))return!1;return!0}for(t in n)this.each(R(t,n[t]));return this}return this.each(R(n,t))},Aa.style=function(n,e,r){var u=arguments.length;if(3>u){if("string"!=typeof n){2>u&&(e="");for(r in n)this.each(P(r,n[r],e));return this}if(2>u){var i=this.node();return t(i).getComputedStyle(i,null).getPropertyValue(n)}r=""}return this.each(P(n,e,r))},Aa.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each(U(t,n[t]));return this}return this.each(U(n,t))},Aa.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},Aa.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},Aa.append=function(n){return n=j(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},Aa.insert=function(n,t){return n=j(n),t=A(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},Aa.remove=function(){return this.each(F)},Aa.data=function(n,t){function e(n,e){var r,u,i,a=n.length,f=e.length,h=Math.min(a,f),g=new Array(f),p=new Array(f),v=new Array(a);if(t){var d,m=new c,y=new Array(a);for(r=-1;++r<a;)(u=n[r])&&(m.has(d=t.call(u,u.__data__,r))?v[r]=u:m.set(d,u),y[r]=d);for(r=-1;++r<f;)(u=m.get(d=t.call(e,i=e[r],r)))?u!==!0&&(g[r]=u,u.__data__=i):p[r]=H(i),m.set(d,!0);for(r=-1;++r<a;)r in y&&m.get(y[r])!==!0&&(v[r]=n[r])}else{for(r=-1;++r<h;)u=n[r],i=e[r],u?(u.__data__=i,g[r]=u):p[r]=H(i);for(;f>r;++r)p[r]=H(e[r]);for(;a>r;++r)v[r]=n[r]}p.update=g,p.parentNode=g.parentNode=v.parentNode=n.parentNode,o.push(p),l.push(g),s.push(v)}var r,u,i=-1,a=this.length;if(!arguments.length){for(n=new Array(a=(r=this[0]).length);++i<a;)(u=r[i])&&(n[i]=u.__data__);return n}var o=Z([]),l=E([]),s=E([]);if("function"==typeof n)for(;++i<a;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<a;)e(r=this[i],n);return l.enter=function(){return o},l.exit=function(){return s},l},Aa.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},Aa.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,a=this.length;a>i;i++){u.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var o=0,l=e.length;l>o;o++)(r=e[o])&&n.call(r,r.__data__,o,i)&&t.push(r)}return E(u)},Aa.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],u=r.length-1,i=r[u];--u>=0;)(e=r[u])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},Aa.sort=function(n){n=I.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},Aa.each=function(n){return Y(this,function(t,e,r){n.call(t,t.__data__,e,r)})},Aa.call=function(n){var t=ca(arguments);return n.apply(t[0]=this,t),this},Aa.empty=function(){return!this.node()},Aa.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,u=e.length;u>r;r++){var i=e[r];if(i)return i}return null},Aa.size=function(){var n=0;return Y(this,function(){++n}),n};var La=[];oa.selection.enter=Z,oa.selection.enter.prototype=La,La.append=Aa.append,La.empty=Aa.empty,La.node=Aa.node,La.call=Aa.call,La.size=Aa.size,La.select=function(n){for(var t,e,r,u,i,a=[],o=-1,l=this.length;++o<l;){r=(u=this[o]).update,a.push(t=[]),t.parentNode=u.parentNode;for(var c=-1,s=u.length;++c<s;)(i=u[c])?(t.push(r[c]=e=n.call(u.parentNode,i.__data__,c,o)),e.__data__=i.__data__):t.push(null)}return E(a)},La.insert=function(n,t){return arguments.length<2&&(t=V(this)),Aa.insert.call(this,n,t)},oa.select=function(t){var e;return"string"==typeof t?(e=[ka(t,sa)],e.parentNode=sa.documentElement):(e=[t],e.parentNode=n(t)),E([e])},oa.selectAll=function(n){var t;return"string"==typeof n?(t=ca(Na(n,sa)),t.parentNode=sa.documentElement):(t=ca(n),t.parentNode=null),E([t])},Aa.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(X(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(X(n,t,e))};var qa=oa.map({mouseenter:"mouseover",mouseleave:"mouseout"});sa&&qa.forEach(function(n){"on"+n in sa&&qa.remove(n)});var Ta,Ra=0;oa.mouse=function(n){return J(n,k())};var Da=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;oa.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=k().changedTouches),t)for(var r,u=0,i=t.length;i>u;++u)if((r=t[u]).identifier===e)return J(n,r)},oa.behavior.drag=function(){function n(){this.on("mousedown.drag",i).on("touchstart.drag",a)}function e(n,t,e,i,a){return function(){function o(){var n,e,r=t(h,v);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+c[0],y:r[1]+c[1],dx:n,dy:e}))}function l(){t(h,v)&&(m.on(i+d,null).on(a+d,null),y(p),g({type:"dragend"}))}var c,s=this,f=oa.event.target.correspondingElement||oa.event.target,h=s.parentNode,g=r.of(s,arguments),p=0,v=n(),d=".drag"+(null==v?"":"-"+v),m=oa.select(e(f)).on(i+d,o).on(a+d,l),y=W(f),M=t(h,v);u?(c=u.apply(s,arguments),c=[c.x-M[0],c.y-M[1]]):c=[0,0],g({type:"dragstart"})}}var r=N(n,"drag","dragstart","dragend"),u=null,i=e(b,oa.mouse,t,"mousemove","mouseup"),a=e(G,oa.touch,y,"touchmove","touchend");return n.origin=function(t){return arguments.length?(u=t,n):u},oa.rebind(n,r,"on")},oa.touches=function(n,t){return arguments.length<2&&(t=k().touches),t?ca(t).map(function(t){var e=J(n,t);return e.identifier=t.identifier,e}):[]};var Pa=1e-6,Ua=Pa*Pa,ja=Math.PI,Fa=2*ja,Ha=Fa-Pa,Oa=ja/2,Ia=ja/180,Ya=180/ja,Za=Math.SQRT2,Va=2,Xa=4;oa.interpolateZoom=function(n,t){var e,r,u=n[0],i=n[1],a=n[2],o=t[0],l=t[1],c=t[2],s=o-u,f=l-i,h=s*s+f*f;if(Ua>h)r=Math.log(c/a)/Za,e=function(n){return[u+n*s,i+n*f,a*Math.exp(Za*n*r)]};else{var g=Math.sqrt(h),p=(c*c-a*a+Xa*h)/(2*a*Va*g),v=(c*c-a*a-Xa*h)/(2*c*Va*g),d=Math.log(Math.sqrt(p*p+1)-p),m=Math.log(Math.sqrt(v*v+1)-v);r=(m-d)/Za,e=function(n){var t=n*r,e=rn(d),o=a/(Va*g)*(e*un(Za*t+d)-en(d));return[u+o*s,i+o*f,a*e/rn(Za*t+d)]}}return e.duration=1e3*r,e},oa.behavior.zoom=function(){function n(n){n.on(L,f).on(Ba+".zoom",g).on("dblclick.zoom",p).on(R,h)}function e(n){return[(n[0]-k.x)/k.k,(n[1]-k.y)/k.k]}function r(n){return[n[0]*k.k+k.x,n[1]*k.k+k.y]}function u(n){k.k=Math.max(A[0],Math.min(A[1],n))}function i(n,t){t=r(t),k.x+=n[0]-t[0],k.y+=n[1]-t[1]}function a(t,e,r,a){t.__chart__={x:k.x,y:k.y,k:k.k},u(Math.pow(2,a)),i(d=e,r),t=oa.select(t),C>0&&(t=t.transition().duration(C)),t.call(n.event)}function o(){b&&b.domain(x.range().map(function(n){return(n-k.x)/k.k}).map(x.invert)),w&&w.domain(_.range().map(function(n){return(n-k.y)/k.k}).map(_.invert))}function l(n){z++||n({type:"zoomstart"})}function c(n){o(),n({type:"zoom",scale:k.k,translate:[k.x,k.y]})}function s(n){--z||(n({type:"zoomend"}),d=null)}function f(){function n(){o=1,i(oa.mouse(u),h),c(a)}function r(){f.on(q,null).on(T,null),g(o),s(a)}var u=this,a=D.of(u,arguments),o=0,f=oa.select(t(u)).on(q,n).on(T,r),h=e(oa.mouse(u)),g=W(u);Il.call(u),l(a)}function h(){function n(){var n=oa.touches(p);return g=k.k,n.forEach(function(n){n.identifier in d&&(d[n.identifier]=e(n))}),n}function t(){var t=oa.event.target;oa.select(t).on(x,r).on(b,o),_.push(t);for(var e=oa.event.changedTouches,u=0,i=e.length;i>u;++u)d[e[u].identifier]=null;var l=n(),c=Date.now();if(1===l.length){if(500>c-M){var s=l[0];a(p,s,d[s.identifier],Math.floor(Math.log(k.k)/Math.LN2)+1),S()}M=c}else if(l.length>1){var s=l[0],f=l[1],h=s[0]-f[0],g=s[1]-f[1];m=h*h+g*g}}function r(){var n,t,e,r,a=oa.touches(p);Il.call(p);for(var o=0,l=a.length;l>o;++o,r=null)if(e=a[o],r=d[e.identifier]){if(t)break;n=e,t=r}if(r){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=m&&Math.sqrt(s/m);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+r[0])/2,(t[1]+r[1])/2],u(f*g)}M=null,i(n,t),c(v)}function o(){if(oa.event.touches.length){for(var t=oa.event.changedTouches,e=0,r=t.length;r>e;++e)delete d[t[e].identifier];for(var u in d)return void n()}oa.selectAll(_).on(y,null),w.on(L,f).on(R,h),N(),s(v)}var g,p=this,v=D.of(p,arguments),d={},m=0,y=".zoom-"+oa.event.changedTouches[0].identifier,x="touchmove"+y,b="touchend"+y,_=[],w=oa.select(p),N=W(p);t(),l(v),w.on(L,null).on(R,t)}function g(){var n=D.of(this,arguments);y?clearTimeout(y):(Il.call(this),v=e(d=m||oa.mouse(this)),l(n)),y=setTimeout(function(){y=null,s(n)},50),S(),u(Math.pow(2,.002*$a())*k.k),i(d,v),c(n)}function p(){var n=oa.mouse(this),t=Math.log(k.k)/Math.LN2;a(this,n,e(n),oa.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}var v,d,m,y,M,x,b,_,w,k={x:0,y:0,k:1},E=[960,500],A=Wa,C=250,z=0,L="mousedown.zoom",q="mousemove.zoom",T="mouseup.zoom",R="touchstart.zoom",D=N(n,"zoomstart","zoom","zoomend");return Ba||(Ba="onwheel"in sa?($a=function(){return-oa.event.deltaY*(oa.event.deltaMode?120:1)},"wheel"):"onmousewheel"in sa?($a=function(){return oa.event.wheelDelta},"mousewheel"):($a=function(){return-oa.event.detail},"MozMousePixelScroll")),n.event=function(n){n.each(function(){var n=D.of(this,arguments),t=k;Hl?oa.select(this).transition().each("start.zoom",function(){k=this.__chart__||{x:0,y:0,k:1},l(n)}).tween("zoom:zoom",function(){var e=E[0],r=E[1],u=d?d[0]:e/2,i=d?d[1]:r/2,a=oa.interpolateZoom([(u-k.x)/k.k,(i-k.y)/k.k,e/k.k],[(u-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=a(t),o=e/r[2];this.__chart__=k={x:u-r[0]*o,y:i-r[1]*o,k:o},c(n)}}).each("interrupt.zoom",function(){s(n)}).each("end.zoom",function(){s(n)}):(this.__chart__=k,l(n),c(n),s(n))})},n.translate=function(t){return arguments.length?(k={x:+t[0],y:+t[1],k:k.k},o(),n):[k.x,k.y]},n.scale=function(t){return arguments.length?(k={x:k.x,y:k.y,k:null},u(+t),o(),n):k.k},n.scaleExtent=function(t){return arguments.length?(A=null==t?Wa:[+t[0],+t[1]],n):A},n.center=function(t){return arguments.length?(m=t&&[+t[0],+t[1]],n):m},n.size=function(t){return arguments.length?(E=t&&[+t[0],+t[1]],n):E},n.duration=function(t){return arguments.length?(C=+t,n):C},n.x=function(t){return arguments.length?(b=t,x=t.copy(),k={x:0,y:0,k:1},n):b},n.y=function(t){return arguments.length?(w=t,_=t.copy(),k={x:0,y:0,k:1},n):w},oa.rebind(n,D,"on")};var $a,Ba,Wa=[0,1/0];oa.color=on,on.prototype.toString=function(){return this.rgb()+""},oa.hsl=ln;var Ja=ln.prototype=new on;Ja.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,this.l/n)},Ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,n*this.l)},Ja.rgb=function(){return cn(this.h,this.s,this.l)},oa.hcl=sn;var Ga=sn.prototype=new on;Ga.brighter=function(n){return new sn(this.h,this.c,Math.min(100,this.l+Ka*(arguments.length?n:1)))},Ga.darker=function(n){return new sn(this.h,this.c,Math.max(0,this.l-Ka*(arguments.length?n:1)))},Ga.rgb=function(){return fn(this.h,this.c,this.l).rgb()},oa.lab=hn;var Ka=18,Qa=.95047,no=1,to=1.08883,eo=hn.prototype=new on;eo.brighter=function(n){return new hn(Math.min(100,this.l+Ka*(arguments.length?n:1)),this.a,this.b)},eo.darker=function(n){return new hn(Math.max(0,this.l-Ka*(arguments.length?n:1)),this.a,this.b)},eo.rgb=function(){return gn(this.l,this.a,this.b)},oa.rgb=yn;var ro=yn.prototype=new on;ro.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,u=30;return t||e||r?(t&&u>t&&(t=u),e&&u>e&&(e=u),r&&u>r&&(r=u),new yn(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new yn(u,u,u)},ro.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new yn(n*this.r,n*this.g,n*this.b)},ro.hsl=function(){return wn(this.r,this.g,this.b)},ro.toString=function(){return"#"+bn(this.r)+bn(this.g)+bn(this.b)};var uo=oa.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});uo.forEach(function(n,t){uo.set(n,Mn(t))}),oa.functor=En,oa.xhr=An(y),oa.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var a=Cn(n,t,null==e?r:u(e),i);return a.row=function(n){return arguments.length?a.response(null==(e=n)?r:u(n)):e},a}function r(n){return e.parse(n.responseText)}function u(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(a).join(n)}function a(n){return o.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var o=new RegExp('["'+n+"\n]"),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var u=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(u(n),e)}:u})},e.parseRows=function(n,t){function e(){if(s>=c)return a;if(u)return u=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<c;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(u=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(u=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;c>s;){var r=n.charCodeAt(s++),o=1;if(10===r)u=!0;else if(13===r)u=!0,10===n.charCodeAt(s)&&(++s,++o);else if(r!==l)continue;return n.slice(t,s-o)}return n.slice(t)}for(var r,u,i={},a={},o=[],c=n.length,s=0,f=0;(r=e())!==a;){for(var h=[];r!==i&&r!==a;)h.push(r),r=e();t&&null==(h=t(h,f++))||o.push(h)}return o},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new m,u=[];return t.forEach(function(n){for(var t in n)r.has(t)||u.push(r.add(t))}),[u.map(a).join(n)].concat(t.map(function(t){return u.map(function(n){return a(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},oa.csv=oa.dsv(",","text/csv"),oa.tsv=oa.dsv("	","text/tab-separated-values");var io,ao,oo,lo,co=this[x(this,"requestAnimationFrame")]||function(n){setTimeout(n,17)};oa.timer=function(){qn.apply(this,arguments)},oa.timer.flush=function(){Rn(),Dn()},oa.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var so=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"].map(Un);oa.formatPrefix=function(n,t){var e=0;return(n=+n)&&(0>n&&(n*=-1),t&&(n=oa.round(n,Pn(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),so[8+e/3]};var fo=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,ho=oa.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=oa.round(n,Pn(n,t))).toFixed(Math.max(0,Math.min(20,Pn(n*(1+1e-15),t))))}}),go=oa.time={},po=Date;Hn.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){vo.setUTCDate.apply(this._,arguments)},setDay:function(){vo.setUTCDay.apply(this._,arguments)},setFullYear:function(){vo.setUTCFullYear.apply(this._,arguments)},setHours:function(){vo.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){vo.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){vo.setUTCMinutes.apply(this._,arguments)},setMonth:function(){vo.setUTCMonth.apply(this._,arguments)},setSeconds:function(){vo.setUTCSeconds.apply(this._,arguments)},setTime:function(){vo.setTime.apply(this._,arguments)}};var vo=Date.prototype;go.year=On(function(n){return n=go.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),go.years=go.year.range,go.years.utc=go.year.utc.range,go.day=On(function(n){var t=new po(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),go.days=go.day.range,go.days.utc=go.day.utc.range,go.dayOfYear=function(n){var t=go.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=go[n]=On(function(n){return(n=go.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=go.year(n).getDay();return Math.floor((go.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});go[n+"s"]=e.range,go[n+"s"].utc=e.utc.range,go[n+"OfYear"]=function(n){var e=go.year(n).getDay();return Math.floor((go.dayOfYear(n)+(e+t)%7)/7)}}),go.week=go.sunday,go.weeks=go.sunday.range,go.weeks.utc=go.sunday.utc.range,go.weekOfYear=go.sundayOfYear;var mo={"-":"",_:" ",0:"0"},yo=/^\s*\d+/,Mo=/^%/;oa.locale=function(n){return{numberFormat:jn(n),timeFormat:Yn(n)}};var xo=oa.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],
	shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});oa.format=xo.numberFormat,oa.geo={},st.prototype={s:0,t:0,add:function(n){ft(n,this.t,bo),ft(bo.s,this.s,this),this.s?this.t+=bo.t:this.s=bo.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var bo=new st;oa.geo.stream=function(n,t){n&&_o.hasOwnProperty(n.type)?_o[n.type](n,t):ht(n,t)};var _o={Feature:function(n,t){ht(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,u=e.length;++r<u;)ht(e[r].geometry,t)}},wo={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){gt(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)gt(e[r],t,0)},Polygon:function(n,t){pt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)pt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,u=e.length;++r<u;)ht(e[r],t)}};oa.geo.area=function(n){return So=0,oa.geo.stream(n,No),So};var So,ko=new st,No={sphere:function(){So+=4*ja},point:b,lineStart:b,lineEnd:b,polygonStart:function(){ko.reset(),No.lineStart=vt},polygonEnd:function(){var n=2*ko;So+=0>n?4*ja+n:n,No.lineStart=No.lineEnd=No.point=b}};oa.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=dt([t*Ia,e*Ia]);if(m){var u=yt(m,r),i=[u[1],-u[0],0],a=yt(i,u);bt(a),a=_t(a);var l=t-p,c=l>0?1:-1,v=a[0]*Ya*c,d=Ma(l)>180;if(d^(v>c*p&&c*t>v)){var y=a[1]*Ya;y>g&&(g=y)}else if(v=(v+360)%360-180,d^(v>c*p&&c*t>v)){var y=-a[1]*Ya;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);d?p>t?o(s,t)>o(s,h)&&(h=t):o(t,h)>o(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?o(s,t)>o(s,h)&&(h=t):o(t,h)>o(s,h)&&(s=t)}else n(t,e);m=r,p=t}function e(){b.point=t}function r(){x[0]=s,x[1]=h,b.point=n,m=null}function u(n,e){if(m){var r=n-p;y+=Ma(r)>180?r+(r>0?360:-360):r}else v=n,d=e;No.point(n,e),t(n,e)}function i(){No.lineStart()}function a(){u(v,d),No.lineEnd(),Ma(y)>Pa&&(s=-(h=180)),x[0]=s,x[1]=h,m=null}function o(n,t){return(t-=n)<0?t+360:t}function l(n,t){return n[0]-t[0]}function c(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,v,d,m,y,M,x,b={point:n,lineStart:e,lineEnd:r,polygonStart:function(){b.point=u,b.lineStart=i,b.lineEnd=a,y=0,No.polygonStart()},polygonEnd:function(){No.polygonEnd(),b.point=n,b.lineStart=e,b.lineEnd=r,0>ko?(s=-(h=180),f=-(g=90)):y>Pa?g=90:-Pa>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],oa.geo.stream(n,b);var t=M.length;if(t){M.sort(l);for(var e,r=1,u=M[0],i=[u];t>r;++r)e=M[r],c(e[0],u)||c(e[1],u)?(o(u[0],e[1])>o(u[0],u[1])&&(u[1]=e[1]),o(e[0],u[1])>o(u[0],u[1])&&(u[0]=e[0])):i.push(u=e);for(var a,e,p=-(1/0),t=i.length-1,r=0,u=i[t];t>=r;u=e,++r)e=i[r],(a=o(u[1],e[0]))>p&&(p=a,s=e[0],h=u[1])}return M=x=null,s===1/0||f===1/0?[[NaN,NaN],[NaN,NaN]]:[[s,f],[h,g]]}}(),oa.geo.centroid=function(n){Eo=Ao=Co=zo=Lo=qo=To=Ro=Do=Po=Uo=0,oa.geo.stream(n,jo);var t=Do,e=Po,r=Uo,u=t*t+e*e+r*r;return Ua>u&&(t=qo,e=To,r=Ro,Pa>Ao&&(t=Co,e=zo,r=Lo),u=t*t+e*e+r*r,Ua>u)?[NaN,NaN]:[Math.atan2(e,t)*Ya,tn(r/Math.sqrt(u))*Ya]};var Eo,Ao,Co,zo,Lo,qo,To,Ro,Do,Po,Uo,jo={sphere:b,point:St,lineStart:Nt,lineEnd:Et,polygonStart:function(){jo.lineStart=At},polygonEnd:function(){jo.lineStart=Nt}},Fo=Rt(zt,jt,Ht,[-ja,-ja/2]),Ho=1e9;oa.geo.clipExtent=function(){var n,t,e,r,u,i,a={stream:function(n){return u&&(u.valid=!1),u=i(n),u.valid=!0,u},extent:function(o){return arguments.length?(i=Zt(n=+o[0][0],t=+o[0][1],e=+o[1][0],r=+o[1][1]),u&&(u.valid=!1,u=null),a):[[n,t],[e,r]]}};return a.extent([[0,0],[960,500]])},(oa.geo.conicEqualArea=function(){return Vt(Xt)}).raw=Xt,oa.geo.albers=function(){return oa.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},oa.geo.albersUsa=function(){function n(n){var i=n[0],a=n[1];return t=null,e(i,a),t||(r(i,a),t)||u(i,a),t}var t,e,r,u,i=oa.geo.albers(),a=oa.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),o=oa.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,u=(n[1]-e[1])/t;return(u>=.12&&.234>u&&r>=-.425&&-.214>r?a:u>=.166&&.234>u&&r>=-.214&&-.115>r?o:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=a.stream(n),r=o.stream(n);return{point:function(n,u){t.point(n,u),e.point(n,u),r.point(n,u)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),a.precision(t),o.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),a.scale(.35*t),o.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var c=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*c,f-.238*c],[s+.455*c,f+.238*c]]).stream(l).point,r=a.translate([s-.307*c,f+.201*c]).clipExtent([[s-.425*c+Pa,f+.12*c+Pa],[s-.214*c-Pa,f+.234*c-Pa]]).stream(l).point,u=o.translate([s-.205*c,f+.212*c]).clipExtent([[s-.214*c+Pa,f+.166*c+Pa],[s-.115*c-Pa,f+.234*c-Pa]]).stream(l).point,n},n.scale(1070)};var Oo,Io,Yo,Zo,Vo,Xo,$o={point:b,lineStart:b,lineEnd:b,polygonStart:function(){Io=0,$o.lineStart=$t},polygonEnd:function(){$o.lineStart=$o.lineEnd=$o.point=b,Oo+=Ma(Io/2)}},Bo={point:Bt,lineStart:b,lineEnd:b,polygonStart:b,polygonEnd:b},Wo={point:Gt,lineStart:Kt,lineEnd:Qt,polygonStart:function(){Wo.lineStart=ne},polygonEnd:function(){Wo.point=Gt,Wo.lineStart=Kt,Wo.lineEnd=Qt}};oa.geo.path=function(){function n(n){return n&&("function"==typeof o&&i.pointRadius(+o.apply(this,arguments)),a&&a.valid||(a=u(i)),oa.geo.stream(n,a)),i.result()}function t(){return a=null,n}var e,r,u,i,a,o=4.5;return n.area=function(n){return Oo=0,oa.geo.stream(n,u($o)),Oo},n.centroid=function(n){return Co=zo=Lo=qo=To=Ro=Do=Po=Uo=0,oa.geo.stream(n,u(Wo)),Uo?[Do/Uo,Po/Uo]:Ro?[qo/Ro,To/Ro]:Lo?[Co/Lo,zo/Lo]:[NaN,NaN]},n.bounds=function(n){return Vo=Xo=-(Yo=Zo=1/0),oa.geo.stream(n,u(Bo)),[[Yo,Zo],[Vo,Xo]]},n.projection=function(n){return arguments.length?(u=(e=n)?n.stream||re(n):y,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new Wt:new te(n),"function"!=typeof o&&i.pointRadius(o),t()):r},n.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(i.pointRadius(+t),+t),n):o},n.projection(oa.geo.albersUsa()).context(null)},oa.geo.transform=function(n){return{stream:function(t){var e=new ue(t);for(var r in n)e[r]=n[r];return e}}},ue.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},oa.geo.projection=ae,oa.geo.projectionMutator=oe,(oa.geo.equirectangular=function(){return ae(ce)}).raw=ce.invert=ce,oa.geo.rotation=function(n){function t(t){return t=n(t[0]*Ia,t[1]*Ia),t[0]*=Ya,t[1]*=Ya,t}return n=fe(n[0]%360*Ia,n[1]*Ia,n.length>2?n[2]*Ia:0),t.invert=function(t){return t=n.invert(t[0]*Ia,t[1]*Ia),t[0]*=Ya,t[1]*=Ya,t},t},se.invert=ce,oa.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=fe(-n[0]*Ia,-n[1]*Ia,0).invert,u=[];return e(null,null,1,{point:function(n,e){u.push(n=t(n,e)),n[0]*=Ya,n[1]*=Ya}}),{type:"Polygon",coordinates:[u]}}var t,e,r=[0,0],u=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=ve((t=+r)*Ia,u*Ia),n):t},n.precision=function(r){return arguments.length?(e=ve(t*Ia,(u=+r)*Ia),n):u},n.angle(90)},oa.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Ia,u=n[1]*Ia,i=t[1]*Ia,a=Math.sin(r),o=Math.cos(r),l=Math.sin(u),c=Math.cos(u),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*a)*e+(e=c*s-l*f*o)*e),l*s+c*f*o)},oa.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return oa.range(Math.ceil(i/d)*d,u,d).map(h).concat(oa.range(Math.ceil(c/m)*m,l,m).map(g)).concat(oa.range(Math.ceil(r/p)*p,e,p).filter(function(n){return Ma(n%d)>Pa}).map(s)).concat(oa.range(Math.ceil(o/v)*v,a,v).filter(function(n){return Ma(n%m)>Pa}).map(f))}var e,r,u,i,a,o,l,c,s,f,h,g,p=10,v=p,d=90,m=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(l).slice(1),h(u).reverse().slice(1),g(c).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],u=+t[1][0],c=+t[0][1],l=+t[1][1],i>u&&(t=i,i=u,u=t),c>l&&(t=c,c=l,l=t),n.precision(y)):[[i,c],[u,l]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],o=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),o>a&&(t=o,o=a,a=t),n.precision(y)):[[r,o],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(d=+t[0],m=+t[1],n):[d,m]},n.minorStep=function(t){return arguments.length?(p=+t[0],v=+t[1],n):[p,v]},n.precision=function(t){return arguments.length?(y=+t,s=me(o,a,90),f=ye(r,e,y),h=me(c,l,90),g=ye(i,u,y),n):y},n.majorExtent([[-180,-90+Pa],[180,90-Pa]]).minorExtent([[-180,-80-Pa],[180,80+Pa]])},oa.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||u.apply(this,arguments)]}}var t,e,r=Me,u=xe;return n.distance=function(){return oa.geo.distance(t||r.apply(this,arguments),e||u.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(u=t,e="function"==typeof t?null:t,n):u},n.precision=function(){return arguments.length?n:0},n},oa.geo.interpolate=function(n,t){return be(n[0]*Ia,n[1]*Ia,t[0]*Ia,t[1]*Ia)},oa.geo.length=function(n){return Jo=0,oa.geo.stream(n,Go),Jo};var Jo,Go={sphere:b,point:b,lineStart:_e,lineEnd:b,polygonStart:b,polygonEnd:b},Ko=we(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(oa.geo.azimuthalEqualArea=function(){return ae(Ko)}).raw=Ko;var Qo=we(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},y);(oa.geo.azimuthalEquidistant=function(){return ae(Qo)}).raw=Qo,(oa.geo.conicConformal=function(){return Vt(Se)}).raw=Se,(oa.geo.conicEquidistant=function(){return Vt(ke)}).raw=ke;var nl=we(function(n){return 1/n},Math.atan);(oa.geo.gnomonic=function(){return ae(nl)}).raw=nl,Ne.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-Oa]},(oa.geo.mercator=function(){return Ee(Ne)}).raw=Ne;var tl=we(function(){return 1},Math.asin);(oa.geo.orthographic=function(){return ae(tl)}).raw=tl;var el=we(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(oa.geo.stereographic=function(){return ae(el)}).raw=el,Ae.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-Oa]},(oa.geo.transverseMercator=function(){var n=Ee(Ae),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Ae,oa.geom={},oa.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,u=En(e),i=En(r),a=n.length,o=[],l=[];for(t=0;a>t;t++)o.push([+u.call(this,n[t],t),+i.call(this,n[t],t),t]);for(o.sort(qe),t=0;a>t;t++)l.push([o[t][0],-o[t][1]]);var c=Le(o),s=Le(l),f=s[0]===c[0],h=s[s.length-1]===c[c.length-1],g=[];for(t=c.length-1;t>=0;--t)g.push(n[o[c[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[o[s[t]][2]]);return g}var e=Ce,r=ze;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},oa.geom.polygon=function(n){return Sa(n,rl),n};var rl=oa.geom.polygon.prototype=[];rl.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],u=0;++t<e;)n=r,r=this[t],u+=n[1]*r[0]-n[0]*r[1];return.5*u},rl.centroid=function(n){var t,e,r=-1,u=this.length,i=0,a=0,o=this[u-1];for(arguments.length||(n=-1/(6*this.area()));++r<u;)t=o,o=this[r],e=t[0]*o[1]-o[0]*t[1],i+=(t[0]+o[0])*e,a+=(t[1]+o[1])*e;return[i*n,a*n]},rl.clip=function(n){for(var t,e,r,u,i,a,o=De(n),l=-1,c=this.length-De(this),s=this[c-1];++l<c;){for(t=n.slice(),n.length=0,u=this[l],i=t[(r=t.length-o)-1],e=-1;++e<r;)a=t[e],Te(a,s,u)?(Te(i,s,u)||n.push(Re(i,a,s,u)),n.push(a)):Te(i,s,u)&&n.push(Re(i,a,s,u)),i=a;o&&n.push(n[0]),s=u}return n};var ul,il,al,ol,ll,cl=[],sl=[];Ye.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Ve),t.length},tr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},er.prototype={insert:function(n,t){var e,r,u;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=ar(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(u=r.R,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.R&&(ur(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ir(this,r))):(u=r.L,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.L&&(ir(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ur(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,u=n.U,i=n.L,a=n.R;if(e=i?a?ar(a):i:a,u?u.L===n?u.L=e:u.R=e:this._=e,i&&a?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==a?(u=e.U,e.U=n.U,n=e.R,u.L=n,e.R=a,a.U=e):(e.U=u,u=e,n=e.R)):(r=n.C,n=e),n&&(n.U=u),!r){if(n&&n.C)return void(n.C=!1);do{if(n===this._)break;if(n===u.L){if(t=u.R,t.C&&(t.C=!1,u.C=!0,ur(this,u),t=u.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,ir(this,t),t=u.R),t.C=u.C,u.C=t.R.C=!1,ur(this,u),n=this._;break}}else if(t=u.L,t.C&&(t.C=!1,u.C=!0,ir(this,u),t=u.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,ur(this,t),t=u.L),t.C=u.C,u.C=t.L.C=!1,ir(this,u),n=this._;break}t.C=!0,n=u,u=u.U}while(!n.C);n&&(n.C=!1)}}},oa.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=o[0][0],u=o[0][1],i=o[1][0],a=o[1][1];return or(e(n),o).cells.forEach(function(e,o){var l=e.edges,c=e.site,s=t[o]=l.length?l.map(function(n){var t=n.start();return[t.x,t.y]}):c.x>=r&&c.x<=i&&c.y>=u&&c.y<=a?[[r,a],[i,a],[i,u],[r,u]]:[];s.point=n[o]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Pa)*Pa,y:Math.round(a(n,t)/Pa)*Pa,i:t}})}var r=Ce,u=ze,i=r,a=u,o=fl;return n?t(n):(t.links=function(n){return or(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return or(e(n)).cells.forEach(function(e,r){for(var u,i,a=e.site,o=e.edges.sort(Ve),l=-1,c=o.length,s=o[c-1].edge,f=s.l===a?s.r:s.l;++l<c;)u=s,i=f,s=o[l].edge,f=s.l===a?s.r:s.l,r<i.i&&r<f.i&&cr(a,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=En(r=n),t):r},t.y=function(n){return arguments.length?(a=En(u=n),t):u},t.clipExtent=function(n){return arguments.length?(o=null==n?fl:n,t):o===fl?null:o},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):o===fl?null:o&&o[1]},t)};var fl=[[-1e6,-1e6],[1e6,1e6]];oa.geom.delaunay=function(n){return oa.geom.voronoi().triangles(n)},oa.geom.quadtree=function(n,t,e,r,u){function i(n){function i(n,t,e,r,u,i,a,o){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var l=n.x,s=n.y;if(null!=l)if(Ma(l-e)+Ma(s-r)<.01)c(n,t,e,r,u,i,a,o);else{var f=n.point;n.x=n.y=n.point=null,c(n,f,l,s,u,i,a,o),c(n,t,e,r,u,i,a,o)}else n.x=e,n.y=r,n.point=t}else c(n,t,e,r,u,i,a,o)}function c(n,t,e,r,u,a,o,l){var c=.5*(u+o),s=.5*(a+l),f=e>=c,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=hr()),f?u=c:o=c,h?a=s:l=s,i(n,t,e,r,u,a,o,l)}var s,f,h,g,p,v,d,m,y,M=En(o),x=En(l);if(null!=t)v=t,d=e,m=r,y=u;else if(m=y=-(v=d=1/0),f=[],h=[],p=n.length,a)for(g=0;p>g;++g)s=n[g],s.x<v&&(v=s.x),s.y<d&&(d=s.y),s.x>m&&(m=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var b=+M(s=n[g],g),_=+x(s,g);v>b&&(v=b),d>_&&(d=_),b>m&&(m=b),_>y&&(y=_),f.push(b),h.push(_)}var w=m-v,S=y-d;w>S?y=d+w:m=v+S;var k=hr();if(k.add=function(n){i(k,n,+M(n,++g),+x(n,g),v,d,m,y)},k.visit=function(n){gr(n,k,v,d,m,y)},k.find=function(n){return pr(k,n[0],n[1],v,d,m,y)},g=-1,null==t){for(;++g<p;)i(k,n[g],f[g],h[g],v,d,m,y);--g}else n.forEach(k.add);return f=h=n=s=null,k}var a,o=Ce,l=ze;return(a=arguments.length)?(o=sr,l=fr,3===a&&(u=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(o=n,i):o},i.y=function(n){return arguments.length?(l=n,i):l},i.extent=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],u=+n[1][1]),i):null==t?null:[[t,e],[r,u]]},i.size=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=e=0,r=+n[0],u=+n[1]),i):null==t?null:[r-t,u-e]},i)},oa.interpolateRgb=vr,oa.interpolateObject=dr,oa.interpolateNumber=mr,oa.interpolateString=yr;var hl=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,gl=new RegExp(hl.source,"g");oa.interpolate=Mr,oa.interpolators=[function(n,t){var e=typeof t;return("string"===e?uo.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?vr:yr:t instanceof on?vr:Array.isArray(t)?xr:"object"===e&&isNaN(t)?dr:mr)(n,t)}],oa.interpolateArray=xr;var pl=function(){return y},vl=oa.map({linear:pl,poly:Er,quad:function(){return Sr},cubic:function(){return kr},sin:function(){return Ar},exp:function(){return Cr},circle:function(){return zr},elastic:Lr,back:qr,bounce:function(){return Tr}}),dl=oa.map({"in":y,out:_r,"in-out":wr,"out-in":function(n){return wr(_r(n))}});oa.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=vl.get(e)||pl,r=dl.get(r)||y,br(r(e.apply(null,la.call(arguments,1))))},oa.interpolateHcl=Rr,oa.interpolateHsl=Dr,oa.interpolateLab=Pr,oa.interpolateRound=Ur,oa.transform=function(n){var t=sa.createElementNS(oa.ns.prefix.svg,"g");return(oa.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new jr(e?e.matrix:ml)})(n)},jr.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var ml={a:1,b:0,c:0,d:1,e:0,f:0};oa.interpolateTransform=$r,oa.layout={},oa.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Jr(n[e]));return t}},oa.layout.chord=function(){function n(){var n,c,f,h,g,p={},v=[],d=oa.range(i),m=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(c=0,g=-1;++g<i;)c+=u[h][g];v.push(c),m.push(oa.range(i)),n+=c}for(a&&d.sort(function(n,t){return a(v[n],v[t])}),o&&m.forEach(function(n,t){n.sort(function(n,e){return o(u[t][n],u[t][e])})}),n=(Fa-s*i)/n,c=0,h=-1;++h<i;){for(f=c,g=-1;++g<i;){var y=d[h],M=m[y][g],x=u[y][M],b=c,_=c+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:f,endAngle:c,value:v[y]},c+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var w=p[h+"-"+g],S=p[g+"-"+h];(w.value||S.value)&&e.push(w.value<S.value?{source:S,target:w}:{source:w,target:S})}l&&t()}function t(){e.sort(function(n,t){return l((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,u,i,a,o,l,c={},s=0;return c.matrix=function(n){return arguments.length?(i=(u=n)&&u.length,e=r=null,c):u},c.padding=function(n){return arguments.length?(s=n,e=r=null,c):s},c.sortGroups=function(n){return arguments.length?(a=n,e=r=null,c):a},c.sortSubgroups=function(n){return arguments.length?(o=n,e=null,c):o},c.sortChords=function(n){return arguments.length?(l=n,e&&t(),c):l},c.chords=function(){return e||n(),e},c.groups=function(){return r||n(),r},c},oa.layout.force=function(){function n(n){return function(t,e,r,u){if(t.point!==n){var i=t.cx-n.x,a=t.cy-n.y,o=u-e,l=i*i+a*a;if(l>o*o/m){if(v>l){var c=t.charge/l;n.px-=i*c,n.py-=a*c}return!0}if(t.point&&l&&v>l){var c=t.pointCharge/l;n.px-=i*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=oa.event.x,n.py=oa.event.y,l.resume()}var e,r,u,i,a,o,l={},c=oa.dispatch("start","tick","end"),s=[1,1],f=.9,h=yl,g=Ml,p=-30,v=xl,d=.1,m=.64,M=[],x=[];return l.tick=function(){if((u*=.99)<.005)return e=null,c.end({type:"end",alpha:u=0}),!0;var t,r,l,h,g,v,m,y,b,_=M.length,w=x.length;for(r=0;w>r;++r)l=x[r],h=l.source,g=l.target,y=g.x-h.x,b=g.y-h.y,(v=y*y+b*b)&&(v=u*a[r]*((v=Math.sqrt(v))-i[r])/v,y*=v,b*=v,g.x-=y*(m=h.weight+g.weight?h.weight/(h.weight+g.weight):.5),g.y-=b*m,h.x+=y*(m=1-m),h.y+=b*m);if((m=u*d)&&(y=s[0]/2,b=s[1]/2,r=-1,m))for(;++r<_;)l=M[r],l.x+=(y-l.x)*m,l.y+=(b-l.y)*m;if(p)for(ru(t=oa.geom.quadtree(M),u,o),r=-1;++r<_;)(l=M[r]).fixed||t.visit(n(l));for(r=-1;++r<_;)l=M[r],l.fixed?(l.x=l.px,l.y=l.py):(l.x-=(l.px-(l.px=l.x))*f,l.y-=(l.py-(l.py=l.y))*f);c.tick({type:"tick",alpha:u})},l.nodes=function(n){return arguments.length?(M=n,l):M},l.links=function(n){return arguments.length?(x=n,l):x},l.size=function(n){return arguments.length?(s=n,l):s},l.linkDistance=function(n){return arguments.length?(h="function"==typeof n?n:+n,l):h},l.distance=l.linkDistance,l.linkStrength=function(n){return arguments.length?(g="function"==typeof n?n:+n,l):g},l.friction=function(n){return arguments.length?(f=+n,l):f},l.charge=function(n){return arguments.length?(p="function"==typeof n?n:+n,l):p},l.chargeDistance=function(n){return arguments.length?(v=n*n,l):Math.sqrt(v)},l.gravity=function(n){return arguments.length?(d=+n,l):d},l.theta=function(n){return arguments.length?(m=n*n,l):Math.sqrt(m)},l.alpha=function(n){return arguments.length?(n=+n,u?n>0?u=n:(e.c=null,e.t=NaN,e=null,c.end({type:"end",alpha:u=0})):n>0&&(c.start({type:"start",alpha:u=n}),e=qn(l.tick)),l):u},l.start=function(){function n(n,r){if(!e){for(e=new Array(u),l=0;u>l;++l)e[l]=[];for(l=0;c>l;++l){var i=x[l];e[i.source.index].push(i.target),e[i.target.index].push(i.source)}}for(var a,o=e[t],l=-1,s=o.length;++l<s;)if(!isNaN(a=o[l][n]))return a;return Math.random()*r}var t,e,r,u=M.length,c=x.length,f=s[0],v=s[1];for(t=0;u>t;++t)(r=M[t]).index=t,r.weight=0;for(t=0;c>t;++t)r=x[t],"number"==typeof r.source&&(r.source=M[r.source]),"number"==typeof r.target&&(r.target=M[r.target]),++r.source.weight,++r.target.weight;for(t=0;u>t;++t)r=M[t],isNaN(r.x)&&(r.x=n("x",f)),isNaN(r.y)&&(r.y=n("y",v)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(i=[],"function"==typeof h)for(t=0;c>t;++t)i[t]=+h.call(this,x[t],t);else for(t=0;c>t;++t)i[t]=h;if(a=[],"function"==typeof g)for(t=0;c>t;++t)a[t]=+g.call(this,x[t],t);else for(t=0;c>t;++t)a[t]=g;if(o=[],"function"==typeof p)for(t=0;u>t;++t)o[t]=+p.call(this,M[t],t);else for(t=0;u>t;++t)o[t]=p;return l.resume()},l.resume=function(){return l.alpha(.1)},l.stop=function(){return l.alpha(0)},l.drag=function(){return r||(r=oa.behavior.drag().origin(y).on("dragstart.force",Qr).on("drag.force",t).on("dragend.force",nu)),arguments.length?void this.on("mouseover.force",tu).on("mouseout.force",eu).call(r):r},oa.rebind(l,c,"on")};var yl=20,Ml=1,xl=1/0;oa.layout.hierarchy=function(){function n(u){var i,a=[u],o=[];for(u.depth=0;null!=(i=a.pop());)if(o.push(i),(c=e.call(n,i,i.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)a.push(s=c[l]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=c}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return au(u,function(n){var e,u;t&&(e=n.children)&&e.sort(t),r&&(u=n.parent)&&(u.value+=n.value)}),o}var t=cu,e=ou,r=lu;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(iu(t,function(n){n.children&&(n.value=0)}),au(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},oa.layout.partition=function(){function n(t,e,r,u){var i=t.children;if(t.x=e,t.y=t.depth*u,t.dx=r,t.dy=u,i&&(a=i.length)){var a,o,l,c=-1;for(r=t.value?r/t.value:0;++c<a;)n(o=i[c],e,l=o.value*r,u),e+=l}}function t(n){var e=n.children,r=0;if(e&&(u=e.length))for(var u,i=-1;++i<u;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var a=r.call(this,e,i);return n(a[0],0,u[0],u[1]/t(a[0])),a}var r=oa.layout.hierarchy(),u=[1,1];return e.size=function(n){return arguments.length?(u=n,e):u},uu(e,r)},oa.layout.pie=function(){function n(a){var o,l=a.length,c=a.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof u?u.apply(this,arguments):u)-s,h=Math.min(Math.abs(f)/l,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=oa.sum(c),v=p?(f-l*g)/p:0,d=oa.range(l),m=[];return null!=e&&d.sort(e===bl?function(n,t){return c[t]-c[n]}:function(n,t){return e(a[n],a[t])}),d.forEach(function(n){m[n]={data:a[n],value:o=c[n],startAngle:s,endAngle:s+=o*v+g,padAngle:h}}),m}var t=Number,e=bl,r=0,u=Fa,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(u=t,n):u},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var bl={};oa.layout.stack=function(){function n(o,l){if(!(h=o.length))return o;var c=o.map(function(e,r){return t.call(n,e,r)}),s=c.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),a.call(n,t,e)]})}),f=e.call(n,s,l);c=oa.permute(c,f),s=oa.permute(s,f);var h,g,p,v,d=r.call(n,s,l),m=c[0].length;for(p=0;m>p;++p)for(u.call(n,c[0][p],v=d[p],s[0][p][1]),g=1;h>g;++g)u.call(n,c[g][p],v+=s[g-1][p][1],s[g][p][1]);return o}var t=y,e=pu,r=vu,u=gu,i=fu,a=hu;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:_l.get(t)||pu,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:wl.get(t)||vu,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(u=t,n):u},n};var _l=oa.map({"inside-out":function(n){var t,e,r=n.length,u=n.map(du),i=n.map(mu),a=oa.range(r).sort(function(n,t){return u[n]-u[t]}),o=0,l=0,c=[],s=[];for(t=0;r>t;++t)e=a[t],l>o?(o+=i[e],c.push(e)):(l+=i[e],s.push(e));return s.reverse().concat(c)},reverse:function(n){return oa.range(n.length).reverse()},"default":pu}),wl=oa.map({silhouette:function(n){var t,e,r,u=n.length,i=n[0].length,a=[],o=0,l=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];r>o&&(o=r),a.push(r)}for(e=0;i>e;++e)l[e]=(o-a[e])/2;return l},wiggle:function(n){var t,e,r,u,i,a,o,l,c,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=l=c=0,e=1;h>e;++e){for(t=0,u=0;s>t;++t)u+=n[t][e][1];for(t=0,i=0,o=f[e][0]-f[e-1][0];s>t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*o);t>r;++r)a+=(n[r][e][1]-n[r][e-1][1])/o;i+=a*n[t][e][1]}g[e]=l-=u?i/u*o:0,c>l&&(c=l)}for(e=0;h>e;++e)g[e]-=c;return g},expand:function(n){var t,e,r,u=n.length,i=n[0].length,a=1/u,o=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];if(r)for(t=0;u>t;t++)n[t][e][1]/=r;else for(t=0;u>t;t++)n[t][e][1]=a}for(e=0;i>e;++e)o[e]=0;return o},zero:vu});oa.layout.histogram=function(){function n(n,i){for(var a,o,l=[],c=n.map(e,this),s=r.call(this,c,i),f=u.call(this,s,c,i),i=-1,h=c.length,g=f.length-1,p=t?1:1/h;++i<g;)a=l[i]=[],a.dx=f[i+1]-(a.x=f[i]),a.y=0;if(g>0)for(i=-1;++i<h;)o=c[i],o>=s[0]&&o<=s[1]&&(a=l[oa.bisect(f,o,1,g)-1],a.y+=p,a.push(n[i]));return l}var t=!0,e=Number,r=bu,u=Mu;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=En(t),n):r},n.bins=function(t){return arguments.length?(u="number"==typeof t?function(n){return xu(n,t)}:En(t),n):u},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},oa.layout.pack=function(){function n(n,i){var a=e.call(this,n,i),o=a[0],l=u[0],c=u[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(o.x=o.y=0,au(o,function(n){n.r=+s(n.value)}),au(o,Nu),r){var f=r*(t?1:Math.max(2*o.r/l,2*o.r/c))/2;au(o,function(n){n.r+=f}),au(o,Nu),au(o,function(n){n.r-=f})}return Cu(o,l/2,c/2,t?1:1/Math.max(2*o.r/l,2*o.r/c)),a}var t,e=oa.layout.hierarchy().sort(_u),r=0,u=[1,1];return n.size=function(t){return arguments.length?(u=t,n):u},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},uu(n,e)},oa.layout.tree=function(){function n(n,u){var s=a.call(this,n,u),f=s[0],h=t(f);if(au(h,e),h.parent.m=-h.z,iu(h,r),c)iu(f,i);else{var g=f,p=f,v=f;iu(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>v.depth&&(v=n)});var d=o(g,p)/2-g.x,m=l[0]/(p.x+o(p,g)/2+d),y=l[1]/(v.depth||1);iu(f,function(n){n.x=(n.x+d)*m,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var u,i=t.children,a=0,o=i.length;o>a;++a)r.push((i[a]=u={_:i[a],parent:t,children:(u=i[a].children)&&u.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:a}).a=u);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){Du(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+o(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+o(n._,r._));n.parent.A=u(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function u(n,t,e){if(t){for(var r,u=n,i=n,a=t,l=u.parent.children[0],c=u.m,s=i.m,f=a.m,h=l.m;a=Tu(a),u=qu(u),a&&u;)l=qu(l),i=Tu(i),i.a=n,r=a.z+f-u.z-c+o(a._,u._),r>0&&(Ru(Pu(a,n,e),n,r),c+=r,s+=r),f+=a.m,c+=u.m,h+=l.m,s+=i.m;a&&!Tu(i)&&(i.t=a,i.m+=f-s),u&&!qu(l)&&(l.t=u,l.m+=c-h,e=n)}return e}function i(n){n.x*=l[0],n.y=n.depth*l[1]}var a=oa.layout.hierarchy().sort(null).value(null),o=Lu,l=[1,1],c=null;return n.separation=function(t){return arguments.length?(o=t,n):o},n.size=function(t){return arguments.length?(c=null==(l=t)?i:null,n):c?null:l},n.nodeSize=function(t){return arguments.length?(c=null==(l=t)?null:i,n):c?l:null},uu(n,a)},oa.layout.cluster=function(){function n(n,i){var a,o=t.call(this,n,i),l=o[0],c=0;au(l,function(n){var t=n.children;t&&t.length?(n.x=ju(t),n.y=Uu(t)):(n.x=a?c+=e(n,a):0,n.y=0,a=n)});var s=Fu(l),f=Hu(l),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return au(l,u?function(n){n.x=(n.x-l.x)*r[0],n.y=(l.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(l.y?n.y/l.y:1))*r[1]}),o}var t=oa.layout.hierarchy().sort(null).value(null),e=Lu,r=[1,1],u=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(u=null==(r=t),n):u?null:r},n.nodeSize=function(t){return arguments.length?(u=null!=(r=t),n):u?r:null},uu(n,t)},oa.layout.treemap=function(){function n(n,t){for(var e,r,u=-1,i=n.length;++u<i;)r=(e=n[u]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var a,o,l,c=f(e),s=[],h=i.slice(),p=1/0,v="slice"===g?c.dx:"dice"===g?c.dy:"slice-dice"===g?1&e.depth?c.dy:c.dx:Math.min(c.dx,c.dy);for(n(h,c.dx*c.dy/e.value),s.area=0;(l=h.length)>0;)s.push(a=h[l-1]),s.area+=a.area,"squarify"!==g||(o=r(s,v))<=p?(h.pop(),p=o):(s.area-=s.pop().area,u(s,v,c,!1),v=Math.min(c.dx,c.dy),s.length=s.area=0,p=1/0);s.length&&(u(s,v,c,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,a=f(t),o=r.slice(),l=[];for(n(o,a.dx*a.dy/t.value),l.area=0;i=o.pop();)l.push(i),l.area+=i.area,null!=i.z&&(u(l,i.z?a.dx:a.dy,a,!o.length),l.length=l.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,u=0,i=1/0,a=-1,o=n.length;++a<o;)(e=n[a].area)&&(i>e&&(i=e),e>u&&(u=e));return r*=r,t*=t,r?Math.max(t*u*p/r,r/(t*i*p)):1/0}function u(n,t,e,r){var u,i=-1,a=n.length,o=e.x,c=e.y,s=t?l(n.area/t):0;
	if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<a;)u=n[i],u.x=o,u.y=c,u.dy=s,o+=u.dx=Math.min(e.x+e.dx-o,s?l(u.area/s):0);u.z=!0,u.dx+=e.x+e.dx-o,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<a;)u=n[i],u.x=o,u.y=c,u.dx=s,c+=u.dy=Math.min(e.y+e.dy-c,s?l(u.area/s):0);u.z=!1,u.dy+=e.y+e.dy-c,e.x+=s,e.dx-=s}}function i(r){var u=a||o(r),i=u[0];return i.x=i.y=0,i.value?(i.dx=c[0],i.dy=c[1]):i.dx=i.dy=0,a&&o.revalue(i),n([i],i.dx*i.dy/i.value),(a?e:t)(i),h&&(a=u),u}var a,o=oa.layout.hierarchy(),l=Math.round,c=[1,1],s=null,f=Ou,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return i.size=function(n){return arguments.length?(c=n,i):c},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ou(t):Iu(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return Iu(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ou:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(l=n?Math.round:Number,i):l!=Number},i.sticky=function(n){return arguments.length?(h=n,a=null,i):h},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},uu(i,o)},oa.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,u;do e=2*Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u>1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:function(){var n=oa.random.normal.apply(oa,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=oa.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},oa.scale={};var Sl={floor:y,ceil:y};oa.scale.linear=function(){return Wu([0,1],[0,1],Mr,!1)};var kl={s:1,g:1,p:1,r:1,e:1};oa.scale.log=function(){return ri(oa.scale.linear().domain([0,1]),10,!0,[1,10])};var Nl=oa.format(".0e"),El={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};oa.scale.pow=function(){return ui(oa.scale.linear(),1,[0,1])},oa.scale.sqrt=function(){return oa.scale.pow().exponent(.5)},oa.scale.ordinal=function(){return ai([],{t:"range",a:[[]]})},oa.scale.category10=function(){return oa.scale.ordinal().range(Al)},oa.scale.category20=function(){return oa.scale.ordinal().range(Cl)},oa.scale.category20b=function(){return oa.scale.ordinal().range(zl)},oa.scale.category20c=function(){return oa.scale.ordinal().range(Ll)};var Al=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(xn),Cl=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(xn),zl=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(xn),Ll=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(xn);oa.scale.quantile=function(){return oi([],[])},oa.scale.quantize=function(){return li(0,1,[0,1])},oa.scale.threshold=function(){return ci([.5],[0,1])},oa.scale.identity=function(){return si([0,1])},oa.svg={},oa.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),c=Math.max(0,+r.apply(this,arguments)),s=a.apply(this,arguments)-Oa,f=o.apply(this,arguments)-Oa,h=Math.abs(f-s),g=s>f?0:1;if(n>c&&(p=c,c=n,n=p),h>=Ha)return t(c,g)+(n?t(n,1-g):"")+"Z";var p,v,d,m,y,M,x,b,_,w,S,k,N=0,E=0,A=[];if((m=(+l.apply(this,arguments)||0)/2)&&(d=i===ql?Math.sqrt(n*n+c*c):+i.apply(this,arguments),g||(E*=-1),c&&(E=tn(d/c*Math.sin(m))),n&&(N=tn(d/n*Math.sin(m)))),c){y=c*Math.cos(s+E),M=c*Math.sin(s+E),x=c*Math.cos(f-E),b=c*Math.sin(f-E);var C=Math.abs(f-s-2*E)<=ja?0:1;if(E&&mi(y,M,x,b)===g^C){var z=(s+f)/2;y=c*Math.cos(z),M=c*Math.sin(z),x=b=null}}else y=M=0;if(n){_=n*Math.cos(f-N),w=n*Math.sin(f-N),S=n*Math.cos(s+N),k=n*Math.sin(s+N);var L=Math.abs(s-f+2*N)<=ja?0:1;if(N&&mi(_,w,S,k)===1-g^L){var q=(s+f)/2;_=n*Math.cos(q),w=n*Math.sin(q),S=k=null}}else _=w=0;if(h>Pa&&(p=Math.min(Math.abs(c-n)/2,+u.apply(this,arguments)))>.001){v=c>n^g?0:1;var T=p,R=p;if(ja>h){var D=null==S?[_,w]:null==x?[y,M]:Re([y,M],[S,k],[x,b],[_,w]),P=y-D[0],U=M-D[1],j=x-D[0],F=b-D[1],H=1/Math.sin(Math.acos((P*j+U*F)/(Math.sqrt(P*P+U*U)*Math.sqrt(j*j+F*F)))/2),O=Math.sqrt(D[0]*D[0]+D[1]*D[1]);R=Math.min(p,(n-O)/(H-1)),T=Math.min(p,(c-O)/(H+1))}if(null!=x){var I=yi(null==S?[_,w]:[S,k],[y,M],c,T,g),Y=yi([x,b],[_,w],c,T,g);p===T?A.push("M",I[0],"A",T,",",T," 0 0,",v," ",I[1],"A",c,",",c," 0 ",1-g^mi(I[1][0],I[1][1],Y[1][0],Y[1][1]),",",g," ",Y[1],"A",T,",",T," 0 0,",v," ",Y[0]):A.push("M",I[0],"A",T,",",T," 0 1,",v," ",Y[0])}else A.push("M",y,",",M);if(null!=S){var Z=yi([y,M],[S,k],n,-R,g),V=yi([_,w],null==x?[y,M]:[x,b],n,-R,g);p===R?A.push("L",V[0],"A",R,",",R," 0 0,",v," ",V[1],"A",n,",",n," 0 ",g^mi(V[1][0],V[1][1],Z[1][0],Z[1][1]),",",1-g," ",Z[1],"A",R,",",R," 0 0,",v," ",Z[0]):A.push("L",V[0],"A",R,",",R," 0 0,",v," ",Z[0])}else A.push("L",_,",",w)}else A.push("M",y,",",M),null!=x&&A.push("A",c,",",c," 0 ",C,",",g," ",x,",",b),A.push("L",_,",",w),null!=S&&A.push("A",n,",",n," 0 ",L,",",1-g," ",S,",",k);return A.push("Z"),A.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=hi,r=gi,u=fi,i=ql,a=pi,o=vi,l=di;return n.innerRadius=function(t){return arguments.length?(e=En(t),n):e},n.outerRadius=function(t){return arguments.length?(r=En(t),n):r},n.cornerRadius=function(t){return arguments.length?(u=En(t),n):u},n.padRadius=function(t){return arguments.length?(i=t==ql?ql:En(t),n):i},n.startAngle=function(t){return arguments.length?(a=En(t),n):a},n.endAngle=function(t){return arguments.length?(o=En(t),n):o},n.padAngle=function(t){return arguments.length?(l=En(t),n):l},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+a.apply(this,arguments)+ +o.apply(this,arguments))/2-Oa;return[Math.cos(t)*n,Math.sin(t)*n]},n};var ql="auto";oa.svg.line=function(){return Mi(y)};var Tl=oa.map({linear:xi,"linear-closed":bi,step:_i,"step-before":wi,"step-after":Si,basis:zi,"basis-open":Li,"basis-closed":qi,bundle:Ti,cardinal:Ei,"cardinal-open":ki,"cardinal-closed":Ni,monotone:Fi});Tl.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var Rl=[0,2/3,1/3,0],Dl=[0,1/3,2/3,0],Pl=[0,1/6,2/3,1/6];oa.svg.line.radial=function(){var n=Mi(Hi);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},wi.reverse=Si,Si.reverse=wi,oa.svg.area=function(){return Oi(y)},oa.svg.area.radial=function(){var n=Oi(Hi);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},oa.svg.chord=function(){function n(n,o){var l=t(this,i,n,o),c=t(this,a,n,o);return"M"+l.p0+r(l.r,l.p1,l.a1-l.a0)+(e(l,c)?u(l.r,l.p1,l.r,l.p0):u(l.r,l.p1,c.r,c.p0)+r(c.r,c.p1,c.a1-c.a0)+u(c.r,c.p1,l.r,l.p0))+"Z"}function t(n,t,e,r){var u=t.call(n,e,r),i=o.call(n,u,r),a=l.call(n,u,r)-Oa,s=c.call(n,u,r)-Oa;return{r:i,a0:a,a1:s,p0:[i*Math.cos(a),i*Math.sin(a)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>ja)+",1 "+t}function u(n,t,e,r){return"Q 0,0 "+r}var i=Me,a=xe,o=Ii,l=pi,c=vi;return n.radius=function(t){return arguments.length?(o=En(t),n):o},n.source=function(t){return arguments.length?(i=En(t),n):i},n.target=function(t){return arguments.length?(a=En(t),n):a},n.startAngle=function(t){return arguments.length?(l=En(t),n):l},n.endAngle=function(t){return arguments.length?(c=En(t),n):c},n},oa.svg.diagonal=function(){function n(n,u){var i=t.call(this,n,u),a=e.call(this,n,u),o=(i.y+a.y)/2,l=[i,{x:i.x,y:o},{x:a.x,y:o},a];return l=l.map(r),"M"+l[0]+"C"+l[1]+" "+l[2]+" "+l[3]}var t=Me,e=xe,r=Yi;return n.source=function(e){return arguments.length?(t=En(e),n):t},n.target=function(t){return arguments.length?(e=En(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},oa.svg.diagonal.radial=function(){var n=oa.svg.diagonal(),t=Yi,e=n.projection;return n.projection=function(n){return arguments.length?e(Zi(t=n)):t},n},oa.svg.symbol=function(){function n(n,r){return(Ul.get(t.call(this,n,r))||$i)(e.call(this,n,r))}var t=Xi,e=Vi;return n.type=function(e){return arguments.length?(t=En(e),n):t},n.size=function(t){return arguments.length?(e=En(t),n):e},n};var Ul=oa.map({circle:$i,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Fl)),e=t*Fl;return"M0,"+-t+"L"+e+",0 0,"+t+" "+-e+",0Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/jl),e=t*jl/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/jl),e=t*jl/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});oa.svg.symbolTypes=Ul.keys();var jl=Math.sqrt(3),Fl=Math.tan(30*Ia);Aa.transition=function(n){for(var t,e,r=Hl||++Zl,u=Ki(n),i=[],a=Ol||{time:Date.now(),ease:Nr,delay:0,duration:250},o=-1,l=this.length;++o<l;){i.push(t=[]);for(var c=this[o],s=-1,f=c.length;++s<f;)(e=c[s])&&Qi(e,s,u,r,a),t.push(e)}return Wi(i,u,r)},Aa.interrupt=function(n){return this.each(null==n?Il:Bi(Ki(n)))};var Hl,Ol,Il=Bi(Ki()),Yl=[],Zl=0;Yl.call=Aa.call,Yl.empty=Aa.empty,Yl.node=Aa.node,Yl.size=Aa.size,oa.transition=function(n,t){return n&&n.transition?Hl?n.transition(t):n:oa.selection().transition(n)},oa.transition.prototype=Yl,Yl.select=function(n){var t,e,r,u=this.id,i=this.namespace,a=[];n=A(n);for(var o=-1,l=this.length;++o<l;){a.push(t=[]);for(var c=this[o],s=-1,f=c.length;++s<f;)(r=c[s])&&(e=n.call(r,r.__data__,s,o))?("__data__"in r&&(e.__data__=r.__data__),Qi(e,s,i,u,r[i][u]),t.push(e)):t.push(null)}return Wi(a,i,u)},Yl.selectAll=function(n){var t,e,r,u,i,a=this.id,o=this.namespace,l=[];n=C(n);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[o][a],e=n.call(r,r.__data__,h,c),l.push(t=[]);for(var p=-1,v=e.length;++p<v;)(u=e[p])&&Qi(u,p,o,a,i),t.push(u)}return Wi(l,o,a)},Yl.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,a=this.length;a>i;i++){u.push(t=[]);for(var e=this[i],o=0,l=e.length;l>o;o++)(r=e[o])&&n.call(r,r.__data__,o,i)&&t.push(r)}return Wi(u,this.namespace,this.id)},Yl.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):Y(this,null==t?function(t){t[r][e].tween.remove(n)}:function(u){u[r][e].tween.set(n,t)})},Yl.attr=function(n,t){function e(){this.removeAttribute(o)}function r(){this.removeAttributeNS(o.space,o.local)}function u(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(o);return e!==n&&(t=a(e,n),function(n){this.setAttribute(o,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(o.space,o.local);return e!==n&&(t=a(e,n),function(n){this.setAttributeNS(o.space,o.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var a="transform"==n?$r:Mr,o=oa.ns.qualify(n);return Ji(this,"attr."+n,t,o.local?i:u)},Yl.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(u));return r&&function(n){this.setAttribute(u,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(u.space,u.local));return r&&function(n){this.setAttributeNS(u.space,u.local,r(n))}}var u=oa.ns.qualify(n);return this.tween("attr."+n,u.local?r:e)},Yl.style=function(n,e,r){function u(){this.style.removeProperty(n)}function i(e){return null==e?u:(e+="",function(){var u,i=t(this).getComputedStyle(this,null).getPropertyValue(n);return i!==e&&(u=Mr(i,e),function(t){this.style.setProperty(n,u(t),r)})})}var a=arguments.length;if(3>a){if("string"!=typeof n){2>a&&(e="");for(r in n)this.style(r,n[r],e);return this}r=""}return Ji(this,"style."+n,e,i)},Yl.styleTween=function(n,e,r){function u(u,i){var a=e.call(this,u,i,t(this).getComputedStyle(this,null).getPropertyValue(n));return a&&function(t){this.style.setProperty(n,a(t),r)}}return arguments.length<3&&(r=""),this.tween("style."+n,u)},Yl.text=function(n){return Ji(this,"text",n,Gi)},Yl.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},Yl.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=oa.ease.apply(oa,arguments)),Y(this,function(r){r[e][t].ease=n}))},Yl.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:Y(this,"function"==typeof n?function(r,u,i){r[e][t].delay=+n.call(r,r.__data__,u,i)}:(n=+n,function(r){r[e][t].delay=n}))},Yl.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:Y(this,"function"==typeof n?function(r,u,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,u,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},Yl.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var u=Ol,i=Hl;try{Hl=e,Y(this,function(t,u,i){Ol=t[r][e],n.call(t,t.__data__,u,i)})}finally{Ol=u,Hl=i}}else Y(this,function(u){var i=u[r][e];(i.event||(i.event=oa.dispatch("start","end","interrupt"))).on(n,t)});return this},Yl.transition=function(){for(var n,t,e,r,u=this.id,i=++Zl,a=this.namespace,o=[],l=0,c=this.length;c>l;l++){o.push(n=[]);for(var t=this[l],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[a][u],Qi(e,s,a,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Wi(o,a,i)},oa.svg.axis=function(){function n(n){n.each(function(){var n,c=oa.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==l?f.ticks?f.ticks.apply(f,o):f.domain():l,g=null==t?f.tickFormat?f.tickFormat.apply(f,o):y:t,p=c.selectAll(".tick").data(h,f),v=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Pa),d=oa.transition(p.exit()).style("opacity",Pa).remove(),m=oa.transition(p.order()).style("opacity",1),M=Math.max(u,0)+a,x=Zu(f),b=c.selectAll(".domain").data([0]),_=(b.enter().append("path").attr("class","domain"),oa.transition(b));v.append("line"),v.append("text");var w,S,k,N,E=v.select("line"),A=m.select("line"),C=p.select("text").text(g),z=v.select("text"),L=m.select("text"),q="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=na,w="x",k="y",S="x2",N="y2",C.attr("dy",0>q?"0em":".71em").style("text-anchor","middle"),_.attr("d","M"+x[0]+","+q*i+"V0H"+x[1]+"V"+q*i)):(n=ta,w="y",k="x",S="y2",N="x2",C.attr("dy",".32em").style("text-anchor",0>q?"end":"start"),_.attr("d","M"+q*i+","+x[0]+"H0V"+x[1]+"H"+q*i)),E.attr(N,q*u),z.attr(k,q*M),A.attr(S,0).attr(N,q*u),L.attr(w,0).attr(k,q*M),f.rangeBand){var T=f,R=T.rangeBand()/2;s=f=function(n){return T(n)+R}}else s.rangeBand?s=f:d.call(n,f,s);v.call(n,s,f),m.call(n,f,f)})}var t,e=oa.scale.linear(),r=Vl,u=6,i=6,a=3,o=[10],l=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Xl?t+"":Vl,n):r},n.ticks=function(){return arguments.length?(o=ca(arguments),n):o},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(u=+t,i=+arguments[e-1],n):u},n.innerTickSize=function(t){return arguments.length?(u=+t,n):u},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(a=+t,n):a},n.tickSubdivide=function(){return arguments.length&&n},n};var Vl="bottom",Xl={top:1,right:1,bottom:1,left:1};oa.svg.brush=function(){function n(t){t.each(function(){var t=oa.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),a=t.selectAll(".background").data([0]);a.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),t.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var o=t.selectAll(".resize").data(v,y);o.exit().remove(),o.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return $l[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),o.style("display",n.empty()?"none":null);var l,f=oa.transition(t),h=oa.transition(a);c&&(l=Zu(c),h.attr("x",l[0]).attr("width",l[1]-l[0]),r(f)),s&&(l=Zu(s),h.attr("y",l[0]).attr("height",l[1]-l[0]),u(f)),e(f)})}function e(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+f[+/e$/.test(n)]+","+h[+/^s/.test(n)]+")"})}function r(n){n.select(".extent").attr("x",f[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",f[1]-f[0])}function u(n){n.select(".extent").attr("y",h[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",h[1]-h[0])}function i(){function i(){32==oa.event.keyCode&&(C||(M=null,L[0]-=f[1],L[1]-=h[1],C=2),S())}function v(){32==oa.event.keyCode&&2==C&&(L[0]+=f[1],L[1]+=h[1],C=0,S())}function d(){var n=oa.mouse(b),t=!1;x&&(n[0]+=x[0],n[1]+=x[1]),C||(oa.event.altKey?(M||(M=[(f[0]+f[1])/2,(h[0]+h[1])/2]),L[0]=f[+(n[0]<M[0])],L[1]=h[+(n[1]<M[1])]):M=null),E&&m(n,c,0)&&(r(k),t=!0),A&&m(n,s,1)&&(u(k),t=!0),t&&(e(k),w({type:"brush",mode:C?"move":"resize"}))}function m(n,t,e){var r,u,i=Zu(t),l=i[0],c=i[1],s=L[e],v=e?h:f,d=v[1]-v[0];return C&&(l-=s,c-=d+s),r=(e?p:g)?Math.max(l,Math.min(c,n[e])):n[e],C?u=(r+=s)+d:(M&&(s=Math.max(l,Math.min(c,2*M[e]-r))),r>s?(u=r,r=s):u=s),v[0]!=r||v[1]!=u?(e?o=null:a=null,v[0]=r,v[1]=u,!0):void 0}function y(){d(),k.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),oa.select("body").style("cursor",null),q.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),z(),w({type:"brushend"})}var M,x,b=this,_=oa.select(oa.event.target),w=l.of(b,arguments),k=oa.select(b),N=_.datum(),E=!/^(n|s)$/.test(N)&&c,A=!/^(e|w)$/.test(N)&&s,C=_.classed("extent"),z=W(b),L=oa.mouse(b),q=oa.select(t(b)).on("keydown.brush",i).on("keyup.brush",v);if(oa.event.changedTouches?q.on("touchmove.brush",d).on("touchend.brush",y):q.on("mousemove.brush",d).on("mouseup.brush",y),k.interrupt().selectAll("*").interrupt(),C)L[0]=f[0]-L[0],L[1]=h[0]-L[1];else if(N){var T=+/w$/.test(N),R=+/^n/.test(N);x=[f[1-T]-L[0],h[1-R]-L[1]],L[0]=f[T],L[1]=h[R]}else oa.event.altKey&&(M=L.slice());k.style("pointer-events","none").selectAll(".resize").style("display",null),oa.select("body").style("cursor",_.style("cursor")),w({type:"brushstart"}),d()}var a,o,l=N(n,"brushstart","brush","brushend"),c=null,s=null,f=[0,0],h=[0,0],g=!0,p=!0,v=Bl[0];return n.event=function(n){n.each(function(){var n=l.of(this,arguments),t={x:f,y:h,i:a,j:o},e=this.__chart__||t;this.__chart__=t,Hl?oa.select(this).transition().each("start.brush",function(){a=e.i,o=e.j,f=e.x,h=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=xr(f,t.x),r=xr(h,t.y);return a=o=null,function(u){f=t.x=e(u),h=t.y=r(u),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){a=t.i,o=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(c=t,v=Bl[!c<<1|!s],n):c},n.y=function(t){return arguments.length?(s=t,v=Bl[!c<<1|!s],n):s},n.clamp=function(t){return arguments.length?(c&&s?(g=!!t[0],p=!!t[1]):c?g=!!t:s&&(p=!!t),n):c&&s?[g,p]:c?g:s?p:null},n.extent=function(t){var e,r,u,i,l;return arguments.length?(c&&(e=t[0],r=t[1],s&&(e=e[0],r=r[0]),a=[e,r],c.invert&&(e=c(e),r=c(r)),e>r&&(l=e,e=r,r=l),(e!=f[0]||r!=f[1])&&(f=[e,r])),s&&(u=t[0],i=t[1],c&&(u=u[1],i=i[1]),o=[u,i],s.invert&&(u=s(u),i=s(i)),u>i&&(l=u,u=i,i=l),(u!=h[0]||i!=h[1])&&(h=[u,i])),n):(c&&(a?(e=a[0],r=a[1]):(e=f[0],r=f[1],c.invert&&(e=c.invert(e),r=c.invert(r)),e>r&&(l=e,e=r,r=l))),s&&(o?(u=o[0],i=o[1]):(u=h[0],i=h[1],s.invert&&(u=s.invert(u),i=s.invert(i)),u>i&&(l=u,u=i,i=l))),c&&s?[[e,u],[r,i]]:c?[e,r]:s&&[u,i])},n.clear=function(){return n.empty()||(f=[0,0],h=[0,0],a=o=null),n},n.empty=function(){return!!c&&f[0]==f[1]||!!s&&h[0]==h[1]},oa.rebind(n,l,"on")};var $l={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Bl=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Wl=go.format=xo.timeFormat,Jl=Wl.utc,Gl=Jl("%Y-%m-%dT%H:%M:%S.%LZ");Wl.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?ea:Gl,ea.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},ea.toString=Gl.toString,go.second=On(function(n){return new po(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),go.seconds=go.second.range,go.seconds.utc=go.second.utc.range,go.minute=On(function(n){return new po(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),go.minutes=go.minute.range,go.minutes.utc=go.minute.utc.range,go.hour=On(function(n){var t=n.getTimezoneOffset()/60;return new po(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),go.hours=go.hour.range,go.hours.utc=go.hour.utc.range,go.month=On(function(n){return n=go.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),go.months=go.month.range,go.months.utc=go.month.utc.range;var Kl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Ql=[[go.second,1],[go.second,5],[go.second,15],[go.second,30],[go.minute,1],[go.minute,5],[go.minute,15],[go.minute,30],[go.hour,1],[go.hour,3],[go.hour,6],[go.hour,12],[go.day,1],[go.day,2],[go.week,1],[go.month,1],[go.month,3],[go.year,1]],nc=Wl.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",zt]]),tc={range:function(n,t,e){return oa.range(Math.ceil(n/e)*e,+t,e).map(ua)},floor:y,ceil:y};Ql.year=go.year,go.scale=function(){return ra(oa.scale.linear(),Ql,nc)};var ec=Ql.map(function(n){return[n[0].utc,n[1]]}),rc=Jl.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",zt]]);ec.year=go.year.utc,go.scale.utc=function(){return ra(oa.scale.linear(),ec,rc)},oa.text=An(function(n){return n.responseText}),oa.json=function(n,t){return Cn(n,"application/json",ia,t)},oa.html=function(n,t){return Cn(n,"text/html",aa,t)},oa.xml=An(function(n){return n.responseXML}), true?(this.d3=oa,!(__WEBPACK_AMD_DEFINE_FACTORY__ = (oa), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))):"object"==typeof module&&module.exports?module.exports=oa:this.d3=oa}();
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },

/***/ 30:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    module.exports = factory();
	  } else {
	    root.loadjs = factory();
	  }
	}(this, function() {
	/**
	 * Global dependencies.
	 * @global {Object} document - DOM
	 */

	var devnull = function() {},
	    bundleIdCache = {},
	    bundleResultCache = {},
	    bundleCallbackQueue = {};


	/**
	 * Subscribe to bundle load event.
	 * @param {string[]} bundleIds - Bundle ids
	 * @param {Function} callbackFn - The callback function
	 */
	function subscribe(bundleIds, callbackFn) {
	  // listify
	  bundleIds = bundleIds.push ? bundleIds : [bundleIds];
	  
	  var depsNotFound = [],
	      i = bundleIds.length,
	      numWaiting = i,
	      fn, bundleId, r, q;

	  // define callback function
	  fn = function(bundleId, pathsNotFound) {
	    if (pathsNotFound.length) depsNotFound.push(bundleId);

	    numWaiting--;
	    if (!numWaiting) callbackFn(depsNotFound);
	  };
	  
	  // register callback
	  while (i--) {
	    bundleId = bundleIds[i];
	    
	    // execute callback if in result cache
	    r = bundleResultCache[bundleId];
	    if (r) {
	      fn(bundleId, r);
	      continue;
	    }
	    
	    // add to callback queue
	    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];
	    q.push(fn);
	  }
	}


	/**
	 * Publish bundle load event.
	 * @param {string} bundleId - Bundle id
	 * @param {string[]} pathsNotFound - List of files not found
	 */
	function publish(bundleId, pathsNotFound) {
	  // exit if id isn't defined
	  if (!bundleId) return;
	  
	  var q = bundleCallbackQueue[bundleId];
	  
	  // cache result
	  bundleResultCache[bundleId] = pathsNotFound;
	  
	  // exit if queue is empty
	  if (!q) return;
	  
	  // empty callback queue
	  while (q.length) {
	    q[0](bundleId, pathsNotFound);
	    q.splice(0, 1);
	  }
	}


	/**
	 * Load individual file.
	 * @param {string} path - The file path
	 * @param {Function} callbackFn - The callback function
	 */
	function loadFile(path, callbackFn, async) {
	  var doc = document,
	      e;

	  if (/\.css$/.test(path)) {
	    // css
	    e = doc.createElement('link');
	    e.rel = 'stylesheet';
	    e.href = path;
	  } else {
	    // javascript
	    e = doc.createElement('script');
	    e.src = path;
	    e.async = (async === undefined) ? true : async;
	  }
	  
	  e.onload = e.onerror = e.onbeforeload = function(ev) {
	    var result = ev.type[0];

	    // treat empty stylesheets as failures (to get around lack of onerror
	    // support in IE
	    if (e.sheet && !e.sheet.cssRules.length) result = 'e';

	    // execute callback
	    callbackFn(path, result, ev.defaultPrevented);
	  };
	  
	  // add to document
	  doc.head.appendChild(e);
	}


	/**
	 * Load multiple files.
	 * @param {string[]} paths - The file paths
	 * @param {Function} callbackFn - The callback function
	 */
	function loadFiles(paths, callbackFn, async) {
	  // listify paths
	  paths = paths.push ? paths : [paths];
	  
	  var numWaiting = paths.length, x = numWaiting, pathsNotFound = [], fn, i;
	  
	  // define callback function
	  fn = function(path, result, defaultPrevented) {
	    // handle error
	    if (result == 'e') pathsNotFound.push(path);

	    // handle beforeload event. If defaultPrevented then that means the load
	    // will be blocked (ex. Ghostery/ABP on Safari)
	    if (result == 'b') {
	      if (defaultPrevented) pathsNotFound.push(path);
	      else return;
	    }
	    
	    numWaiting--;
	    if (!numWaiting) callbackFn(pathsNotFound);
	  };
	  
	  // load scripts
	  for (i=0; i < x; i++) loadFile(paths[i], fn, async);
	}


	/**
	 * Initiate script load and register bundle.
	 * @param {(string|string[])} paths - The file paths
	 * @param {(string|Function)} [arg1] - The bundleId or success callback
	 * @param {Function} [arg2] - The success or fail callback
	 * @param {Function} [arg3] - The fail callback
	 */
	function loadjs(paths, arg1, arg2) {
	  var bundleId, args;
	  
	  // bundleId (if string)
	  if (arg1 && arg1.trim) bundleId = arg1;

	  // args (default is {})
	  args = (bundleId ? arg2 : arg1) || {};
	  
	  // throw error if bundle is already defined
	  if (bundleId) {
	    if (bundleId in bundleIdCache) {
	      throw new Error("LoadJS");
	    } else {
	      bundleIdCache[bundleId] = true;
	    }
	  }
	  
	  // load scripts
	  loadFiles(paths, function(pathsNotFound) {
	    // success and fail callbacks
	    if (pathsNotFound.length) (args.fail || devnull)(pathsNotFound);
	    else (args.success || devnull)();

	    // publish bundle load event
	    publish(bundleId, pathsNotFound);
	  }, args.async);
	}


	/**
	 * Execute callbacks when dependencies have been satisfied.
	 * @param {(string|string[])} deps - List of bundle ids
	 * @param {Object} args - success/fail arguments
	 */
	loadjs.ready = function (deps, args) {
	  // subscribe to bundle load event
	  subscribe(deps, function(depsNotFound) {
	    // execute callbacks
	    if (depsNotFound.length) (args.fail || devnull)(depsNotFound);
	    else (args.success || devnull)();
	  });
	  
	  return loadjs;
	};


	/**
	 * Manually satisfy bundle dependencies.
	 * @param {string} bundleId - The bundle id
	 */
	loadjs.done = function done(bundleId) {
	  publish(bundleId, []);
	};


	// export
	return loadjs;

	}));


/***/ },

/***/ 36:
/***/ function(module, exports, __webpack_require__) {

	var require;var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, global, module) {/*!
	 * @overview es6-promise - a tiny implementation of Promises/A+.
	 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
	 * @license   Licensed under MIT license
	 *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE
	 * @version   3.2.1
	 */

	(function() {
	    "use strict";
	    function lib$es6$promise$utils$$objectOrFunction(x) {
	      return typeof x === 'function' || (typeof x === 'object' && x !== null);
	    }

	    function lib$es6$promise$utils$$isFunction(x) {
	      return typeof x === 'function';
	    }

	    function lib$es6$promise$utils$$isMaybeThenable(x) {
	      return typeof x === 'object' && x !== null;
	    }

	    var lib$es6$promise$utils$$_isArray;
	    if (!Array.isArray) {
	      lib$es6$promise$utils$$_isArray = function (x) {
	        return Object.prototype.toString.call(x) === '[object Array]';
	      };
	    } else {
	      lib$es6$promise$utils$$_isArray = Array.isArray;
	    }

	    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;
	    var lib$es6$promise$asap$$len = 0;
	    var lib$es6$promise$asap$$vertxNext;
	    var lib$es6$promise$asap$$customSchedulerFn;

	    var lib$es6$promise$asap$$asap = function asap(callback, arg) {
	      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;
	      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;
	      lib$es6$promise$asap$$len += 2;
	      if (lib$es6$promise$asap$$len === 2) {
	        // If len is 2, that means that we need to schedule an async flush.
	        // If additional callbacks are queued before the queue is flushed, they
	        // will be processed by this flush that we are scheduling.
	        if (lib$es6$promise$asap$$customSchedulerFn) {
	          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);
	        } else {
	          lib$es6$promise$asap$$scheduleFlush();
	        }
	      }
	    }

	    function lib$es6$promise$asap$$setScheduler(scheduleFn) {
	      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;
	    }

	    function lib$es6$promise$asap$$setAsap(asapFn) {
	      lib$es6$promise$asap$$asap = asapFn;
	    }

	    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;
	    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};
	    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;
	    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

	    // test for web worker but not in IE10
	    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&
	      typeof importScripts !== 'undefined' &&
	      typeof MessageChannel !== 'undefined';

	    // node
	    function lib$es6$promise$asap$$useNextTick() {
	      // node version 0.10.x displays a deprecation warning when nextTick is used recursively
	      // see https://github.com/cujojs/when/issues/410 for details
	      return function() {
	        process.nextTick(lib$es6$promise$asap$$flush);
	      };
	    }

	    // vertx
	    function lib$es6$promise$asap$$useVertxTimer() {
	      return function() {
	        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);
	      };
	    }

	    function lib$es6$promise$asap$$useMutationObserver() {
	      var iterations = 0;
	      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);
	      var node = document.createTextNode('');
	      observer.observe(node, { characterData: true });

	      return function() {
	        node.data = (iterations = ++iterations % 2);
	      };
	    }

	    // web worker
	    function lib$es6$promise$asap$$useMessageChannel() {
	      var channel = new MessageChannel();
	      channel.port1.onmessage = lib$es6$promise$asap$$flush;
	      return function () {
	        channel.port2.postMessage(0);
	      };
	    }

	    function lib$es6$promise$asap$$useSetTimeout() {
	      return function() {
	        setTimeout(lib$es6$promise$asap$$flush, 1);
	      };
	    }

	    var lib$es6$promise$asap$$queue = new Array(1000);
	    function lib$es6$promise$asap$$flush() {
	      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {
	        var callback = lib$es6$promise$asap$$queue[i];
	        var arg = lib$es6$promise$asap$$queue[i+1];

	        callback(arg);

	        lib$es6$promise$asap$$queue[i] = undefined;
	        lib$es6$promise$asap$$queue[i+1] = undefined;
	      }

	      lib$es6$promise$asap$$len = 0;
	    }

	    function lib$es6$promise$asap$$attemptVertx() {
	      try {
	        var r = require;
	        var vertx = __webpack_require__(38);
	        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;
	        return lib$es6$promise$asap$$useVertxTimer();
	      } catch(e) {
	        return lib$es6$promise$asap$$useSetTimeout();
	      }
	    }

	    var lib$es6$promise$asap$$scheduleFlush;
	    // Decide what async method to use to triggering processing of queued callbacks:
	    if (lib$es6$promise$asap$$isNode) {
	      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();
	    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {
	      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();
	    } else if (lib$es6$promise$asap$$isWorker) {
	      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();
	    } else if (lib$es6$promise$asap$$browserWindow === undefined && "function" === 'function') {
	      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();
	    } else {
	      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();
	    }
	    function lib$es6$promise$then$$then(onFulfillment, onRejection) {
	      var parent = this;

	      var child = new this.constructor(lib$es6$promise$$internal$$noop);

	      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {
	        lib$es6$promise$$internal$$makePromise(child);
	      }

	      var state = parent._state;

	      if (state) {
	        var callback = arguments[state - 1];
	        lib$es6$promise$asap$$asap(function(){
	          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);
	        });
	      } else {
	        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);
	      }

	      return child;
	    }
	    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;
	    function lib$es6$promise$promise$resolve$$resolve(object) {
	      /*jshint validthis:true */
	      var Constructor = this;

	      if (object && typeof object === 'object' && object.constructor === Constructor) {
	        return object;
	      }

	      var promise = new Constructor(lib$es6$promise$$internal$$noop);
	      lib$es6$promise$$internal$$resolve(promise, object);
	      return promise;
	    }
	    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;
	    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);

	    function lib$es6$promise$$internal$$noop() {}

	    var lib$es6$promise$$internal$$PENDING   = void 0;
	    var lib$es6$promise$$internal$$FULFILLED = 1;
	    var lib$es6$promise$$internal$$REJECTED  = 2;

	    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();

	    function lib$es6$promise$$internal$$selfFulfillment() {
	      return new TypeError("You cannot resolve a promise with itself");
	    }

	    function lib$es6$promise$$internal$$cannotReturnOwn() {
	      return new TypeError('A promises callback cannot return that same promise.');
	    }

	    function lib$es6$promise$$internal$$getThen(promise) {
	      try {
	        return promise.then;
	      } catch(error) {
	        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;
	        return lib$es6$promise$$internal$$GET_THEN_ERROR;
	      }
	    }

	    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {
	      try {
	        then.call(value, fulfillmentHandler, rejectionHandler);
	      } catch(e) {
	        return e;
	      }
	    }

	    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {
	       lib$es6$promise$asap$$asap(function(promise) {
	        var sealed = false;
	        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {
	          if (sealed) { return; }
	          sealed = true;
	          if (thenable !== value) {
	            lib$es6$promise$$internal$$resolve(promise, value);
	          } else {
	            lib$es6$promise$$internal$$fulfill(promise, value);
	          }
	        }, function(reason) {
	          if (sealed) { return; }
	          sealed = true;

	          lib$es6$promise$$internal$$reject(promise, reason);
	        }, 'Settle: ' + (promise._label || ' unknown promise'));

	        if (!sealed && error) {
	          sealed = true;
	          lib$es6$promise$$internal$$reject(promise, error);
	        }
	      }, promise);
	    }

	    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {
	      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {
	        lib$es6$promise$$internal$$fulfill(promise, thenable._result);
	      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {
	        lib$es6$promise$$internal$$reject(promise, thenable._result);
	      } else {
	        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {
	          lib$es6$promise$$internal$$resolve(promise, value);
	        }, function(reason) {
	          lib$es6$promise$$internal$$reject(promise, reason);
	        });
	      }
	    }

	    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {
	      if (maybeThenable.constructor === promise.constructor &&
	          then === lib$es6$promise$then$$default &&
	          constructor.resolve === lib$es6$promise$promise$resolve$$default) {
	        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);
	      } else {
	        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {
	          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);
	        } else if (then === undefined) {
	          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);
	        } else if (lib$es6$promise$utils$$isFunction(then)) {
	          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);
	        } else {
	          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);
	        }
	      }
	    }

	    function lib$es6$promise$$internal$$resolve(promise, value) {
	      if (promise === value) {
	        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());
	      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {
	        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));
	      } else {
	        lib$es6$promise$$internal$$fulfill(promise, value);
	      }
	    }

	    function lib$es6$promise$$internal$$publishRejection(promise) {
	      if (promise._onerror) {
	        promise._onerror(promise._result);
	      }

	      lib$es6$promise$$internal$$publish(promise);
	    }

	    function lib$es6$promise$$internal$$fulfill(promise, value) {
	      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }

	      promise._result = value;
	      promise._state = lib$es6$promise$$internal$$FULFILLED;

	      if (promise._subscribers.length !== 0) {
	        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);
	      }
	    }

	    function lib$es6$promise$$internal$$reject(promise, reason) {
	      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }
	      promise._state = lib$es6$promise$$internal$$REJECTED;
	      promise._result = reason;

	      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);
	    }

	    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {
	      var subscribers = parent._subscribers;
	      var length = subscribers.length;

	      parent._onerror = null;

	      subscribers[length] = child;
	      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;
	      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;

	      if (length === 0 && parent._state) {
	        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);
	      }
	    }

	    function lib$es6$promise$$internal$$publish(promise) {
	      var subscribers = promise._subscribers;
	      var settled = promise._state;

	      if (subscribers.length === 0) { return; }

	      var child, callback, detail = promise._result;

	      for (var i = 0; i < subscribers.length; i += 3) {
	        child = subscribers[i];
	        callback = subscribers[i + settled];

	        if (child) {
	          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);
	        } else {
	          callback(detail);
	        }
	      }

	      promise._subscribers.length = 0;
	    }

	    function lib$es6$promise$$internal$$ErrorObject() {
	      this.error = null;
	    }

	    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();

	    function lib$es6$promise$$internal$$tryCatch(callback, detail) {
	      try {
	        return callback(detail);
	      } catch(e) {
	        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;
	        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;
	      }
	    }

	    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {
	      var hasCallback = lib$es6$promise$utils$$isFunction(callback),
	          value, error, succeeded, failed;

	      if (hasCallback) {
	        value = lib$es6$promise$$internal$$tryCatch(callback, detail);

	        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {
	          failed = true;
	          error = value.error;
	          value = null;
	        } else {
	          succeeded = true;
	        }

	        if (promise === value) {
	          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());
	          return;
	        }

	      } else {
	        value = detail;
	        succeeded = true;
	      }

	      if (promise._state !== lib$es6$promise$$internal$$PENDING) {
	        // noop
	      } else if (hasCallback && succeeded) {
	        lib$es6$promise$$internal$$resolve(promise, value);
	      } else if (failed) {
	        lib$es6$promise$$internal$$reject(promise, error);
	      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {
	        lib$es6$promise$$internal$$fulfill(promise, value);
	      } else if (settled === lib$es6$promise$$internal$$REJECTED) {
	        lib$es6$promise$$internal$$reject(promise, value);
	      }
	    }

	    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {
	      try {
	        resolver(function resolvePromise(value){
	          lib$es6$promise$$internal$$resolve(promise, value);
	        }, function rejectPromise(reason) {
	          lib$es6$promise$$internal$$reject(promise, reason);
	        });
	      } catch(e) {
	        lib$es6$promise$$internal$$reject(promise, e);
	      }
	    }

	    var lib$es6$promise$$internal$$id = 0;
	    function lib$es6$promise$$internal$$nextId() {
	      return lib$es6$promise$$internal$$id++;
	    }

	    function lib$es6$promise$$internal$$makePromise(promise) {
	      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;
	      promise._state = undefined;
	      promise._result = undefined;
	      promise._subscribers = [];
	    }

	    function lib$es6$promise$promise$all$$all(entries) {
	      return new lib$es6$promise$enumerator$$default(this, entries).promise;
	    }
	    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;
	    function lib$es6$promise$promise$race$$race(entries) {
	      /*jshint validthis:true */
	      var Constructor = this;

	      if (!lib$es6$promise$utils$$isArray(entries)) {
	        return new Constructor(function(resolve, reject) {
	          reject(new TypeError('You must pass an array to race.'));
	        });
	      } else {
	        return new Constructor(function(resolve, reject) {
	          var length = entries.length;
	          for (var i = 0; i < length; i++) {
	            Constructor.resolve(entries[i]).then(resolve, reject);
	          }
	        });
	      }
	    }
	    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;
	    function lib$es6$promise$promise$reject$$reject(reason) {
	      /*jshint validthis:true */
	      var Constructor = this;
	      var promise = new Constructor(lib$es6$promise$$internal$$noop);
	      lib$es6$promise$$internal$$reject(promise, reason);
	      return promise;
	    }
	    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;


	    function lib$es6$promise$promise$$needsResolver() {
	      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
	    }

	    function lib$es6$promise$promise$$needsNew() {
	      throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
	    }

	    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;
	    /**
	      Promise objects represent the eventual result of an asynchronous operation. The
	      primary way of interacting with a promise is through its `then` method, which
	      registers callbacks to receive either a promise's eventual value or the reason
	      why the promise cannot be fulfilled.

	      Terminology
	      -----------

	      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
	      - `thenable` is an object or function that defines a `then` method.
	      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
	      - `exception` is a value that is thrown using the throw statement.
	      - `reason` is a value that indicates why a promise was rejected.
	      - `settled` the final resting state of a promise, fulfilled or rejected.

	      A promise can be in one of three states: pending, fulfilled, or rejected.

	      Promises that are fulfilled have a fulfillment value and are in the fulfilled
	      state.  Promises that are rejected have a rejection reason and are in the
	      rejected state.  A fulfillment value is never a thenable.

	      Promises can also be said to *resolve* a value.  If this value is also a
	      promise, then the original promise's settled state will match the value's
	      settled state.  So a promise that *resolves* a promise that rejects will
	      itself reject, and a promise that *resolves* a promise that fulfills will
	      itself fulfill.


	      Basic Usage:
	      ------------

	      ```js
	      var promise = new Promise(function(resolve, reject) {
	        // on success
	        resolve(value);

	        // on failure
	        reject(reason);
	      });

	      promise.then(function(value) {
	        // on fulfillment
	      }, function(reason) {
	        // on rejection
	      });
	      ```

	      Advanced Usage:
	      ---------------

	      Promises shine when abstracting away asynchronous interactions such as
	      `XMLHttpRequest`s.

	      ```js
	      function getJSON(url) {
	        return new Promise(function(resolve, reject){
	          var xhr = new XMLHttpRequest();

	          xhr.open('GET', url);
	          xhr.onreadystatechange = handler;
	          xhr.responseType = 'json';
	          xhr.setRequestHeader('Accept', 'application/json');
	          xhr.send();

	          function handler() {
	            if (this.readyState === this.DONE) {
	              if (this.status === 200) {
	                resolve(this.response);
	              } else {
	                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
	              }
	            }
	          };
	        });
	      }

	      getJSON('/posts.json').then(function(json) {
	        // on fulfillment
	      }, function(reason) {
	        // on rejection
	      });
	      ```

	      Unlike callbacks, promises are great composable primitives.

	      ```js
	      Promise.all([
	        getJSON('/posts'),
	        getJSON('/comments')
	      ]).then(function(values){
	        values[0] // => postsJSON
	        values[1] // => commentsJSON

	        return values;
	      });
	      ```

	      @class Promise
	      @param {function} resolver
	      Useful for tooling.
	      @constructor
	    */
	    function lib$es6$promise$promise$$Promise(resolver) {
	      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();
	      this._result = this._state = undefined;
	      this._subscribers = [];

	      if (lib$es6$promise$$internal$$noop !== resolver) {
	        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();
	        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();
	      }
	    }

	    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;
	    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;
	    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;
	    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;
	    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;
	    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;
	    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;

	    lib$es6$promise$promise$$Promise.prototype = {
	      constructor: lib$es6$promise$promise$$Promise,

	    /**
	      The primary way of interacting with a promise is through its `then` method,
	      which registers callbacks to receive either a promise's eventual value or the
	      reason why the promise cannot be fulfilled.

	      ```js
	      findUser().then(function(user){
	        // user is available
	      }, function(reason){
	        // user is unavailable, and you are given the reason why
	      });
	      ```

	      Chaining
	      --------

	      The return value of `then` is itself a promise.  This second, 'downstream'
	      promise is resolved with the return value of the first promise's fulfillment
	      or rejection handler, or rejected if the handler throws an exception.

	      ```js
	      findUser().then(function (user) {
	        return user.name;
	      }, function (reason) {
	        return 'default name';
	      }).then(function (userName) {
	        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
	        // will be `'default name'`
	      });

	      findUser().then(function (user) {
	        throw new Error('Found user, but still unhappy');
	      }, function (reason) {
	        throw new Error('`findUser` rejected and we're unhappy');
	      }).then(function (value) {
	        // never reached
	      }, function (reason) {
	        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
	        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
	      });
	      ```
	      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.

	      ```js
	      findUser().then(function (user) {
	        throw new PedagogicalException('Upstream error');
	      }).then(function (value) {
	        // never reached
	      }).then(function (value) {
	        // never reached
	      }, function (reason) {
	        // The `PedgagocialException` is propagated all the way down to here
	      });
	      ```

	      Assimilation
	      ------------

	      Sometimes the value you want to propagate to a downstream promise can only be
	      retrieved asynchronously. This can be achieved by returning a promise in the
	      fulfillment or rejection handler. The downstream promise will then be pending
	      until the returned promise is settled. This is called *assimilation*.

	      ```js
	      findUser().then(function (user) {
	        return findCommentsByAuthor(user);
	      }).then(function (comments) {
	        // The user's comments are now available
	      });
	      ```

	      If the assimliated promise rejects, then the downstream promise will also reject.

	      ```js
	      findUser().then(function (user) {
	        return findCommentsByAuthor(user);
	      }).then(function (comments) {
	        // If `findCommentsByAuthor` fulfills, we'll have the value here
	      }, function (reason) {
	        // If `findCommentsByAuthor` rejects, we'll have the reason here
	      });
	      ```

	      Simple Example
	      --------------

	      Synchronous Example

	      ```javascript
	      var result;

	      try {
	        result = findResult();
	        // success
	      } catch(reason) {
	        // failure
	      }
	      ```

	      Errback Example

	      ```js
	      findResult(function(result, err){
	        if (err) {
	          // failure
	        } else {
	          // success
	        }
	      });
	      ```

	      Promise Example;

	      ```javascript
	      findResult().then(function(result){
	        // success
	      }, function(reason){
	        // failure
	      });
	      ```

	      Advanced Example
	      --------------

	      Synchronous Example

	      ```javascript
	      var author, books;

	      try {
	        author = findAuthor();
	        books  = findBooksByAuthor(author);
	        // success
	      } catch(reason) {
	        // failure
	      }
	      ```

	      Errback Example

	      ```js

	      function foundBooks(books) {

	      }

	      function failure(reason) {

	      }

	      findAuthor(function(author, err){
	        if (err) {
	          failure(err);
	          // failure
	        } else {
	          try {
	            findBoooksByAuthor(author, function(books, err) {
	              if (err) {
	                failure(err);
	              } else {
	                try {
	                  foundBooks(books);
	                } catch(reason) {
	                  failure(reason);
	                }
	              }
	            });
	          } catch(error) {
	            failure(err);
	          }
	          // success
	        }
	      });
	      ```

	      Promise Example;

	      ```javascript
	      findAuthor().
	        then(findBooksByAuthor).
	        then(function(books){
	          // found books
	      }).catch(function(reason){
	        // something went wrong
	      });
	      ```

	      @method then
	      @param {Function} onFulfilled
	      @param {Function} onRejected
	      Useful for tooling.
	      @return {Promise}
	    */
	      then: lib$es6$promise$then$$default,

	    /**
	      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
	      as the catch block of a try/catch statement.

	      ```js
	      function findAuthor(){
	        throw new Error('couldn't find that author');
	      }

	      // synchronous
	      try {
	        findAuthor();
	      } catch(reason) {
	        // something went wrong
	      }

	      // async with promises
	      findAuthor().catch(function(reason){
	        // something went wrong
	      });
	      ```

	      @method catch
	      @param {Function} onRejection
	      Useful for tooling.
	      @return {Promise}
	    */
	      'catch': function(onRejection) {
	        return this.then(null, onRejection);
	      }
	    };
	    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;
	    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {
	      this._instanceConstructor = Constructor;
	      this.promise = new Constructor(lib$es6$promise$$internal$$noop);

	      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {
	        lib$es6$promise$$internal$$makePromise(this.promise);
	      }

	      if (lib$es6$promise$utils$$isArray(input)) {
	        this._input     = input;
	        this.length     = input.length;
	        this._remaining = input.length;

	        this._result = new Array(this.length);

	        if (this.length === 0) {
	          lib$es6$promise$$internal$$fulfill(this.promise, this._result);
	        } else {
	          this.length = this.length || 0;
	          this._enumerate();
	          if (this._remaining === 0) {
	            lib$es6$promise$$internal$$fulfill(this.promise, this._result);
	          }
	        }
	      } else {
	        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());
	      }
	    }

	    function lib$es6$promise$enumerator$$validationError() {
	      return new Error('Array Methods must be provided an Array');
	    }

	    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {
	      var length  = this.length;
	      var input   = this._input;

	      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {
	        this._eachEntry(input[i], i);
	      }
	    };

	    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {
	      var c = this._instanceConstructor;
	      var resolve = c.resolve;

	      if (resolve === lib$es6$promise$promise$resolve$$default) {
	        var then = lib$es6$promise$$internal$$getThen(entry);

	        if (then === lib$es6$promise$then$$default &&
	            entry._state !== lib$es6$promise$$internal$$PENDING) {
	          this._settledAt(entry._state, i, entry._result);
	        } else if (typeof then !== 'function') {
	          this._remaining--;
	          this._result[i] = entry;
	        } else if (c === lib$es6$promise$promise$$default) {
	          var promise = new c(lib$es6$promise$$internal$$noop);
	          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);
	          this._willSettleAt(promise, i);
	        } else {
	          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);
	        }
	      } else {
	        this._willSettleAt(resolve(entry), i);
	      }
	    };

	    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {
	      var promise = this.promise;

	      if (promise._state === lib$es6$promise$$internal$$PENDING) {
	        this._remaining--;

	        if (state === lib$es6$promise$$internal$$REJECTED) {
	          lib$es6$promise$$internal$$reject(promise, value);
	        } else {
	          this._result[i] = value;
	        }
	      }

	      if (this._remaining === 0) {
	        lib$es6$promise$$internal$$fulfill(promise, this._result);
	      }
	    };

	    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {
	      var enumerator = this;

	      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {
	        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);
	      }, function(reason) {
	        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);
	      });
	    };
	    function lib$es6$promise$polyfill$$polyfill() {
	      var local;

	      if (typeof global !== 'undefined') {
	          local = global;
	      } else if (typeof self !== 'undefined') {
	          local = self;
	      } else {
	          try {
	              local = Function('return this')();
	          } catch (e) {
	              throw new Error('polyfill failed because global object is unavailable in this environment');
	          }
	      }

	      var P = local.Promise;

	      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {
	        return;
	      }

	      local.Promise = lib$es6$promise$promise$$default;
	    }
	    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;

	    var lib$es6$promise$umd$$ES6Promise = {
	      'Promise': lib$es6$promise$promise$$default,
	      'polyfill': lib$es6$promise$polyfill$$default
	    };

	    /* global define:true module:true window: true */
	    if ("function" === 'function' && __webpack_require__(39)['amd']) {
	      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return lib$es6$promise$umd$$ES6Promise; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof module !== 'undefined' && module['exports']) {
	      module['exports'] = lib$es6$promise$umd$$ES6Promise;
	    } else if (typeof this !== 'undefined') {
	      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;
	    }

	    lib$es6$promise$polyfill$$default();
	}).call(this);


	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37), (function() { return this; }()), __webpack_require__(22)(module)))

/***/ },

/***/ 37:
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	    try {
	        cachedSetTimeout = setTimeout;
	    } catch (e) {
	        cachedSetTimeout = function () {
	            throw new Error('setTimeout is not defined');
	        }
	    }
	    try {
	        cachedClearTimeout = clearTimeout;
	    } catch (e) {
	        cachedClearTimeout = function () {
	            throw new Error('clearTimeout is not defined');
	        }
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },

/***/ 38:
/***/ function(module, exports) {

	/* (ignored) */

/***/ },

/***/ 39:
/***/ function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ },

/***/ 40:
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },

/***/ 43:
/***/ function(module, exports, __webpack_require__) {

	/**
	 * ReactDOM v15.0.0
	 *
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	!function(e){if(true)module.exports=e(__webpack_require__(20));else if("function"==typeof define&&define.amd)define(["react"],e);else{var f;f="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,f.ReactDOM=e(f.React)}}(function(e){return e.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED});

/***/ },

/***/ 44:
/***/ function(module, exports, __webpack_require__) {

	!function(t,e){ true?module.exports=e(__webpack_require__(20),__webpack_require__(45)):"function"==typeof define&&define.amd?define(["react","redux"],e):"object"==typeof exports?exports.ReactRedux=e(require("react"),require("redux")):t.ReactRedux=e(t.React,t.Redux)}(this,function(t,e){return function(t){function e(o){if(r[o])return r[o].exports;var n=r[o]={exports:{},id:o,loaded:!1};return t[o].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";function o(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0,e.connect=e.Provider=void 0;var n=r(3),s=o(n),i=r(4),a=o(i);e.Provider=s["default"],e.connect=a["default"]},function(e,r){e.exports=t},function(t,e,r){"use strict";e.__esModule=!0;var o=r(1);e["default"]=o.PropTypes.shape({subscribe:o.PropTypes.func.isRequired,dispatch:o.PropTypes.func.isRequired,getState:o.PropTypes.func.isRequired})},function(t,e,r){"use strict";function o(t){return t&&t.__esModule?t:{"default":t}}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0,e["default"]=void 0;var a=r(1),p=r(2),u=o(p),c=function(t){function e(r,o){n(this,e);var i=s(this,t.call(this,r,o));return i.store=r.store,i}return i(e,t),e.prototype.getChildContext=function(){return{store:this.store}},e.prototype.render=function(){var t=this.props.children;return a.Children.only(t)},e}(a.Component);e["default"]=c,c.propTypes={store:u["default"].isRequired,children:a.PropTypes.element.isRequired},c.childContextTypes={store:u["default"].isRequired}},function(t,e,r){"use strict";function o(t){return t&&t.__esModule?t:{"default":t}}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t){return t.displayName||t.name||"Component"}function p(t,e){return(0,w["default"])((0,m["default"])(t),"`%sToProps` must return an object. Instead received %s.",e?"mapDispatch":"mapState",t),t}function u(t,e,r){function o(t,e,r){var o=v(t,e,r);return(0,w["default"])((0,m["default"])(o),"`mergeProps` must return an object. Instead received %s.",o),o}var u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},h=!!t,l=t||x,P=(0,m["default"])(e)?(0,b["default"])(e):e||C,v=r||T,g=v!==T,O=u.pure,_=void 0===O?!0:O,j=u.withRef,D=void 0===j?!1:j,R=M++;return function(t){var e=function(e){function r(t,o){n(this,r);var i=s(this,e.call(this,t,o));i.version=R,i.store=t.store||o.store,(0,w["default"])(i.store,'Could not find "store" in either the context or '+('props of "'+i.constructor.displayName+'". ')+"Either wrap the root component in a <Provider>, "+('or explicitly pass "store" as a prop to "'+i.constructor.displayName+'".'));var a=i.store.getState();return i.state={storeState:a},i.clearCache(),i}return i(r,e),r.prototype.shouldComponentUpdate=function(){return!_||this.haveOwnPropsChanged||this.hasStoreStateChanged},r.prototype.computeStateProps=function(t,e){if(!this.finalMapStateToProps)return this.configureFinalMapState(t,e);var r=t.getState(),o=this.doStatePropsDependOnOwnProps?this.finalMapStateToProps(r,e):this.finalMapStateToProps(r);return p(o)},r.prototype.configureFinalMapState=function(t,e){var r=l(t.getState(),e),o="function"==typeof r;return this.finalMapStateToProps=o?r:l,this.doStatePropsDependOnOwnProps=1!==this.finalMapStateToProps.length,o?this.computeStateProps(t,e):p(r)},r.prototype.computeDispatchProps=function(t,e){if(!this.finalMapDispatchToProps)return this.configureFinalMapDispatch(t,e);var r=t.dispatch,o=this.doDispatchPropsDependOnOwnProps?this.finalMapDispatchToProps(r,e):this.finalMapDispatchToProps(r);return p(o,!0)},r.prototype.configureFinalMapDispatch=function(t,e){var r=P(t.dispatch,e),o="function"==typeof r;return this.finalMapDispatchToProps=o?r:P,this.doDispatchPropsDependOnOwnProps=1!==this.finalMapDispatchToProps.length,o?this.computeDispatchProps(t,e):p(r,!0)},r.prototype.updateStatePropsIfNeeded=function(){var t=this.computeStateProps(this.store,this.props);return this.stateProps&&(0,y["default"])(t,this.stateProps)?!1:(this.stateProps=t,!0)},r.prototype.updateDispatchPropsIfNeeded=function(){var t=this.computeDispatchProps(this.store,this.props);return this.dispatchProps&&(0,y["default"])(t,this.dispatchProps)?!1:(this.dispatchProps=t,!0)},r.prototype.updateMergedPropsIfNeeded=function(){var t=o(this.stateProps,this.dispatchProps,this.props);return this.mergedProps&&g&&(0,y["default"])(t,this.mergedProps)?!1:(this.mergedProps=t,!0)},r.prototype.isSubscribed=function(){return"function"==typeof this.unsubscribe},r.prototype.trySubscribe=function(){h&&!this.unsubscribe&&(this.unsubscribe=this.store.subscribe(this.handleChange.bind(this)),this.handleChange())},r.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null)},r.prototype.componentDidMount=function(){this.trySubscribe()},r.prototype.componentWillReceiveProps=function(t){_&&(0,y["default"])(t,this.props)||(this.haveOwnPropsChanged=!0)},r.prototype.componentWillUnmount=function(){this.tryUnsubscribe(),this.clearCache()},r.prototype.clearCache=function(){this.dispatchProps=null,this.stateProps=null,this.mergedProps=null,this.haveOwnPropsChanged=!0,this.hasStoreStateChanged=!0,this.renderedElement=null,this.finalMapDispatchToProps=null,this.finalMapStateToProps=null},r.prototype.handleChange=function(){if(this.unsubscribe){var t=this.state.storeState,e=this.store.getState();_&&t===e||(this.hasStoreStateChanged=!0,this.setState({storeState:e}))}},r.prototype.getWrappedInstance=function(){return(0,w["default"])(D,"To access the wrapped instance, you need to specify { withRef: true } as the fourth argument of the connect() call."),this.refs.wrappedInstance},r.prototype.render=function(){var e=this.haveOwnPropsChanged,r=this.hasStoreStateChanged,o=this.renderedElement;this.haveOwnPropsChanged=!1,this.hasStoreStateChanged=!1;var n=!0,s=!0;_&&o&&(n=r||e&&this.doStatePropsDependOnOwnProps,s=e&&this.doDispatchPropsDependOnOwnProps);var i=!1,a=!1;n&&(i=this.updateStatePropsIfNeeded()),s&&(a=this.updateDispatchPropsIfNeeded());var p=!0;return p=i||a||e?this.updateMergedPropsIfNeeded():!1,!p&&o?o:this.renderedElement=D?(0,f.createElement)(t,c({},this.mergedProps,{ref:"wrappedInstance"})):(0,f.createElement)(t,this.mergedProps)},r}(f.Component);return e.displayName="Connect("+a(t)+")",e.WrappedComponent=t,e.contextTypes={store:d["default"]},e.propTypes={store:d["default"]},(0,S["default"])(e,t)}}var c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t};e.__esModule=!0,e["default"]=u;var f=r(1),h=r(2),d=o(h),l=r(5),y=o(l),P=r(6),b=o(P),v=r(11),m=o(v),g=r(7),S=o(g),O=r(8),w=o(O),x=function(t){return{}},C=function(t){return{dispatch:t}},T=function(t,e,r){return c({},r,t,e)},M=0},function(t,e){"use strict";function r(t,e){if(t===e)return!0;var r=Object.keys(t),o=Object.keys(e);if(r.length!==o.length)return!1;for(var n=Object.prototype.hasOwnProperty,s=0;r.length>s;s++)if(!n.call(e,r[s])||t[r[s]]!==e[r[s]])return!1;return!0}e.__esModule=!0,e["default"]=r},function(t,e,r){"use strict";function o(t){return function(e){return(0,n.bindActionCreators)(t,e)}}e.__esModule=!0,e["default"]=o;var n=r(12)},function(t,e){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,arguments:!0,arity:!0};t.exports=function(t,e){for(var n=Object.getOwnPropertyNames(e),s=0;n.length>s;++s)r[n[s]]||o[n[s]]||(t[n[s]]=e[n[s]]);return t}},function(t,e,r){"use strict";var o=function(t,e,r,o,n,s,i,a){if(!t){var p;if(void 0===e)p=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[r,o,n,s,i,a],c=0;p=Error(e.replace(/%s/g,function(){return u[c++]})),p.name="Invariant Violation"}throw p.framesToPop=1,p}};t.exports=o},function(t,e){function r(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(r){}return e}t.exports=r},function(t,e){function r(t){return!!t&&"object"==typeof t}t.exports=r},function(t,e,r){function o(t){if(!s(t)||c.call(t)!=i||n(t))return!1;var e=a;if("function"==typeof t.constructor&&(e=f(t)),null===e)return!0;var r=e.constructor;return"function"==typeof r&&r instanceof r&&p.call(r)==u}var n=r(9),s=r(10),i="[object Object]",a=Object.prototype,p=Function.prototype.toString,u=p.call(Object),c=a.toString,f=Object.getPrototypeOf;t.exports=o},function(t,r){t.exports=e}])});

/***/ },

/***/ 45:
/***/ function(module, exports, __webpack_require__) {

	!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Redux=e():t.Redux=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0,e.compose=e.applyMiddleware=e.bindActionCreators=e.combineReducers=e.createStore=void 0;var o=n(2),i=r(o),u=n(7),c=r(u),a=n(6),f=r(a),s=n(5),d=r(s),l=n(1),p=r(l),y=n(3);r(y);e.createStore=i["default"],e.combineReducers=c["default"],e.bindActionCreators=f["default"],e.applyMiddleware=d["default"],e.compose=p["default"]},function(t,e){"use strict";function n(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return function(){if(0===e.length)return arguments.length>0?arguments[0]:void 0;var t=e[e.length-1],n=e.slice(0,-1);return n.reduceRight(function(t,e){return e(t)},t.apply(void 0,arguments))}}e.__esModule=!0,e["default"]=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e,n){function r(){y===p&&(y=p.slice())}function i(){return l}function a(t){if("function"!=typeof t)throw Error("Expected listener to be a function.");var e=!0;return r(),y.push(t),function(){if(e){e=!1,r();var n=y.indexOf(t);y.splice(n,1)}}}function f(t){if(!(0,u["default"])(t))throw Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===t.type)throw Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(h)throw Error("Reducers may not dispatch actions.");try{h=!0,l=d(l,t)}finally{h=!1}for(var e=p=y,n=0;e.length>n;n++)e[n]();return t}function s(t){if("function"!=typeof t)throw Error("Expected the nextReducer to be a function.");d=t,f({type:c.INIT})}if("function"==typeof e&&void 0===n&&(n=e,e=void 0),void 0!==n){if("function"!=typeof n)throw Error("Expected the enhancer to be a function.");return n(o)(t,e)}if("function"!=typeof t)throw Error("Expected the reducer to be a function.");var d=t,l=e,p=[],y=p,h=!1;return f({type:c.INIT}),{dispatch:f,subscribe:a,getState:i,replaceReducer:s}}e.__esModule=!0,e.ActionTypes=void 0,e["default"]=o;var i=n(4),u=r(i),c=e.ActionTypes={INIT:"@@redux/INIT"}},function(t,e){"use strict";function n(t){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(t);try{throw Error(t)}catch(e){}}e.__esModule=!0,e["default"]=n},function(t,e,n){function r(t){if(!i(t)||s.call(t)!=u||o(t))return!1;var e=c;if("function"==typeof t.constructor&&(e=d(t)),null===e)return!0;var n=e.constructor;return"function"==typeof n&&n instanceof n&&a.call(n)==f}var o=n(8),i=n(9),u="[object Object]",c=Object.prototype,a=Function.prototype.toString,f=a.call(Object),s=c.toString,d=Object.getPrototypeOf;t.exports=r},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return function(t){return function(n,r,o){var u=t(n,r,o),a=u.dispatch,f=[],s={getState:u.getState,dispatch:function(t){return a(t)}};return f=e.map(function(t){return t(s)}),a=c["default"].apply(void 0,f)(u.dispatch),i({},u,{dispatch:a})}}}var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};e.__esModule=!0,e["default"]=o;var u=n(1),c=r(u)},function(t,e){"use strict";function n(t,e){return function(){return e(t.apply(void 0,arguments))}}function r(t,e){if("function"==typeof t)return n(t,e);if("object"!=typeof t||null===t)throw Error("bindActionCreators expected an object or a function, instead received "+(null===t?"null":typeof t)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var r=Object.keys(t),o={},i=0;r.length>i;i++){var u=r[i],c=t[u];"function"==typeof c&&(o[u]=n(c,e))}return o}e.__esModule=!0,e["default"]=r},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){var n=e&&e.type,r=n&&'"'+n+'"'||"an action";return'Reducer "'+t+'" returned undefined handling '+r+". To ignore an action, you must explicitly return the previous state."}function i(t){Object.keys(t).forEach(function(e){var n=t[e],r=n(void 0,{type:c.ActionTypes.INIT});if(void 0===r)throw Error('Reducer "'+e+'" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');var o="@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".");if(void 0===n(void 0,{type:o}))throw Error('Reducer "'+e+'" returned undefined when probed with a random type. '+("Don't try to handle "+c.ActionTypes.INIT+' or other actions in "redux/*" ')+"namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.")})}function u(t){for(var e=Object.keys(t),n={},r=0;e.length>r;r++){var u=e[r];"function"==typeof t[u]&&(n[u]=t[u])}var c,a=Object.keys(n);try{i(n)}catch(f){c=f}return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments[1];if(c)throw c;for(var r=!1,i={},u=0;a.length>u;u++){var f=a[u],s=n[f],d=t[f],l=s(d,e);if(void 0===l){var p=o(f,e);throw Error(p)}i[f]=l,r=r||l!==d}return r?i:t}}e.__esModule=!0,e["default"]=u;var c=n(2),a=n(4),f=(r(a),n(3));r(f)},function(t,e){function n(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(n){}return e}t.exports=n},function(t,e){function n(t){return!!t&&"object"==typeof t}t.exports=n}])});

/***/ },

/***/ 65:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! URI.js v1.18.1 http://medialize.github.io/URI.js/ */
	/* build contains: IPv6.js, punycode.js, SecondLevelDomains.js, URI.js */
	(function(k,n){ true?module.exports=n():"function"===typeof define&&define.amd?define(n):k.IPv6=n(k)})(this,function(k){var n=k&&k.IPv6;return{best:function(g){g=g.toLowerCase().split(":");var f=g.length,d=8;""===g[0]&&""===g[1]&&""===g[2]?(g.shift(),g.shift()):""===g[0]&&""===g[1]?g.shift():""===g[f-1]&&""===g[f-2]&&g.pop();f=g.length;-1!==g[f-1].indexOf(".")&&(d=7);var h;for(h=0;h<f&&""!==g[h];h++);if(h<d)for(g.splice(h,1,"0000");g.length<d;)g.splice(h,0,"0000");for(h=0;h<d;h++){for(var f=
	g[h].split(""),k=0;3>k;k++)if("0"===f[0]&&1<f.length)f.splice(0,1);else break;g[h]=f.join("")}var f=-1,p=k=0,n=-1,u=!1;for(h=0;h<d;h++)u?"0"===g[h]?p+=1:(u=!1,p>k&&(f=n,k=p)):"0"===g[h]&&(u=!0,n=h,p=1);p>k&&(f=n,k=p);1<k&&g.splice(f,k,"");f=g.length;d="";""===g[0]&&(d=":");for(h=0;h<f;h++){d+=g[h];if(h===f-1)break;d+=":"}""===g[f-1]&&(d+=":");return d},noConflict:function(){k.IPv6===this&&(k.IPv6=n);return this}}});
	(function(k){function n(d){throw new RangeError(e[d]);}function g(d,e){for(var f=d.length,h=[];f--;)h[f]=e(d[f]);return h}function f(d,e){var f=d.split("@"),h="";1<f.length&&(h=f[0]+"@",d=f[1]);d=d.replace(H,".");f=d.split(".");f=g(f,e).join(".");return h+f}function d(d){for(var e=[],f=0,h=d.length,g,a;f<h;)g=d.charCodeAt(f++),55296<=g&&56319>=g&&f<h?(a=d.charCodeAt(f++),56320==(a&64512)?e.push(((g&1023)<<10)+(a&1023)+65536):(e.push(g),f--)):e.push(g);return e}function h(d){return g(d,function(d){var e=
	"";65535<d&&(d-=65536,e+=t(d>>>10&1023|55296),d=56320|d&1023);return e+=t(d)}).join("")}function w(d,e){return d+22+75*(26>d)-((0!=e)<<5)}function p(d,e,f){var h=0;d=f?r(d/700):d>>1;for(d+=r(d/e);455<d;h+=36)d=r(d/35);return r(h+36*d/(d+38))}function D(d){var e=[],f=d.length,g,k=0,a=128,b=72,c,l,m,q,y;c=d.lastIndexOf("-");0>c&&(c=0);for(l=0;l<c;++l)128<=d.charCodeAt(l)&&n("not-basic"),e.push(d.charCodeAt(l));for(c=0<c?c+1:0;c<f;){l=k;g=1;for(m=36;;m+=36){c>=f&&n("invalid-input");q=d.charCodeAt(c++);
	q=10>q-48?q-22:26>q-65?q-65:26>q-97?q-97:36;(36<=q||q>r((2147483647-k)/g))&&n("overflow");k+=q*g;y=m<=b?1:m>=b+26?26:m-b;if(q<y)break;q=36-y;g>r(2147483647/q)&&n("overflow");g*=q}g=e.length+1;b=p(k-l,g,0==l);r(k/g)>2147483647-a&&n("overflow");a+=r(k/g);k%=g;e.splice(k++,0,a)}return h(e)}function u(e){var f,g,h,k,a,b,c,l,m,q=[],y,E,I;e=d(e);y=e.length;f=128;g=0;a=72;for(b=0;b<y;++b)m=e[b],128>m&&q.push(t(m));for((h=k=q.length)&&q.push("-");h<y;){c=2147483647;for(b=0;b<y;++b)m=e[b],m>=f&&m<c&&(c=m);
	E=h+1;c-f>r((2147483647-g)/E)&&n("overflow");g+=(c-f)*E;f=c;for(b=0;b<y;++b)if(m=e[b],m<f&&2147483647<++g&&n("overflow"),m==f){l=g;for(c=36;;c+=36){m=c<=a?1:c>=a+26?26:c-a;if(l<m)break;I=l-m;l=36-m;q.push(t(w(m+I%l,0)));l=r(I/l)}q.push(t(w(l,0)));a=p(g,E,h==k);g=0;++h}++g;++f}return q.join("")}var B="object"==typeof exports&&exports&&!exports.nodeType&&exports,C="object"==typeof module&&module&&!module.nodeType&&module,z="object"==typeof global&&global;if(z.global===z||z.window===z||z.self===z)k=
	z;var v,A=/^xn--/,F=/[^\x20-\x7E]/,H=/[\x2E\u3002\uFF0E\uFF61]/g,e={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},r=Math.floor,t=String.fromCharCode,x;v={version:"1.3.2",ucs2:{decode:d,encode:h},decode:D,encode:u,toASCII:function(d){return f(d,function(d){return F.test(d)?"xn--"+u(d):d})},toUnicode:function(d){return f(d,function(d){return A.test(d)?D(d.slice(4).toLowerCase()):d})}};if(true)!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return v}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if(B&&C)if(module.exports==B)C.exports=v;else for(x in v)v.hasOwnProperty(x)&&(B[x]=v[x]);else k.punycode=v})(this);
	(function(k,n){ true?module.exports=n():"function"===typeof define&&define.amd?define(n):k.SecondLevelDomains=n(k)})(this,function(k){var n=k&&k.SecondLevelDomains,g={list:{ac:" com gov mil net org ",ae:" ac co gov mil name net org pro sch ",af:" com edu gov net org ",al:" com edu gov mil net org ",ao:" co ed gv it og pb ",ar:" com edu gob gov int mil net org tur ",at:" ac co gv or ",au:" asn com csiro edu gov id net org ",ba:" co com edu gov mil net org rs unbi unmo unsa untz unze ",
	bb:" biz co com edu gov info net org store tv ",bh:" biz cc com edu gov info net org ",bn:" com edu gov net org ",bo:" com edu gob gov int mil net org tv ",br:" adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ",bs:" com edu gov net org ",bz:" du et om ov rg ",ca:" ab bc mb nb nf nl ns nt nu on pe qc sk yk ",
	ck:" biz co edu gen gov info net org ",cn:" ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ",co:" com edu gov mil net nom org ",cr:" ac c co ed fi go or sa ",cy:" ac biz com ekloges gov ltd name net org parliament press pro tm ","do":" art com edu gob gov mil net org sld web ",dz:" art asso com edu gov net org pol ",ec:" com edu fin gov info med mil net org pro ",eg:" com edu eun gov mil name net org sci ",er:" com edu gov ind mil net org rochest w ",
	es:" com edu gob nom org ",et:" biz com edu gov info name net org ",fj:" ac biz com info mil name net org pro ",fk:" ac co gov net nom org ",fr:" asso com f gouv nom prd presse tm ",gg:" co net org ",gh:" com edu gov mil org ",gn:" ac com gov net org ",gr:" com edu gov mil net org ",gt:" com edu gob ind mil net org ",gu:" com edu gov net org ",hk:" com edu gov idv net org ",hu:" 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ",
	id:" ac co go mil net or sch web ",il:" ac co gov idf k12 muni net org ","in":" ac co edu ernet firm gen gov i ind mil net nic org res ",iq:" com edu gov i mil net org ",ir:" ac co dnssec gov i id net org sch ",it:" edu gov ",je:" co net org ",jo:" com edu gov mil name net org sch ",jp:" ac ad co ed go gr lg ne or ",ke:" ac co go info me mobi ne or sc ",kh:" com edu gov mil net org per ",ki:" biz com de edu gov info mob net org tel ",km:" asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ",
	kn:" edu gov net org ",kr:" ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ",kw:" com edu gov net org ",ky:" com edu gov net org ",kz:" com edu gov mil net org ",lb:" com edu gov net org ",lk:" assn com edu gov grp hotel int ltd net ngo org sch soc web ",lr:" com edu gov net org ",lv:" asn com conf edu gov id mil net org ",ly:" com edu gov id med net org plc sch ",ma:" ac co gov m net org press ",
	mc:" asso tm ",me:" ac co edu gov its net org priv ",mg:" com edu gov mil nom org prd tm ",mk:" com edu gov inf name net org pro ",ml:" com edu gov net org presse ",mn:" edu gov org ",mo:" com edu gov net org ",mt:" com edu gov net org ",mv:" aero biz com coop edu gov info int mil museum name net org pro ",mw:" ac co com coop edu gov int museum net org ",mx:" com edu gob net org ",my:" com edu gov mil name net org sch ",nf:" arts com firm info net other per rec store web ",ng:" biz com edu gov mil mobi name net org sch ",
	ni:" ac co com edu gob mil net nom org ",np:" com edu gov mil net org ",nr:" biz com edu gov info net org ",om:" ac biz co com edu gov med mil museum net org pro sch ",pe:" com edu gob mil net nom org sld ",ph:" com edu gov i mil net ngo org ",pk:" biz com edu fam gob gok gon gop gos gov net org web ",pl:" art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ",pr:" ac biz com edu est gov info isla name net org pro prof ",
	ps:" com edu gov net org plo sec ",pw:" belau co ed go ne or ",ro:" arts com firm info nom nt org rec store tm www ",rs:" ac co edu gov in org ",sb:" com edu gov net org ",sc:" com edu gov net org ",sh:" co com edu gov net nom org ",sl:" com edu gov net org ",st:" co com consulado edu embaixada gov mil net org principe saotome store ",sv:" com edu gob org red ",sz:" ac co org ",tr:" av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ",tt:" aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ",
	tw:" club com ebiz edu game gov idv mil net org ",mu:" ac co com gov net or org ",mz:" ac co edu gov org ",na:" co com ",nz:" ac co cri geek gen govt health iwi maori mil net org parliament school ",pa:" abo ac com edu gob ing med net nom org sld ",pt:" com edu gov int net nome org publ ",py:" com edu gov mil net org ",qa:" com edu gov mil net org ",re:" asso com nom ",ru:" ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ",
	rw:" ac co com edu gouv gov int mil net ",sa:" com edu gov med net org pub sch ",sd:" com edu gov info med net org tv ",se:" a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ",sg:" com edu gov idn net org per ",sn:" art com edu gouv org perso univ ",sy:" com edu gov mil net news org ",th:" ac co go in mi net or ",tj:" ac biz co com edu go gov info int mil name net nic org test web ",tn:" agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ",
	tz:" ac co go ne or ",ua:" biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ",ug:" ac co go ne or org sc ",uk:" ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ",
	us:" dni fed isa kids nsn ",uy:" com edu gub mil net org ",ve:" co com edu gob info mil net org web ",vi:" co com k12 net org ",vn:" ac biz com edu gov health info int name net org pro ",ye:" co com gov ltd me net org plc ",yu:" ac co edu gov org ",za:" ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ",zm:" ac co com edu gov net org sch "},has:function(f){var d=f.lastIndexOf(".");if(0>=d||d>=f.length-1)return!1;
	var h=f.lastIndexOf(".",d-1);if(0>=h||h>=d-1)return!1;var k=g.list[f.slice(d+1)];return k?0<=k.indexOf(" "+f.slice(h+1,d)+" "):!1},is:function(f){var d=f.lastIndexOf(".");if(0>=d||d>=f.length-1||0<=f.lastIndexOf(".",d-1))return!1;var h=g.list[f.slice(d+1)];return h?0<=h.indexOf(" "+f.slice(0,d)+" "):!1},get:function(f){var d=f.lastIndexOf(".");if(0>=d||d>=f.length-1)return null;var h=f.lastIndexOf(".",d-1);if(0>=h||h>=d-1)return null;var k=g.list[f.slice(d+1)];return!k||0>k.indexOf(" "+f.slice(h+
	1,d)+" ")?null:f.slice(h+1)},noConflict:function(){k.SecondLevelDomains===this&&(k.SecondLevelDomains=n);return this}};return g});
	(function(k,n){ true?module.exports=n(__webpack_require__(66),__webpack_require__(67),__webpack_require__(68)):"function"===typeof define&&define.amd?define(["./punycode","./IPv6","./SecondLevelDomains"],n):k.URI=n(k.punycode,k.IPv6,k.SecondLevelDomains,k)})(this,function(k,n,g,f){function d(a,b){var c=1<=arguments.length,l=2<=arguments.length;if(!(this instanceof d))return c?l?new d(a,b):new d(a):new d;if(void 0===a){if(c)throw new TypeError("undefined is not a valid argument for URI");
	a="undefined"!==typeof location?location.href+"":""}this.href(a);return void 0!==b?this.absoluteTo(b):this}function h(a){return a.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function w(a){return void 0===a?"Undefined":String(Object.prototype.toString.call(a)).slice(8,-1)}function p(a){return"Array"===w(a)}function D(a,b){var c={},d,m;if("RegExp"===w(b))c=null;else if(p(b))for(d=0,m=b.length;d<m;d++)c[b[d]]=!0;else c[b]=!0;d=0;for(m=a.length;d<m;d++)if(c&&void 0!==c[a[d]]||!c&&b.test(a[d]))a.splice(d,
	1),m--,d--;return a}function u(a,b){var c,d;if(p(b)){c=0;for(d=b.length;c<d;c++)if(!u(a,b[c]))return!1;return!0}var m=w(b);c=0;for(d=a.length;c<d;c++)if("RegExp"===m){if("string"===typeof a[c]&&a[c].match(b))return!0}else if(a[c]===b)return!0;return!1}function B(a,b){if(!p(a)||!p(b)||a.length!==b.length)return!1;a.sort();b.sort();for(var c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function C(a){return a.replace(/^\/+|\/+$/g,"")}function z(a){return escape(a)}function v(a){return encodeURIComponent(a).replace(/[!'()*]/g,
	z).replace(/\*/g,"%2A")}function A(a){return function(b,c){if(void 0===b)return this._parts[a]||"";this._parts[a]=b||null;this.build(!c);return this}}function F(a,b){return function(c,d){if(void 0===c)return this._parts[a]||"";null!==c&&(c+="",c.charAt(0)===b&&(c=c.substring(1)));this._parts[a]=c;this.build(!d);return this}}var H=f&&f.URI;d.version="1.18.1";var e=d.prototype,r=Object.prototype.hasOwnProperty;d._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,
	port:null,path:null,query:null,fragment:null,duplicateQueryParameters:d.duplicateQueryParameters,escapeQuerySpace:d.escapeQuerySpace}};d.duplicateQueryParameters=!1;d.escapeQuerySpace=!0;d.protocol_expression=/^[a-z][a-z0-9.+-]*$/i;d.idn_expression=/[^a-z0-9\.-]/i;d.punycode_expression=/(xn--)/i;d.ip4_expression=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;d.ip6_expression=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
	d.find_uri_expression=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))/ig;d.findUri={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?\u00ab\u00bb\u201c\u201d\u201e\u2018\u2019]+$/};d.defaultPorts={http:"80",https:"443",ftp:"21",gopher:"70",ws:"80",wss:"443"};d.invalid_hostname_characters=
	/[^a-zA-Z0-9\.-]/;d.domAttributes={a:"href",blockquote:"cite",link:"href",base:"href",script:"src",form:"action",img:"src",area:"href",iframe:"src",embed:"src",source:"src",track:"src",input:"src",audio:"src",video:"src"};d.getDomAttribute=function(a){if(a&&a.nodeName){var b=a.nodeName.toLowerCase();return"input"===b&&"image"!==a.type?void 0:d.domAttributes[b]}};d.encode=v;d.decode=decodeURIComponent;d.iso8859=function(){d.encode=escape;d.decode=unescape};d.unicode=function(){d.encode=v;d.decode=
	decodeURIComponent};d.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/ig,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{expression:/[\/\?#]/g,map:{"/":"%2F","?":"%3F","#":"%23"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,map:{"%3A":":","%2F":"/","%3F":"?","%23":"#","%5B":"[","%5D":"]","%40":"@","%21":"!","%24":"$","%26":"&","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",",
	"%3B":";","%3D":"="}}},urnpath:{encode:{expression:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,map:{"%21":"!","%24":"$","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{expression:/[\/\?#:]/g,map:{"/":"%2F","?":"%3F","#":"%23",":":"%3A"}}}};d.encodeQuery=function(a,b){var c=d.encode(a+"");void 0===b&&(b=d.escapeQuerySpace);return b?c.replace(/%20/g,"+"):c};d.decodeQuery=function(a,b){a+="";void 0===b&&(b=d.escapeQuerySpace);try{return d.decode(b?a.replace(/\+/g,
	"%20"):a)}catch(c){return a}};var t={encode:"encode",decode:"decode"},x,G=function(a,b){return function(c){try{return d[b](c+"").replace(d.characters[a][b].expression,function(c){return d.characters[a][b].map[c]})}catch(l){return c}}};for(x in t)d[x+"PathSegment"]=G("pathname",t[x]),d[x+"UrnPathSegment"]=G("urnpath",t[x]);t=function(a,b,c){return function(l){var m;m=c?function(a){return d[b](d[c](a))}:d[b];l=(l+"").split(a);for(var e=0,f=l.length;e<f;e++)l[e]=m(l[e]);return l.join(a)}};d.decodePath=
	t("/","decodePathSegment");d.decodeUrnPath=t(":","decodeUrnPathSegment");d.recodePath=t("/","encodePathSegment","decode");d.recodeUrnPath=t(":","encodeUrnPathSegment","decode");d.encodeReserved=G("reserved","encode");d.parse=function(a,b){var c;b||(b={});c=a.indexOf("#");-1<c&&(b.fragment=a.substring(c+1)||null,a=a.substring(0,c));c=a.indexOf("?");-1<c&&(b.query=a.substring(c+1)||null,a=a.substring(0,c));"//"===a.substring(0,2)?(b.protocol=null,a=a.substring(2),a=d.parseAuthority(a,b)):(c=a.indexOf(":"),
	-1<c&&(b.protocol=a.substring(0,c)||null,b.protocol&&!b.protocol.match(d.protocol_expression)?b.protocol=void 0:"//"===a.substring(c+1,c+3)?(a=a.substring(c+3),a=d.parseAuthority(a,b)):(a=a.substring(c+1),b.urn=!0)));b.path=a;return b};d.parseHost=function(a,b){a=a.replace(/\\/g,"/");var c=a.indexOf("/"),d;-1===c&&(c=a.length);if("["===a.charAt(0))d=a.indexOf("]"),b.hostname=a.substring(1,d)||null,b.port=a.substring(d+2,c)||null,"/"===b.port&&(b.port=null);else{var m=a.indexOf(":");d=a.indexOf("/");
	m=a.indexOf(":",m+1);-1!==m&&(-1===d||m<d)?(b.hostname=a.substring(0,c)||null,b.port=null):(d=a.substring(0,c).split(":"),b.hostname=d[0]||null,b.port=d[1]||null)}b.hostname&&"/"!==a.substring(c).charAt(0)&&(c++,a="/"+a);return a.substring(c)||"/"};d.parseAuthority=function(a,b){a=d.parseUserinfo(a,b);return d.parseHost(a,b)};d.parseUserinfo=function(a,b){var c=a.indexOf("/"),l=a.lastIndexOf("@",-1<c?c:a.length-1);-1<l&&(-1===c||l<c)?(c=a.substring(0,l).split(":"),b.username=c[0]?d.decode(c[0]):null,
	c.shift(),b.password=c[0]?d.decode(c.join(":")):null,a=a.substring(l+1)):(b.username=null,b.password=null);return a};d.parseQuery=function(a,b){if(!a)return{};a=a.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,"");if(!a)return{};for(var c={},l=a.split("&"),m=l.length,e,f,g=0;g<m;g++)if(e=l[g].split("="),f=d.decodeQuery(e.shift(),b),e=e.length?d.decodeQuery(e.join("="),b):null,r.call(c,f)){if("string"===typeof c[f]||null===c[f])c[f]=[c[f]];c[f].push(e)}else c[f]=e;return c};d.build=function(a){var b="";
	a.protocol&&(b+=a.protocol+":");a.urn||!b&&!a.hostname||(b+="//");b+=d.buildAuthority(a)||"";"string"===typeof a.path&&("/"!==a.path.charAt(0)&&"string"===typeof a.hostname&&(b+="/"),b+=a.path);"string"===typeof a.query&&a.query&&(b+="?"+a.query);"string"===typeof a.fragment&&a.fragment&&(b+="#"+a.fragment);return b};d.buildHost=function(a){var b="";if(a.hostname)b=d.ip6_expression.test(a.hostname)?b+("["+a.hostname+"]"):b+a.hostname;else return"";a.port&&(b+=":"+a.port);return b};d.buildAuthority=
	function(a){return d.buildUserinfo(a)+d.buildHost(a)};d.buildUserinfo=function(a){var b="";a.username&&(b+=d.encode(a.username));a.password&&(b+=":"+d.encode(a.password));b&&(b+="@");return b};d.buildQuery=function(a,b,c){var l="",m,e,f,g;for(e in a)if(r.call(a,e)&&e)if(p(a[e]))for(m={},f=0,g=a[e].length;f<g;f++)void 0!==a[e][f]&&void 0===m[a[e][f]+""]&&(l+="&"+d.buildQueryParameter(e,a[e][f],c),!0!==b&&(m[a[e][f]+""]=!0));else void 0!==a[e]&&(l+="&"+d.buildQueryParameter(e,a[e],c));return l.substring(1)};
	d.buildQueryParameter=function(a,b,c){return d.encodeQuery(a,c)+(null!==b?"="+d.encodeQuery(b,c):"")};d.addQuery=function(a,b,c){if("object"===typeof b)for(var l in b)r.call(b,l)&&d.addQuery(a,l,b[l]);else if("string"===typeof b)void 0===a[b]?a[b]=c:("string"===typeof a[b]&&(a[b]=[a[b]]),p(c)||(c=[c]),a[b]=(a[b]||[]).concat(c));else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");};d.removeQuery=function(a,b,c){var l;if(p(b))for(c=0,l=b.length;c<l;c++)a[b[c]]=
	void 0;else if("RegExp"===w(b))for(l in a)b.test(l)&&(a[l]=void 0);else if("object"===typeof b)for(l in b)r.call(b,l)&&d.removeQuery(a,l,b[l]);else if("string"===typeof b)void 0!==c?"RegExp"===w(c)?!p(a[b])&&c.test(a[b])?a[b]=void 0:a[b]=D(a[b],c):a[b]!==String(c)||p(c)&&1!==c.length?p(a[b])&&(a[b]=D(a[b],c)):a[b]=void 0:a[b]=void 0;else throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");};d.hasQuery=function(a,b,c,l){switch(w(b)){case "String":break;
	case "RegExp":for(var e in a)if(r.call(a,e)&&b.test(e)&&(void 0===c||d.hasQuery(a,e,c)))return!0;return!1;case "Object":for(var f in b)if(r.call(b,f)&&!d.hasQuery(a,f,b[f]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");}switch(w(c)){case "Undefined":return b in a;case "Boolean":return a=!(p(a[b])?!a[b].length:!a[b]),c===a;case "Function":return!!c(a[b],b,a);case "Array":return p(a[b])?(l?u:B)(a[b],c):!1;case "RegExp":return p(a[b])?
	l?u(a[b],c):!1:!(!a[b]||!a[b].match(c));case "Number":c=String(c);case "String":return p(a[b])?l?u(a[b],c):!1:a[b]===c;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");}};d.joinPaths=function(){for(var a=[],b=[],c=0,l=0;l<arguments.length;l++){var e=new d(arguments[l]);a.push(e);for(var e=e.segment(),f=0;f<e.length;f++)"string"===typeof e[f]&&b.push(e[f]),e[f]&&c++}if(!b.length||!c)return new d("");b=(new d("")).segment(b);
	""!==a[0].path()&&"/"!==a[0].path().slice(0,1)||b.path("/"+b.path());return b.normalize()};d.commonPath=function(a,b){var c=Math.min(a.length,b.length),d;for(d=0;d<c;d++)if(a.charAt(d)!==b.charAt(d)){d--;break}if(1>d)return a.charAt(0)===b.charAt(0)&&"/"===a.charAt(0)?"/":"";if("/"!==a.charAt(d)||"/"!==b.charAt(d))d=a.substring(0,d).lastIndexOf("/");return a.substring(0,d+1)};d.withinString=function(a,b,c){c||(c={});var l=c.start||d.findUri.start,e=c.end||d.findUri.end,f=c.trim||d.findUri.trim,g=
	/[a-z0-9-]=["']?$/i;for(l.lastIndex=0;;){var h=l.exec(a);if(!h)break;h=h.index;if(c.ignoreHtml){var k=a.slice(Math.max(h-3,0),h);if(k&&g.test(k))continue}var k=h+a.slice(h).search(e),n=a.slice(h,k).replace(f,"");c.ignore&&c.ignore.test(n)||(k=h+n.length,n=b(n,h,k,a),a=a.slice(0,h)+n+a.slice(k),l.lastIndex=h+n.length)}l.lastIndex=0;return a};d.ensureValidHostname=function(a){if(a.match(d.invalid_hostname_characters)){if(!k)throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-] and Punycode.js is not available');
	if(k.toASCII(a).match(d.invalid_hostname_characters))throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-]');}};d.noConflict=function(a){if(a)return a={URI:this.noConflict()},f.URITemplate&&"function"===typeof f.URITemplate.noConflict&&(a.URITemplate=f.URITemplate.noConflict()),f.IPv6&&"function"===typeof f.IPv6.noConflict&&(a.IPv6=f.IPv6.noConflict()),f.SecondLevelDomains&&"function"===typeof f.SecondLevelDomains.noConflict&&(a.SecondLevelDomains=f.SecondLevelDomains.noConflict()),
	a;f.URI===this&&(f.URI=H);return this};e.build=function(a){if(!0===a)this._deferred_build=!0;else if(void 0===a||this._deferred_build)this._string=d.build(this._parts),this._deferred_build=!1;return this};e.clone=function(){return new d(this)};e.valueOf=e.toString=function(){return this.build(!1)._string};e.protocol=A("protocol");e.username=A("username");e.password=A("password");e.hostname=A("hostname");e.port=A("port");e.query=F("query","?");e.fragment=F("fragment","#");e.search=function(a,b){var c=
	this.query(a,b);return"string"===typeof c&&c.length?"?"+c:c};e.hash=function(a,b){var c=this.fragment(a,b);return"string"===typeof c&&c.length?"#"+c:c};e.pathname=function(a,b){if(void 0===a||!0===a){var c=this._parts.path||(this._parts.hostname?"/":"");return a?(this._parts.urn?d.decodeUrnPath:d.decodePath)(c):c}this._parts.path=this._parts.urn?a?d.recodeUrnPath(a):"":a?d.recodePath(a):"/";this.build(!b);return this};e.path=e.pathname;e.href=function(a,b){var c;if(void 0===a)return this.toString();
	this._string="";this._parts=d._parts();var e=a instanceof d,f="object"===typeof a&&(a.hostname||a.path||a.pathname);a.nodeName&&(f=d.getDomAttribute(a),a=a[f]||"",f=!1);!e&&f&&void 0!==a.pathname&&(a=a.toString());if("string"===typeof a||a instanceof String)this._parts=d.parse(String(a),this._parts);else if(e||f)for(c in e=e?a._parts:a,e)r.call(this._parts,c)&&(this._parts[c]=e[c]);else throw new TypeError("invalid input");this.build(!b);return this};e.is=function(a){var b=!1,c=!1,e=!1,f=!1,h=!1,
	k=!1,n=!1,p=!this._parts.urn;this._parts.hostname&&(p=!1,c=d.ip4_expression.test(this._parts.hostname),e=d.ip6_expression.test(this._parts.hostname),b=c||e,h=(f=!b)&&g&&g.has(this._parts.hostname),k=f&&d.idn_expression.test(this._parts.hostname),n=f&&d.punycode_expression.test(this._parts.hostname));switch(a.toLowerCase()){case "relative":return p;case "absolute":return!p;case "domain":case "name":return f;case "sld":return h;case "ip":return b;case "ip4":case "ipv4":case "inet4":return c;case "ip6":case "ipv6":case "inet6":return e;
	case "idn":return k;case "url":return!this._parts.urn;case "urn":return!!this._parts.urn;case "punycode":return n}return null};var J=e.protocol,K=e.port,L=e.hostname;e.protocol=function(a,b){if(void 0!==a&&a&&(a=a.replace(/:(\/\/)?$/,""),!a.match(d.protocol_expression)))throw new TypeError('Protocol "'+a+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return J.call(this,a,b)};e.scheme=e.protocol;e.port=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0!==
	a&&(0===a&&(a=null),a&&(a+="",":"===a.charAt(0)&&(a=a.substring(1)),a.match(/[^0-9]/))))throw new TypeError('Port "'+a+'" contains characters other than [0-9]');return K.call(this,a,b)};e.hostname=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0!==a){var c={};if("/"!==d.parseHost(a,c))throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-]');a=c.hostname}return L.call(this,a,b)};e.origin=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===
	a){var c=this.protocol();return this.authority()?(c?c+"://":"")+this.authority():""}c=d(a);this.protocol(c.protocol()).authority(c.authority()).build(!b);return this};e.host=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a)return this._parts.hostname?d.buildHost(this._parts):"";if("/"!==d.parseHost(a,this._parts))throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-]');this.build(!b);return this};e.authority=function(a,b){if(this._parts.urn)return void 0===
	a?"":this;if(void 0===a)return this._parts.hostname?d.buildAuthority(this._parts):"";if("/"!==d.parseAuthority(a,this._parts))throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-]');this.build(!b);return this};e.userinfo=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a){var c=d.buildUserinfo(this._parts);return c?c.substring(0,c.length-1):c}"@"!==a[a.length-1]&&(a+="@");d.parseUserinfo(a,this._parts);this.build(!b);return this};e.resource=function(a,
	b){var c;if(void 0===a)return this.path()+this.search()+this.hash();c=d.parse(a);this._parts.path=c.path;this._parts.query=c.query;this._parts.fragment=c.fragment;this.build(!b);return this};e.subdomain=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a){if(!this._parts.hostname||this.is("IP"))return"";var c=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,c)||""}c=this._parts.hostname.length-this.domain().length;c=this._parts.hostname.substring(0,
	c);c=new RegExp("^"+h(c));a&&"."!==a.charAt(a.length-1)&&(a+=".");a&&d.ensureValidHostname(a);this._parts.hostname=this._parts.hostname.replace(c,a);this.build(!b);return this};e.domain=function(a,b){if(this._parts.urn)return void 0===a?"":this;"boolean"===typeof a&&(b=a,a=void 0);if(void 0===a){if(!this._parts.hostname||this.is("IP"))return"";var c=this._parts.hostname.match(/\./g);if(c&&2>c.length)return this._parts.hostname;c=this._parts.hostname.length-this.tld(b).length-1;c=this._parts.hostname.lastIndexOf(".",
	c-1)+1;return this._parts.hostname.substring(c)||""}if(!a)throw new TypeError("cannot set domain empty");d.ensureValidHostname(a);!this._parts.hostname||this.is("IP")?this._parts.hostname=a:(c=new RegExp(h(this.domain())+"$"),this._parts.hostname=this._parts.hostname.replace(c,a));this.build(!b);return this};e.tld=function(a,b){if(this._parts.urn)return void 0===a?"":this;"boolean"===typeof a&&(b=a,a=void 0);if(void 0===a){if(!this._parts.hostname||this.is("IP"))return"";var c=this._parts.hostname.lastIndexOf("."),
	c=this._parts.hostname.substring(c+1);return!0!==b&&g&&g.list[c.toLowerCase()]?g.get(this._parts.hostname)||c:c}if(a)if(a.match(/[^a-zA-Z0-9-]/))if(g&&g.is(a))c=new RegExp(h(this.tld())+"$"),this._parts.hostname=this._parts.hostname.replace(c,a);else throw new TypeError('TLD "'+a+'" contains characters other than [A-Z0-9]');else{if(!this._parts.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");c=new RegExp(h(this.tld())+"$");this._parts.hostname=this._parts.hostname.replace(c,
	a)}else throw new TypeError("cannot set TLD empty");this.build(!b);return this};e.directory=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a||!0===a){if(!this._parts.path&&!this._parts.hostname)return"";if("/"===this._parts.path)return"/";var c=this._parts.path.length-this.filename().length-1,c=this._parts.path.substring(0,c)||(this._parts.hostname?"/":"");return a?d.decodePath(c):c}c=this._parts.path.length-this.filename().length;c=this._parts.path.substring(0,c);c=new RegExp("^"+
	h(c));this.is("relative")||(a||(a="/"),"/"!==a.charAt(0)&&(a="/"+a));a&&"/"!==a.charAt(a.length-1)&&(a+="/");a=d.recodePath(a);this._parts.path=this._parts.path.replace(c,a);this.build(!b);return this};e.filename=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a||!0===a){if(!this._parts.path||"/"===this._parts.path)return"";var c=this._parts.path.lastIndexOf("/"),c=this._parts.path.substring(c+1);return a?d.decodePathSegment(c):c}c=!1;"/"===a.charAt(0)&&(a=a.substring(1));a.match(/\.?\//)&&
	(c=!0);var e=new RegExp(h(this.filename())+"$");a=d.recodePath(a);this._parts.path=this._parts.path.replace(e,a);c?this.normalizePath(b):this.build(!b);return this};e.suffix=function(a,b){if(this._parts.urn)return void 0===a?"":this;if(void 0===a||!0===a){if(!this._parts.path||"/"===this._parts.path)return"";var c=this.filename(),e=c.lastIndexOf(".");if(-1===e)return"";c=c.substring(e+1);c=/^[a-z0-9%]+$/i.test(c)?c:"";return a?d.decodePathSegment(c):c}"."===a.charAt(0)&&(a=a.substring(1));if(c=this.suffix())e=
	a?new RegExp(h(c)+"$"):new RegExp(h("."+c)+"$");else{if(!a)return this;this._parts.path+="."+d.recodePath(a)}e&&(a=d.recodePath(a),this._parts.path=this._parts.path.replace(e,a));this.build(!b);return this};e.segment=function(a,b,c){var d=this._parts.urn?":":"/",e=this.path(),f="/"===e.substring(0,1),e=e.split(d);void 0!==a&&"number"!==typeof a&&(c=b,b=a,a=void 0);if(void 0!==a&&"number"!==typeof a)throw Error('Bad segment "'+a+'", must be 0-based integer');f&&e.shift();0>a&&(a=Math.max(e.length+
	a,0));if(void 0===b)return void 0===a?e:e[a];if(null===a||void 0===e[a])if(p(b)){e=[];a=0;for(var g=b.length;a<g;a++)if(b[a].length||e.length&&e[e.length-1].length)e.length&&!e[e.length-1].length&&e.pop(),e.push(C(b[a]))}else{if(b||"string"===typeof b)b=C(b),""===e[e.length-1]?e[e.length-1]=b:e.push(b)}else b?e[a]=C(b):e.splice(a,1);f&&e.unshift("");return this.path(e.join(d),c)};e.segmentCoded=function(a,b,c){var e,f;"number"!==typeof a&&(c=b,b=a,a=void 0);if(void 0===b){a=this.segment(a,b,c);if(p(a))for(e=
	0,f=a.length;e<f;e++)a[e]=d.decode(a[e]);else a=void 0!==a?d.decode(a):void 0;return a}if(p(b))for(e=0,f=b.length;e<f;e++)b[e]=d.encode(b[e]);else b="string"===typeof b||b instanceof String?d.encode(b):b;return this.segment(a,b,c)};var M=e.query;e.query=function(a,b){if(!0===a)return d.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("function"===typeof a){var c=d.parseQuery(this._parts.query,this._parts.escapeQuerySpace),e=a.call(this,c);this._parts.query=d.buildQuery(e||c,this._parts.duplicateQueryParameters,
	this._parts.escapeQuerySpace);this.build(!b);return this}return void 0!==a&&"string"!==typeof a?(this._parts.query=d.buildQuery(a,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!b),this):M.call(this,a,b)};e.setQuery=function(a,b,c){var e=d.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("string"===typeof a||a instanceof String)e[a]=void 0!==b?b:null;else if("object"===typeof a)for(var f in a)r.call(a,f)&&(e[f]=a[f]);else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
	this._parts.query=d.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);"string"!==typeof a&&(c=b);this.build(!c);return this};e.addQuery=function(a,b,c){var e=d.parseQuery(this._parts.query,this._parts.escapeQuerySpace);d.addQuery(e,a,void 0===b?null:b);this._parts.query=d.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);"string"!==typeof a&&(c=b);this.build(!c);return this};e.removeQuery=function(a,b,c){var e=d.parseQuery(this._parts.query,
	this._parts.escapeQuerySpace);d.removeQuery(e,a,b);this._parts.query=d.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);"string"!==typeof a&&(c=b);this.build(!c);return this};e.hasQuery=function(a,b,c){var e=d.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return d.hasQuery(e,a,b,c)};e.setSearch=e.setQuery;e.addSearch=e.addQuery;e.removeSearch=e.removeQuery;e.hasSearch=e.hasQuery;e.normalize=function(){return this._parts.urn?this.normalizeProtocol(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build():
	this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build()};e.normalizeProtocol=function(a){"string"===typeof this._parts.protocol&&(this._parts.protocol=this._parts.protocol.toLowerCase(),this.build(!a));return this};e.normalizeHostname=function(a){this._parts.hostname&&(this.is("IDN")&&k?this._parts.hostname=k.toASCII(this._parts.hostname):this.is("IPv6")&&n&&(this._parts.hostname=n.best(this._parts.hostname)),this._parts.hostname=
	this._parts.hostname.toLowerCase(),this.build(!a));return this};e.normalizePort=function(a){"string"===typeof this._parts.protocol&&this._parts.port===d.defaultPorts[this._parts.protocol]&&(this._parts.port=null,this.build(!a));return this};e.normalizePath=function(a){var b=this._parts.path;if(!b)return this;if(this._parts.urn)return this._parts.path=d.recodeUrnPath(this._parts.path),this.build(!a),this;if("/"===this._parts.path)return this;var b=d.recodePath(b),c,e="",f,g;"/"!==b.charAt(0)&&(c=!0,
	b="/"+b);if("/.."===b.slice(-3)||"/."===b.slice(-2))b+="/";b=b.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/");c&&(e=b.substring(1).match(/^(\.\.\/)+/)||"")&&(e=e[0]);for(;;){f=b.search(/\/\.\.(\/|$)/);if(-1===f)break;else if(0===f){b=b.substring(3);continue}g=b.substring(0,f).lastIndexOf("/");-1===g&&(g=f);b=b.substring(0,g)+b.substring(f+3)}c&&this.is("relative")&&(b=e+b.substring(1));this._parts.path=b;this.build(!a);return this};e.normalizePathname=e.normalizePath;e.normalizeQuery=
	function(a){"string"===typeof this._parts.query&&(this._parts.query.length?this.query(d.parseQuery(this._parts.query,this._parts.escapeQuerySpace)):this._parts.query=null,this.build(!a));return this};e.normalizeFragment=function(a){this._parts.fragment||(this._parts.fragment=null,this.build(!a));return this};e.normalizeSearch=e.normalizeQuery;e.normalizeHash=e.normalizeFragment;e.iso8859=function(){var a=d.encode,b=d.decode;d.encode=escape;d.decode=decodeURIComponent;try{this.normalize()}finally{d.encode=
	a,d.decode=b}return this};e.unicode=function(){var a=d.encode,b=d.decode;d.encode=v;d.decode=unescape;try{this.normalize()}finally{d.encode=a,d.decode=b}return this};e.readable=function(){var a=this.clone();a.username("").password("").normalize();var b="";a._parts.protocol&&(b+=a._parts.protocol+"://");a._parts.hostname&&(a.is("punycode")&&k?(b+=k.toUnicode(a._parts.hostname),a._parts.port&&(b+=":"+a._parts.port)):b+=a.host());a._parts.hostname&&a._parts.path&&"/"!==a._parts.path.charAt(0)&&(b+="/");
	b+=a.path(!0);if(a._parts.query){for(var c="",e=0,f=a._parts.query.split("&"),g=f.length;e<g;e++){var h=(f[e]||"").split("="),c=c+("&"+d.decodeQuery(h[0],this._parts.escapeQuerySpace).replace(/&/g,"%26"));void 0!==h[1]&&(c+="="+d.decodeQuery(h[1],this._parts.escapeQuerySpace).replace(/&/g,"%26"))}b+="?"+c.substring(1)}return b+=d.decodeQuery(a.hash(),!0)};e.absoluteTo=function(a){var b=this.clone(),c=["protocol","username","password","hostname","port"],e,f;if(this._parts.urn)throw Error("URNs do not have any generally defined hierarchical components");
	a instanceof d||(a=new d(a));b._parts.protocol||(b._parts.protocol=a._parts.protocol);if(this._parts.hostname)return b;for(e=0;f=c[e];e++)b._parts[f]=a._parts[f];b._parts.path?".."===b._parts.path.substring(-2)&&(b._parts.path+="/"):(b._parts.path=a._parts.path,b._parts.query||(b._parts.query=a._parts.query));"/"!==b.path().charAt(0)&&(c=(c=a.directory())?c:0===a.path().indexOf("/")?"/":"",b._parts.path=(c?c+"/":"")+b._parts.path,b.normalizePath());b.build();return b};e.relativeTo=function(a){var b=
	this.clone().normalize(),c,e,f;if(b._parts.urn)throw Error("URNs do not have any generally defined hierarchical components");a=(new d(a)).normalize();c=b._parts;e=a._parts;f=b.path();a=a.path();if("/"!==f.charAt(0))throw Error("URI is already relative");if("/"!==a.charAt(0))throw Error("Cannot calculate a URI relative to another relative URI");c.protocol===e.protocol&&(c.protocol=null);if(c.username===e.username&&c.password===e.password&&null===c.protocol&&null===c.username&&null===c.password&&c.hostname===
	e.hostname&&c.port===e.port)c.hostname=null,c.port=null;else return b.build();if(f===a)return c.path="",b.build();f=d.commonPath(f,a);if(!f)return b.build();e=e.path.substring(f.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");c.path=e+c.path.substring(f.length)||"./";return b.build()};e.equals=function(a){var b=this.clone(),c=new d(a),e;a={};var f,g;b.normalize();c.normalize();if(b.toString()===c.toString())return!0;f=b.query();e=c.query();b.query("");c.query("");if(b.toString()!==c.toString()||
	f.length!==e.length)return!1;b=d.parseQuery(f,this._parts.escapeQuerySpace);e=d.parseQuery(e,this._parts.escapeQuerySpace);for(g in b)if(r.call(b,g)){if(!p(b[g])){if(b[g]!==e[g])return!1}else if(!B(b[g],e[g]))return!1;a[g]=!0}for(g in e)if(r.call(e,g)&&!a[g])return!1;return!0};e.duplicateQueryParameters=function(a){this._parts.duplicateQueryParameters=!!a;return this};e.escapeQuerySpace=function(a){this._parts.escapeQuerySpace=!!a;return this};return d});

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module), (function() { return this; }())))

/***/ },

/***/ 66:
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.4.0 by @mathias */
	;(function(root) {

		/** Detect free variables */
		var freeExports = typeof exports == 'object' && exports &&
			!exports.nodeType && exports;
		var freeModule = typeof module == 'object' && module &&
			!module.nodeType && module;
		var freeGlobal = typeof global == 'object' && global;
		if (
			freeGlobal.global === freeGlobal ||
			freeGlobal.window === freeGlobal ||
			freeGlobal.self === freeGlobal
		) {
			root = freeGlobal;
		}

		/**
		 * The `punycode` object.
		 * @name punycode
		 * @type Object
		 */
		var punycode,

		/** Highest positive signed 32-bit float value */
		maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

		/** Bootstring parameters */
		base = 36,
		tMin = 1,
		tMax = 26,
		skew = 38,
		damp = 700,
		initialBias = 72,
		initialN = 128, // 0x80
		delimiter = '-', // '\x2D'

		/** Regular expressions */
		regexPunycode = /^xn--/,
		regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
		regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

		/** Error messages */
		errors = {
			'overflow': 'Overflow: input needs wider integers to process',
			'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
			'invalid-input': 'Invalid input'
		},

		/** Convenience shortcuts */
		baseMinusTMin = base - tMin,
		floor = Math.floor,
		stringFromCharCode = String.fromCharCode,

		/** Temporary variable */
		key;

		/*--------------------------------------------------------------------------*/

		/**
		 * A generic error utility function.
		 * @private
		 * @param {String} type The error type.
		 * @returns {Error} Throws a `RangeError` with the applicable error message.
		 */
		function error(type) {
			throw new RangeError(errors[type]);
		}

		/**
		 * A generic `Array#map` utility function.
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} callback The function that gets called for every array
		 * item.
		 * @returns {Array} A new array of values returned by the callback function.
		 */
		function map(array, fn) {
			var length = array.length;
			var result = [];
			while (length--) {
				result[length] = fn(array[length]);
			}
			return result;
		}

		/**
		 * A simple `Array#map`-like wrapper to work with domain name strings or email
		 * addresses.
		 * @private
		 * @param {String} domain The domain name or email address.
		 * @param {Function} callback The function that gets called for every
		 * character.
		 * @returns {Array} A new string of characters returned by the callback
		 * function.
		 */
		function mapDomain(string, fn) {
			var parts = string.split('@');
			var result = '';
			if (parts.length > 1) {
				// In email addresses, only the domain name should be punycoded. Leave
				// the local part (i.e. everything up to `@`) intact.
				result = parts[0] + '@';
				string = parts[1];
			}
			// Avoid `split(regex)` for IE8 compatibility. See #17.
			string = string.replace(regexSeparators, '\x2E');
			var labels = string.split('.');
			var encoded = map(labels, fn).join('.');
			return result + encoded;
		}

		/**
		 * Creates an array containing the numeric code points of each Unicode
		 * character in the string. While JavaScript uses UCS-2 internally,
		 * this function will convert a pair of surrogate halves (each of which
		 * UCS-2 exposes as separate characters) into a single code point,
		 * matching UTF-16.
		 * @see `punycode.ucs2.encode`
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode.ucs2
		 * @name decode
		 * @param {String} string The Unicode input string (UCS-2).
		 * @returns {Array} The new array of code points.
		 */
		function ucs2decode(string) {
			var output = [],
			    counter = 0,
			    length = string.length,
			    value,
			    extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) { // low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		/**
		 * Creates a string based on an array of numeric code points.
		 * @see `punycode.ucs2.decode`
		 * @memberOf punycode.ucs2
		 * @name encode
		 * @param {Array} codePoints The array of numeric code points.
		 * @returns {String} The new Unicode string (UCS-2).
		 */
		function ucs2encode(array) {
			return map(array, function(value) {
				var output = '';
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
				return output;
			}).join('');
		}

		/**
		 * Converts a basic code point into a digit/integer.
		 * @see `digitToBasic()`
		 * @private
		 * @param {Number} codePoint The basic numeric code point value.
		 * @returns {Number} The numeric value of a basic code point (for use in
		 * representing integers) in the range `0` to `base - 1`, or `base` if
		 * the code point does not represent a value.
		 */
		function basicToDigit(codePoint) {
			if (codePoint - 48 < 10) {
				return codePoint - 22;
			}
			if (codePoint - 65 < 26) {
				return codePoint - 65;
			}
			if (codePoint - 97 < 26) {
				return codePoint - 97;
			}
			return base;
		}

		/**
		 * Converts a digit/integer into a basic code point.
		 * @see `basicToDigit()`
		 * @private
		 * @param {Number} digit The numeric value of a basic code point.
		 * @returns {Number} The basic code point whose value (when used for
		 * representing integers) is `digit`, which needs to be in the range
		 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
		 * used; else, the lowercase form is used. The behavior is undefined
		 * if `flag` is non-zero and `digit` has no uppercase form.
		 */
		function digitToBasic(digit, flag) {
			//  0..25 map to ASCII a..z or A..Z
			// 26..35 map to ASCII 0..9
			return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
		}

		/**
		 * Bias adaptation function as per section 3.4 of RFC 3492.
		 * https://tools.ietf.org/html/rfc3492#section-3.4
		 * @private
		 */
		function adapt(delta, numPoints, firstTime) {
			var k = 0;
			delta = firstTime ? floor(delta / damp) : delta >> 1;
			delta += floor(delta / numPoints);
			for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
				delta = floor(delta / baseMinusTMin);
			}
			return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
		}

		/**
		 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
		 * symbols.
		 * @memberOf punycode
		 * @param {String} input The Punycode string of ASCII-only symbols.
		 * @returns {String} The resulting string of Unicode symbols.
		 */
		function decode(input) {
			// Don't use UCS-2
			var output = [],
			    inputLength = input.length,
			    out,
			    i = 0,
			    n = initialN,
			    bias = initialBias,
			    basic,
			    j,
			    index,
			    oldi,
			    w,
			    k,
			    digit,
			    t,
			    /** Cached calculation results */
			    baseMinusT;

			// Handle the basic code points: let `basic` be the number of input code
			// points before the last delimiter, or `0` if there is none, then copy
			// the first basic code points to the output.

			basic = input.lastIndexOf(delimiter);
			if (basic < 0) {
				basic = 0;
			}

			for (j = 0; j < basic; ++j) {
				// if it's not a basic code point
				if (input.charCodeAt(j) >= 0x80) {
					error('not-basic');
				}
				output.push(input.charCodeAt(j));
			}

			// Main decoding loop: start just after the last delimiter if any basic code
			// points were copied; start at the beginning otherwise.

			for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

				// `index` is the index of the next character to be consumed.
				// Decode a generalized variable-length integer into `delta`,
				// which gets added to `i`. The overflow checking is easier
				// if we increase `i` as we go, then subtract off its starting
				// value at the end to obtain `delta`.
				for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

					if (index >= inputLength) {
						error('invalid-input');
					}

					digit = basicToDigit(input.charCodeAt(index++));

					if (digit >= base || digit > floor((maxInt - i) / w)) {
						error('overflow');
					}

					i += digit * w;
					t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

					if (digit < t) {
						break;
					}

					baseMinusT = base - t;
					if (w > floor(maxInt / baseMinusT)) {
						error('overflow');
					}

					w *= baseMinusT;

				}

				out = output.length + 1;
				bias = adapt(i - oldi, out, oldi == 0);

				// `i` was supposed to wrap around from `out` to `0`,
				// incrementing `n` each time, so we'll fix that now:
				if (floor(i / out) > maxInt - n) {
					error('overflow');
				}

				n += floor(i / out);
				i %= out;

				// Insert `n` at position `i` of the output
				output.splice(i++, 0, n);

			}

			return ucs2encode(output);
		}

		/**
		 * Converts a string of Unicode symbols (e.g. a domain name label) to a
		 * Punycode string of ASCII-only symbols.
		 * @memberOf punycode
		 * @param {String} input The string of Unicode symbols.
		 * @returns {String} The resulting Punycode string of ASCII-only symbols.
		 */
		function encode(input) {
			var n,
			    delta,
			    handledCPCount,
			    basicLength,
			    bias,
			    j,
			    m,
			    q,
			    k,
			    t,
			    currentValue,
			    output = [],
			    /** `inputLength` will hold the number of code points in `input`. */
			    inputLength,
			    /** Cached calculation results */
			    handledCPCountPlusOne,
			    baseMinusT,
			    qMinusT;

			// Convert the input in UCS-2 to Unicode
			input = ucs2decode(input);

			// Cache the length
			inputLength = input.length;

			// Initialize the state
			n = initialN;
			delta = 0;
			bias = initialBias;

			// Handle the basic code points
			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue < 0x80) {
					output.push(stringFromCharCode(currentValue));
				}
			}

			handledCPCount = basicLength = output.length;

			// `handledCPCount` is the number of code points that have been handled;
			// `basicLength` is the number of basic code points.

			// Finish the basic string - if it is not empty - with a delimiter
			if (basicLength) {
				output.push(delimiter);
			}

			// Main encoding loop:
			while (handledCPCount < inputLength) {

				// All non-basic code points < n have been handled already. Find the next
				// larger one:
				for (m = maxInt, j = 0; j < inputLength; ++j) {
					currentValue = input[j];
					if (currentValue >= n && currentValue < m) {
						m = currentValue;
					}
				}

				// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
				// but guard against overflow
				handledCPCountPlusOne = handledCPCount + 1;
				if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
					error('overflow');
				}

				delta += (m - n) * handledCPCountPlusOne;
				n = m;

				for (j = 0; j < inputLength; ++j) {
					currentValue = input[j];

					if (currentValue < n && ++delta > maxInt) {
						error('overflow');
					}

					if (currentValue == n) {
						// Represent delta as a generalized variable-length integer
						for (q = delta, k = base; /* no condition */; k += base) {
							t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
							if (q < t) {
								break;
							}
							qMinusT = q - t;
							baseMinusT = base - t;
							output.push(
								stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
							);
							q = floor(qMinusT / baseMinusT);
						}

						output.push(stringFromCharCode(digitToBasic(q, 0)));
						bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
						delta = 0;
						++handledCPCount;
					}
				}

				++delta;
				++n;

			}
			return output.join('');
		}

		/**
		 * Converts a Punycode string representing a domain name or an email address
		 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
		 * it doesn't matter if you call it on a string that has already been
		 * converted to Unicode.
		 * @memberOf punycode
		 * @param {String} input The Punycoded domain name or email address to
		 * convert to Unicode.
		 * @returns {String} The Unicode representation of the given Punycode
		 * string.
		 */
		function toUnicode(input) {
			return mapDomain(input, function(string) {
				return regexPunycode.test(string)
					? decode(string.slice(4).toLowerCase())
					: string;
			});
		}

		/**
		 * Converts a Unicode string representing a domain name or an email address to
		 * Punycode. Only the non-ASCII parts of the domain name will be converted,
		 * i.e. it doesn't matter if you call it with a domain that's already in
		 * ASCII.
		 * @memberOf punycode
		 * @param {String} input The domain name or email address to convert, as a
		 * Unicode string.
		 * @returns {String} The Punycode representation of the given domain name or
		 * email address.
		 */
		function toASCII(input) {
			return mapDomain(input, function(string) {
				return regexNonASCII.test(string)
					? 'xn--' + encode(string)
					: string;
			});
		}

		/*--------------------------------------------------------------------------*/

		/** Define the public API */
		punycode = {
			/**
			 * A string representing the current Punycode.js version number.
			 * @memberOf punycode
			 * @type String
			 */
			'version': '1.3.2',
			/**
			 * An object of methods to convert from JavaScript's internal character
			 * representation (UCS-2) to Unicode code points, and back.
			 * @see <https://mathiasbynens.be/notes/javascript-encoding>
			 * @memberOf punycode
			 * @type Object
			 */
			'ucs2': {
				'decode': ucs2decode,
				'encode': ucs2encode
			},
			'decode': decode,
			'encode': encode,
			'toASCII': toASCII,
			'toUnicode': toUnicode
		};

		/** Expose `punycode` */
		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return punycode;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (freeExports && freeModule) {
			if (module.exports == freeExports) {
				// in Node.js, io.js, or RingoJS v0.8.0+
				freeModule.exports = punycode;
			} else {
				// in Narwhal or RingoJS v0.7.0-
				for (key in punycode) {
					punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
				}
			}
		} else {
			// in Rhino or a web browser
			root.punycode = punycode;
		}

	}(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module), (function() { return this; }())))

/***/ },

/***/ 67:
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * URI.js - Mutating URLs
	 * IPv6 Support
	 *
	 * Version: 1.18.1
	 *
	 * Author: Rodney Rehm
	 * Web: http://medialize.github.io/URI.js/
	 *
	 * Licensed under
	 *   MIT License http://www.opensource.org/licenses/mit-license
	 *
	 */

	(function (root, factory) {
	  'use strict';
	  // https://github.com/umdjs/umd/blob/master/returnExports.js
	  if (true) {
	    // Node
	    module.exports = factory();
	  } else if (typeof define === 'function' && define.amd) {
	    // AMD. Register as an anonymous module.
	    define(factory);
	  } else {
	    // Browser globals (root is window)
	    root.IPv6 = factory(root);
	  }
	}(this, function (root) {
	  'use strict';

	  /*
	  var _in = "fe80:0000:0000:0000:0204:61ff:fe9d:f156";
	  var _out = IPv6.best(_in);
	  var _expected = "fe80::204:61ff:fe9d:f156";

	  console.log(_in, _out, _expected, _out === _expected);
	  */

	  // save current IPv6 variable, if any
	  var _IPv6 = root && root.IPv6;

	  function bestPresentation(address) {
	    // based on:
	    // Javascript to test an IPv6 address for proper format, and to
	    // present the "best text representation" according to IETF Draft RFC at
	    // http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04
	    // 8 Feb 2010 Rich Brown, Dartware, LLC
	    // Please feel free to use this code as long as you provide a link to
	    // http://www.intermapper.com
	    // http://intermapper.com/support/tools/IPV6-Validator.aspx
	    // http://download.dartware.com/thirdparty/ipv6validator.js

	    var _address = address.toLowerCase();
	    var segments = _address.split(':');
	    var length = segments.length;
	    var total = 8;

	    // trim colons (:: or ::a:b:c… or …a:b:c::)
	    if (segments[0] === '' && segments[1] === '' && segments[2] === '') {
	      // must have been ::
	      // remove first two items
	      segments.shift();
	      segments.shift();
	    } else if (segments[0] === '' && segments[1] === '') {
	      // must have been ::xxxx
	      // remove the first item
	      segments.shift();
	    } else if (segments[length - 1] === '' && segments[length - 2] === '') {
	      // must have been xxxx::
	      segments.pop();
	    }

	    length = segments.length;

	    // adjust total segments for IPv4 trailer
	    if (segments[length - 1].indexOf('.') !== -1) {
	      // found a "." which means IPv4
	      total = 7;
	    }

	    // fill empty segments them with "0000"
	    var pos;
	    for (pos = 0; pos < length; pos++) {
	      if (segments[pos] === '') {
	        break;
	      }
	    }

	    if (pos < total) {
	      segments.splice(pos, 1, '0000');
	      while (segments.length < total) {
	        segments.splice(pos, 0, '0000');
	      }
	    }

	    // strip leading zeros
	    var _segments;
	    for (var i = 0; i < total; i++) {
	      _segments = segments[i].split('');
	      for (var j = 0; j < 3 ; j++) {
	        if (_segments[0] === '0' && _segments.length > 1) {
	          _segments.splice(0,1);
	        } else {
	          break;
	        }
	      }

	      segments[i] = _segments.join('');
	    }

	    // find longest sequence of zeroes and coalesce them into one segment
	    var best = -1;
	    var _best = 0;
	    var _current = 0;
	    var current = -1;
	    var inzeroes = false;
	    // i; already declared

	    for (i = 0; i < total; i++) {
	      if (inzeroes) {
	        if (segments[i] === '0') {
	          _current += 1;
	        } else {
	          inzeroes = false;
	          if (_current > _best) {
	            best = current;
	            _best = _current;
	          }
	        }
	      } else {
	        if (segments[i] === '0') {
	          inzeroes = true;
	          current = i;
	          _current = 1;
	        }
	      }
	    }

	    if (_current > _best) {
	      best = current;
	      _best = _current;
	    }

	    if (_best > 1) {
	      segments.splice(best, _best, '');
	    }

	    length = segments.length;

	    // assemble remaining segments
	    var result = '';
	    if (segments[0] === '')  {
	      result = ':';
	    }

	    for (i = 0; i < length; i++) {
	      result += segments[i];
	      if (i === length - 1) {
	        break;
	      }

	      result += ':';
	    }

	    if (segments[length - 1] === '') {
	      result += ':';
	    }

	    return result;
	  }

	  function noConflict() {
	    /*jshint validthis: true */
	    if (root.IPv6 === this) {
	      root.IPv6 = _IPv6;
	    }
	  
	    return this;
	  }

	  return {
	    best: bestPresentation,
	    noConflict: noConflict
	  };
	}));


/***/ },

/***/ 68:
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * URI.js - Mutating URLs
	 * Second Level Domain (SLD) Support
	 *
	 * Version: 1.18.1
	 *
	 * Author: Rodney Rehm
	 * Web: http://medialize.github.io/URI.js/
	 *
	 * Licensed under
	 *   MIT License http://www.opensource.org/licenses/mit-license
	 *
	 */

	(function (root, factory) {
	  'use strict';
	  // https://github.com/umdjs/umd/blob/master/returnExports.js
	  if (true) {
	    // Node
	    module.exports = factory();
	  } else if (typeof define === 'function' && define.amd) {
	    // AMD. Register as an anonymous module.
	    define(factory);
	  } else {
	    // Browser globals (root is window)
	    root.SecondLevelDomains = factory(root);
	  }
	}(this, function (root) {
	  'use strict';

	  // save current SecondLevelDomains variable, if any
	  var _SecondLevelDomains = root && root.SecondLevelDomains;

	  var SLD = {
	    // list of known Second Level Domains
	    // converted list of SLDs from https://github.com/gavingmiller/second-level-domains
	    // ----
	    // publicsuffix.org is more current and actually used by a couple of browsers internally.
	    // downside is it also contains domains like "dyndns.org" - which is fine for the security
	    // issues browser have to deal with (SOP for cookies, etc) - but is way overboard for URI.js
	    // ----
	    list: {
	      'ac':' com gov mil net org ',
	      'ae':' ac co gov mil name net org pro sch ',
	      'af':' com edu gov net org ',
	      'al':' com edu gov mil net org ',
	      'ao':' co ed gv it og pb ',
	      'ar':' com edu gob gov int mil net org tur ',
	      'at':' ac co gv or ',
	      'au':' asn com csiro edu gov id net org ',
	      'ba':' co com edu gov mil net org rs unbi unmo unsa untz unze ',
	      'bb':' biz co com edu gov info net org store tv ',
	      'bh':' biz cc com edu gov info net org ',
	      'bn':' com edu gov net org ',
	      'bo':' com edu gob gov int mil net org tv ',
	      'br':' adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ',
	      'bs':' com edu gov net org ',
	      'bz':' du et om ov rg ',
	      'ca':' ab bc mb nb nf nl ns nt nu on pe qc sk yk ',
	      'ck':' biz co edu gen gov info net org ',
	      'cn':' ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ',
	      'co':' com edu gov mil net nom org ',
	      'cr':' ac c co ed fi go or sa ',
	      'cy':' ac biz com ekloges gov ltd name net org parliament press pro tm ',
	      'do':' art com edu gob gov mil net org sld web ',
	      'dz':' art asso com edu gov net org pol ',
	      'ec':' com edu fin gov info med mil net org pro ',
	      'eg':' com edu eun gov mil name net org sci ',
	      'er':' com edu gov ind mil net org rochest w ',
	      'es':' com edu gob nom org ',
	      'et':' biz com edu gov info name net org ',
	      'fj':' ac biz com info mil name net org pro ',
	      'fk':' ac co gov net nom org ',
	      'fr':' asso com f gouv nom prd presse tm ',
	      'gg':' co net org ',
	      'gh':' com edu gov mil org ',
	      'gn':' ac com gov net org ',
	      'gr':' com edu gov mil net org ',
	      'gt':' com edu gob ind mil net org ',
	      'gu':' com edu gov net org ',
	      'hk':' com edu gov idv net org ',
	      'hu':' 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ',
	      'id':' ac co go mil net or sch web ',
	      'il':' ac co gov idf k12 muni net org ',
	      'in':' ac co edu ernet firm gen gov i ind mil net nic org res ',
	      'iq':' com edu gov i mil net org ',
	      'ir':' ac co dnssec gov i id net org sch ',
	      'it':' edu gov ',
	      'je':' co net org ',
	      'jo':' com edu gov mil name net org sch ',
	      'jp':' ac ad co ed go gr lg ne or ',
	      'ke':' ac co go info me mobi ne or sc ',
	      'kh':' com edu gov mil net org per ',
	      'ki':' biz com de edu gov info mob net org tel ',
	      'km':' asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ',
	      'kn':' edu gov net org ',
	      'kr':' ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ',
	      'kw':' com edu gov net org ',
	      'ky':' com edu gov net org ',
	      'kz':' com edu gov mil net org ',
	      'lb':' com edu gov net org ',
	      'lk':' assn com edu gov grp hotel int ltd net ngo org sch soc web ',
	      'lr':' com edu gov net org ',
	      'lv':' asn com conf edu gov id mil net org ',
	      'ly':' com edu gov id med net org plc sch ',
	      'ma':' ac co gov m net org press ',
	      'mc':' asso tm ',
	      'me':' ac co edu gov its net org priv ',
	      'mg':' com edu gov mil nom org prd tm ',
	      'mk':' com edu gov inf name net org pro ',
	      'ml':' com edu gov net org presse ',
	      'mn':' edu gov org ',
	      'mo':' com edu gov net org ',
	      'mt':' com edu gov net org ',
	      'mv':' aero biz com coop edu gov info int mil museum name net org pro ',
	      'mw':' ac co com coop edu gov int museum net org ',
	      'mx':' com edu gob net org ',
	      'my':' com edu gov mil name net org sch ',
	      'nf':' arts com firm info net other per rec store web ',
	      'ng':' biz com edu gov mil mobi name net org sch ',
	      'ni':' ac co com edu gob mil net nom org ',
	      'np':' com edu gov mil net org ',
	      'nr':' biz com edu gov info net org ',
	      'om':' ac biz co com edu gov med mil museum net org pro sch ',
	      'pe':' com edu gob mil net nom org sld ',
	      'ph':' com edu gov i mil net ngo org ',
	      'pk':' biz com edu fam gob gok gon gop gos gov net org web ',
	      'pl':' art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ',
	      'pr':' ac biz com edu est gov info isla name net org pro prof ',
	      'ps':' com edu gov net org plo sec ',
	      'pw':' belau co ed go ne or ',
	      'ro':' arts com firm info nom nt org rec store tm www ',
	      'rs':' ac co edu gov in org ',
	      'sb':' com edu gov net org ',
	      'sc':' com edu gov net org ',
	      'sh':' co com edu gov net nom org ',
	      'sl':' com edu gov net org ',
	      'st':' co com consulado edu embaixada gov mil net org principe saotome store ',
	      'sv':' com edu gob org red ',
	      'sz':' ac co org ',
	      'tr':' av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ',
	      'tt':' aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ',
	      'tw':' club com ebiz edu game gov idv mil net org ',
	      'mu':' ac co com gov net or org ',
	      'mz':' ac co edu gov org ',
	      'na':' co com ',
	      'nz':' ac co cri geek gen govt health iwi maori mil net org parliament school ',
	      'pa':' abo ac com edu gob ing med net nom org sld ',
	      'pt':' com edu gov int net nome org publ ',
	      'py':' com edu gov mil net org ',
	      'qa':' com edu gov mil net org ',
	      're':' asso com nom ',
	      'ru':' ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ',
	      'rw':' ac co com edu gouv gov int mil net ',
	      'sa':' com edu gov med net org pub sch ',
	      'sd':' com edu gov info med net org tv ',
	      'se':' a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ',
	      'sg':' com edu gov idn net org per ',
	      'sn':' art com edu gouv org perso univ ',
	      'sy':' com edu gov mil net news org ',
	      'th':' ac co go in mi net or ',
	      'tj':' ac biz co com edu go gov info int mil name net nic org test web ',
	      'tn':' agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ',
	      'tz':' ac co go ne or ',
	      'ua':' biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ',
	      'ug':' ac co go ne or org sc ',
	      'uk':' ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ',
	      'us':' dni fed isa kids nsn ',
	      'uy':' com edu gub mil net org ',
	      've':' co com edu gob info mil net org web ',
	      'vi':' co com k12 net org ',
	      'vn':' ac biz com edu gov health info int name net org pro ',
	      'ye':' co com gov ltd me net org plc ',
	      'yu':' ac co edu gov org ',
	      'za':' ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ',
	      'zm':' ac co com edu gov net org sch '
	    },
	    // gorhill 2013-10-25: Using indexOf() instead Regexp(). Significant boost
	    // in both performance and memory footprint. No initialization required.
	    // http://jsperf.com/uri-js-sld-regex-vs-binary-search/4
	    // Following methods use lastIndexOf() rather than array.split() in order
	    // to avoid any memory allocations.
	    has: function(domain) {
	      var tldOffset = domain.lastIndexOf('.');
	      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
	        return false;
	      }
	      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
	      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {
	        return false;
	      }
	      var sldList = SLD.list[domain.slice(tldOffset+1)];
	      if (!sldList) {
	        return false;
	      }
	      return sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') >= 0;
	    },
	    is: function(domain) {
	      var tldOffset = domain.lastIndexOf('.');
	      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
	        return false;
	      }
	      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
	      if (sldOffset >= 0) {
	        return false;
	      }
	      var sldList = SLD.list[domain.slice(tldOffset+1)];
	      if (!sldList) {
	        return false;
	      }
	      return sldList.indexOf(' ' + domain.slice(0, tldOffset) + ' ') >= 0;
	    },
	    get: function(domain) {
	      var tldOffset = domain.lastIndexOf('.');
	      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
	        return null;
	      }
	      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
	      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {
	        return null;
	      }
	      var sldList = SLD.list[domain.slice(tldOffset+1)];
	      if (!sldList) {
	        return null;
	      }
	      if (sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') < 0) {
	        return null;
	      }
	      return domain.slice(sldOffset+1);
	    },
	    noConflict: function(){
	      if (root.SecondLevelDomains === this) {
	        root.SecondLevelDomains = _SecondLevelDomains;
	      }
	      return this;
	    }
	  };

	  return SLD;
	}));


/***/ },

/***/ 70:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(71).default;
	module.exports.utils = __webpack_require__(73);
	module.exports.Responsive = __webpack_require__(80).default;
	module.exports.Responsive.utils = __webpack_require__(81);
	module.exports.WidthProvider = __webpack_require__(82).default;


/***/ },

/***/ 71:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _lodash = __webpack_require__(72);

	var _lodash2 = _interopRequireDefault(_lodash);

	var _utils = __webpack_require__(73);

	var _GridItem = __webpack_require__(74);

	var _GridItem2 = _interopRequireDefault(_GridItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var noop = function noop() {};

	// Types
	/*:: import type {ResizeEvent, DragEvent, Layout, LayoutItem} from './utils';*/

	// End Types

	/**
	 * A reactive, fluid grid layout with draggable, resizable components.
	 */

	/*:: type State = {
	  activeDrag: ?LayoutItem,
	  layout: Layout,
	  mounted: boolean,
	  oldDragItem: ?LayoutItem,
	  oldResizeItem: ?LayoutItem
	};*/

	var ReactGridLayout = function (_React$Component) {
	  _inherits(ReactGridLayout, _React$Component);

	  // TODO publish internal ReactClass displayName transform

	  function ReactGridLayout(props /*: typeof ReactGridLayout.prototype.props*/, context /*: any*/) /*: void*/ {
	    _classCallCheck(this, ReactGridLayout);

	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

	    _initialiseProps.call(_this);

	    (0, _utils.autoBindHandlers)(_this, ['onDragStart', 'onDrag', 'onDragStop', 'onResizeStart', 'onResize', 'onResizeStop']);
	    return _this;
	  }

	  ReactGridLayout.prototype.componentDidMount = function componentDidMount() {
	    this.setState({ mounted: true });
	    // Call back with layout on mount. This should be done after correcting the layout width
	    // to ensure we don't rerender with the wrong width.
	    this.props.onLayoutChange(this.state.layout);
	  };

	  ReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps /*: typeof ReactGridLayout.prototype.props*/) {
	    var newLayoutBase = void 0;
	    // Allow parent to set layout directly.
	    if (!(0, _lodash2.default)(nextProps.layout, this.props.layout)) {
	      newLayoutBase = nextProps.layout;
	    }

	    // If children change, also regenerate the layout. Use our state
	    // as the base in case because it may be more up to date than
	    // what is in props.
	    else if (nextProps.children.length !== this.props.children.length) {
	        newLayoutBase = this.state.layout;
	      }

	    // We need to regenerate the layout.
	    if (newLayoutBase) {
	      var newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, nextProps.verticalCompact);
	      this.setState({ layout: newLayout });
	      this.props.onLayoutChange(newLayout);
	    }
	  };

	  /**
	   * Calculates a pixel value for the container.
	   * @return {String} Container height in pixels.
	   */


	  ReactGridLayout.prototype.containerHeight = function containerHeight() {
	    if (!this.props.autoSize) return;
	    return (0, _utils.bottom)(this.state.layout) * (this.props.rowHeight + this.props.margin[1]) + this.props.margin[1] + 'px';
	  };

	  /**
	   * When dragging starts
	   * @param {String} i Id of the child
	   * @param {Number} x X position of the move
	   * @param {Number} y Y position of the move
	   * @param {Event} e The mousedown event
	   * @param {Element} node The current dragging DOM element
	   */


	  ReactGridLayout.prototype.onDragStart = function onDragStart(i /*:string*/, x /*:number*/, y /*:number*/, _ref) {
	    var e = _ref.e;
	    var node = _ref.node;
	    var layout = this.state.layout;

	    var l = (0, _utils.getLayoutItem)(layout, i);
	    if (!l) return;

	    this.setState({ oldDragItem: (0, _utils.cloneLayoutItem)(l) });

	    this.props.onDragStart(layout, l, l, null, e, node);
	  };

	  /**
	   * Each drag movement create a new dragelement and move the element to the dragged location
	   * @param {String} i Id of the child
	   * @param {Number} x X position of the move
	   * @param {Number} y Y position of the move
	   * @param {Event} e The mousedown event
	   * @param {Element} node The current dragging DOM element
	   */


	  ReactGridLayout.prototype.onDrag = function onDrag(i /*:string*/, x /*:number*/, y /*:number*/, _ref2) {
	    var e = _ref2.e;
	    var node = _ref2.node;
	    var oldDragItem = this.state.oldDragItem;
	    var layout = this.state.layout;

	    var l = (0, _utils.getLayoutItem)(layout, i);
	    if (!l) return;

	    // Create placeholder (display only)
	    var placeholder = {
	      w: l.w, h: l.h, x: l.x, y: l.y, placeholder: true, i: i
	    };

	    // Move the element to the dragged location.
	    layout = (0, _utils.moveElement)(layout, l, x, y, true /* isUserAction */);

	    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);

	    this.setState({
	      layout: (0, _utils.compact)(layout, this.props.verticalCompact),
	      activeDrag: placeholder
	    });
	  };

	  /**
	   * When dragging stops, figure out which position the element is closest to and update its x and y.
	   * @param  {String} i Index of the child.
	   * @param {Number} x X position of the move
	   * @param {Number} y Y position of the move
	   * @param {Event} e The mousedown event
	   * @param {Element} node The current dragging DOM element
	   */


	  ReactGridLayout.prototype.onDragStop = function onDragStop(i /*:string*/, x /*:number*/, y /*:number*/, _ref3) {
	    var e = _ref3.e;
	    var node = _ref3.node;
	    var oldDragItem = this.state.oldDragItem;
	    var layout = this.state.layout;

	    var l = (0, _utils.getLayoutItem)(layout, i);
	    if (!l) return;

	    // Move the element here
	    layout = (0, _utils.moveElement)(layout, l, x, y, true /* isUserAction */);

	    this.props.onDragStop(layout, oldDragItem, l, null, e, node);

	    // Set state
	    this.setState({
	      activeDrag: null,
	      layout: (0, _utils.compact)(layout, this.props.verticalCompact),
	      oldDragItem: null
	    });

	    this.props.onLayoutChange(this.state.layout);
	  };

	  ReactGridLayout.prototype.onResizeStart = function onResizeStart(i /*:string*/, w /*:number*/, h /*:number*/, _ref4) {
	    var e = _ref4.e;
	    var node = _ref4.node;
	    var layout = this.state.layout;

	    var l = (0, _utils.getLayoutItem)(layout, i);
	    if (!l) return;

	    this.setState({ oldResizeItem: (0, _utils.cloneLayoutItem)(l) });

	    this.props.onResizeStart(layout, l, l, null, e, node);
	  };

	  ReactGridLayout.prototype.onResize = function onResize(i /*:string*/, w /*:number*/, h /*:number*/, _ref5) {
	    var e = _ref5.e;
	    var node = _ref5.node;
	    var _state = this.state;
	    var layout = _state.layout;
	    var oldResizeItem = _state.oldResizeItem;

	    var l = (0, _utils.getLayoutItem)(layout, i);
	    if (!l) return;

	    // Set new width and height.
	    l.w = w;
	    l.h = h;

	    // Create placeholder element (display only)
	    var placeholder = {
	      w: w, h: h, x: l.x, y: l.y, static: true, i: i
	    };

	    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);

	    // Re-compact the layout and set the drag placeholder.
	    this.setState({ layout: (0, _utils.compact)(layout, this.props.verticalCompact), activeDrag: placeholder });
	  };

	  ReactGridLayout.prototype.onResizeStop = function onResizeStop(i /*:string*/, w /*:number*/, h /*:number*/, _ref6) {
	    var e = _ref6.e;
	    var node = _ref6.node;
	    var _state2 = this.state;
	    var layout = _state2.layout;
	    var oldResizeItem = _state2.oldResizeItem;

	    var l = (0, _utils.getLayoutItem)(layout, i);

	    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);

	    // Set state
	    this.setState({
	      activeDrag: null,
	      layout: (0, _utils.compact)(layout, this.props.verticalCompact),
	      oldResizeItem: null
	    });

	    this.props.onLayoutChange(this.state.layout);
	  };

	  /**
	   * Create a placeholder object.
	   * @return {Element} Placeholder div.
	   */


	  ReactGridLayout.prototype.placeholder = function placeholder() {
	    var activeDrag = this.state.activeDrag;

	    if (!activeDrag) return null;
	    var _props = this.props;
	    var width = _props.width;
	    var cols = _props.cols;
	    var margin = _props.margin;
	    var rowHeight = _props.rowHeight;
	    var maxRows = _props.maxRows;
	    var useCSSTransforms = _props.useCSSTransforms;

	    // {...this.state.activeDrag} is pretty slow, actually

	    return _react2.default.createElement(
	      _GridItem2.default,
	      {
	        w: activeDrag.w,
	        h: activeDrag.h,
	        x: activeDrag.x,
	        y: activeDrag.y,
	        i: activeDrag.i,
	        className: 'react-grid-placeholder',
	        containerWidth: width,
	        cols: cols,
	        margin: margin,
	        maxRows: maxRows,
	        rowHeight: rowHeight,
	        isDraggable: false,
	        isResizable: false,
	        useCSSTransforms: useCSSTransforms },
	      _react2.default.createElement('div', null)
	    );
	  };

	  /**
	   * Given a grid item, set its style attributes & surround in a <Draggable>.
	   * @param  {Element} child React element.
	   * @return {Element}       Element wrapped in draggable and properly placed.
	   */


	  ReactGridLayout.prototype.processGridItem = function processGridItem(child /*: React.Element*/) {
	    if (!child.key) return;
	    var l = (0, _utils.getLayoutItem)(this.state.layout, child.key);
	    if (!l) return null;
	    var _props2 = this.props;
	    var width = _props2.width;
	    var cols = _props2.cols;
	    var margin = _props2.margin;
	    var rowHeight = _props2.rowHeight;
	    var maxRows = _props2.maxRows;
	    var isDraggable = _props2.isDraggable;
	    var isResizable = _props2.isResizable;
	    var useCSSTransforms = _props2.useCSSTransforms;
	    var draggableCancel = _props2.draggableCancel;
	    var draggableHandle = _props2.draggableHandle;
	    var mounted = this.state.mounted;

	    // Parse 'static'. Any properties defined directly on the grid item will take precedence.

	    var draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));
	    var resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));

	    return _react2.default.createElement(
	      _GridItem2.default,
	      {
	        containerWidth: width,
	        cols: cols,
	        margin: margin,
	        maxRows: maxRows,
	        rowHeight: rowHeight,
	        cancel: draggableCancel,
	        handle: draggableHandle,
	        onDragStop: this.onDragStop,
	        onDragStart: this.onDragStart,
	        onDrag: this.onDrag,
	        onResizeStart: this.onResizeStart,
	        onResize: this.onResize,
	        onResizeStop: this.onResizeStop,
	        isDraggable: draggable,
	        isResizable: resizable,
	        useCSSTransforms: useCSSTransforms && mounted,
	        usePercentages: !mounted,

	        w: l.w,
	        h: l.h,
	        x: l.x,
	        y: l.y,
	        i: l.i,
	        minH: l.minH,
	        minW: l.minW,
	        maxH: l.maxH,
	        maxW: l.maxW,
	        'static': l.static
	      },
	      child
	    );
	  };

	  ReactGridLayout.prototype.render = function render() {
	    var _this2 = this;

	    var _props3 = this.props;
	    var className = _props3.className;
	    var style = _props3.style;


	    var mergedClassName = 'react-grid-layout ' + className;
	    var mergedStyle = _extends({
	      height: this.containerHeight()
	    }, style);

	    return _react2.default.createElement(
	      'div',
	      { className: mergedClassName, style: mergedStyle },
	      _react2.default.Children.map(this.props.children, function (child) {
	        return _this2.processGridItem(child);
	      }),
	      this.placeholder()
	    );
	  };

	  return ReactGridLayout;
	}(_react2.default.Component);

	ReactGridLayout.displayName = "ReactGridLayout";
	ReactGridLayout.propTypes = {
	  //
	  // Basic props
	  //
	  className: _react.PropTypes.string,
	  style: _react.PropTypes.object,

	  // This can be set explicitly. If it is not set, it will automatically
	  // be set to the container width. Note that resizes will *not* cause this to adjust.
	  // If you need that behavior, use WidthProvider.
	  width: _react.PropTypes.number,

	  // If true, the container height swells and contracts to fit contents
	  autoSize: _react.PropTypes.bool,
	  // # of cols.
	  cols: _react.PropTypes.number,

	  // A selector that will not be draggable.
	  draggableCancel: _react.PropTypes.string,
	  // A selector for the draggable handler
	  draggableHandle: _react.PropTypes.string,

	  // If true, the layout will compact vertically
	  verticalCompact: _react.PropTypes.bool,

	  // layout is an array of object with the format:
	  // {x: Number, y: Number, w: Number, h: Number, i: String}
	  layout: function layout(props) {
	    var layout = props.layout;
	    // I hope you're setting the _grid property on the grid items
	    if (layout === undefined) return;
	    (0, _utils.validateLayout)(layout, 'layout');
	  },

	  //
	  // Grid Dimensions
	  //

	  // Margin between items [x, y] in px
	  margin: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  // Rows have a static height, but you can change this based on breakpoints if you like
	  rowHeight: _react.PropTypes.number,
	  // Default Infinity, but you can specify a max here if you like.
	  // Note that this isn't fully fleshed out and won't error if you specify a layout that
	  // extends beyond the row capacity. It will, however, not allow users to drag/resize
	  // an item past the barrier. They can push items beyond the barrier, though.
	  // Intentionally not documented for this reason.
	  maxRows: _react.PropTypes.number,

	  //
	  // Flags
	  //
	  isDraggable: _react.PropTypes.bool,
	  isResizable: _react.PropTypes.bool,
	  // Use CSS transforms instead of top/left
	  useCSSTransforms: _react.PropTypes.bool,

	  //
	  // Callbacks
	  //

	  // Callback so you can save the layout. Calls after each drag & resize stops.
	  onLayoutChange: _react.PropTypes.func,

	  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e).
	  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.
	  onDragStart: _react.PropTypes.func,
	  // Calls on each drag movement.
	  onDrag: _react.PropTypes.func,
	  // Calls when drag is complete.
	  onDragStop: _react.PropTypes.func,
	  //Calls when resize starts.
	  onResizeStart: _react.PropTypes.func,
	  // Calls when resize movement happens.
	  onResize: _react.PropTypes.func,
	  // Calls when resize is complete.
	  onResizeStop: _react.PropTypes.func,

	  //
	  // Other validations
	  //

	  // Children must not have duplicate keys.
	  children: function children(props, propName, _componentName) {
	    _react.PropTypes.node.apply(this, arguments);
	    var children = props[propName];

	    // Check children keys for duplicates. Throw if found.
	    var keys = {};
	    _react2.default.Children.forEach(children, function (child) {
	      if (keys[child.key]) {
	        throw new Error("Duplicate child key found! This will cause problems in ReactGridLayout.");
	      }
	      keys[child.key] = true;
	    });
	  }
	};
	ReactGridLayout.defaultProps = {
	  autoSize: true,
	  cols: 12,
	  className: '',
	  rowHeight: 150,
	  maxRows: Infinity, // infinite vertical growth
	  layout: [],
	  margin: [10, 10],
	  isDraggable: true,
	  isResizable: true,
	  useCSSTransforms: true,
	  verticalCompact: true,
	  onLayoutChange: noop,
	  onDragStart: noop,
	  onDrag: noop,
	  onDragStop: noop,
	  onResizeStart: noop,
	  onResize: noop,
	  onResizeStop: noop
	};

	var _initialiseProps = function _initialiseProps() {
	  this.state = {
	    activeDrag: null,
	    layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols, this.props.verticalCompact),
	    mounted: false,
	    oldDragItem: null,
	    oldResizeItem: null
	  };
	};

	exports.default = ReactGridLayout;

/***/ },

/***/ 72:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	/**
	 * Creates a function that invokes `func` with its first argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	/** Used for built-in method references. */
	var arrayProto = Array.prototype,
	    objectProto = Object.prototype;

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/** Built-in value references. */
	var Symbol = root.Symbol,
	    Uint8Array = root.Uint8Array,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable,
	    splice = arrayProto.splice;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf,
	    nativeKeys = Object.keys;

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView'),
	    Map = getNative(root, 'Map'),
	    Promise = getNative(root, 'Promise'),
	    Set = getNative(root, 'Set'),
	    WeakMap = getNative(root, 'WeakMap'),
	    nativeCreate = getNative(Object, 'create');

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}

	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;

	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;

	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}

	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	var baseKeys = overArg(nativeKeys, Object);

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);
	  stack.set(other, array);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;

	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	      stack['delete'](object);
	      return result;

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}

	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	var getPrototype = overArg(nativeGetPrototype, Object);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are **not** supported.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent,
	 *  else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;

	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = isEqual;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(22)(module)))

/***/ },

/***/ 73:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.bottom = bottom;
	exports.cloneLayout = cloneLayout;
	exports.cloneLayoutItem = cloneLayoutItem;
	exports.collides = collides;
	exports.compact = compact;
	exports.compactItem = compactItem;
	exports.correctBounds = correctBounds;
	exports.getLayoutItem = getLayoutItem;
	exports.getFirstCollision = getFirstCollision;
	exports.getAllCollisions = getAllCollisions;
	exports.getStatics = getStatics;
	exports.moveElement = moveElement;
	exports.moveElementAwayFromCollision = moveElementAwayFromCollision;
	exports.perc = perc;
	exports.setTransform = setTransform;
	exports.setTopLeft = setTopLeft;
	exports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;
	exports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;
	exports.validateLayout = validateLayout;
	exports.autoBindHandlers = autoBindHandlers;
	/*:: export type LayoutItemRequired = {w: number, h: number, x: number, y: number, i: string};*/
	/*:: export type LayoutItem = LayoutItemRequired &
	                         {minW?: number, minH?: number, maxW?: number, maxH?: number,
	                          moved?: boolean, static?: boolean,
	                          isDraggable?: ?boolean, isResizable?: ?boolean};*/
	/*:: export type Layout = Array<LayoutItem>;*/
	/*:: export type Position = {left: number, top: number, width: number, height: number};*/
	/*:: export type DragCallbackData = {
	  node: HTMLElement,
	  x: number, y: number,
	  deltaX: number, deltaY: number,
	  lastX: number, lastY: number
	};*/
	/*:: export type DragEvent = {e: Event} & DragCallbackData;*/
	/*:: export type Size = {width: number, height: number};*/
	/*:: export type ResizeEvent = {e: Event, node: HTMLElement, size: Size};*/
	/*:: import type React from 'react';*/


	var isProduction = process.env.NODE_ENV === 'production';

	/**
	 * Return the bottom coordinate of the layout.
	 *
	 * @param  {Array} layout Layout array.
	 * @return {Number}       Bottom coordinate.
	 */
	function bottom(layout /*: Layout*/) /*: number*/ {
	  var max = 0,
	      bottomY = void 0;
	  for (var _i = 0, len = layout.length; _i < len; _i++) {
	    bottomY = layout[_i].y + layout[_i].h;
	    if (bottomY > max) max = bottomY;
	  }
	  return max;
	}

	function cloneLayout(layout /*: Layout*/) /*: Layout*/ {
	  var newLayout = Array(layout.length);
	  for (var _i2 = 0, len = layout.length; _i2 < len; _i2++) {
	    newLayout[_i2] = cloneLayoutItem(layout[_i2]);
	  }
	  return newLayout;
	}

	// Fast path to cloning, since this is monomorphic
	function cloneLayoutItem(layoutItem /*: LayoutItem*/) /*: LayoutItem*/ {
	  return {
	    w: layoutItem.w, h: layoutItem.h, x: layoutItem.x, y: layoutItem.y, i: layoutItem.i,
	    minW: layoutItem.minW, maxW: layoutItem.maxW, minH: layoutItem.minH, maxH: layoutItem.maxH,
	    moved: Boolean(layoutItem.moved), static: Boolean(layoutItem.static),
	    // These can be null
	    isDraggable: layoutItem.isDraggable, isResizable: layoutItem.isResizable
	  };
	}

	/**
	 * Given two layoutitems, check if they collide.
	 *
	 * @return {Boolean}   True if colliding.
	 */
	function collides(l1 /*: LayoutItem*/, l2 /*: LayoutItem*/) /*: boolean*/ {
	  if (l1 === l2) return false; // same element
	  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2
	  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2
	  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2
	  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2
	  return true; // boxes overlap
	}

	/**
	 * Given a layout, compact it. This involves going down each y coordinate and removing gaps
	 * between items.
	 *
	 * @param  {Array} layout Layout.
	 * @param  {Boolean} verticalCompact Whether or not to compact the layout
	 *   vertically.
	 * @return {Array}       Compacted Layout.
	 */
	function compact(layout /*: Layout*/, verticalCompact /*: boolean*/) /*: Layout*/ {
	  // Statics go in the compareWith array right away so items flow around them.
	  var compareWith = getStatics(layout);
	  // We go through the items by row and column.
	  var sorted = sortLayoutItemsByRowCol(layout);
	  // Holding for new items.
	  var out = Array(layout.length);

	  for (var _i3 = 0, len = sorted.length; _i3 < len; _i3++) {
	    var l = sorted[_i3];

	    // Don't move static elements
	    if (!l.static) {
	      l = compactItem(compareWith, l, verticalCompact);

	      // Add to comparison array. We only collide with items before this one.
	      // Statics are already in this array.
	      compareWith.push(l);
	    }

	    // Add to output array to make sure they still come out in the right order.
	    out[layout.indexOf(l)] = l;

	    // Clear moved flag, if it exists.
	    l.moved = false;
	  }

	  return out;
	}

	/**
	 * Compact an item in the layout.
	 */
	function compactItem(compareWith /*: Layout*/, l /*: LayoutItem*/, verticalCompact /*: boolean*/) /*: LayoutItem*/ {
	  if (verticalCompact) {
	    // Move the element up as far as it can go without colliding.
	    while (l.y > 0 && !getFirstCollision(compareWith, l)) {
	      l.y--;
	    }
	  }

	  // Move it down, and keep moving it down if it's colliding.
	  var collides = void 0;
	  while (collides = getFirstCollision(compareWith, l)) {
	    l.y = collides.y + collides.h;
	  }
	  return l;
	}

	/**
	 * Given a layout, make sure all elements fit within its bounds.
	 *
	 * @param  {Array} layout Layout array.
	 * @param  {Number} bounds Number of columns.
	 */
	function correctBounds(layout /*: Layout*/, bounds /*: {cols: number}*/) /*: Layout*/ {
	  var collidesWith = getStatics(layout);
	  for (var _i4 = 0, len = layout.length; _i4 < len; _i4++) {
	    var l = layout[_i4];
	    // Overflows right
	    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;
	    // Overflows left
	    if (l.x < 0) {
	      l.x = 0;
	      l.w = bounds.cols;
	    }
	    if (!l.static) collidesWith.push(l);else {
	      // If this is static and collides with other statics, we must move it down.
	      // We have to do something nicer than just letting them overlap.
	      while (getFirstCollision(collidesWith, l)) {
	        l.y++;
	      }
	    }
	  }
	  return layout;
	}

	/**
	 * Get a layout item by ID. Used so we can override later on if necessary.
	 *
	 * @param  {Array}  layout Layout array.
	 * @param  {String} id     ID
	 * @return {LayoutItem}    Item at ID.
	 */
	function getLayoutItem(layout /*: Layout*/, id /*: string*/) /*: ?LayoutItem*/ {
	  for (var _i5 = 0, len = layout.length; _i5 < len; _i5++) {
	    if (layout[_i5].i === id) return layout[_i5];
	  }
	}

	/**
	 * Returns the first item this layout collides with.
	 * It doesn't appear to matter which order we approach this from, although
	 * perhaps that is the wrong thing to do.
	 *
	 * @param  {Object} layoutItem Layout item.
	 * @return {Object|undefined}  A colliding layout item, or undefined.
	 */
	function getFirstCollision(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: ?LayoutItem*/ {
	  for (var _i6 = 0, len = layout.length; _i6 < len; _i6++) {
	    if (collides(layout[_i6], layoutItem)) return layout[_i6];
	  }
	}

	function getAllCollisions(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: Array<LayoutItem>*/ {
	  return layout.filter(function (l) {
	    return collides(l, layoutItem);
	  });
	}

	/**
	 * Get all static elements.
	 * @param  {Array} layout Array of layout objects.
	 * @return {Array}        Array of static layout items..
	 */
	function getStatics(layout /*: Layout*/) /*: Array<LayoutItem>*/ {
	  return layout.filter(function (l) {
	    return l.static;
	  });
	}

	/**
	 * Move an element. Responsible for doing cascading movements of other elements.
	 *
	 * @param  {Array}      layout Full layout to modify.
	 * @param  {LayoutItem} l      element to move.
	 * @param  {Number}     [x]    X position in grid units.
	 * @param  {Number}     [y]    Y position in grid units.
	 * @param  {Boolean}    [isUserAction] If true, designates that the item we're moving is
	 *                                     being dragged/resized by th euser.
	 */
	function moveElement(layout /*: Layout*/, l /*: LayoutItem*/, x /*: ?number*/, y /*: ?number*/, isUserAction /*: ?boolean*/) /*: Layout*/ {
	  if (l.static) return layout;

	  // Short-circuit if nothing to do.
	  if (l.y === y && l.x === x) return layout;

	  var movingUp = y && l.y > y;
	  // This is quite a bit faster than extending the object
	  if (typeof x === 'number') l.x = x;
	  if (typeof y === 'number') l.y = y;
	  l.moved = true;

	  // If this collides with anything, move it.
	  // When doing this comparison, we have to sort the items we compare with
	  // to ensure, in the case of multiple collisions, that we're getting the
	  // nearest collision.
	  var sorted = sortLayoutItemsByRowCol(layout);
	  if (movingUp) sorted = sorted.reverse();
	  var collisions = getAllCollisions(sorted, l);

	  // Move each item that collides away from this element.
	  for (var _i7 = 0, len = collisions.length; _i7 < len; _i7++) {
	    var collision = collisions[_i7];
	    // console.log('resolving collision between', l.i, 'at', l.y, 'and', collision.i, 'at', collision.y);

	    // Short circuit so we can't infinite loop
	    if (collision.moved) continue;

	    // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.
	    if (l.y > collision.y && l.y - collision.y > collision.h / 4) continue;

	    // Don't move static items - we have to move *this* element away
	    if (collision.static) {
	      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction);
	    } else {
	      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction);
	    }
	  }

	  return layout;
	}

	/**
	 * This is where the magic needs to happen - given a collision, move an element away from the collision.
	 * We attempt to move it up if there's room, otherwise it goes below.
	 *
	 * @param  {Array} layout            Full layout to modify.
	 * @param  {LayoutItem} collidesWith Layout item we're colliding with.
	 * @param  {LayoutItem} itemToMove   Layout item we're moving.
	 * @param  {Boolean} [isUserAction]  If true, designates that the item we're moving is being dragged/resized
	 *                                   by the user.
	 */
	function moveElementAwayFromCollision(layout /*: Layout*/, collidesWith /*: LayoutItem*/, itemToMove /*: LayoutItem*/, isUserAction /*: ?boolean*/) /*: Layout*/ {

	  // If there is enough space above the collision to put this element, move it there.
	  // We only do this on the main collision as this can get funky in cascades and cause
	  // unwanted swapping behavior.
	  if (isUserAction) {
	    // Make a mock item so we don't modify the item here, only modify in moveElement.
	    var fakeItem /*: LayoutItem*/ = {
	      x: itemToMove.x,
	      y: itemToMove.y,
	      w: itemToMove.w,
	      h: itemToMove.h,
	      i: '-1'
	    };
	    fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0);
	    if (!getFirstCollision(layout, fakeItem)) {
	      return moveElement(layout, itemToMove, undefined, fakeItem.y);
	    }
	  }

	  // Previously this was optimized to move below the collision directly, but this can cause problems
	  // with cascading moves, as an item may actually leapflog a collision and cause a reversal in order.
	  return moveElement(layout, itemToMove, undefined, itemToMove.y + 1);
	}

	/**
	 * Helper to convert a number to a percentage string.
	 *
	 * @param  {Number} num Any number
	 * @return {String}     That number as a percentage.
	 */
	function perc(num /*: number*/) /*: string*/ {
	  return num * 100 + '%';
	}

	function setTransform(_ref) /*: Object*/ {
	  var top = _ref.top;
	  var left = _ref.left;
	  var width = _ref.width;
	  var height = _ref.height;

	  // Replace unitless items with px
	  var translate = 'translate(' + left + 'px,' + top + 'px)';
	  return {
	    transform: translate,
	    WebkitTransform: translate,
	    MozTransform: translate,
	    msTransform: translate,
	    OTransform: translate,
	    width: width + 'px',
	    height: height + 'px',
	    position: 'absolute'
	  };
	}

	function setTopLeft(_ref2) /*: Object*/ {
	  var top = _ref2.top;
	  var left = _ref2.left;
	  var width = _ref2.width;
	  var height = _ref2.height;

	  return {
	    top: top + 'px',
	    left: left + 'px',
	    width: width + 'px',
	    height: height + 'px',
	    position: 'absolute'
	  };
	}

	/**
	 * Get layout items sorted from top left to right and down.
	 *
	 * @return {Array} Array of layout objects.
	 * @return {Array}        Layout, sorted static items first.
	 */
	function sortLayoutItemsByRowCol(layout /*: Layout*/) /*: Layout*/ {
	  return [].concat(layout).sort(function (a, b) {
	    if (a.y > b.y || a.y === b.y && a.x > b.x) {
	      return 1;
	    }
	    return -1;
	  });
	}

	/**
	 * Generate a layout using the initialLayout and children as a template.
	 * Missing entries will be added, extraneous ones will be truncated.
	 *
	 * @param  {Array}  initialLayout Layout passed in through props.
	 * @param  {String} breakpoint    Current responsive breakpoint.
	 * @param  {Boolean} verticalCompact Whether or not to compact the layout vertically.
	 * @return {Array}                Working layout.
	 */
	function synchronizeLayoutWithChildren(initialLayout /*: Layout*/, children /*: Array<React.Element>|React.Element*/, cols /*: number*/, verticalCompact /*: boolean*/) /*: Layout*/ {
	  // ensure 'children' is always an array
	  if (!Array.isArray(children)) {
	    children = [children];
	  }
	  initialLayout = initialLayout || [];

	  // Generate one layout item per child.
	  var layout /*: Layout*/ = [];
	  for (var _i8 = 0, len = children.length; _i8 < len; _i8++) {
	    var newItem = void 0;
	    var child = children[_i8];

	    // Don't overwrite if it already exists.
	    var exists = getLayoutItem(initialLayout, child.key || "1" /* FIXME satisfies Flow */);
	    if (exists) {
	      newItem = exists;
	    } else {
	      var g = child.props._grid;

	      // Hey, this item has a _grid property, use it.
	      if (g) {
	        if (!isProduction) {
	          validateLayout([g], 'ReactGridLayout.children');
	        }
	        // Validated; add it to the layout. Bottom 'y' possible is the bottom of the layout.
	        // This allows you to do nice stuff like specify {y: Infinity}
	        if (verticalCompact) {
	          newItem = cloneLayoutItem(_extends({}, g, { y: Math.min(bottom(layout), g.y), i: child.key }));
	        } else {
	          newItem = cloneLayoutItem(_extends({}, g, { y: g.y, i: child.key }));
	        }
	      }
	      // Nothing provided: ensure this is added to the bottom
	      else {
	          newItem = cloneLayoutItem({ w: 1, h: 1, x: 0, y: bottom(layout), i: child.key || "1" });
	        }
	    }
	    layout[_i8] = newItem;
	  }

	  // Correct the layout.
	  layout = correctBounds(layout, { cols: cols });
	  layout = compact(layout, verticalCompact);

	  return layout;
	}

	/**
	 * Validate a layout. Throws errors.
	 *
	 * @param  {Array}  layout        Array of layout items.
	 * @param  {String} [contextName] Context name for errors.
	 * @throw  {Error}                Validation error.
	 */
	function validateLayout(layout /*: Layout*/, contextName /*: string*/) /*: void*/ {
	  contextName = contextName || "Layout";
	  var subProps = ['x', 'y', 'w', 'h'];
	  if (!Array.isArray(layout)) throw new Error(contextName + " must be an array!");
	  for (var _i9 = 0, len = layout.length; _i9 < len; _i9++) {
	    var item = layout[_i9];
	    for (var j = 0; j < subProps.length; j++) {
	      if (typeof item[subProps[j]] !== 'number') {
	        throw new Error('ReactGridLayout: ' + contextName + '[' + _i9 + '].' + subProps[j] + ' must be a number!');
	      }
	    }
	    if (item.i && typeof item.i !== 'string') {
	      throw new Error('ReactGridLayout: ' + contextName + '[' + _i9 + '].i must be a string!');
	    }
	    if (item.static !== undefined && typeof item.static !== 'boolean') {
	      throw new Error('ReactGridLayout: ' + contextName + '[' + _i9 + '].static must be a boolean!');
	    }
	  }
	}

	// Flow can't really figure this out, so we just use Object
	function autoBindHandlers(el /*: Object*/, fns /*: Array<string>*/) /*: void*/ {
	  fns.forEach(function (key) {
	    return el[key] = el[key].bind(el);
	  });
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))

/***/ },

/***/ 74:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _reactDraggable = __webpack_require__(75);

	var _reactResizable = __webpack_require__(76);

	var _utils = __webpack_require__(73);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/*:: import type {DragCallbackData, Position} from './utils';*/


	/**
	 * An individual item within a ReactGridLayout.
	 */
	/*:: type State = {
	  resizing: ?{width: number, height: number},
	  dragging: ?{top: number, left: number},
	  className: string
	};*/

	var GridItem = function (_React$Component) {
	  _inherits(GridItem, _React$Component);

	  function GridItem() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, GridItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      resizing: null,
	      dragging: null,
	      className: ''
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  // Helper for generating column width

	  GridItem.prototype.calcColWidth = function calcColWidth() {
	    var _props = this.props;
	    var margin = _props.margin;
	    var containerWidth = _props.containerWidth;
	    var cols = _props.cols;

	    return (containerWidth - margin[0] * (cols + 1)) / cols;
	  };

	  /**
	   * Return position on the page given an x, y, w, h.
	   * left, top, width, height are all in pixels.
	   * @param  {Number}  x             X coordinate in grid units.
	   * @param  {Number}  y             Y coordinate in grid units.
	   * @param  {Number}  w             W coordinate in grid units.
	   * @param  {Number}  h             H coordinate in grid units.
	   * @return {Object}                Object containing coords.
	   */


	  GridItem.prototype.calcPosition = function calcPosition(x /*: number*/, y /*: number*/, w /*: number*/, h /*: number*/, state /*: ?Object*/) {
	    var _props2 = this.props;
	    var margin = _props2.margin;
	    var rowHeight = _props2.rowHeight;

	    var colWidth = this.calcColWidth();

	    var out = {
	      left: Math.round(colWidth * x + (x + 1) * margin[0]),
	      top: Math.round(rowHeight * y + (y + 1) * margin[1]),
	      // 0 * Infinity === NaN, which causes problems with resize constriants;
	      // Fix this if it occurs.
	      // Note we do it here rather than later because Math.round(Infinity) causes deopt
	      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),
	      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])
	    };

	    if (state && state.resizing) {
	      out.width = Math.round(state.resizing.width);
	      out.height = Math.round(state.resizing.height);
	    }

	    if (state && state.dragging) {
	      out.top = Math.round(state.dragging.top);
	      out.left = Math.round(state.dragging.left);
	    }

	    return out;
	  };

	  /**
	   * Translate x and y coordinates from pixels to grid units.
	   * @param  {Number} top  Top position (relative to parent) in pixels.
	   * @param  {Number} left Left position (relative to parent) in pixels.
	   * @return {Object} x and y in grid units.
	   */


	  GridItem.prototype.calcXY = function calcXY(top /*: number*/, left /*: number*/) {
	    var _props3 = this.props;
	    var margin = _props3.margin;
	    var cols = _props3.cols;
	    var rowHeight = _props3.rowHeight;
	    var w = _props3.w;
	    var h = _props3.h;
	    var maxRows = _props3.maxRows;

	    var colWidth = this.calcColWidth();

	    // left = colWidth * x + margin * (x + 1)
	    // l = cx + m(x+1)
	    // l = cx + mx + m
	    // l - m = cx + mx
	    // l - m = x(c + m)
	    // (l - m) / (c + m) = x
	    // x = (left - margin) / (coldWidth + margin)
	    var x = Math.round((left - margin[0]) / (colWidth + margin[0]));
	    var y = Math.round((top - margin[1]) / (rowHeight + margin[1]));

	    // Capping
	    x = Math.max(Math.min(x, cols - w), 0);
	    y = Math.max(Math.min(y, maxRows - h), 0);

	    return { x: x, y: y };
	  };

	  /**
	   * Given a height and width in pixel values, calculate grid units.
	   * @param  {Number} height Height in pixels.
	   * @param  {Number} width  Width in pixels.
	   * @return {Object} w, h as grid units.
	   */


	  GridItem.prototype.calcWH = function calcWH(_ref) {
	    var height = _ref.height;
	    var width = _ref.width;
	    var _props4 = this.props;
	    var margin = _props4.margin;
	    var maxRows = _props4.maxRows;
	    var cols = _props4.cols;
	    var rowHeight = _props4.rowHeight;
	    var x = _props4.x;
	    var y = _props4.y;

	    var colWidth = this.calcColWidth();

	    // width = colWidth * w - (margin * (w - 1))
	    // ...
	    // w = (width + margin) / (colWidth + margin)
	    var w = Math.round((width + margin[0]) / (colWidth + margin[0]));
	    var h = Math.round((height + margin[1]) / (rowHeight + margin[1]));

	    // Capping
	    w = Math.max(Math.min(w, cols - x), 0);
	    h = Math.max(Math.min(h, maxRows - y), 0);
	    return { w: w, h: h };
	  };

	  /**
	   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it
	   * well when server rendering, and the only way to do that properly is to use percentage width/left because
	   * we don't know exactly what the browser viewport is.
	   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage
	   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.
	   *
	   * @param  {Object} pos Position object with width, height, left, top.
	   * @return {Object}     Style object.
	   */


	  GridItem.prototype.createStyle = function createStyle(pos /*: Position*/) {
	    var _props5 = this.props;
	    var usePercentages = _props5.usePercentages;
	    var containerWidth = _props5.containerWidth;
	    var useCSSTransforms = _props5.useCSSTransforms;


	    var style = void 0;
	    // CSS Transforms support (default)
	    if (useCSSTransforms) {
	      style = (0, _utils.setTransform)(pos);
	    }
	    // top,left (slow)
	    else {
	        style = (0, _utils.setTopLeft)(pos);

	        // This is used for server rendering.
	        if (usePercentages) {
	          style.left = (0, _utils.perc)(pos.left / containerWidth);
	          style.width = (0, _utils.perc)(pos.width / containerWidth);
	        }
	      }

	    return style;
	  };

	  /**
	   * Mix a Draggable instance into a child.
	   * @param  {Element} child    Child element.
	   * @return {Element}          Child wrapped in Draggable.
	   */


	  GridItem.prototype.mixinDraggable = function mixinDraggable(child /*: React.Element*/) {
	    return _react2.default.createElement(
	      _reactDraggable.DraggableCore,
	      {
	        onStart: this.onDragHandler('onDragStart'),
	        onDrag: this.onDragHandler('onDrag'),
	        onStop: this.onDragHandler('onDragStop'),
	        handle: this.props.handle,
	        cancel: ".react-resizable-handle" + (this.props.cancel ? "," + this.props.cancel : "") },
	      child
	    );
	  };

	  /**
	   * Mix a Resizable instance into a child.
	   * @param  {Element} child    Child element.
	   * @param  {Object} position  Position object (pixel values)
	   * @return {Element}          Child wrapped in Resizable.
	   */


	  GridItem.prototype.mixinResizable = function mixinResizable(child /*: React.Element*/, position /*: Position*/) {
	    var _props6 = this.props;
	    var cols = _props6.cols;
	    var x = _props6.x;
	    var minW = _props6.minW;
	    var minH = _props6.minH;
	    var maxW = _props6.maxW;
	    var maxH = _props6.maxH;

	    // This is the max possible width - doesn't go to infinity because of the width of the window

	    var maxWidth = this.calcPosition(0, 0, cols - x, 0).width;

	    // Calculate min/max constraints using our min & maxes
	    var mins = this.calcPosition(0, 0, minW, minH);
	    var maxes = this.calcPosition(0, 0, maxW, maxH);
	    var minConstraints = [mins.width, mins.height];
	    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];
	    return _react2.default.createElement(
	      _reactResizable.Resizable,
	      {
	        width: position.width,
	        height: position.height,
	        minConstraints: minConstraints,
	        maxConstraints: maxConstraints,
	        onResizeStop: this.onResizeHandler('onResizeStop'),
	        onResizeStart: this.onResizeHandler('onResizeStart'),
	        onResize: this.onResizeHandler('onResize') },
	      child
	    );
	  };

	  /**
	   * Wrapper around drag events to provide more useful data.
	   * All drag events call the function with the given handler name,
	   * with the signature (index, x, y).
	   *
	   * @param  {String} handlerName Handler name to wrap.
	   * @return {Function}           Handler function.
	   */


	  GridItem.prototype.onDragHandler = function onDragHandler(handlerName /*:string*/) {
	    var _this2 = this;

	    return function (e /*:Event*/, _ref2) {
	      var node = _ref2.node;
	      var deltaX = _ref2.deltaX;
	      var deltaY = _ref2.deltaY;

	      if (!_this2.props[handlerName]) return;

	      var newPosition /*: {top: number, left: number}*/ = { top: 0, left: 0 };

	      // Get new XY
	      switch (handlerName) {
	        case 'onDragStart':
	          // ToDo this wont work on nested parents
	          var parentRect = node.offsetParent.getBoundingClientRect();
	          var clientRect = node.getBoundingClientRect();
	          newPosition.left = clientRect.left - parentRect.left;
	          newPosition.top = clientRect.top - parentRect.top;
	          _this2.setState({ dragging: newPosition });
	          break;
	        case 'onDrag':
	          if (!_this2.state.dragging) throw new Error('onDrag called before onDragStart.');
	          newPosition.left = _this2.state.dragging.left + deltaX;
	          newPosition.top = _this2.state.dragging.top + deltaY;
	          _this2.setState({ dragging: newPosition });
	          break;
	        case 'onDragStop':
	          if (!_this2.state.dragging) throw new Error('onDragEnd called before onDragStart.');
	          newPosition.left = _this2.state.dragging.left;
	          newPosition.top = _this2.state.dragging.top;
	          _this2.setState({ dragging: null });
	          break;
	        default:
	          throw new Error('onDragHandler called with unrecognized handlerName: ' + handlerName);
	      }

	      var _calcXY = _this2.calcXY(newPosition.top, newPosition.left);

	      var x = _calcXY.x;
	      var y = _calcXY.y;


	      _this2.props[handlerName](_this2.props.i, x, y, { e: e, node: node, newPosition: newPosition });
	    };
	  };

	  /**
	   * Wrapper around drag events to provide more useful data.
	   * All drag events call the function with the given handler name,
	   * with the signature (index, x, y).
	   *
	   * @param  {String} handlerName Handler name to wrap.
	   * @return {Function}           Handler function.
	   */


	  GridItem.prototype.onResizeHandler = function onResizeHandler(handlerName /*:string*/) {
	    var _this3 = this;

	    return function (e /*:Event*/, _ref3) {
	      var element = _ref3.element;
	      var size = _ref3.size;

	      if (!_this3.props[handlerName]) return;
	      var _props7 = _this3.props;
	      var cols = _props7.cols;
	      var x = _props7.x;
	      var i = _props7.i;
	      var maxW = _props7.maxW;
	      var minW = _props7.minW;
	      var maxH = _props7.maxH;
	      var minH = _props7.minH;

	      // Get new XY

	      var _calcWH = _this3.calcWH(size);

	      var w = _calcWH.w;
	      var h = _calcWH.h;

	      // Cap w at numCols

	      w = Math.min(w, cols - x);
	      // Ensure w is at least 1
	      w = Math.max(w, 1);

	      // Min/max capping
	      w = Math.max(Math.min(w, maxW), minW);
	      h = Math.max(Math.min(h, maxH), minH);

	      _this3.setState({ resizing: handlerName === 'onResizeStop' ? null : size });

	      _this3.props[handlerName](i, w, h, { e: e, element: element, size: size });
	    };
	  };

	  GridItem.prototype.render = function render() {
	    var _props8 = this.props;
	    var x = _props8.x;
	    var y = _props8.y;
	    var w = _props8.w;
	    var h = _props8.h;
	    var isDraggable = _props8.isDraggable;
	    var isResizable = _props8.isResizable;
	    var useCSSTransforms = _props8.useCSSTransforms;


	    var pos = this.calcPosition(x, y, w, h, this.state);
	    var child = _react2.default.Children.only(this.props.children);

	    // Create the child element. We clone the existing element but modify its className and style.
	    var newChild = _react2.default.cloneElement(child, {
	      // Munge a classname. Use passed in classnames and resizing.
	      // React with merge the classNames.
	      className: ['react-grid-item', child.props.className || '', this.props.className, this.props.static ? 'static' : '', this.state.resizing ? 'resizing' : '', this.state.dragging ? 'react-draggable-dragging' : '', useCSSTransforms ? 'cssTransforms' : ''].join(' '),
	      // We can set the width and height on the child, but unfortunately we can't set the position.
	      style: _extends({}, this.props.style, child.props.style, this.createStyle(pos))
	    });

	    // Resizable support. This is usually on but the user can toggle it off.
	    if (isResizable) newChild = this.mixinResizable(newChild, pos);

	    // Draggable support. This is always on, except for with placeholders.
	    if (isDraggable) newChild = this.mixinDraggable(newChild);

	    return newChild;
	  };

	  return GridItem;
	}(_react2.default.Component);

	GridItem.propTypes = {
	  // Children must be only a single element
	  children: _react.PropTypes.element,

	  // General grid attributes
	  cols: _react.PropTypes.number.isRequired,
	  containerWidth: _react.PropTypes.number.isRequired,
	  rowHeight: _react.PropTypes.number.isRequired,
	  margin: _react.PropTypes.array.isRequired,
	  maxRows: _react.PropTypes.number.isRequired,

	  // These are all in grid units
	  x: _react.PropTypes.number.isRequired,
	  y: _react.PropTypes.number.isRequired,
	  w: _react.PropTypes.number.isRequired,
	  h: _react.PropTypes.number.isRequired,

	  // All optional
	  minW: function minW(props, propName, componentName, location, propFullName) {
	    _react.PropTypes.number(props, propName, componentName, location, propFullName);
	    var value = props[propName];
	    if (value > props.w || value > props.maxW) return new Error('minWidth bigger than item width/maxWidth');
	  },
	  maxW: function maxW(props, propName, componentName, location, propFullName) {
	    _react.PropTypes.number(props, propName, componentName, location, propFullName);
	    var value = props[propName];
	    if (value < props.w || value < props.minW) return new Error('maxWidth smaller than item width/minWidth');
	  },
	  minH: function minH(props, propName, componentName, location, propFullName) {
	    _react.PropTypes.number(props, propName, componentName, location, propFullName);
	    var value = props[propName];
	    if (value > props.h || value > props.maxH) return new Error('minHeight bigger than item height/maxHeight');
	  },
	  maxH: function maxH(props, propName, componentName, location, propFullName) {
	    _react.PropTypes.number(props, propName, componentName, location, propFullName);
	    var value = props[propName];
	    if (value < props.h || value < props.minH) return new Error('maxHeight smaller than item height/minHeight');
	  },

	  // ID is nice to have for callbacks
	  i: _react.PropTypes.string.isRequired,

	  // Functions
	  onDragStop: _react.PropTypes.func,
	  onDragStart: _react.PropTypes.func,
	  onDrag: _react.PropTypes.func,
	  onResizeStop: _react.PropTypes.func,
	  onResizeStart: _react.PropTypes.func,
	  onResize: _react.PropTypes.func,

	  // Flags
	  isDraggable: _react.PropTypes.bool.isRequired,
	  isResizable: _react.PropTypes.bool.isRequired,
	  static: _react.PropTypes.bool,

	  // Use CSS transforms instead of top/left
	  useCSSTransforms: _react.PropTypes.bool.isRequired,

	  // Others
	  className: _react.PropTypes.string,
	  // Selector for draggable handle
	  handle: _react.PropTypes.string,
	  // Selector for draggable cancel (see react-draggable)
	  cancel: _react.PropTypes.string
	};
	GridItem.defaultProps = {
	  className: '',
	  cancel: '',
	  minH: 1,
	  minW: 1,
	  maxH: Infinity,
	  maxW: Infinity
	};
	exports.default = GridItem;

/***/ },

/***/ 75:
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(20), __webpack_require__(43));
		else if(typeof define === 'function' && define.amd)
			define(["react", "react-dom"], factory);
		else if(typeof exports === 'object')
			exports["ReactDraggable"] = factory(require("react"), require("react-dom"));
		else
			root["ReactDraggable"] = factory(root["React"], root["ReactDOM"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';
		
		module.exports = __webpack_require__(1).default;
		module.exports.DraggableCore = __webpack_require__(9).default;

	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(global) {'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(3);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _classnames = __webpack_require__(4);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _domFns = __webpack_require__(5);
		
		var _positionFns = __webpack_require__(8);
		
		var _shims = __webpack_require__(6);
		
		var _DraggableCore = __webpack_require__(9);
		
		var _DraggableCore2 = _interopRequireDefault(_DraggableCore);
		
		var _log = __webpack_require__(11);
		
		var _log2 = _interopRequireDefault(_log);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		// $FlowIgnore
		
		
		/*:: import type {DraggableEventHandler} from './utils/types';*/
		/*:: type DraggableState = {
		  dragging: boolean,
		  dragged: boolean,
		  x: number, y: number,
		  slackX: number, slackY: number,
		  isElementSVG: boolean
		};*/
		
		
		//
		// Define <Draggable>
		//
		
		/*:: type ConstructorProps = {
		  position: { x: number, y: number },
		  defaultPosition: { x: number, y: number }
		};*/
		
		var Draggable = function (_React$Component) {
		  _inherits(Draggable, _React$Component);
		
		  function Draggable(props /*: ConstructorProps*/) {
		    _classCallCheck(this, Draggable);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Draggable).call(this, props));
		
		    _this.onDragStart = function (e, coreData) {
		      (0, _log2.default)('Draggable: onDragStart: %j', coreData);
		
		      // Short-circuit if user's callback killed it.
		      var shouldStart = _this.props.onStart(e, (0, _positionFns.createDraggableData)(_this, coreData));
		      // Kills start event on core as well, so move handlers are never bound.
		      if (shouldStart === false) return false;
		
		      _this.setState({ dragging: true, dragged: true });
		    };
		
		    _this.onDrag = function (e, coreData) {
		      if (!_this.state.dragging) return false;
		      (0, _log2.default)('Draggable: onDrag: %j', coreData);
		
		      var uiData = (0, _positionFns.createDraggableData)(_this, coreData);
		
		      var newState /*: $Shape<DraggableState>*/ = {
		        x: uiData.x,
		        y: uiData.y
		      };
		
		      // Keep within bounds.
		      if (_this.props.bounds) {
		        // Save original x and y.
		        var _x = newState.x;
		        var _y = newState.y;
		
		        // Add slack to the values used to calculate bound position. This will ensure that if
		        // we start removing slack, the element won't react to it right away until it's been
		        // completely removed.
		
		        newState.x += _this.state.slackX;
		        newState.y += _this.state.slackY;
		
		        // Get bound position. This will ceil/floor the x and y within the boundaries.
		        // $FlowBug
		
		
		        // Recalculate slack by noting how much was shaved by the boundPosition handler.
		
		        var _getBoundPosition = (0, _positionFns.getBoundPosition)(_this, newState.x, newState.y);
		
		        var _getBoundPosition2 = _slicedToArray(_getBoundPosition, 2);
		
		        newState.x = _getBoundPosition2[0];
		        newState.y = _getBoundPosition2[1];
		        newState.slackX = _this.state.slackX + (_x - newState.x);
		        newState.slackY = _this.state.slackY + (_y - newState.y);
		
		        // Update the event we fire to reflect what really happened after bounds took effect.
		        uiData.x = _x;
		        uiData.y = _y;
		        uiData.deltaX = newState.x - _this.state.x;
		        uiData.deltaY = newState.y - _this.state.y;
		      }
		
		      // Short-circuit if user's callback killed it.
		      var shouldUpdate = _this.props.onDrag(e, uiData);
		      if (shouldUpdate === false) return false;
		
		      _this.setState(newState);
		    };
		
		    _this.onDragStop = function (e, coreData) {
		      if (!_this.state.dragging) return false;
		
		      // Short-circuit if user's callback killed it.
		      var shouldStop = _this.props.onStop(e, (0, _positionFns.createDraggableData)(_this, coreData));
		      if (shouldStop === false) return false;
		
		      (0, _log2.default)('Draggable: onDragStop: %j', coreData);
		
		      var newState /*: $Shape<DraggableState>*/ = {
		        dragging: false,
		        slackX: 0,
		        slackY: 0
		      };
		
		      // If this is a controlled component, the result of this operation will be to
		      // revert back to the old position. We expect a handler on `onDragStop`, at the least.
		      var controlled = Boolean(_this.props.position);
		      if (controlled) {
		        var _this$props$position = _this.props.position;
		        var _x2 = _this$props$position.x;
		        var _y2 = _this$props$position.y;
		
		        newState.x = _x2;
		        newState.y = _y2;
		      }
		
		      _this.setState(newState);
		    };
		
		    _this.state = {
		      // Whether or not we are currently dragging.
		      dragging: false,
		
		      // Whether or not we have been dragged before.
		      dragged: false,
		
		      // Current transform x and y.
		      x: props.position ? props.position.x : props.defaultPosition.x,
		      y: props.position ? props.position.y : props.defaultPosition.y,
		
		      // Used for compensating for out-of-bounds drags
		      slackX: 0, slackY: 0,
		
		      // Can only determine if SVG after mounting
		      isElementSVG: false
		    };
		    return _this;
		  }
		
		  _createClass(Draggable, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      if (this.props.position && !(this.props.onDrag || this.props.onStop)) {
		        // eslint-disable-next-line
		        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');
		      }
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      // Check to see if the element passed is an instanceof SVGElement
		      if (typeof global.SVGElement !== 'undefined' && _reactDom2.default.findDOMNode(this) instanceof global.SVGElement) {
		        this.setState({ isElementSVG: true });
		      }
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps /*: Object*/) {
		      // Set x/y if position has changed
		      if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {
		        this.setState({ x: nextProps.position.x, y: nextProps.position.y });
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.setState({ dragging: false }); // prevents invariant if unmounted while dragging
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;
		
		      var style = {},
		          svgTransform = null;
		
		      // If this is controlled, we don't want to move it - unless it's dragging.
		      var controlled = Boolean(this.props.position);
		      var draggable = !controlled || this.state.dragging;
		
		      var position = this.props.position || this.props.defaultPosition;
		      var transformOpts = {
		        // Set left if horizontal drag is enabled
		        x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : position.x,
		
		        // Set top if vertical drag is enabled
		        y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : position.y
		      };
		
		      // If this element was SVG, we use the `transform` attribute.
		      if (this.state.isElementSVG) {
		        svgTransform = (0, _domFns.createSVGTransform)(transformOpts);
		      } else {
		        // Add a CSS transform to move the element around. This allows us to move the element around
		        // without worrying about whether or not it is relatively or absolutely positioned.
		        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>
		        // has a clean slate.
		        style = (0, _domFns.createCSSTransform)(transformOpts);
		      }
		
		      var _props = this.props;
		      var defaultClassName = _props.defaultClassName;
		      var defaultClassNameDragging = _props.defaultClassNameDragging;
		      var defaultClassNameDragged = _props.defaultClassNameDragged;
		
		      // Mark with class while dragging
		
		      var className = (0, _classnames2.default)(this.props.children.props.className || '', defaultClassName, (_classNames = {}, _defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), _defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames));
		
		      // Reuse the child provided
		      // This makes it flexible to use whatever element is wanted (div, ul, etc)
		      return _react2.default.createElement(
		        _DraggableCore2.default,
		        _extends({}, this.props, { onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop }),
		        _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {
		          className: className,
		          style: _extends({}, this.props.children.props.style, style),
		          transform: svgTransform
		        })
		      );
		    }
		  }]);
		
		  return Draggable;
		}(_react2.default.Component);
		
		Draggable.displayName = 'Draggable';
		Draggable.propTypes = _extends({}, _DraggableCore2.default.propTypes, {
		
		  /**
		   * `axis` determines which axis the draggable can move.
		   *
		   *  Note that all callbacks will still return data as normal. This only
		   *  controls flushing to the DOM.
		   *
		   * 'both' allows movement horizontally and vertically.
		   * 'x' limits movement to horizontal axis.
		   * 'y' limits movement to vertical axis.
		   * 'none' limits all movement.
		   *
		   * Defaults to 'both'.
		   */
		  axis: _react.PropTypes.oneOf(['both', 'x', 'y', 'none']),
		
		  /**
		   * `bounds` determines the range of movement available to the element.
		   * Available values are:
		   *
		   * 'parent' restricts movement within the Draggable's parent node.
		   *
		   * Alternatively, pass an object with the following properties, all of which are optional:
		   *
		   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}
		   *
		   * All values are in px.
		   *
		   * Example:
		   *
		   * ```jsx
		   *   let App = React.createClass({
		   *       render: function () {
		   *         return (
		   *            <Draggable bounds={{right: 300, bottom: 300}}>
		   *              <div>Content</div>
		   *           </Draggable>
		   *         );
		   *       }
		   *   });
		   * ```
		   */
		  bounds: _react.PropTypes.oneOfType([_react.PropTypes.shape({
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number,
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number
		  }), _react.PropTypes.string, _react.PropTypes.oneOf([false])]),
		
		  defaultClassName: _react.PropTypes.string,
		  defaultClassNameDragging: _react.PropTypes.string,
		  defaultClassNameDragged: _react.PropTypes.string,
		
		  /**
		   * `defaultPosition` specifies the x and y that the dragged item should start at
		   *
		   * Example:
		   *
		   * ```jsx
		   *      let App = React.createClass({
		   *          render: function () {
		   *              return (
		   *                  <Draggable defaultPosition={{x: 25, y: 25}}>
		   *                      <div>I start with transformX: 25px and transformY: 25px;</div>
		   *                  </Draggable>
		   *              );
		   *          }
		   *      });
		   * ```
		   */
		  defaultPosition: _react.PropTypes.shape({
		    x: _react.PropTypes.number,
		    y: _react.PropTypes.number
		  }),
		
		  /**
		   * `position`, if present, defines the current position of the element.
		   *
		   *  This is similar to how form elements in React work - if no `position` is supplied, the component
		   *  is uncontrolled.
		   *
		   * Example:
		   *
		   * ```jsx
		   *      let App = React.createClass({
		   *          render: function () {
		   *              return (
		   *                  <Draggable position={{x: 25, y: 25}}>
		   *                      <div>I start with transformX: 25px and transformY: 25px;</div>
		   *                  </Draggable>
		   *              );
		   *          }
		   *      });
		   * ```
		   */
		  position: _react.PropTypes.shape({
		    x: _react.PropTypes.number,
		    y: _react.PropTypes.number
		  }),
		
		  /**
		   * These properties should be defined on the child, not here.
		   */
		  className: _shims.dontSetMe,
		  style: _shims.dontSetMe,
		  transform: _shims.dontSetMe
		});
		Draggable.defaultProps = _extends({}, _DraggableCore2.default.defaultProps, {
		  axis: 'both',
		  bounds: false,
		  defaultClassName: 'react-draggable',
		  defaultClassNameDragging: 'react-draggable-dragging',
		  defaultClassNameDragged: 'react-draggable-dragged',
		  defaultPosition: { x: 0, y: 0 },
		  position: null
		});
		exports.default = Draggable;
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ },
	/* 2 */
	/***/ function(module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

	/***/ },
	/* 3 */
	/***/ function(module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
		/* global define */
		
		(function () {
			'use strict';
		
			var hasOwn = {}.hasOwnProperty;
		
			function classNames () {
				var classes = [];
		
				for (var i = 0; i < arguments.length; i++) {
					var arg = arguments[i];
					if (!arg) continue;
		
					var argType = typeof arg;
		
					if (argType === 'string' || argType === 'number') {
						classes.push(arg);
					} else if (Array.isArray(arg)) {
						classes.push(classNames.apply(null, arg));
					} else if (argType === 'object') {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					}
				}
		
				return classes.join(' ');
			}
		
			if (typeof module !== 'undefined' && module.exports) {
				module.exports = classNames;
			} else if (true) {
				// register as 'classnames', consistent with npm package name
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
					return classNames;
				}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else {
				window.classNames = classNames;
			}
		}());


	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.matchesSelector = matchesSelector;
		exports.matchesSelectorAndParentsTo = matchesSelectorAndParentsTo;
		exports.addEvent = addEvent;
		exports.removeEvent = removeEvent;
		exports.outerHeight = outerHeight;
		exports.outerWidth = outerWidth;
		exports.innerHeight = innerHeight;
		exports.innerWidth = innerWidth;
		exports.offsetXYFromParent = offsetXYFromParent;
		exports.createCSSTransform = createCSSTransform;
		exports.createSVGTransform = createSVGTransform;
		exports.getTouch = getTouch;
		exports.getTouchIdentifier = getTouchIdentifier;
		exports.addUserSelectStyles = addUserSelectStyles;
		exports.removeUserSelectStyles = removeUserSelectStyles;
		exports.styleHacks = styleHacks;
		
		var _shims = __webpack_require__(6);
		
		var _getPrefix = __webpack_require__(7);
		
		var _getPrefix2 = _interopRequireDefault(_getPrefix);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		/*:: import type {ControlPosition} from './types';*/
		
		
		var matchesSelectorFunc = '';
		function matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/ {
		  if (!matchesSelectorFunc) {
		    matchesSelectorFunc = (0, _shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {
		      // $FlowIgnore: Doesn't think elements are indexable
		      return (0, _shims.isFunction)(el[method]);
		    });
		  }
		
		  // $FlowIgnore: Doesn't think elements are indexable
		  return el[matchesSelectorFunc].call(el, selector);
		}
		
		// Works up the tree to the draggable itself attempting to match selector.
		function matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/ {
		  var node = el;
		  do {
		    if (matchesSelector(node, selector)) return true;
		    if (node === baseNode) return false;
		    node = node.parentNode;
		  } while (node);
		
		  return false;
		}
		
		function addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {
		  if (!el) {
		    return;
		  }
		  if (el.attachEvent) {
		    el.attachEvent('on' + event, handler);
		  } else if (el.addEventListener) {
		    el.addEventListener(event, handler, true);
		  } else {
		    // $FlowIgnore: Doesn't think elements are indexable
		    el['on' + event] = handler;
		  }
		}
		
		function removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {
		  if (!el) {
		    return;
		  }
		  if (el.detachEvent) {
		    el.detachEvent('on' + event, handler);
		  } else if (el.removeEventListener) {
		    el.removeEventListener(event, handler, true);
		  } else {
		    // $FlowIgnore: Doesn't think elements are indexable
		    el['on' + event] = null;
		  }
		}
		
		function outerHeight(node /*: HTMLElement*/) /*: number*/ {
		  // This is deliberately excluding margin for our calculations, since we are using
		  // offsetTop which is including margin. See getBoundPosition
		  var height = node.clientHeight;
		  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
		  height += (0, _shims.int)(computedStyle.borderTopWidth);
		  height += (0, _shims.int)(computedStyle.borderBottomWidth);
		  return height;
		}
		
		function outerWidth(node /*: HTMLElement*/) /*: number*/ {
		  // This is deliberately excluding margin for our calculations, since we are using
		  // offsetLeft which is including margin. See getBoundPosition
		  var width = node.clientWidth;
		  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
		  width += (0, _shims.int)(computedStyle.borderLeftWidth);
		  width += (0, _shims.int)(computedStyle.borderRightWidth);
		  return width;
		}
		function innerHeight(node /*: HTMLElement*/) /*: number*/ {
		  var height = node.clientHeight;
		  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
		  height -= (0, _shims.int)(computedStyle.paddingTop);
		  height -= (0, _shims.int)(computedStyle.paddingBottom);
		  return height;
		}
		
		function innerWidth(node /*: HTMLElement*/) /*: number*/ {
		  var width = node.clientWidth;
		  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
		  width -= (0, _shims.int)(computedStyle.paddingLeft);
		  width -= (0, _shims.int)(computedStyle.paddingRight);
		  return width;
		}
		
		// Get from offsetParent
		function offsetXYFromParent(evt /*: {clientX: number, clientY: number}*/, offsetParent /*: HTMLElement*/) /*: ControlPosition*/ {
		  var isBody = offsetParent === offsetParent.ownerDocument.body;
		  var offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();
		
		  var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;
		  var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;
		
		  return { x: x, y: y };
		}
		
		function createCSSTransform(_ref) /*: Object*/ {
		  var x = _ref.x;
		  var y = _ref.y;
		
		  // Replace unitless items with px
		  return _defineProperty({}, (0, _getPrefix.browserPrefixToKey)('transform', _getPrefix2.default), 'translate(' + x + 'px,' + y + 'px)');
		}
		
		function createSVGTransform(_ref3) /*: string*/ {
		  var x = _ref3.x;
		  var y = _ref3.y;
		
		  return 'translate(' + x + ',' + y + ')';
		}
		
		function getTouch(e /*: MouseEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/ {
		  return e.targetTouches && (0, _shims.findInArray)(e.targetTouches, function (t) {
		    return identifier === t.identifier;
		  }) || e.changedTouches && (0, _shims.findInArray)(e.changedTouches, function (t) {
		    return identifier === t.identifier;
		  });
		}
		
		function getTouchIdentifier(e /*: MouseEvent*/) /*: ?number*/ {
		  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;
		  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;
		}
		
		// User-select Hacks:
		//
		// Useful for preventing blue highlights all over everything when dragging.
		var userSelectPrefix = (0, _getPrefix.getPrefix)('user-select');
		var userSelect = (0, _getPrefix.browserPrefixToStyle)('user-select', userSelectPrefix);
		var userSelectStyle = ';' + userSelect + ': none;';
		
		// Note we're passing `document` b/c we could be iframed
		function addUserSelectStyles(body /*: HTMLElement*/) {
		  var style = body.getAttribute('style') || '';
		  body.setAttribute('style', style + userSelectStyle);
		}
		
		function removeUserSelectStyles(body /*: HTMLElement*/) {
		  var style = body.getAttribute('style') || '';
		  body.setAttribute('style', style.replace(userSelectStyle, ''));
		}
		
		function styleHacks() /*: Object*/ {
		  var childStyle /*: Object*/ = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		
		  // Workaround IE pointer events; see #51
		  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278
		  return _extends({
		    touchAction: 'none'
		  }, childStyle);
		}

	/***/ },
	/* 6 */
	/***/ function(module, exports) {

		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.findInArray = findInArray;
		exports.isFunction = isFunction;
		exports.isNum = isNum;
		exports.int = int;
		exports.dontSetMe = dontSetMe;
		
		// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc
		function findInArray(array /*: Array<any>*/, callback /*: Function*/) /*: any*/ {
		  for (var i = 0, length = array.length; i < length; i++) {
		    if (callback.apply(callback, [array[i], i, array])) return array[i];
		  }
		}
		
		function isFunction(func /*: any*/) /*: boolean*/ {
		  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';
		}
		
		function isNum(num /*: any*/) /*: boolean*/ {
		  return typeof num === 'number' && !isNaN(num);
		}
		
		function int(a /*: string*/) /*: number*/ {
		  return parseInt(a, 10);
		}
		
		function dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) {
		  if (props[propName]) {
		    return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');
		  }
		}

	/***/ },
	/* 7 */
	/***/ function(module, exports) {

		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getPrefix = getPrefix;
		exports.browserPrefixToKey = browserPrefixToKey;
		exports.browserPrefixToStyle = browserPrefixToStyle;
		
		var prefixes = ['Moz', 'Webkit', 'O', 'ms'];
		function getPrefix() /*: string*/ {
		  var prop /*: string*/ = arguments.length <= 0 || arguments[0] === undefined ? 'transform' : arguments[0];
		
		  // Checking specifically for 'window.document' is for pseudo-browser server-side
		  // environments that define 'window' as the global context.
		  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)
		  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';
		
		  var style = window.document.documentElement.style;
		
		  if (prop in style) return '';
		
		  for (var i = 0; i < prefixes.length; i++) {
		    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];
		  }
		
		  return '';
		}
		
		function browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/ {
		  return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;
		}
		
		function browserPrefixToStyle(prop /*: string*/, prefix /*: string*/) /*: string*/ {
		  return prefix ? '-' + prefix.toLowerCase() + '-' + prop : prop;
		}
		
		function kebabToTitleCase(str /*: string*/) /*: string*/ {
		  var out = '';
		  var shouldCapitalize = true;
		  for (var i = 0; i < str.length; i++) {
		    if (shouldCapitalize) {
		      out += str[i].toUpperCase();
		      shouldCapitalize = false;
		    } else if (str[i] === '-') {
		      shouldCapitalize = true;
		    } else {
		      out += str[i];
		    }
		  }
		  return out;
		}
		
		// Default export is the prefix itself, like 'Moz', 'Webkit', etc
		// Note that you may have to re-test for certain things; for instance, Chrome 50
		// can handle unprefixed `transform`, but not unprefixed `user-select`
		exports.default = getPrefix();

	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getBoundPosition = getBoundPosition;
		exports.snapToGrid = snapToGrid;
		exports.canDragX = canDragX;
		exports.canDragY = canDragY;
		exports.getControlPosition = getControlPosition;
		exports.createCoreData = createCoreData;
		exports.createDraggableData = createDraggableData;
		
		var _shims = __webpack_require__(6);
		
		var _reactDom = __webpack_require__(3);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _domFns = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		/*:: import type Draggable from '../Draggable';*/
		/*:: import type {Bounds, ControlPosition, DraggableData} from './types';*/
		/*:: import type DraggableCore from '../DraggableCore';*/
		function getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/ {
		  // If no bounds, short-circuit and move on
		  if (!draggable.props.bounds) return [x, y];
		
		  // Clone new bounds
		  var bounds = draggable.props.bounds;
		
		  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);
		  var node = _reactDom2.default.findDOMNode(draggable);
		
		  if (typeof bounds === 'string') {
		    var ownerDocument = node.ownerDocument;
		
		    var ownerWindow = node.defaultView;
		    var boundNode = void 0;
		    if (bounds === 'parent') {
		      boundNode = node.parentNode;
		    } else {
		      boundNode = ownerDocument.querySelector(bounds);
		      if (!boundNode) throw new Error('Bounds selector "' + bounds + '" could not find an element.');
		    }
		    var nodeStyle = ownerWindow.getComputedStyle(node);
		    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode);
		    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.
		    bounds = {
		      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.borderLeftWidth) + (0, _shims.int)(nodeStyle.marginLeft),
		      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.borderTopWidth) + (0, _shims.int)(nodeStyle.marginTop),
		      right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft,
		      bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop
		    };
		  }
		
		  // Keep x and y below right and bottom limits...
		  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);
		  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom);
		
		  // But above left and top limits.
		  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);
		  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);
		
		  return [x, y];
		}
		
		function snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/ {
		  var x = Math.round(pendingX / grid[0]) * grid[0];
		  var y = Math.round(pendingY / grid[1]) * grid[1];
		  return [x, y];
		}
		
		function canDragX(draggable /*: Draggable*/) /*: boolean*/ {
		  return draggable.props.axis === 'both' || draggable.props.axis === 'x';
		}
		
		function canDragY(draggable /*: Draggable*/) /*: boolean*/ {
		  return draggable.props.axis === 'both' || draggable.props.axis === 'y';
		}
		
		// Get {x, y} positions from event.
		function getControlPosition(e /*: MouseEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/ {
		  var touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;
		  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch
		  var node = _reactDom2.default.findDOMNode(draggableCore);
		  // User can provide an offsetParent if desired.
		  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;
		  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent);
		}
		
		// Create an data object exposed by <DraggableCore>'s events
		function createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/ {
		  // State changes are often (but not always!) async. We want the latest value.
		  var state = draggable._pendingState || draggable.state;
		  var isStart = !(0, _shims.isNum)(state.lastX);
		
		  if (isStart) {
		    // If this is our first move, use the x and y as last coords.
		    return {
		      node: _reactDom2.default.findDOMNode(draggable),
		      deltaX: 0, deltaY: 0,
		      lastX: x, lastY: y,
		      x: x, y: y
		    };
		  } else {
		    // Otherwise calculate proper values.
		    return {
		      node: _reactDom2.default.findDOMNode(draggable),
		      deltaX: x - state.lastX, deltaY: y - state.lastY,
		      lastX: state.lastX, lastY: state.lastY,
		      x: x, y: y
		    };
		  }
		}
		
		// Create an data exposed by <Draggable>'s events
		function createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/ {
		  return {
		    node: coreData.node,
		    x: draggable.state.x + coreData.deltaX,
		    y: draggable.state.y + coreData.deltaY,
		    deltaX: coreData.deltaX,
		    deltaY: coreData.deltaY,
		    lastX: draggable.state.x,
		    lastY: draggable.state.y
		  };
		}
		
		// A lot faster than stringify/parse
		function cloneBounds(bounds /*: Bounds*/) /*: Bounds*/ {
		  return {
		    left: bounds.left,
		    top: bounds.top,
		    right: bounds.right,
		    bottom: bounds.bottom
		  };
		}

	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(3);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _domFns = __webpack_require__(5);
		
		var _positionFns = __webpack_require__(8);
		
		var _shims = __webpack_require__(6);
		
		var _log = __webpack_require__(11);
		
		var _log2 = _interopRequireDefault(_log);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		// Simple abstraction for dragging events names.
		/*:: import type {EventHandler} from './utils/types';*/
		var eventsFor = {
		  touch: {
		    start: 'touchstart',
		    move: 'touchmove',
		    stop: 'touchend'
		  },
		  mouse: {
		    start: 'mousedown',
		    move: 'mousemove',
		    stop: 'mouseup'
		  }
		};
		
		// Default to mouse events.
		var dragEventFor = eventsFor.mouse;
		
		//
		// Define <DraggableCore>.
		//
		// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can
		// work well with libraries that require more control over the element.
		//
		
		/*:: type CoreState = {
		  dragging: boolean,
		  lastX: number,
		  lastY: number,
		  touchIdentifier: ?number
		};*/
		
		var DraggableCore = function (_React$Component) {
		  _inherits(DraggableCore, _React$Component);
		
		  function DraggableCore() {
		    var _Object$getPrototypeO;
		
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, DraggableCore);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(DraggableCore)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
		      dragging: false,
		      // Used while dragging to determine deltas.
		      lastX: NaN, lastY: NaN,
		      touchIdentifier: null
		    }, _this.handleDragStart = function (e) {
		      // Make it possible to attach event handlers on top of this one.
		      _this.props.onMouseDown(e);
		
		      // Only accept left-clicks.
		      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;
		
		      // Get nodes. Be sure to grab relative document (could be iframed)
		      var domNode = _reactDom2.default.findDOMNode(_this);
		      var ownerDocument = domNode.ownerDocument;
		
		      // Short circuit if handle or cancel prop was provided and selector doesn't match.
		
		      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.handle, domNode) || _this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.cancel, domNode)) {
		        return;
		      }
		
		      // Set touch identifier in component state if this is a touch event. This allows us to
		      // distinguish between individual touches on multitouch screens by identifying which
		      // touchpoint was set to this element.
		      var touchIdentifier = (0, _domFns.getTouchIdentifier)(e);
		      _this.setState({ touchIdentifier: touchIdentifier });
		
		      // Get the current drag point from the event. This is used as the offset.
		      var position = (0, _positionFns.getControlPosition)(e, touchIdentifier, _this);
		      if (position == null) return; // not possible but satisfies flow
		      var x = position.x;
		      var y = position.y;
		
		      // Create an event object with all the data parents need to make a decision here.
		
		      var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);
		
		      (0, _log2.default)('DraggableCore: handleDragStart: %j', coreEvent);
		
		      // Call event handler. If it returns explicit false, cancel.
		      (0, _log2.default)('calling', _this.props.onStart);
		      var shouldUpdate = _this.props.onStart(e, coreEvent);
		      if (shouldUpdate === false) return;
		
		      // Add a style to the body to disable user-select. This prevents text from
		      // being selected all over the page.
		      if (_this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument.body);
		
		      // Initiate dragging. Set the current x and y as offsets
		      // so we know how much we've moved during the drag. This allows us
		      // to drag elements around even if they have been moved, without issue.
		      _this.setState({
		        dragging: true,
		
		        lastX: x,
		        lastY: y
		      });
		
		      // Add events to the document directly so we catch when the user's mouse/touch moves outside of
		      // this element. We use different events depending on whether or not we have detected that this
		      // is a touch-capable device.
		      (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, _this.handleDrag);
		      (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, _this.handleDragStop);
		    }, _this.handleDrag = function (e) {
		
		      // Get the current drag point from the event. This is used as the offset.
		      var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _this);
		      if (position == null) return;
		      var x = position.x;
		      var y = position.y;
		
		      // Snap to grid if prop has been provided
		
		      if (x !== x) debugger;
		
		      if (Array.isArray(_this.props.grid)) {
		        var deltaX = x - _this.state.lastX,
		            deltaY = y - _this.state.lastY;
		
		        var _snapToGrid = (0, _positionFns.snapToGrid)(_this.props.grid, deltaX, deltaY);
		
		        var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);
		
		        deltaX = _snapToGrid2[0];
		        deltaY = _snapToGrid2[1];
		
		        if (!deltaX && !deltaY) return; // skip useless drag
		        x = _this.state.lastX + deltaX, y = _this.state.lastY + deltaY;
		      }
		
		      var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);
		
		      (0, _log2.default)('DraggableCore: handleDrag: %j', coreEvent);
		
		      // Call event handler. If it returns explicit false, trigger end.
		      var shouldUpdate = _this.props.onDrag(e, coreEvent);
		      if (shouldUpdate === false) {
		        try {
		          _this.handleDragStop(new MouseEvent('mouseup'));
		        } catch (err) {
		          // Old browsers
		          var event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseEvent*/);
		          // I see why this insanity was deprecated
		          // $FlowIgnore
		          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		          _this.handleDragStop(event);
		        }
		        return;
		      }
		
		      _this.setState({
		        lastX: x,
		        lastY: y
		      });
		    }, _this.handleDragStop = function (e) {
		      if (!_this.state.dragging) return;
		
		      var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _this);
		      if (position == null) return;
		      var x = position.x;
		      var y = position.y;
		
		      var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);
		
		      // Remove user-select hack
		      if (_this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(_reactDom2.default.findDOMNode(_this).ownerDocument.body);
		
		      (0, _log2.default)('DraggableCore: handleDragStop: %j', coreEvent);
		
		      // Reset the el.
		      _this.setState({
		        dragging: false,
		        lastX: NaN,
		        lastY: NaN
		      });
		
		      // Call event handler
		      _this.props.onStop(e, coreEvent);
		
		      // Remove event handlers
		
		      var _ReactDOM$findDOMNode = _reactDom2.default.findDOMNode(_this);
		
		      var ownerDocument = _ReactDOM$findDOMNode.ownerDocument;
		
		      (0, _log2.default)('DraggableCore: Removing handlers');
		      (0, _domFns.removeEvent)(ownerDocument, dragEventFor.move, _this.handleDrag);
		      (0, _domFns.removeEvent)(ownerDocument, dragEventFor.stop, _this.handleDragStop);
		    }, _this.onMouseDown = function (e) {
		      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse
		
		      return _this.handleDragStart(e);
		    }, _this.onMouseUp = function (e) {
		      dragEventFor = eventsFor.mouse;
		
		      return _this.handleDragStop(e);
		    }, _this.onTouchStart = function (e) {
		      // We're on a touch device now, so change the event handlers
		      dragEventFor = eventsFor.touch;
		
		      return _this.handleDragStart(e);
		    }, _this.onTouchEnd = function (e) {
		      // We're on a touch device now, so change the event handlers
		      dragEventFor = eventsFor.touch;
		
		      return _this.handleDragStop(e);
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  _createClass(DraggableCore, [{
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      // Remove any leftover event handlers. Remove both touch and mouse handlers in case
		      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.
		
		      var _ReactDOM$findDOMNode2 = _reactDom2.default.findDOMNode(this);
		
		      var ownerDocument = _ReactDOM$findDOMNode2.ownerDocument;
		
		      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);
		      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);
		      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);
		      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);
		      if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument.body);
		    }
		
		    // Same as onMouseDown (start drag), but now consider this a touch device.
		
		  }, {
		    key: 'render',
		    value: function render() {
		      // Reuse the child provided
		      // This makes it flexible to use whatever element is wanted (div, ul, etc)
		      return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {
		        style: (0, _domFns.styleHacks)(this.props.children.props.style),
		
		        // Note: mouseMove handler is attached to document so it will still function
		        // when the user drags quickly and leaves the bounds of the element.
		        onMouseDown: this.onMouseDown,
		        onTouchStart: this.onTouchStart,
		        onMouseUp: this.onMouseUp,
		        onTouchEnd: this.onTouchEnd
		      });
		    }
		  }]);
		
		  return DraggableCore;
		}(_react2.default.Component);
		
		DraggableCore.displayName = 'DraggableCore';
		DraggableCore.propTypes = {
		  /**
		   * `allowAnyClick` allows dragging using any mouse button.
		   * By default, we only accept the left button.
		   *
		   * Defaults to `false`.
		   */
		  allowAnyClick: _react.PropTypes.bool,
		
		  /**
		   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,
		   * with the exception of `onMouseDown`, will not fire.
		   */
		  disabled: _react.PropTypes.bool,
		
		  /**
		   * By default, we add 'user-select:none' attributes to the document body
		   * to prevent ugly text selection during drag. If this is causing problems
		   * for your app, set this to `false`.
		   */
		  enableUserSelectHack: _react.PropTypes.bool,
		
		  /**
		   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets
		   * instead of using the parent node.
		   */
		  offsetParent: function offsetParent(props, propName) {
		    if (process.browser && props[propName] && props[propName].nodeType !== 1) {
		      throw new Error('Draggable\'s offsetParent must be a DOM Node.');
		    }
		  },
		
		  /**
		   * `grid` specifies the x and y that dragging should snap to.
		   */
		  grid: _react.PropTypes.arrayOf(_react.PropTypes.number),
		
		  /**
		   * `handle` specifies a selector to be used as the handle that initiates drag.
		   *
		   * Example:
		   *
		   * ```jsx
		   *   let App = React.createClass({
		   *       render: function () {
		   *         return (
		   *            <Draggable handle=".handle">
		   *              <div>
		   *                  <div className="handle">Click me to drag</div>
		   *                  <div>This is some other content</div>
		   *              </div>
		   *           </Draggable>
		   *         );
		   *       }
		   *   });
		   * ```
		   */
		  handle: _react.PropTypes.string,
		
		  /**
		   * `cancel` specifies a selector to be used to prevent drag initialization.
		   *
		   * Example:
		   *
		   * ```jsx
		   *   let App = React.createClass({
		   *       render: function () {
		   *           return(
		   *               <Draggable cancel=".cancel">
		   *                   <div>
		   *                     <div className="cancel">You can't drag from here</div>
		   *                     <div>Dragging here works fine</div>
		   *                   </div>
		   *               </Draggable>
		   *           );
		   *       }
		   *   });
		   * ```
		   */
		  cancel: _react.PropTypes.string,
		
		  /**
		   * Called when dragging starts.
		   * If this function returns the boolean false, dragging will be canceled.
		   */
		  onStart: _react.PropTypes.func,
		
		  /**
		   * Called while dragging.
		   * If this function returns the boolean false, dragging will be canceled.
		   */
		  onDrag: _react.PropTypes.func,
		
		  /**
		   * Called when dragging stops.
		   * If this function returns the boolean false, the drag will remain active.
		   */
		  onStop: _react.PropTypes.func,
		
		  /**
		   * A workaround option which can be passed if onMouseDown needs to be accessed,
		   * since it'll always be blocked (as there is internal use of onMouseDown)
		   */
		  onMouseDown: _react.PropTypes.func,
		
		  /**
		   * These properties should be defined on the child, not here.
		   */
		  className: _shims.dontSetMe,
		  style: _shims.dontSetMe,
		  transform: _shims.dontSetMe
		};
		DraggableCore.defaultProps = {
		  allowAnyClick: false, // by default only accept left click
		  cancel: null,
		  disabled: false,
		  enableUserSelectHack: true,
		  offsetParent: null,
		  handle: null,
		  grid: null,
		  transform: null,
		  onStart: function onStart() {},
		  onDrag: function onDrag() {},
		  onStop: function onStop() {},
		  onMouseDown: function onMouseDown() {}
		};
		exports.default = DraggableCore;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

	/***/ },
	/* 10 */
	/***/ function(module, exports) {

		// shim for using process in browser
		
		var process = module.exports = {};
		
		// cached from whatever global is present so that test runners that stub it
		// don't break things.  But we need to wrap it in a try catch in case it is
		// wrapped in strict mode code which doesn't define any globals.  It's inside a
		// function because try/catches deoptimize in certain engines.
		
		var cachedSetTimeout;
		var cachedClearTimeout;
		
		(function () {
		  try {
		    cachedSetTimeout = setTimeout;
		  } catch (e) {
		    cachedSetTimeout = function () {
		      throw new Error('setTimeout is not defined');
		    }
		  }
		  try {
		    cachedClearTimeout = clearTimeout;
		  } catch (e) {
		    cachedClearTimeout = function () {
		      throw new Error('clearTimeout is not defined');
		    }
		  }
		} ())
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
		
		function cleanUpNextTick() {
		    if (!draining || !currentQueue) {
		        return;
		    }
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
		
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = cachedSetTimeout(cleanUpNextTick);
		    draining = true;
		
		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    cachedClearTimeout(timeout);
		}
		
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        cachedSetTimeout(drainQueue, 0);
		    }
		};
		
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
		
		function noop() {}
		
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
		
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };


	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = log;
		
		/*eslint no-console:0*/
		function log() {
		  var _console;
		
		  if ((undefined)) (_console = console).log.apply(_console, arguments);
		}

	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=react-draggable.js.map

/***/ },

/***/ 76:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	module.exports = function() {
	  throw new Error("Don't instantiate Resizable directly! Use require('react-resizable').Resizable");
	};

	module.exports.Resizable = __webpack_require__(77).default;
	module.exports.ResizableBox = __webpack_require__(79).default;


/***/ },

/***/ 77:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _reactDraggable = __webpack_require__(75);

	var _cloneElement = __webpack_require__(78);

	var _cloneElement2 = _interopRequireDefault(_cloneElement);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/*:: type Position = {

	};*/
	/*:: type State = {
	  resizing: boolean,
	  width: number, height: number,
	  slackW: number, slackH: number
	};*/
	/*:: type DragCallbackData = {
	  node: HTMLElement,
	  x: number, y: number,
	  deltaX: number, deltaY: number,
	  lastX: number, lastY: number
	};*/

	var Resizable = function (_React$Component) {
	  _inherits(Resizable, _React$Component);

	  function Resizable() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Resizable);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      resizing: false,
	      width: _this.props.width, height: _this.props.height,
	      slackW: 0, slackH: 0
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Resizable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps /*: Object*/) {
	    // If parent changes height/width, set that in our state.
	    if (!this.state.resizing && (nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {
	      this.setState({
	        width: nextProps.width,
	        height: nextProps.height
	      });
	    }
	  };

	  Resizable.prototype.lockAspectRatio = function lockAspectRatio(width /*: number*/, height /*: number*/, aspectRatio /*: number*/) {
	    height = width / aspectRatio;
	    width = height * aspectRatio;
	    return [width, height];
	  };

	  // If you do this, be careful of constraints


	  Resizable.prototype.runConstraints = function runConstraints(width /*: number*/, height /*: number*/) {
	    var min = this.props.minConstraints;
	    var max = this.props.maxConstraints;


	    if (this.props.lockAspectRatio) {
	      var ratio = this.state.width / this.state.height;
	      height = width / ratio;
	      width = height * ratio;
	    }

	    if (!min && !max) return [width, height];

	    var oldW = width;
	    var oldH = height;

	    // Add slack to the values used to calculate bound position. This will ensure that if
	    // we start removing slack, the element won't react to it right away until it's been
	    // completely removed.

	    var _state = this.state;
	    var slackW = _state.slackW;
	    var slackH = _state.slackH;

	    width += slackW;
	    height += slackH;

	    if (min) {
	      width = Math.max(min[0], width);
	      height = Math.max(min[1], height);
	    }
	    if (max) {
	      width = Math.min(max[0], width);
	      height = Math.min(max[1], height);
	    }

	    // If the numbers changed, we must have introduced some slack. Record it for the next iteration.
	    slackW += oldW - width;
	    slackH += oldH - height;
	    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {
	      this.setState({ slackW: slackW, slackH: slackH });
	    }

	    return [width, height];
	  };

	  /**
	   * Wrapper around drag events to provide more useful data.
	   *
	   * @param  {String} handlerName Handler name to wrap.
	   * @return {Function}           Handler function.
	   */


	  Resizable.prototype.resizeHandler = function resizeHandler(handlerName /*: string*/) {
	    var _this2 = this;

	    return function (e, _ref) {
	      var node = _ref.node;
	      var deltaX = _ref.deltaX;
	      var deltaY = _ref.deltaY;

	      var width = _this2.state.width + deltaX;
	      var height = _this2.state.height + deltaY;

	      // Early return if no change
	      var widthChanged = width !== _this2.state.width,
	          heightChanged = height !== _this2.state.height;
	      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;

	      // Set the appropriate state for this handler.

	      var _runConstraints = _this2.runConstraints(width, height);

	      width = _runConstraints[0];
	      height = _runConstraints[1];
	      var newState = {};
	      if (handlerName === 'onResizeStart') {
	        newState.resizing = true;
	      } else if (handlerName === 'onResizeStop') {
	        newState.resizing = false;
	        newState.slackW = newState.slackH = 0;
	      } else {
	        // Early return if no change after constraints
	        if (width === _this2.state.width && height === _this2.state.height) return;
	        newState.width = width;
	        newState.height = height;
	      }

	      _this2.setState(newState, function () {
	        _this2.props[handlerName] && _this2.props[handlerName](e, { node: node, size: { width: width, height: height } });
	      });
	    };
	  };

	  Resizable.prototype.render = function render() {
	    // eslint-disable-next-line no-unused-vars
	    var _props = this.props;
	    var children = _props.children;
	    var draggableOpts = _props.draggableOpts;
	    var width = _props.width;
	    var height = _props.height;
	    var handleSize = _props.handleSize;
	    var lockAspectRatio = _props.lockAspectRatio;
	    var minConstraints = _props.minConstraints;
	    var maxConstraints = _props.maxConstraints;
	    var onResize = _props.onResize;
	    var onResizeStop = _props.onResizeStop;
	    var onResizeStart = _props.onResizeStart;

	    var p = _objectWithoutProperties(_props, ['children', 'draggableOpts', 'width', 'height', 'handleSize', 'lockAspectRatio', 'minConstraints', 'maxConstraints', 'onResize', 'onResizeStop', 'onResizeStart']);

	    var className = p.className ? p.className + ' react-resizable' : 'react-resizable';

	    // What we're doing here is getting the child of this element, and cloning it with this element's props.
	    // We are then defining its children as:
	    // Its original children (resizable's child's children), and
	    // A draggable handle.
	    return (0, _cloneElement2.default)(children, _extends({}, p, {
	      className: className,
	      children: [children.props.children, _react2.default.createElement(
	        _reactDraggable.DraggableCore,
	        _extends({}, draggableOpts, {
	          key: 'resizableHandle',
	          ref: 'draggable',
	          onStop: this.resizeHandler('onResizeStop'),
	          onStart: this.resizeHandler('onResizeStart'),
	          onDrag: this.resizeHandler('onResize')
	        }),
	        _react2.default.createElement('span', { className: 'react-resizable-handle' })
	      )]
	    }));
	  };

	  return Resizable;
	}(_react2.default.Component);

	Resizable.propTypes = {
	  //
	  // Required Props
	  //

	  // Require that one and only one child be present.
	  children: _react.PropTypes.element.isRequired,

	  // Initial w/h
	  width: _react.PropTypes.number.isRequired,
	  height: _react.PropTypes.number.isRequired,

	  //
	  // Optional props
	  //

	  // If you change this, be sure to update your css
	  handleSize: _react.PropTypes.array,

	  // If true, will only allow width/height to move in lockstep
	  lockAspectRatio: _react.PropTypes.bool,

	  // Min/max size
	  minConstraints: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  maxConstraints: _react.PropTypes.arrayOf(_react.PropTypes.number),

	  // Callbacks
	  onResizeStop: _react.PropTypes.func,
	  onResizeStart: _react.PropTypes.func,
	  onResize: _react.PropTypes.func,

	  // These will be passed wholesale to react-draggable's DraggableCore
	  draggableOpts: _react.PropTypes.object
	};
	Resizable.defaultProps = {
	  handleSize: [20, 20],
	  lockAspectRatio: false,
	  minConstraints: [20, 20],
	  maxConstraints: [Infinity, Infinity]
	};
	exports.default = Resizable;

/***/ },

/***/ 78:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// React.addons.cloneWithProps look-alike that merges style & className.
	module.exports = function cloneElement(element /*: React.Element*/, props /*: Object*/) /*: React.Element*/ {
	  if (props.style && element.props.style) {
	    props.style = _extends({}, element.props.style, props.style);
	  }
	  if (props.className && element.props.className) {
	    props.className = element.props.className + ' ' + props.className;
	  }
	  return _react2.default.cloneElement(element, props);
	};

/***/ },

/***/ 79:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _Resizable = __webpack_require__(77);

	var _Resizable2 = _interopRequireDefault(_Resizable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/*:: type State = {width: number, height: number, aspectRatio: number};*/
	/*:: type Size = {width: number, height: number};*/


	// An example use of Resizable.
	/*:: type ResizeData = {element: Element, size: Size};*/

	var ResizableBox = function (_React$Component) {
	  _inherits(ResizableBox, _React$Component);

	  function ResizableBox() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, ResizableBox);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      width: _this.props.width,
	      height: _this.props.height
	    }, _this.onResize = function (event, _ref) {
	      var element = _ref.element;
	      var size = _ref.size;
	      var width = size.width;
	      var height = size.height;


	      _this.setState(size, function () {
	        _this.props.onResize && _this.props.onResize(event, { element: element, size: size });
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  ResizableBox.prototype.render = function render() {
	    // Basic wrapper around a Resizable instance.
	    // If you use Resizable directly, you are responsible for updating the child component
	    // with a new width and height.
	    var _props = this.props;
	    var handleSize = _props.handleSize;
	    var onResizeStart = _props.onResizeStart;
	    var onResizeStop = _props.onResizeStop;
	    var draggableOpts = _props.draggableOpts;
	    var minConstraints = _props.minConstraints;
	    var maxConstraints = _props.maxConstraints;
	    var lockAspectRatio = _props.lockAspectRatio;
	    var width = _props.width;
	    var height = _props.height;

	    var props = _objectWithoutProperties(_props, ['handleSize', 'onResizeStart', 'onResizeStop', 'draggableOpts', 'minConstraints', 'maxConstraints', 'lockAspectRatio', 'width', 'height']);

	    return _react2.default.createElement(
	      _Resizable2.default,
	      {
	        handleSize: handleSize,
	        width: this.state.width,
	        height: this.state.height,
	        onResizeStart: onResizeStart,
	        onResize: this.onResize,
	        onResizeStop: onResizeStop,
	        draggableOpts: draggableOpts,
	        minConstraints: minConstraints,
	        maxConstraints: maxConstraints,
	        lockAspectRatio: lockAspectRatio
	      },
	      _react2.default.createElement('div', _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props))
	    );
	  };

	  return ResizableBox;
	}(_react2.default.Component);

	ResizableBox.propTypes = {
	  height: _react.PropTypes.number,
	  width: _react.PropTypes.number
	};
	ResizableBox.defaultProps = {
	  handleSize: [20, 20]
	};
	exports.default = ResizableBox;

/***/ },

/***/ 80:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _lodash = __webpack_require__(72);

	var _lodash2 = _interopRequireDefault(_lodash);

	var _utils = __webpack_require__(73);

	var _responsiveUtils = __webpack_require__(81);

	var _ReactGridLayout = __webpack_require__(71);

	var _ReactGridLayout2 = _interopRequireDefault(_ReactGridLayout);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var noop = function noop() {};

	/*:: import type {Layout} from './utils';*/
	/*:: type State = {
	  layout: Layout,
	  breakpoint: string,
	  cols: number
	};*/

	var ResponsiveReactGridLayout = function (_React$Component) {
	  _inherits(ResponsiveReactGridLayout, _React$Component);

	  function ResponsiveReactGridLayout() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, ResponsiveReactGridLayout);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = _this.generateInitialState(), _this.onLayoutChange = function (layout) {
	      var _extends2;

	      _this.props.onLayoutChange(layout, _extends({}, _this.props.layouts, (_extends2 = {}, _extends2[_this.state.breakpoint] = layout, _extends2)));
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  // This should only include propTypes needed in this code; RGL itself
	  // will do validation of the rest props passed to it.


	  ResponsiveReactGridLayout.prototype.generateInitialState = function generateInitialState() {
	    var _props = this.props;
	    var width = _props.width;
	    var breakpoints = _props.breakpoints;
	    var layouts = _props.layouts;
	    var verticalCompact = _props.verticalCompact;
	    var cols = _props.cols;

	    var breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);
	    var colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);
	    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist
	    // for this layout.
	    var initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, verticalCompact);

	    return {
	      layout: initialLayout,
	      breakpoint: breakpoint,
	      cols: colNo
	    };
	  };

	  ResponsiveReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps /*: Object*/) {

	    // Allow parent to set width or breakpoint directly.
	    if (nextProps.width != this.props.width || nextProps.breakpoint !== this.props.breakpoint || nextProps.breakpoints !== this.props.breakpoints || nextProps.cols !== this.props.cols) {
	      this.onWidthChange(nextProps);
	    }

	    // Allow parent to set layouts directly.
	    else if (!(0, _lodash2.default)(nextProps.layouts, this.props.layouts)) {
	        var _state = this.state;
	        var _breakpoint = _state.breakpoint;
	        var _cols = _state.cols;

	        // Since we're setting an entirely new layout object, we must generate a new responsive layout
	        // if one does not exist.

	        var newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, _breakpoint, _breakpoint, _cols, nextProps.verticalLayout);
	        this.setState({ layout: newLayout });
	      }
	  };

	  // wrap layouts so we do not need to pass layouts to child


	  /**
	   * When the width changes work through breakpoints and reset state with the new width & breakpoint.
	   * Width changes are necessary to figure out the widget widths.
	   */

	  ResponsiveReactGridLayout.prototype.onWidthChange = function onWidthChange(nextProps /*: typeof ResponsiveReactGridLayout.prototype.props*/) {
	    var breakpoints = nextProps.breakpoints;
	    var verticalLayout = nextProps.verticalLayout;
	    var verticalCompact = nextProps.verticalCompact;
	    var cols = nextProps.cols;

	    var newBreakpoint = nextProps.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(nextProps.breakpoints, nextProps.width);

	    var lastBreakpoint = this.state.breakpoint;

	    // Breakpoint change
	    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {

	      // Store the current layout
	      var layouts = nextProps.layouts;
	      layouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);

	      // Find or generate a new one.
	      var newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);
	      var _layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, verticalLayout);

	      // This adds missing items.
	      _layout = (0, _utils.synchronizeLayoutWithChildren)(_layout, nextProps.children, newCols, verticalCompact);

	      // Store this new layout as well.
	      layouts[newBreakpoint] = _layout;

	      // callbacks
	      this.props.onLayoutChange(_layout, layouts);
	      this.props.onBreakpointChange(newBreakpoint, newCols);
	      this.props.onWidthChange(nextProps.width, nextProps.margin, newCols);

	      this.setState({ breakpoint: newBreakpoint, layout: _layout, cols: newCols });
	    }
	  };

	  ResponsiveReactGridLayout.prototype.render = function render() {
	    var _props2 = this.props;
	    var breakpoint = _props2.breakpoint;
	    var breakpoints = _props2.breakpoints;
	    var cols = _props2.cols;
	    var layouts = _props2.layouts;
	    var onBreakpointChange = _props2.onBreakpointChange;
	    var onLayoutChange = _props2.onLayoutChange;
	    var onWidthChange = _props2.onWidthChange;

	    var other = _objectWithoutProperties(_props2, ['breakpoint', 'breakpoints', 'cols', 'layouts', 'onBreakpointChange', 'onLayoutChange', 'onWidthChange']);

	    return _react2.default.createElement(_ReactGridLayout2.default, _extends({}, other, {
	      onLayoutChange: this.onLayoutChange,
	      layout: this.state.layout,
	      cols: this.state.cols
	    }));
	  };

	  return ResponsiveReactGridLayout;
	}(_react2.default.Component);

	ResponsiveReactGridLayout.propTypes = {

	  //
	  // Basic props
	  //

	  // Optional, but if you are managing width yourself you may want to set the breakpoint
	  // yourself as well.
	  breakpoint: _react2.default.PropTypes.string,

	  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}
	  breakpoints: _react2.default.PropTypes.object,

	  // # of cols. This is a breakpoint -> cols map
	  cols: _react2.default.PropTypes.object,

	  // layouts is an object mapping breakpoints to layouts.
	  // e.g. {lg: Layout, md: Layout, ...}
	  layouts: function layouts(props) {
	    _react2.default.PropTypes.object.isRequired.apply(this, arguments);
	    Object.keys(props.layouts).forEach(function (key) {
	      return (0, _utils.validateLayout)(props.layouts[key], 'layouts.' + key);
	    });
	  },

	  // The width of this component.
	  // Required in this propTypes stanza because generateInitialState() will fail without it.
	  width: _react2.default.PropTypes.number.isRequired,

	  //
	  // Callbacks
	  //

	  // Calls back with breakpoint and new # cols
	  onBreakpointChange: _react2.default.PropTypes.func,

	  // Callback so you can save the layout.
	  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.
	  onLayoutChange: _react2.default.PropTypes.func,

	  // Calls back with (containerWidth, margin, cols)
	  onWidthChange: _react2.default.PropTypes.func
	};
	ResponsiveReactGridLayout.defaultProps = {
	  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },
	  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },
	  layouts: {},
	  onBreakpointChange: noop,
	  onLayoutChange: noop,
	  onWidthChange: noop
	};
	exports.default = ResponsiveReactGridLayout;

/***/ },

/***/ 81:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.getBreakpointFromWidth = getBreakpointFromWidth;
	exports.getColsFromBreakpoint = getColsFromBreakpoint;
	exports.findOrGenerateResponsiveLayout = findOrGenerateResponsiveLayout;
	exports.sortBreakpoints = sortBreakpoints;

	var _utils = __webpack_require__(73);

	/*:: import type {Layout} from './utils';*/
	/*:: export type ResponsiveLayout = {lg?: Layout, md?: Layout, sm?: Layout, xs?: Layout, xxs?: Layout};*/
	/*:: type Breakpoint = string;*/


	/**
	 * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).
	 *
	 * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})
	 * @param  {Number} width Screen width.
	 * @return {String}       Highest breakpoint that is less than width.
	 */
	/*:: type Breakpoints = {lg?: number, md?: number, sm?: number, xs?: number, xxs?: number};*/
	function getBreakpointFromWidth(breakpoints /*: Breakpoints*/, width /*: number*/) /*: Breakpoint*/ {
	  var sorted = sortBreakpoints(breakpoints);
	  var matching = sorted[0];
	  for (var i = 1, len = sorted.length; i < len; i++) {
	    var breakpointName = sorted[i];
	    if (width > breakpoints[breakpointName]) matching = breakpointName;
	  }
	  return matching;
	}

	/**
	 * Given a breakpoint, get the # of cols set for it.
	 * @param  {String} breakpoint Breakpoint name.
	 * @param  {Object} cols       Map of breakpoints to cols.
	 * @return {Number}            Number of cols.
	 */
	function getColsFromBreakpoint(breakpoint /*: Breakpoint*/, cols /*: Breakpoints*/) /*: number*/ {
	  if (!cols[breakpoint]) {
	    throw new Error("ResponsiveReactGridLayout: `cols` entry for breakpoint " + breakpoint + " is missing!");
	  }
	  return cols[breakpoint];
	}

	/**
	 * Given existing layouts and a new breakpoint, find or generate a new layout.
	 *
	 * This finds the layout above the new one and generates from it, if it exists.
	 *
	 * @param  {Object} layouts     Existing layouts.
	 * @param  {Array} breakpoints All breakpoints.
	 * @param  {String} breakpoint New breakpoint.
	 * @param  {String} breakpoint Last breakpoint (for fallback).
	 * @param  {Number} cols       Column count at new breakpoint.
	 * @param  {Boolean} verticalCompact Whether or not to compact the layout
	 *   vertically.
	 * @return {Array}             New layout.
	 */
	function findOrGenerateResponsiveLayout(layouts /*: ResponsiveLayout*/, breakpoints /*: Breakpoints*/, breakpoint /*: Breakpoint*/, lastBreakpoint /*: Breakpoint*/, cols /*: number*/, verticalCompact /*: boolean*/) /*: Layout*/ {
	  // If it already exists, just return it.
	  if (layouts[breakpoint]) return (0, _utils.cloneLayout)(layouts[breakpoint]);
	  // Find or generate the next layout
	  var layout = layouts[lastBreakpoint];
	  var breakpointsSorted = sortBreakpoints(breakpoints);
	  var breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));
	  for (var i = 0, len = breakpointsAbove.length; i < len; i++) {
	    var b = breakpointsAbove[i];
	    if (layouts[b]) {
	      layout = layouts[b];
	      break;
	    }
	  }
	  layout = (0, _utils.cloneLayout)(layout || []); // clone layout so we don't modify existing items
	  return (0, _utils.compact)((0, _utils.correctBounds)(layout, { cols: cols }), verticalCompact);
	}

	/**
	 * Given breakpoints, return an array of breakpoints sorted by width. This is usually
	 * e.g. ['xxs', 'xs', 'sm', ...]
	 *
	 * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.
	 * @return {Array}              Sorted breakpoints.
	 */
	function sortBreakpoints(breakpoints /*: Breakpoints*/) /*: Array<Breakpoint>*/ {
	  var keys /*: Array<string>*/ = Object.keys(breakpoints);
	  return keys.sort(function (a, b) {
	    return breakpoints[a] - breakpoints[b];
	  });
	}

/***/ },

/***/ 82:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(20);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(43);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // @noflow
	// Intentional; Flow can't handle the bind on L20


	/*
	 * A simple HOC that provides facility for listening to container resizes.
	 */
	/*:: type State = {
	  mounted: boolean,
	  width: number
	};*/

	exports.default = function (ComposedComponent /*: ReactClass*/) /*: ReactClass*/ {
	  var _class, _temp2;

	  return _temp2 = _class = function (_React$Component) {
	    _inherits(_class, _React$Component);

	    function _class() {
	      var _temp, _this, _ret;

	      _classCallCheck(this, _class);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	        mounted: false,
	        width: 1280
	      }, _this.onWindowResize = function (_event /*: Event*/, cb /*: ?Function*/) {
	        var node = _reactDom2.default.findDOMNode(_this);
	        _this.setState({ width: node.offsetWidth }, cb);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    _class.prototype.componentDidMount = function componentDidMount() {
	      this.setState({ mounted: true });

	      window.addEventListener('resize', this.onWindowResize);
	      // Call to properly set the breakpoint and resize the elements.
	      // Note that if you're doing a full-width element, this can get a little wonky if a scrollbar
	      // appears because of the grid. In that case, fire your own resize event, or set `overflow: scroll` on your body.
	      this.onWindowResize();
	    };

	    _class.prototype.componentWillUnmount = function componentWillUnmount() {
	      window.removeEventListener('resize', this.onWindowResize);
	    };

	    _class.prototype.render = function render() {
	      if (this.props.measureBeforeMount && !this.state.mounted) return _react2.default.createElement('div', _extends({}, this.props, this.state));
	      return _react2.default.createElement(ComposedComponent, _extends({}, this.props, this.state));
	    };

	    return _class;
	  }(_react2.default.Component), _class.defaultProps = {
	    measureBeforeMount: false
	  }, _class.propTypes = {
	    // If true, will not render children until mounted. Useful for getting the exact width before
	    // rendering, to prevent any unsightly resizing.
	    measureBeforeMount: _react2.default.PropTypes.bool
	  }, _temp2;
	};

/***/ },

/***/ 89:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(_) {!function(t,e){ true?module.exports=e(__webpack_require__(20)):"function"==typeof define&&define.amd?define(["react"],e):"object"==typeof exports?exports.ReduxForm=e(require("react")):t.ReduxForm=e(t.React)}(this,function(t){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0,e.untouchWithKey=e.untouch=e.touchWithKey=e.touch=e.swapArrayValues=e.stopSubmit=e.stopAsyncValidation=e.startSubmit=e.startAsyncValidation=e.reset=e.propTypes=e.initializeWithKey=e.initialize=e.getValues=e.removeArrayValue=e.reduxForm=e.reducer=e.focus=e.destroy=e.changeWithKey=e.change=e.blur=e.addArrayValue=e.actionTypes=void 0;var i=r(3),o=n(i),u=r(58),a=r(28),s=n(a),c="undefined"!=typeof window&&window.navigator&&window.navigator.product&&"ReactNative"===window.navigator.product,f=(0,s.default)(c,o.default,u.connect),l=f.actionTypes,d=f.addArrayValue,p=f.blur,h=f.change,y=f.changeWithKey,v=f.destroy,b=f.focus,m=f.reducer,g=f.reduxForm,_=f.removeArrayValue,O=f.getValues,A=f.initialize,w=f.initializeWithKey,P=f.propTypes,S=f.reset,j=f.startAsyncValidation,V=f.startSubmit,T=f.stopAsyncValidation,E=f.stopSubmit,x=f.swapArrayValues,R=f.touch,M=f.touchWithKey,F=f.untouch,C=f.untouchWithKey;e.actionTypes=l,e.addArrayValue=d,e.blur=p,e.change=h,e.changeWithKey=y,e.destroy=v,e.focus=b,e.reducer=m,e.reduxForm=g,e.removeArrayValue=_,e.getValues=O,e.initialize=A,e.initializeWithKey=w,e.propTypes=P,e.reset=S,e.startAsyncValidation=j,e.startSubmit=V,e.stopAsyncValidation=T,e.stopSubmit=E,e.swapArrayValues=x,e.touch=R,e.touchWithKey=M,e.untouch=F,e.untouchWithKey=C},function(t,e){"use strict";function r(t){return t&&o(t)&&Object.defineProperty(t,i,{value:!0}),t}function n(t){return!!(t&&o(t)&&t[i])}e.__esModule=!0,e.makeFieldValue=r,e.isFieldValue=n;var i="_isFieldValue",o=function(t){return"object"==typeof t}},function(t,e){"use strict";function r(t){return Array.isArray(t)?t.reduce(function(t,e){return t&&r(e)},!0):t&&"object"==typeof t?Object.keys(t).reduce(function(e,n){return e&&r(t[n])},!0):!t}e.__esModule=!0,e.default=r},function(e,r){e.exports=t},function(t,e){"use strict";e.__esModule=!0;e.ADD_ARRAY_VALUE="redux-form/ADD_ARRAY_VALUE",e.BLUR="redux-form/BLUR",e.CHANGE="redux-form/CHANGE",e.DESTROY="redux-form/DESTROY",e.FOCUS="redux-form/FOCUS",e.INITIALIZE="redux-form/INITIALIZE",e.REMOVE_ARRAY_VALUE="redux-form/REMOVE_ARRAY_VALUE",e.RESET="redux-form/RESET",e.START_ASYNC_VALIDATION="redux-form/START_ASYNC_VALIDATION",e.START_SUBMIT="redux-form/START_SUBMIT",e.STOP_ASYNC_VALIDATION="redux-form/STOP_ASYNC_VALIDATION",e.STOP_SUBMIT="redux-form/STOP_SUBMIT",e.SUBMIT_FAILED="redux-form/SUBMIT_FAILED",e.SWAP_ARRAY_VALUES="redux-form/SWAP_ARRAY_VALUES",e.TOUCH="redux-form/TOUCH",e.UNTOUCH="redux-form/UNTOUCH"},function(t,e){"use strict";function r(t,e){return t?Object.keys(t).reduce(function(r,i){var o;return n({},r,(o={},o[i]=e(t[i],i),o))},{}):t}e.__esModule=!0;var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.default=r},function(t,e){function r(t){return!!t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof t.then}t.exports=r},function(t,e,r){"use strict";e.__esModule=!0,e.untouch=e.touch=e.swapArrayValues=e.submitFailed=e.stopSubmit=e.stopAsyncValidation=e.startSubmit=e.startAsyncValidation=e.reset=e.removeArrayValue=e.initialize=e.focus=e.destroy=e.change=e.blur=e.addArrayValue=void 0;var n=r(4);e.addArrayValue=function(t,e,r,i){return{type:n.ADD_ARRAY_VALUE,path:t,value:e,index:r,fields:i}},e.blur=function(t,e){return{type:n.BLUR,field:t,value:e}},e.change=function(t,e){return{type:n.CHANGE,field:t,value:e}},e.destroy=function(){return{type:n.DESTROY}},e.focus=function(t){return{type:n.FOCUS,field:t}},e.initialize=function(t,e){if(!Array.isArray(e))throw new Error("must provide fields array to initialize() action creator");return{type:n.INITIALIZE,data:t,fields:e}},e.removeArrayValue=function(t,e){return{type:n.REMOVE_ARRAY_VALUE,path:t,index:e}},e.reset=function(){return{type:n.RESET}},e.startAsyncValidation=function(t){return{type:n.START_ASYNC_VALIDATION,field:t}},e.startSubmit=function(){return{type:n.START_SUBMIT}},e.stopAsyncValidation=function(t){return{type:n.STOP_ASYNC_VALIDATION,errors:t}},e.stopSubmit=function(t){return{type:n.STOP_SUBMIT,errors:t}},e.submitFailed=function(){return{type:n.SUBMIT_FAILED}},e.swapArrayValues=function(t,e,r){return{type:n.SWAP_ARRAY_VALUES,path:t,indexA:e,indexB:r}},e.touch=function(){for(var t=arguments.length,e=Array(t),r=0;t>r;r++)e[r]=arguments[r];return{type:n.TOUCH,fields:e}},e.untouch=function(){for(var t=arguments.length,e=Array(t),r=0;t>r;r++)e[r]=arguments[r];return{type:n.UNTOUCH,fields:e}}},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){return"function"==typeof t?function(){return o({},t.apply(void 0,arguments),e)}:"object"==typeof t?(0,a.default)(t,function(t){return i(t,e)}):t}e.__esModule=!0;var o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.default=i;var u=r(5),a=n(u)},function(t,e){"use strict";e.__esModule=!0;var r=e.dataKey="value",n=function(t,e){return function(t){t.dataTransfer.setData(r,e())}};e.default=n},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(11),o=n(i),u=function(t){var e=[];if(t)for(var r=0;r<t.length;r++){var n=t[r];n.selected&&e.push(n.value)}return e},a=function(t,e){if((0,o.default)(t)){if(!e&&t.nativeEvent&&void 0!==t.nativeEvent.text)return t.nativeEvent.text;if(e&&void 0!==t.nativeEvent)return t.nativeEvent.text;var r=t.target,n=r.type,i=r.value,a=r.checked,s=r.files,c=t.dataTransfer;return"checkbox"===n?a:"file"===n?s||c&&c.files:"select-multiple"===n?u(t.target.options):i}return t&&"object"==typeof t&&void 0!==t.value?t.value:t};e.default=a},function(t,e){"use strict";e.__esModule=!0;var r=function(t){return!!(t&&t.stopPropagation&&t.preventDefault)};e.default=r},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(11),o=n(i),u=function(t){var e=(0,o.default)(t);return e&&t.preventDefault(),e};e.default=u},function(t,e){"use strict";function r(t){return t.displayName||t.name||"Component"}e.__esModule=!0,e.default=r},function(t,e){"use strict";e.__esModule=!0;var r=function i(t,e,r){var n=t.indexOf("."),o=t.indexOf("["),u=t.indexOf("]");if(o>0&&u!==o+1)throw new Error("found [ not followed by ]");if(o>0&&(0>n||n>o))!function(){var n=t.substring(0,o),a=t.substring(u+1);"."===a[0]&&(a=a.substring(1));var s=e&&e[n]||[];a?(r[n]||(r[n]=[]),s.forEach(function(t,e){r[n][e]||(r[n][e]={}),i(a,t,r[n][e])})):r[n]=s.map(function(t){return t&&t.value})}();else if(n>0){var a=t.substring(0,n),s=t.substring(n+1);r[a]||(r[a]={}),i(s,e&&e[a]||{},r[a])}else r[t]=e[t]&&e[t].value},n=function(t,e){return t.reduce(function(t,n){return r(n,e,t),t},{})};e.default=n},function(t,e,r){"use strict";e.__esModule=!0;var n=r(1),i=function o(t){if(!t)return t;var e=Object.keys(t);if(e.length)return e.reduce(function(e,r){var i=t[r];if(i)if(i.hasOwnProperty&&i.hasOwnProperty("value"))void 0!==i.value&&(e[r]=i.value);else if(Array.isArray(i))e[r]=i.map(function(t){return(0,n.isFieldValue)(t)?t.value:o(t)});else if("object"==typeof i){var u=o(i);u&&Object.keys(u).length>0&&(e[r]=u)}return e},{})};e.default=i},function(t,e){"use strict";e.__esModule=!0;var r=function n(t,e){if(!t||!e)return e;var r=t.indexOf(".");if(0===r)return n(t.substring(1),e);var i=t.indexOf("["),o=t.indexOf("]");if(r>=0&&(0>i||i>r))return n(t.substring(r+1),e[t.substring(0,r)]);if(i>=0&&(0>r||r>i)){if(0>o)throw new Error("found [ but no ]");var u=t.substring(0,i),a=t.substring(i+1,o);if(!a.length)return e[u];if(0===i)return n(t.substring(o+1),e[a]);if(!e[u])return;return n(t.substring(o+1),e[u][a])}return e[t]};e.default=r},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){var r={};for(var n in t)e.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}function o(){var t,e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n=r.form,o=r.key,u=i(r,["form","key"]);if(!n)return e;if(o){var a,s;if(r.type===f.DESTROY){var l;return c({},e,(l={},l[n]=e[n]&&Object.keys(e[n]).reduce(function(t,r){var i;return r===o?t:c({},t,(i={},i[r]=e[n][r],i))},{}),l))}return c({},e,(s={},s[n]=c({},e[n],(a={},a[o]=R((e[n]||{})[o],u),a)),s))}return r.type===f.DESTROY?Object.keys(e).reduce(function(t,r){var i;return r===n?t:c({},t,(i={},i[r]=e[r],i))},{}):c({},e,(t={},t[n]=R(e[n],u),t))}function u(t){return t.plugin=function(t){var e=this;return u(function(){var r=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=e(r,n);return c({},i,(0,d.default)(t,function(t,e){return t(i[e]||E,n)}))})},t.normalize=function(t){var e=this;return u(function(){var r=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=e(r,n);return c({},i,(0,d.default)(t,function(t,e){var o=function(e,r){var n=(0,m.default)(c({},E,e)),i=c({},E,r),o=(0,m.default)(i);return(0,V.default)(t,i,e,o,n)};if(n.key){var u;return c({},i[e],(u={},u[n.key]=o(r[e][n.key],i[e][n.key]),u))}return o(r[e],i[e])}))})},t}e.__esModule=!0,e.initialState=e.globalErrorKey=void 0;var a,s,c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},f=r(4),l=r(5),d=n(l),p=r(16),h=n(p),y=r(18),v=n(y),b=r(15),m=n(b),g=r(39),_=n(g),O=r(45),A=n(O),w=r(46),P=n(w),S=r(1),j=r(41),V=n(j),T=e.globalErrorKey="_error",E=e.initialState=(a={_active:void 0,_asyncValidating:!1},a[T]=void 0,a._initialized=!1,a._submitting=!1,a._submitFailed=!1,a),x=(s={},s[f.ADD_ARRAY_VALUE]=function(t,e){var r=e.path,n=e.index,i=e.value,o=e.fields,u=(0,h.default)(r,t),a=c({},t),s=u?[].concat(u):[],f=null!==i&&"object"==typeof i?(0,_.default)(i,o||Object.keys(i)):(0,S.makeFieldValue)({value:i});return void 0===n?s.push(f):s.splice(n,0,f),(0,v.default)(r,s,a)},s[f.BLUR]=function(t,e){var r=e.field,n=e.value,o=e.touch,u=(t._active,i(t,["_active"]));return(0,v.default)(r,function(t){var e=c({},t);return void 0!==n&&(e.value=n),o&&(e.touched=!0),(0,S.makeFieldValue)(e)},u)},s[f.CHANGE]=function(t,e){var r=e.field,n=e.value,o=e.touch;return(0,v.default)(r,function(t){var e=c({},t,{value:n}),r=(e.asyncError,e.submitError,i(e,["asyncError","submitError"]));return o&&(r.touched=!0),(0,S.makeFieldValue)(r)},t)},s[f.DESTROY]=function(){},s[f.FOCUS]=function(t,e){var r=e.field,n=(0,v.default)(r,function(t){return(0,S.makeFieldValue)(c({},t,{visited:!0}))},t);return n._active=r,n},s[f.INITIALIZE]=function(t,e){var r,n=e.data,i=e.fields;return c({},(0,_.default)(n,i,t),(r={_asyncValidating:!1,_active:void 0},r[T]=void 0,r._initialized=!0,r._submitting=!1,r._submitFailed=!1,r))},s[f.REMOVE_ARRAY_VALUE]=function(t,e){var r=e.path,n=e.index,i=(0,h.default)(r,t),o=c({},t),u=i?[].concat(i):[];return void 0===n?u.pop():isNaN(n)?delete u[n]:u.splice(n,1),(0,v.default)(r,u,o)},s[f.RESET]=function(t){var e;return c({},(0,A.default)(t),(e={_active:void 0,_asyncValidating:!1},e[T]=void 0,e._initialized=t._initialized,e._submitting=!1,e._submitFailed=!1,e))},s[f.START_ASYNC_VALIDATION]=function(t,e){var r=e.field;return c({},t,{_asyncValidating:r||!0})},s[f.START_SUBMIT]=function(t){return c({},t,{_submitting:!0})},s[f.STOP_ASYNC_VALIDATION]=function(t,e){var r,n=e.errors;return c({},(0,P.default)(t,n,"asyncError"),(r={_asyncValidating:!1},r[T]=n&&n[T],r))},s[f.STOP_SUBMIT]=function(t,e){var r,n=e.errors;return c({},(0,P.default)(t,n,"submitError"),(r={},r[T]=n&&n[T],r._submitting=!1,r._submitFailed=!(!n||!Object.keys(n).length),r))},s[f.SUBMIT_FAILED]=function(t){return c({},t,{_submitFailed:!0})},s[f.SWAP_ARRAY_VALUES]=function(t,e){var r=e.path,n=e.indexA,i=e.indexB,o=(0,h.default)(r,t),u=o.length;if(n===i||isNaN(n)||isNaN(i)||n>=u||i>=u)return t;var a=c({},t),s=[].concat(o);return s[n]=o[i],s[i]=o[n],(0,v.default)(r,s,a)},s[f.TOUCH]=function(t,e){var r=e.fields;return c({},t,r.reduce(function(t,e){return(0,v.default)(e,function(t){return(0,S.makeFieldValue)(c({},t,{touched:!0}))},t)},t))},s[f.UNTOUCH]=function(t,e){var r=e.fields;return c({},t,r.reduce(function(t,e){return(0,v.default)(e,function(t){if(t){var e=(t.touched,i(t,["touched"]));return(0,S.makeFieldValue)(e)}return(0,S.makeFieldValue)(t)},t)},t))},s),R=function(){var t=arguments.length<=0||void 0===arguments[0]?E:arguments[0],e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=x[e.type];return r?r(t,e):t};e.default=u(o)},function(t,e){"use strict";e.__esModule=!0;var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},n=function i(t,e,n){var o,u=t.indexOf(".");if(0===u)return i(t.substring(1),e,n);var a=t.indexOf("["),s=t.indexOf("]");if(u>=0&&(0>a||a>u)){var c,f=t.substring(0,u);return r({},n,(c={},c[f]=i(t.substring(u+1),e,n[f]||{}),c))}if(a>=0&&(0>u||u>a)){var l=function(){var o;if(0>s)throw new Error("found [ but no ]");var u=t.substring(0,a),c=t.substring(a+1,s),f=n[u]||[],l=t.substring(s+1);if(c){var d;if(l.length){var p,h=f[c]||{},y=[].concat(f);return y[c]=i(l,e,h),{v:r({},n||{},(p={},p[u]=y,p))}}var v=[].concat(f);return v[c]="function"==typeof e?e(v[c]):e,{v:r({},n||{},(d={},d[u]=v,d))}}if(l.length){var b;if(!(f&&f.length||"function"!=typeof e))return{v:n};var m=f.map(function(t){return i(l,e,t)});return{v:r({},n||{},(b={},b[u]=m,b))}}var g=void 0;if(Array.isArray(e))g=e;else if(n[u])g=f.map(function(t){return"function"==typeof e?e(t):e});else{if("function"==typeof e)return{v:n};g=e}return{v:r({},n||{},(o={},o[u]=g,o))}}();if("object"==typeof l)return l.v}return r({},n,(o={},o[t]="function"==typeof e?e(n[t]):e,o))};e.default=n},function(t,e,r){function n(t){return null===t||void 0===t}function i(t){return t&&"object"==typeof t&&"number"==typeof t.length?"function"!=typeof t.copy||"function"!=typeof t.slice?!1:!(t.length>0&&"number"!=typeof t[0]):!1}function o(t,e,r){var o,f;if(n(t)||n(e))return!1;if(t.prototype!==e.prototype)return!1;if(s(t))return s(e)?(t=u.call(t),e=u.call(e),c(t,e,r)):!1;if(i(t)){if(!i(e))return!1;if(t.length!==e.length)return!1;for(o=0;o<t.length;o++)if(t[o]!==e[o])return!1;return!0}try{var l=a(t),d=a(e)}catch(p){return!1}if(l.length!=d.length)return!1;for(l.sort(),d.sort(),o=l.length-1;o>=0;o--)if(l[o]!=d[o])return!1;for(o=l.length-1;o>=0;o--)if(f=l[o],!c(t[f],e[f],r))return!1;return typeof t==typeof e}var u=Array.prototype.slice,a=r(52),s=r(51),c=t.exports=function(t,e,r){return r||(r={}),t===e?!0:t instanceof Date&&e instanceof Date?t.getTime()===e.getTime():!t||!e||"object"!=typeof t&&"object"!=typeof e?r.strict?t===e:t==e:o(t,e,r)}},function(t,e){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,mixins:!0,propTypes:!0,type:!0},n={name:!0,length:!0,prototype:!0,caller:!0,arguments:!0,arity:!0};t.exports=function(t,e){for(var i=Object.getOwnPropertyNames(e),o=0;o<i.length;++o)if(!r[i[o]]&&!n[i[o]])try{t[i[o]]=e[i[o]]}catch(u){}return t}},function(t,e,r){"use strict";e.__esModule=!0;var n=r(3);e.default=n.PropTypes.shape({subscribe:n.PropTypes.func.isRequired,dispatch:n.PropTypes.func.isRequired,getState:n.PropTypes.func.isRequired})},function(t,e){"use strict";function r(){for(var t=arguments.length,e=Array(t),r=0;t>r;r++)e[r]=arguments[r];return function(){if(0===e.length)return arguments.length<=0?void 0:arguments[0];var t=e[e.length-1],r=e.slice(0,-1);return r.reduceRight(function(t,e){return e(t)},t.apply(void 0,arguments))}}e.__esModule=!0,e.default=r},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e,r){function n(){h===p&&(h=p.slice())}function o(){return d}function s(t){if("function"!=typeof t)throw new Error("Expected listener to be a function.");var e=!0;return n(),h.push(t),function(){if(e){e=!1,n();var r=h.indexOf(t);h.splice(r,1)}}}function c(t){if(!(0,u.default)(t))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if("undefined"==typeof t.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(y)throw new Error("Reducers may not dispatch actions.");try{y=!0,d=l(d,t)}finally{y=!1}for(var e=p=h,r=0;r<e.length;r++)e[r]();return t}function f(t){if("function"!=typeof t)throw new Error("Expected the nextReducer to be a function.");l=t,c({type:a.INIT})}if("function"==typeof e&&"undefined"==typeof r&&(r=e,e=void 0),"undefined"!=typeof r){if("function"!=typeof r)throw new Error("Expected the enhancer to be a function.");return r(i)(t,e)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var l=t,d=e,p=[],h=p,y=!1;return c({type:a.INIT}),{dispatch:c,subscribe:s,getState:o,replaceReducer:f}}e.__esModule=!0,e.ActionTypes=void 0,e.default=i;var o=r(26),u=n(o),a=e.ActionTypes={INIT:"@@redux/INIT"}},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0,e.compose=e.applyMiddleware=e.bindActionCreators=e.combineReducers=e.createStore=void 0;var i=r(23),o=n(i),u=r(67),a=n(u),s=r(66),c=n(s),f=r(65),l=n(f),d=r(22),p=n(d),h=r(25);n(h);e.createStore=o.default,e.combineReducers=a.default,e.bindActionCreators=c.default,e.applyMiddleware=l.default,e.compose=p.default},function(t,e){"use strict";function r(t){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(t);try{throw new Error(t)}catch(e){}}e.__esModule=!0,e.default=r},function(t,e,r){function n(t){if(!u(t)||d.call(t)!=a||o(t))return!1;var e=i(t);if(null===e)return!0;var r=f.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&c.call(r)==l}var i=r(68),o=r(69),u=r(70),a="[object Object]",s=Object.prototype,c=Function.prototype.toString,f=s.hasOwnProperty,l=c.call(Object),d=s.toString;t.exports=n},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(6),o=n(i),u=r(2),a=n(u),s=function(t,e,r,n){e(n);var i=t();if(!(0,o.default)(i))throw new Error("asyncValidate function passed to reduxForm must return a promise");var u=function(t){return function(e){if(!(0,a.default)(e))return r(e),Promise.reject();if(t)throw r(),new Error("Asynchronous validation promise was rejected without errors.");return r(),Promise.resolve()}};return i.then(u(!1),u(!0))};e.default=s},function(t,e,r){"use strict";function n(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function i(t){return t&&t.__esModule?t:{"default":t}}function o(t,e,r){return{actionTypes:m,addArrayValue:P,blur:S,change:j,changeWithKey:V,destroy:T,focus:E,getValues:A.default,initialize:x,initializeWithKey:R,propTypes:(0,_.default)(e),reduxForm:(0,f.default)(t,e,r),reducer:s.default,removeArrayValue:M,reset:F,startAsyncValidation:C,startSubmit:k,stopAsyncValidation:I,stopSubmit:D,submitFailed:N,swapArrayValues:U,touch:q,touchWithKey:W,untouch:K,untouchWithKey:L}}e.__esModule=!0;var u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.default=o;var a=r(17),s=i(a),c=r(31),f=i(c),l=r(5),d=i(l),p=r(8),h=i(p),y=r(7),v=n(y),b=r(4),m=n(b),g=r(30),_=i(g),O=r(15),A=i(O),w=u({},(0,d.default)(u({},v,{changeWithKey:function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;e>n;n++)r[n-1]=arguments[n];return(0,h.default)(v.change,{key:t}).apply(void 0,r)},initializeWithKey:function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;e>n;n++)r[n-1]=arguments[n];return(0,h.default)(v.initialize,{key:t}).apply(void 0,r)},reset:function(t){return(0,h.default)(v.reset,{key:t})()},touchWithKey:function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;e>n;n++)r[n-1]=arguments[n];return(0,h.default)(v.touch,{key:t}).apply(void 0,r)},untouchWithKey:function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;e>n;n++)r[n-1]=arguments[n];return(0,h.default)(v.untouch,{key:t}).apply(void 0,r)},destroy:function(t){return(0,h.default)(v.destroy,{key:t})()}}),function(t){return function(e){for(var r=arguments.length,n=Array(r>1?r-1:0),i=1;r>i;i++)n[i-1]=arguments[i];return(0,h.default)(t,{form:e}).apply(void 0,n)}})),P=w.addArrayValue,S=w.blur,j=w.change,V=w.changeWithKey,T=w.destroy,E=w.focus,x=w.initialize,R=w.initializeWithKey,M=w.removeArrayValue,F=w.reset,C=w.startAsyncValidation,k=w.startSubmit,I=w.stopAsyncValidation,D=w.stopSubmit,N=w.submitFailed,U=w.swapArrayValues,q=w.touch,W=w.touchWithKey,K=w.untouch,L=w.untouchWithKey},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function o(t,e){var r={};for(var n in t)e.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}function u(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0;var c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},f=r(7),l=i(f),d=r(13),p=n(d),h=r(17),y=r(19),v=n(y),b=r(8),m=n(b),g=r(14),_=n(g),O=r(2),A=n(O),w=r(43),P=n(w),S=r(38),j=n(S),V=r(27),T=n(V),E=r(37),x=n(E),R=r(12),M=n(R),F=r(49),C=n(F),k=r(50),I=n(k),D=function(t,e,r,n,i,f,d,y,b){var g=r.Component,O=r.PropTypes;return function(w,S,V,E){var R=function(n){function f(t){u(this,f);var r=a(this,n.call(this,t));r.asyncValidate=r.asyncValidate.bind(r),r.handleSubmit=r.handleSubmit.bind(r),r.fields=(0,P.default)(t,{},{},r.asyncValidate,e);var i=r.props.submitPassback;return i(function(){return r.handleSubmit()}),r}return s(f,n),f.prototype.componentWillMount=function(){var t=this.props,e=t.fields,r=t.form,n=t.initialize,i=t.initialValues;i&&!r._initialized&&n(i,e)},f.prototype.componentWillReceiveProps=function(t){(0,v.default)(this.props.fields,t.fields)&&(0,v.default)(this.props.form,t.form,{strict:!0})||(this.fields=(0,P.default)(t,this.props,this.fields,this.asyncValidate,e)),(0,v.default)(this.props.initialValues,t.initialValues)||this.props.initialize(t.initialValues,t.fields)},f.prototype.componentWillUnmount=function(){t.destroyOnUnmount&&this.props.destroy()},f.prototype.asyncValidate=function l(t,e){var r=this,n=this.props,l=n.asyncValidate,i=n.dispatch,o=n.fields,u=n.form,a=n.startAsyncValidation,s=n.stopAsyncValidation,c=n.validate,f=!t;if(l){var d=function(){var n=(0,_.default)(o,u);t&&(n[t]=e);var d=c(n,r.props),p=r.fields._meta.allPristine,h=u._initialized,y=f||(0,A.default)(d[t]);return!y||!f&&p&&h?void 0:{v:(0,T.default)(function(){return l(n,i,r.props)},a,s,t)}}();if("object"==typeof d)return d.v}},f.prototype.handleSubmit=function(t){var e=this,r=this.props,n=r.onSubmit,i=r.fields,o=r.form,u=function(t){if(!t||"function"!=typeof t)throw new Error("You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop");return t};return!t||(0,M.default)(t)?(0,j.default)(u(n),(0,_.default)(i,o),this.props,this.asyncValidate):(0,x.default)(function(){return(0,j.default)(u(t),(0,_.default)(i,o),e.props,e.asyncValidate)})},f.prototype.render=function(){var t,e=this,n=this.fields,u=this.props,a=(u.addArrayValue,u.asyncBlurFields,u.blur,u.change,u.destroy),s=(u.focus,u.fields),f=u.form,l=(u.initialValues,u.initialize),d=(u.onSubmit,u.propNamespace),p=u.reset,h=(u.removeArrayValue,u.returnRejectedSubmitPromise,u.startAsyncValidation,u.startSubmit,u.stopAsyncValidation,u.stopSubmit,u.submitFailed,u.swapArrayValues,u.touch),y=u.untouch,v=(u.validate,o(u,["addArrayValue","asyncBlurFields","blur","change","destroy","focus","fields","form","initialValues","initialize","onSubmit","propNamespace","reset","removeArrayValue","returnRejectedSubmitPromise","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submitFailed","swapArrayValues","touch","untouch","validate"])),b=n._meta,m=b.allPristine,g=b.allValid,_=b.errors,O=b.formError,A=b.values,w={active:f._active,asyncValidating:f._asyncValidating,dirty:!m,error:O,errors:_,fields:n,formKey:V,invalid:!g,pristine:m,submitting:f._submitting,submitFailed:f._submitFailed,valid:g,values:A,asyncValidate:(0,x.default)(function(){return e.asyncValidate()}),destroyForm:(0,x.default)(a),handleSubmit:this.handleSubmit,initializeForm:(0,x.default)(function(t){return l(t,s)}),resetForm:(0,x.default)(p),touch:(0,x.default)(function(){return h.apply(void 0,arguments)}),touchAll:(0,x.default)(function(){return h.apply(void 0,s)}),untouch:(0,x.default)(function(){return y.apply(void 0,arguments)}),untouchAll:(0,x.default)(function(){return y.apply(void 0,s)})},P=d?(t={},t[d]=w,t):w;return r.createElement(i,c({},v,P))},f}(g);R.displayName="ReduxForm("+(0,p.default)(i)+")",R.WrappedComponent=i,R.propTypes={asyncBlurFields:O.arrayOf(O.string),asyncValidate:O.func,dispatch:O.func.isRequired,fields:O.arrayOf(O.string).isRequired,form:O.object,initialValues:O.any,onSubmit:O.func,onSubmitSuccess:O.func,onSubmitFail:O.func,propNamespace:O.string,readonly:O.bool,returnRejectedSubmitPromise:O.bool,submitPassback:O.func.isRequired,validate:O.func,addArrayValue:O.func.isRequired,blur:O.func.isRequired,change:O.func.isRequired,destroy:O.func.isRequired,focus:O.func.isRequired,initialize:O.func.isRequired,removeArrayValue:O.func.isRequired,reset:O.func.isRequired,startAsyncValidation:O.func.isRequired,startSubmit:O.func.isRequired,stopAsyncValidation:O.func.isRequired,stopSubmit:O.func.isRequired,submitFailed:O.func.isRequired,swapArrayValues:O.func.isRequired,touch:O.func.isRequired,untouch:O.func.isRequired},R.defaultProps={asyncBlurFields:[],form:h.initialState,readonly:!1,returnRejectedSubmitPromise:!1,validate:function(){return{}}};var F=c({},l,{blur:(0,m.default)(l.blur,{touch:!!t.touchOnBlur}),change:(0,m.default)(l.change,{touch:!!t.touchOnChange})}),k=void 0!==V&&null!==V?n((0,I.default)(f,function(t){var e=E(t,w);if(!e)throw new Error('You need to mount the redux-form reducer at "'+w+'"');return e&&e[S]&&e[S][V]}),(0,C.default)(d,(0,m.default)(F,{form:S,key:V})),y,b):n((0,I.default)(f,function(t){var e=E(t,w);if(!e)throw new Error('You need to mount the redux-form reducer at "'+w+'"');return e&&e[S]}),(0,C.default)(d,(0,m.default)(F,{form:S})),y,b);return k(R)}};e.default=D},function(t,e){"use strict";e.__esModule=!0;var r=function(t){var e=t.PropTypes,r=e.any,n=e.bool,i=e.string,o=e.func,u=e.object;return{active:i,asyncValidating:n.isRequired,dirty:n.isRequired,error:r,errors:u,fields:u.isRequired,formKey:r,invalid:n.isRequired,pristine:n.isRequired,submitting:n.isRequired,submitFailed:n.isRequired,valid:n.isRequired,values:u.isRequired,asyncValidate:o.isRequired,destroyForm:o.isRequired,handleSubmit:o.isRequired,initializeForm:o.isRequired,resetForm:o.isRequired,touch:o.isRequired,touchAll:o.isRequired,untouch:o.isRequired,untouchAll:o.isRequired}};e.default=r},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function u(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0;var a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},s=r(32),c=n(s),f=r(20),l=n(f),d=function(t,e,r){var n=e.Component,s=(0,c.default)(t,e,r);return function(t,r,c,f,d){return function(p){var h=s(p,r,c,f,d),y=a({touchOnBlur:!0,touchOnChange:!1,destroyOnUnmount:!0},t),v=function(t){function r(e){i(this,r);var n=o(this,t.call(this,e));return n.handleSubmitPassback=n.handleSubmitPassback.bind(n),n}return u(r,t),r.prototype.handleSubmitPassback=function(t){this.submit=t},r.prototype.render=function(){return e.createElement(h,a({},y,this.props,{submitPassback:this.handleSubmitPassback}))},r}(n);return(0,l.default)(v,p)}}};e.default=d},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){var r={};for(var n in t)e.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0;var s=r(55),c=n(s),f=r(13),l=n(f),d=r(29),p=n(d),h=function(t,e,r){return function(n,s,f,d,h){var y=e.Component,v=e.PropTypes,b=function(l){function y(i){o(this,y);var a=u(this,l.call(this,i));return a.cache=new c.default(a,{ReduxForm:{params:["reduxMountPoint","form","formKey","getFormState"],fn:(0,p.default)(i,t,e,r,n,s,f,d,h)}}),a}return a(y,l),y.prototype.componentWillReceiveProps=function(t){this.cache.componentWillReceiveProps(t)},y.prototype.render=function(){var t=this.cache.get("ReduxForm"),r=this.props,n=(r.reduxMountPoint,r.destroyOnUnmount,r.form,r.getFormState,r.touchOnBlur,r.touchOnChange,i(r,["reduxMountPoint","destroyOnUnmount","form","getFormState","touchOnBlur","touchOnChange"]));return e.createElement(t,n)},y}(y);return b.displayName="ReduxFormConnector("+(0,l.default)(n)+")",b.WrappedComponent=n,b.propTypes={destroyOnUnmount:v.bool,reduxMountPoint:v.string,form:v.string.isRequired,formKey:v.string,getFormState:v.func,touchOnBlur:v.bool,touchOnChange:v.bool},b.defaultProps={reduxMountPoint:"form",getFormState:function(t,e){return t[e]}},b}};e.default=h},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(10),o=n(i),u=function(t,e,r,n){return function(i){var u=(0,o.default)(i,r);e(t,u),n&&n(t,u)}};e.default=u},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(10),o=n(i),u=function(t,e,r){return function(n){return e(t,(0,o.default)(n,r))}};e.default=u},function(t,e,r){"use strict";e.__esModule=!0;var n=r(9),i=function(t,e){return function(r){
	e(t,r.dataTransfer.getData(n.dataKey))}};e.default=i},function(t,e){"use strict";e.__esModule=!0;var r=function(t,e){return function(){return e(t)}};e.default=r},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(12),o=n(i),u=function(t){return function(e){for(var r=arguments.length,n=Array(r>1?r-1:0),i=1;r>i;i++)n[i-1]=arguments[i];return(0,o.default)(e)?t.apply(void 0,n):t.apply(void 0,[e].concat(n))}};e.default=u},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(6),o=n(i),u=r(2),a=n(u),s=function(t,e,r,n){var i=r.dispatch,u=r.fields,s=r.onSubmitSuccess,c=r.onSubmitFail,f=r.startSubmit,l=r.stopSubmit,d=r.submitFailed,p=r.returnRejectedSubmitPromise,h=r.touch,y=r.validate,v=y(e,r);if(h.apply(void 0,u),(0,a.default)(v)){var b=function(){var r=t(e,i);return(0,o.default)(r)?(f(),r.then(function(t){return l(),s&&s(t),t},function(t){return l(t),c&&c(t),p?Promise.reject(t):void 0})):(s&&s(r),r)},m=n();return(0,o.default)(m)?m.then(b,function(){return d(),c&&c(),p?Promise.reject():Promise.resolve()}):b()}return d(),c&&c(v),p?Promise.reject(v):void 0};e.default=s},function(t,e,r){"use strict";e.__esModule=!0;var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},i=r(1),o=function(t){return(0,i.makeFieldValue)(void 0===t?{}:{initial:t,value:t})},u=function(t,e){var r=arguments.length<=2||void 0===arguments[2]?{}:arguments[2];if(!e)throw new Error("fields must be passed when initializing state");if(!t||!e.length)return r;var i=function u(t,e,r){var i=t.indexOf(".");if(0===i)return u(t.substring(1),e,r);var a=t.indexOf("["),s=t.indexOf("]"),c=n({},r)||{};if(i>=0&&(0>a||a>i)){var f=t.substring(0,i);c[f]=e[f]&&u(t.substring(i+1),e[f],c[f]||{})}else a>=0&&(0>i||i>a)?!function(){if(0>s)throw new Error("found '[' but no ']': '"+t+"'");var r=t.substring(0,a),n=e[r],i=c[r],f=t.substring(s+1);Array.isArray(n)?f.length?c[r]=n.map(function(t,e){return u(f,t,i&&i[e])}):c[r]=n.map(function(t){return o(t)}):c[r]=[]}():c[t]=o(e&&e[t]);return c};return e.reduce(function(e,r){return i(r,t,e)},n({},r))};e.default=u},function(t,e){"use strict";function r(t,e){if(t===e)return!0;if("boolean"==typeof t||"boolean"==typeof e)return t===e;if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(t&&"object"==typeof t){if(!e||"object"!=typeof e)return!1;var n=Object.keys(t),i=Object.keys(e);if(n.length!==i.length)return!1;for(var o=0;o<i.length;o++){var u=i[o];if(!r(t[u],e[u]))return!1}}else if(t||e)return t===e;return!0}e.__esModule=!0,e.default=r},function(t,e,r){"use strict";function n(t){var e=t.indexOf("."),r=t.indexOf("["),n=t.indexOf("]");if(r>0&&n!==r+1)throw new Error("found [ not followed by ]");var i=r>0&&(0>e||e>r),o=void 0,u=void 0;return i?(o=t.substring(0,r),u=t.substring(n+1),"."===u[0]&&(u=u.substring(1))):e>0?(o=t.substring(0,e),u=t.substring(e+1)):o=t,{isArray:i,key:o,nestedPath:u}}function i(t,e,r,o,u,s,c){if(t.isArray){if(t.nestedPath){var f=function(){var a=r&&r[t.key]||[],f=o&&o[t.key]||[],l=n(t.nestedPath);return{v:a.map(function(t,r){return t[l.key]=i(l,e,t,f[r],u,s,c),t})}}();if("object"==typeof f)return f.v}var l=c[e],d=l(r&&r[t.key],o&&o[t.key],u,s);return t.isArray?d&&d.map(a.makeFieldValue):d}if(t.nestedPath){var p=r&&r[t.key]||{},h=n(t.nestedPath);return p[h.key]=i(h,e,p,o&&o[t.key],u,s,c),p}var y=r&&r[t.key]||{},v=c[e];return y.value=v(y.value,o&&o[t.key]&&o[t.key].value,u,s),(0,a.makeFieldValue)(y)}function o(t,e,r,o,a){var s=Object.keys(t).reduce(function(u,s){var c=n(s);return u[c.key]=i(c,s,e,r,o,a,t),u},{});return u({},e,s)}e.__esModule=!0;var u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.default=o;var a=r(1)},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){var r=t.substring(e+1);return"."===r[0]&&(r=r.substring(1)),r}e.__esModule=!0;var o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},u=r(33),a=n(u),s=r(34),c=n(s),f=r(9),l=n(f),d=r(35),p=n(d),h=r(36),y=n(h),v=r(47),b=n(v),m=r(16),g=n(m),_=r(48),O=n(_),A=function(t){var e=t.indexOf("."),r=t.indexOf("[");return r>0&&(0>e||e>r)?t.substring(0,r):e>0?t.substring(0,e):t},w=function P(t,e){var r=arguments.length<=2||void 0===arguments[2]?"":arguments[2],n=arguments[3],u=arguments[4],s=arguments[5],f=arguments[6],d=arguments[7],h=arguments.length<=8||void 0===arguments[8]?function(){return null}:arguments[8],v=arguments.length<=9||void 0===arguments[9]?"":arguments[9],m=d.asyncBlurFields,_=d.blur,w=d.change,S=d.focus,j=d.form,V=d.initialValues,T=d.readonly,E=d.addArrayValue,x=d.removeArrayValue,R=d.swapArrayValues,M=e.indexOf("."),F=e.indexOf("["),C=e.indexOf("]");if(F>0&&C!==F+1)throw new Error("found [ not followed by ]");if(F>0&&(0>M||M>F)){var k=function(){var o=e.substring(0,F),a=i(e,C),c=t&&t[o]||[],l=v+e.substring(0,C+1),p=d.fields.reduce(function(t,e){return 0===e.indexOf(l)&&t.push(e),t},[]).map(function(t){return i(t,v.length+C)}),y=function(t){return Object.defineProperty(t,"addField",{value:function(t,e){return E(r+o,t,e,p)}}),Object.defineProperty(t,"removeField",{value:function(t){return x(r+o,t)}}),Object.defineProperty(t,"swapFields",{value:function(t,e){return R(r+o,t,e)}}),t};n[o]&&n[o].length===c.length||(n[o]=n[o]?[].concat(n[o]):[],y(n[o]));var b=n[o],m=!1;return c.forEach(function(t,e){a&&!b[e]&&(b[e]={},m=!0);var n=a?b[e]:{},i=""+r+o+"["+e+"]"+(a?".":""),c=""+v+o+"[]"+(a?".":""),l=P(t,a,i,n,u,s,f,d,h,c);a||b[e]===l||(b[e]=l,m=!0)}),b.length>c.length&&b.splice(c.length,b.length-c.length),{v:m?y([].concat(b)):b}}();if("object"==typeof k)return k.v}if(M>0){var I=e.substring(0,M),D=e.substring(M+1),N=n[I]||{},U=r+I+".",q=A(D),W=N[q],K=P(t[I]||{},D,U,N,u,s,f,d,h,U);if(K!==W){var L;N=o({},N,(L={},L[q]=K,L))}return n[I]=N,N}var z=r+e,B=n[e]||{};if(B.name!==z){var Y=(0,c.default)(z,w,f),H=(0,g.default)(z+".initial",j),G=H||(0,g.default)(z,V);B.name=z,B.checked=G===!0||void 0,B.value=G,B.initialValue=G,T||(B.onBlur=(0,a.default)(z,_,f,~m.indexOf(z)&&function(t,e){return(0,b.default)(s(t,e))}),B.onChange=Y,B.onDragStart=(0,l.default)(z,function(){return B.value}),B.onDrop=(0,p.default)(z,w),B.onFocus=(0,y.default)(z,S),B.onUpdate=Y),B.valid=!0,B.invalid=!1,Object.defineProperty(B,"_isField",{value:!0})}var Z=(e?t[e]:t)||{},J=(0,g.default)(z,u),Q=(0,O.default)(B,Z,z===j._active,J);return(e||n[e]!==Q)&&(n[e]=Q),h(Q),Q};e.default=w},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},o=r(42),u=n(o),a=r(18),s=n(a),c=r(14),f=n(c),l=r(44),d=n(l),p=function(t,e,r,n,o){var a=t.fields,c=t.form,l=t.validate,p=e.fields,h=(0,f.default)(a,c),y=l(h,t),v={},b=y._error||c._error,m=!b,g=!0,_=function(t){t.error&&(v=(0,s.default)(t.name,t.error,v),m=!1),t.dirty&&(g=!1)},O=p?p.reduce(function(t,e){return~a.indexOf(e)?t:(0,d.default)(t,e)},i({},r)):i({},r);return a.forEach(function(e){(0,u.default)(c,e,void 0,O,y,n,o,t,_)}),Object.defineProperty(O,"_meta",{value:{allPristine:g,allValid:m,values:h,errors:v,formError:b}}),O};e.default=p},function(t,e){"use strict";e.__esModule=!0;var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},n=function(t,e){var n=r({},t);return delete n[e],n},i=function o(t,e){var i=e.indexOf("."),u=e.indexOf("["),a=e.indexOf("]");if(u>0&&a!==u+1)throw new Error("found [ not followed by ]");if(u>0&&(0>i||i>u)){var s=function(){var i=e.substring(0,u);if(!Array.isArray(t[i]))return{v:n(t,i)};var s=e.substring(a+1);if("."===s[0]&&(s=s.substring(1)),s){var c=function(){var e,u=[];return t[i].forEach(function(t,e){var r=o(t,s);Object.keys(r).length&&(u[e]=r)}),{v:{v:u.length?r({},t,(e={},e[i]=u,e)):n(t,i)}}}();if("object"==typeof c)return c.v}return{v:n(t,i)}}();if("object"==typeof s)return s.v}if(i>0){var c,f=e.substring(0,i),l=e.substring(i+1);if(!t[f])return t;var d=o(t[f],l);return Object.keys(d).length?r({},t,(c={},c[f]=o(t[f],l),c)):n(t,f)}return n(t,e)};e.default=i},function(t,e,r){"use strict";e.__esModule=!0;var n=r(1),i=function(t){return(0,n.makeFieldValue)(void 0===t||t&&void 0===t.initial?{}:{initial:t.initial,value:t.initial})},o=function u(t){return t?Object.keys(t).reduce(function(e,r){var o=t[r];return Array.isArray(o)?e[r]=o.map(function(t){return(0,n.isFieldValue)(t)?i(t):u(t)}):o&&((0,n.isFieldValue)(o)?e[r]=i(o):"object"==typeof o&&null!==o?e[r]=u(o):e[r]=o),e},{}):t};e.default=o},function(t,e,r){"use strict";e.__esModule=!0;var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},i=r(1),o=function(t){return"_"===t[0]},u=function a(t,e,r){var u=function(){if(Array.isArray(t))return t.map(function(t,n){return a(t,e&&e[n],r)});if(t&&"object"==typeof t){var u=Object.keys(t).reduce(function(i,u){var s;return o(u)?i:n({},i,(s={},s[u]=a(t[u],e&&e[u],r),s))},t);return(0,i.isFieldValue)(t)&&(0,i.makeFieldValue)(u),u}return(0,i.makeFieldValue)(t)};if(!e){if(!t)return t;if(t[r]){var s=n({},t);return delete s[r],(0,i.makeFieldValue)(s)}return u()}if("string"==typeof e){var c;return(0,i.makeFieldValue)(n({},t,(c={},c[r]=e,c)))}if(Array.isArray(e)){if(!t||Array.isArray(t)){var f=function(){var n=(t||[]).map(function(t,n){return a(t,e[n],r)});return e.forEach(function(t,e){return n[e]=a(n[e],t,r)}),{v:n}}();if("object"==typeof f)return f.v}return a(t,e[0],r)}if((0,i.isFieldValue)(t)){var l;return(0,i.makeFieldValue)(n({},t,(l={},l[r]=e,l)))}var d=Object.keys(e);return d.length||t?d.reduce(function(i,u){var s;return o(u)?i:n({},i,(s={},s[u]=a(t&&t[u],e[u],r),s))},u()||{}):t};e.default=u},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=r(6),o=n(i),u=function(){},a=function(t){return(0,o.default)(t)?t.then(u,u):t};e.default=a},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},o=r(40),u=n(o),a=r(2),s=n(a),c=function(t,e,r,n){var o={},a=void 0===e.value?"":e.value;t.value!==a&&(o.value=a,o.checked="boolean"==typeof a?a:void 0);var c=(0,u.default)(a,e.initial);t.pristine!==c&&(o.dirty=!c,o.pristine=c);var f=n||e.submitError||e.asyncError;f!==t.error&&(o.error=f);var l=(0,s.default)(f);t.valid!==l&&(o.invalid=!l,o.valid=l),r!==t.active&&(o.active=r);var d=!!e.touched;d!==t.touched&&(o.touched=d);var p=!!e.visited;return p!==t.visited&&(o.visited=p),"initial"in e&&e.initial!==t.initialValue&&(t.initialValue=e.initial),Object.keys(o).length?i({},t,o):t};e.default=c},function(t,e,r){"use strict";e.__esModule=!0;var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},i=r(24),o=function(t,e){return t?"function"==typeof t?t.length>1?function(r,o){return n({dispatch:r},t(r,o),(0,i.bindActionCreators)(e,r))}:function(r){return n({dispatch:r},t(r),(0,i.bindActionCreators)(e,r))}:function(r){return n({dispatch:r},(0,i.bindActionCreators)(t,r),(0,i.bindActionCreators)(e,r))}:function(t){return n({dispatch:t},(0,i.bindActionCreators)(e,t))}};e.default=o},function(t,e){"use strict";e.__esModule=!0;var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},n=function(t,e){if(t){if("function"!=typeof t)throw new Error("mapStateToProps must be a function");return t.length>1?function(n,i){return r({},t(n,i),{form:e(n)})}:function(n){return r({},t(n),{form:e(n)})}}return function(t){return{form:e(t)}}};e.default=n},function(t,e){function r(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function n(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}var i="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();e=t.exports=i?r:n,e.supported=r,e.unsupported=n},function(t,e){function r(t){var e=[];for(var r in t)e.push(r);return e}e=t.exports="function"==typeof Object.keys?Object.keys:r,e.shim=r},function(t,e,r){"use strict";var n=function(t,e,r,n,i,o,u,a){if(!t){var s;if(void 0===e)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[r,n,i,o,u,a],f=0;s=new Error(e.replace(/%s/g,function(){return c[f++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}};t.exports=n},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){return!!(t&&e&&t.some(function(t){return~e.indexOf(t)}))}e.__esModule=!0;var u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},a=r(19),s=n(a),c=function(){function t(e,r){var n=this;i(this,t),this.component=e,this.allProps=[],this.cache=Object.keys(r).reduce(function(t,e){var i,o=r[e],a=o.fn,s=o.params;return s.forEach(function(t){~n.allProps.indexOf(t)||n.allProps.push(t)}),u({},t,(i={},i[e]={value:void 0,props:s,fn:a},i))},{})}return t.prototype.get=function(t){var e=this.component,r=this.cache[t],n=r.value,i=r.fn,o=r.props;if(void 0!==n)return n;var u=o.map(function(t){return e.props[t]}),a=i.apply(void 0,u);return this.cache[t].value=a,a},t.prototype.componentWillReceiveProps=function(t){var e=this,r=this.component,n=[];this.allProps.forEach(function(e){s.default(r.props[e],t[e])||n.push(e)}),n.length&&Object.keys(this.cache).forEach(function(t){o(n,e.cache[t].props)&&delete e.cache[t].value})},t}();e.default=c,t.exports=e.default},function(t,e,r){t.exports=r(54)},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function u(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0,e.default=void 0;var a=r(3),s=r(21),c=n(s),f=function(t){function e(r,n){i(this,e);var u=o(this,t.call(this,r,n));return u.store=r.store,u}return u(e,t),e.prototype.getChildContext=function(){return{store:this.store}},e.prototype.render=function(){var t=this.props.children;return a.Children.only(t)},e}(a.Component);e.default=f,f.propTypes={store:c.default.isRequired,children:a.PropTypes.element.isRequired},f.childContextTypes={store:c.default.isRequired}},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function u(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t){return t.displayName||t.name||"Component"}function s(t,e){return(0,w.default)((0,g.default)(t),"`%sToProps` must return an object. Instead received %s.",e?"mapDispatch":"mapState",t),t}function c(t,e,r){function n(t,e,r){var n=m(t,e,r);return(0,w.default)((0,g.default)(n),"`mergeProps` must return an object. Instead received %s.",n),n}var c=arguments.length<=3||void 0===arguments[3]?{}:arguments[3],d=Boolean(t),h=t||P,v=(0,g.default)(e)?(0,b.default)(e):e||S,m=r||j,_=m!==j,A=c.pure,T=void 0===A?!0:A,E=c.withRef,x=void 0===E?!1:E,R=V++;return function(t){var e=function(e){function r(t,n){i(this,r);var u=o(this,e.call(this,t,n));u.version=R,u.store=t.store||n.store,(0,w.default)(u.store,'Could not find "store" in either the context or '+('props of "'+u.constructor.displayName+'". ')+"Either wrap the root component in a <Provider>, "+('or explicitly pass "store" as a prop to "'+u.constructor.displayName+'".'));var a=u.store.getState();return u.state={storeState:a},u.clearCache(),u}return u(r,e),r.prototype.shouldComponentUpdate=function(){return!T||this.haveOwnPropsChanged||this.hasStoreStateChanged},r.prototype.computeStateProps=function(t,e){if(!this.finalMapStateToProps)return this.configureFinalMapState(t,e);var r=t.getState(),n=this.doStatePropsDependOnOwnProps?this.finalMapStateToProps(r,e):this.finalMapStateToProps(r);return s(n)},r.prototype.configureFinalMapState=function(t,e){var r=h(t.getState(),e),n="function"==typeof r;return this.finalMapStateToProps=n?r:h,this.doStatePropsDependOnOwnProps=1!==this.finalMapStateToProps.length,n?this.computeStateProps(t,e):s(r)},r.prototype.computeDispatchProps=function(t,e){if(!this.finalMapDispatchToProps)return this.configureFinalMapDispatch(t,e);var r=t.dispatch,n=this.doDispatchPropsDependOnOwnProps?this.finalMapDispatchToProps(r,e):this.finalMapDispatchToProps(r);return s(n,!0)},r.prototype.configureFinalMapDispatch=function(t,e){var r=v(t.dispatch,e),n="function"==typeof r;return this.finalMapDispatchToProps=n?r:v,this.doDispatchPropsDependOnOwnProps=1!==this.finalMapDispatchToProps.length,n?this.computeDispatchProps(t,e):s(r,!0)},r.prototype.updateStatePropsIfNeeded=function(){var t=this.computeStateProps(this.store,this.props);return this.stateProps&&(0,y.default)(t,this.stateProps)?!1:(this.stateProps=t,!0)},r.prototype.updateDispatchPropsIfNeeded=function(){var t=this.computeDispatchProps(this.store,this.props);return this.dispatchProps&&(0,y.default)(t,this.dispatchProps)?!1:(this.dispatchProps=t,!0)},r.prototype.updateMergedPropsIfNeeded=function(){var t=n(this.stateProps,this.dispatchProps,this.props);return this.mergedProps&&_&&(0,y.default)(t,this.mergedProps)?!1:(this.mergedProps=t,!0)},r.prototype.isSubscribed=function(){return"function"==typeof this.unsubscribe},r.prototype.trySubscribe=function(){d&&!this.unsubscribe&&(this.unsubscribe=this.store.subscribe(this.handleChange.bind(this)),this.handleChange())},r.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null)},r.prototype.componentDidMount=function(){this.trySubscribe()},r.prototype.componentWillReceiveProps=function(t){T&&(0,y.default)(t,this.props)||(this.haveOwnPropsChanged=!0)},r.prototype.componentWillUnmount=function(){this.tryUnsubscribe(),this.clearCache()},r.prototype.clearCache=function(){this.dispatchProps=null,this.stateProps=null,this.mergedProps=null,this.haveOwnPropsChanged=!0,this.hasStoreStateChanged=!0,this.renderedElement=null,this.finalMapDispatchToProps=null,this.finalMapStateToProps=null},r.prototype.handleChange=function(){if(this.unsubscribe){var t=this.state.storeState,e=this.store.getState();T&&t===e||(this.hasStoreStateChanged=!0,this.setState({storeState:e}))}},r.prototype.getWrappedInstance=function(){return(0,w.default)(x,"To access the wrapped instance, you need to specify { withRef: true } as the fourth argument of the connect() call."),this.refs.wrappedInstance},r.prototype.render=function(){var e=this.haveOwnPropsChanged,r=this.hasStoreStateChanged,n=this.renderedElement;this.haveOwnPropsChanged=!1,this.hasStoreStateChanged=!1;var i=!0,o=!0;T&&n&&(i=r||e&&this.doStatePropsDependOnOwnProps,o=e&&this.doDispatchPropsDependOnOwnProps);var u=!1,a=!1;i&&(u=this.updateStatePropsIfNeeded()),o&&(a=this.updateDispatchPropsIfNeeded());var s=!0;return s=u||a||e?this.updateMergedPropsIfNeeded():!1,!s&&n?n:(x?this.renderedElement=(0,l.createElement)(t,f({},this.mergedProps,{ref:"wrappedInstance"})):this.renderedElement=(0,l.createElement)(t,this.mergedProps),this.renderedElement)},r}(l.Component);return e.displayName="Connect("+a(t)+")",e.WrappedComponent=t,e.contextTypes={store:p.default},e.propTypes={store:p.default},(0,O.default)(e,t)}}var f=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.__esModule=!0,e.default=c;var l=r(3),d=r(21),p=n(d),h=r(59),y=n(h),v=r(60),b=n(v),m=r(64),g=n(m),_=r(20),O=n(_),A=r(53),w=n(A),P=function(t){return{}},S=function(t){return{dispatch:t}},j=function(t,e,r){return f({},r,t,e)},V=0},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0,e.connect=e.Provider=void 0;var i=r(56),o=n(i),u=r(57),a=n(u);e.Provider=o.default,e.connect=a.default},function(t,e){"use strict";function r(t,e){if(t===e)return!0;var r=Object.keys(t),n=Object.keys(e);if(r.length!==n.length)return!1;for(var i=Object.prototype.hasOwnProperty,o=0;o<r.length;o++)if(!i.call(e,r[o])||t[r[o]]!==e[r[o]])return!1;return!0}e.__esModule=!0,e.default=r},function(t,e,r){"use strict";function n(t){return function(e){return(0,i.bindActionCreators)(t,e)}}e.__esModule=!0,e.default=n;var i=r(24)},function(t,e){function r(t){return n(Object(t))}var n=Object.getPrototypeOf;t.exports=r},function(t,e){function r(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(r){}return e}t.exports=r},function(t,e){function r(t){return!!t&&"object"==typeof t}t.exports=r},function(t,e,r){function n(t){if(!u(t)||d.call(t)!=a||o(t))return!1;var e=i(t);if(null===e)return!0;var r=f.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&c.call(r)==l}var i=r(61),o=r(62),u=r(63),a="[object Object]",s=Object.prototype,c=Function.prototype.toString,f=s.hasOwnProperty,l=c.call(Object),d=s.toString;t.exports=n},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(){for(var t=arguments.length,e=Array(t),r=0;t>r;r++)e[r]=arguments[r];return function(t){return function(r,n,i){var u=t(r,n,i),s=u.dispatch,c=[],f={getState:u.getState,dispatch:function(t){return s(t)}};return c=e.map(function(t){return t(f)}),s=a.default.apply(void 0,c)(u.dispatch),o({},u,{dispatch:s})}}}var o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};e.__esModule=!0,e.default=i;var u=r(22),a=n(u)},function(t,e){"use strict";function r(t,e){return function(){return e(t.apply(void 0,arguments))}}function n(t,e){if("function"==typeof t)return r(t,e);if("object"!=typeof t||null===t)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===t?"null":typeof t)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(t),i={},o=0;o<n.length;o++){var u=n[o],a=t[u];"function"==typeof a&&(i[u]=r(a,e))}return i}e.__esModule=!0,e.default=n},function(t,e,r){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function i(t,e){var r=e&&e.type,n=r&&'"'+r.toString()+'"'||"an action";return'Reducer "'+t+'" returned undefined handling '+n+". To ignore an action, you must explicitly return the previous state."}function o(t){Object.keys(t).forEach(function(e){var r=t[e],n=r(void 0,{type:a.ActionTypes.INIT});if("undefined"==typeof n)throw new Error('Reducer "'+e+'" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');var i="@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".");if("undefined"==typeof r(void 0,{type:i}))throw new Error('Reducer "'+e+'" returned undefined when probed with a random type. '+("Don't try to handle "+a.ActionTypes.INIT+' or other actions in "redux/*" ')+"namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.")})}function u(t){for(var e=Object.keys(t),r={},n=0;n<e.length;n++){var u=e[n];"function"==typeof t[u]&&(r[u]=t[u])}var a,s=Object.keys(r);try{o(r)}catch(c){a=c}return function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e=arguments[1];if(a)throw a;for(var n=!1,o={},u=0;u<s.length;u++){var c=s[u],f=r[c],l=t[c],d=f(l,e);if("undefined"==typeof d){var p=i(c,e);throw new Error(p)}o[c]=d,n=n||d!==l}return n?o:t}}e.__esModule=!0,e.default=u;var a=r(23),s=r(26),c=(n(s),r(25));n(c)},function(t,e){function r(t){return n(Object(t))}var n=Object.getPrototypeOf;t.exports=r},function(t,e){function r(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(r){}return e}t.exports=r},function(t,e){function r(t){return!!t&&"object"==typeof t}t.exports=r}])});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))

/***/ },

/***/ 102:
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = thunkMiddleware;
	function thunkMiddleware(_ref) {
	  var dispatch = _ref.dispatch;
	  var getState = _ref.getState;

	  return function (next) {
	    return function (action) {
	      if (typeof action === 'function') {
	        return action(dispatch, getState);
	      }

	      return next(action);
	    };
	  };
	}

/***/ },

/***/ 103:
/***/ function(module, exports) {

	"use strict";

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

	var repeat = function repeat(str, times) {
	  return new Array(times + 1).join(str);
	};
	var pad = function pad(num, maxLength) {
	  return repeat("0", maxLength - num.toString().length) + num;
	};
	var formatTime = function formatTime(time) {
	  return "@ " + pad(time.getHours(), 2) + ":" + pad(time.getMinutes(), 2) + ":" + pad(time.getSeconds(), 2) + "." + pad(time.getMilliseconds(), 3);
	};

	// Use the new performance api to get better precision if available
	var timer = typeof performance !== "undefined" && typeof performance.now === "function" ? performance : Date;

	/**
	 * parse the level option of createLogger
	 *
	 * @property {string | function | object} level - console[level]
	 * @property {object} action
	 * @property {array} payload
	 * @property {string} type
	 */

	function getLogLevel(level, action, payload, type) {
	  switch (typeof level === "undefined" ? "undefined" : _typeof(level)) {
	    case "object":
	      return typeof level[type] === "function" ? level[type].apply(level, _toConsumableArray(payload)) : level[type];
	    case "function":
	      return level(action);
	    default:
	      return level;
	  }
	}

	/**
	 * Creates logger with followed options
	 *
	 * @namespace
	 * @property {object} options - options for logger
	 * @property {string | function | object} options.level - console[level]
	 * @property {boolean} options.duration - print duration of each action?
	 * @property {boolean} options.timestamp - print timestamp with each action?
	 * @property {object} options.colors - custom colors
	 * @property {object} options.logger - implementation of the `console` API
	 * @property {boolean} options.logErrors - should errors in action execution be caught, logged, and re-thrown?
	 * @property {boolean} options.collapsed - is group collapsed?
	 * @property {boolean} options.predicate - condition which resolves logger behavior
	 * @property {function} options.stateTransformer - transform state before print
	 * @property {function} options.actionTransformer - transform action before print
	 * @property {function} options.errorTransformer - transform error before print
	 */

	function createLogger() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var _options$level = options.level;
	  var level = _options$level === undefined ? "log" : _options$level;
	  var _options$logger = options.logger;
	  var logger = _options$logger === undefined ? console : _options$logger;
	  var _options$logErrors = options.logErrors;
	  var logErrors = _options$logErrors === undefined ? true : _options$logErrors;
	  var collapsed = options.collapsed;
	  var predicate = options.predicate;
	  var _options$duration = options.duration;
	  var duration = _options$duration === undefined ? false : _options$duration;
	  var _options$timestamp = options.timestamp;
	  var timestamp = _options$timestamp === undefined ? true : _options$timestamp;
	  var transformer = options.transformer;
	  var _options$stateTransfo = options.stateTransformer;
	  var // deprecated
	  stateTransformer = _options$stateTransfo === undefined ? function (state) {
	    return state;
	  } : _options$stateTransfo;
	  var _options$actionTransf = options.actionTransformer;
	  var actionTransformer = _options$actionTransf === undefined ? function (actn) {
	    return actn;
	  } : _options$actionTransf;
	  var _options$errorTransfo = options.errorTransformer;
	  var errorTransformer = _options$errorTransfo === undefined ? function (error) {
	    return error;
	  } : _options$errorTransfo;
	  var _options$colors = options.colors;
	  var colors = _options$colors === undefined ? {
	    title: function title() {
	      return "#000000";
	    },
	    prevState: function prevState() {
	      return "#9E9E9E";
	    },
	    action: function action() {
	      return "#03A9F4";
	    },
	    nextState: function nextState() {
	      return "#4CAF50";
	    },
	    error: function error() {
	      return "#F20404";
	    }
	  } : _options$colors;

	  // exit if console undefined

	  if (typeof logger === "undefined") {
	    return function () {
	      return function (next) {
	        return function (action) {
	          return next(action);
	        };
	      };
	    };
	  }

	  if (transformer) {
	    console.error("Option 'transformer' is deprecated, use stateTransformer instead");
	  }

	  var logBuffer = [];
	  function printBuffer() {
	    logBuffer.forEach(function (logEntry, key) {
	      var started = logEntry.started;
	      var startedTime = logEntry.startedTime;
	      var action = logEntry.action;
	      var prevState = logEntry.prevState;
	      var error = logEntry.error;
	      var took = logEntry.took;
	      var nextState = logEntry.nextState;

	      var nextEntry = logBuffer[key + 1];
	      if (nextEntry) {
	        nextState = nextEntry.prevState;
	        took = nextEntry.started - started;
	      }
	      // message
	      var formattedAction = actionTransformer(action);
	      var isCollapsed = typeof collapsed === "function" ? collapsed(function () {
	        return nextState;
	      }, action) : collapsed;

	      var formattedTime = formatTime(startedTime);
	      var titleCSS = colors.title ? "color: " + colors.title(formattedAction) + ";" : null;
	      var title = "action " + (timestamp ? formattedTime : "") + " " + formattedAction.type + " " + (duration ? "(in " + took.toFixed(2) + " ms)" : "");

	      // render
	      try {
	        if (isCollapsed) {
	          if (colors.title) logger.groupCollapsed("%c " + title, titleCSS);else logger.groupCollapsed(title);
	        } else {
	          if (colors.title) logger.group("%c " + title, titleCSS);else logger.group(title);
	        }
	      } catch (e) {
	        logger.log(title);
	      }

	      var prevStateLevel = getLogLevel(level, formattedAction, [prevState], "prevState");
	      var actionLevel = getLogLevel(level, formattedAction, [formattedAction], "action");
	      var errorLevel = getLogLevel(level, formattedAction, [error, prevState], "error");
	      var nextStateLevel = getLogLevel(level, formattedAction, [nextState], "nextState");

	      if (prevStateLevel) {
	        if (colors.prevState) logger[prevStateLevel]("%c prev state", "color: " + colors.prevState(prevState) + "; font-weight: bold", prevState);else logger[prevStateLevel]("prev state", prevState);
	      }

	      if (actionLevel) {
	        if (colors.action) logger[actionLevel]("%c action", "color: " + colors.action(formattedAction) + "; font-weight: bold", formattedAction);else logger[actionLevel]("action", formattedAction);
	      }

	      if (error && errorLevel) {
	        if (colors.error) logger[errorLevel]("%c error", "color: " + colors.error(error, prevState) + "; font-weight: bold", error);else logger[errorLevel]("error", error);
	      }

	      if (nextStateLevel) {
	        if (colors.nextState) logger[nextStateLevel]("%c next state", "color: " + colors.nextState(nextState) + "; font-weight: bold", nextState);else logger[nextStateLevel]("next state", nextState);
	      }

	      try {
	        logger.groupEnd();
	      } catch (e) {
	        logger.log("—— log end ——");
	      }
	    });
	    logBuffer.length = 0;
	  }

	  return function (_ref) {
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        // exit early if predicate function returns false
	        if (typeof predicate === "function" && !predicate(getState, action)) {
	          return next(action);
	        }

	        var logEntry = {};
	        logBuffer.push(logEntry);

	        logEntry.started = timer.now();
	        logEntry.startedTime = new Date();
	        logEntry.prevState = stateTransformer(getState());
	        logEntry.action = action;

	        var returnedValue = undefined;
	        if (logErrors) {
	          try {
	            returnedValue = next(action);
	          } catch (e) {
	            logEntry.error = errorTransformer(e);
	          }
	        } else {
	          returnedValue = next(action);
	        }

	        logEntry.took = timer.now() - logEntry.started;
	        logEntry.nextState = stateTransformer(getState());

	        printBuffer();

	        if (logEntry.error) throw logEntry.error;
	        return returnedValue;
	      };
	    };
	  };
	}

	module.exports = createLogger;

/***/ },

/***/ 182:
/***/ function(module, exports) {

	// get successful control from form and assemble into object
	// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2

	// types which indicate a submit action and are not successful controls
	// these will be ignored
	var k_r_submitter = /^(?:submit|button|image|reset|file)$/i;

	// node names which could be successful controls
	var k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;

	// Matches bracket notation.
	var brackets = /(\[[^\[\]]*\])/g;

	// serializes form fields
	// @param form MUST be an HTMLForm element
	// @param options is an optional argument to configure the serialization. Default output
	// with no options specified is a url encoded string
	//    - hash: [true | false] Configure the output type. If true, the output will
	//    be a js object.
	//    - serializer: [function] Optional serializer function to override the default one.
	//    The function takes 3 arguments (result, key, value) and should return new result
	//    hash and url encoded str serializers are provided with this module
	//    - disabled: [true | false]. If true serialize disabled fields.
	//    - empty: [true | false]. If true serialize empty fields
	function serialize(form, options) {
	    if (typeof options != 'object') {
	        options = { hash: !!options };
	    }
	    else if (options.hash === undefined) {
	        options.hash = true;
	    }

	    var result = (options.hash) ? {} : '';
	    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);

	    var elements = form && form.elements ? form.elements : [];

	    //Object store each radio and set if it's empty or not
	    var radio_store = Object.create(null);

	    for (var i=0 ; i<elements.length ; ++i) {
	        var element = elements[i];

	        // ingore disabled fields
	        if ((!options.disabled && element.disabled) || !element.name) {
	            continue;
	        }
	        // ignore anyhting that is not considered a success field
	        if (!k_r_success_contrls.test(element.nodeName) ||
	            k_r_submitter.test(element.type)) {
	            continue;
	        }

	        var key = element.name;
	        var val = element.value;

	        // we can't just use element.value for checkboxes cause some browsers lie to us
	        // they say "on" for value when the box isn't checked
	        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {
	            val = undefined;
	        }

	        // If we want empty elements
	        if (options.empty) {
	            // for checkbox
	            if (element.type === 'checkbox' && !element.checked) {
	                val = '';
	            }

	            // for radio
	            if (element.type === 'radio') {
	                if (!radio_store[element.name] && !element.checked) {
	                    radio_store[element.name] = false;
	                }
	                else if (element.checked) {
	                    radio_store[element.name] = true;
	                }
	            }

	            // if options empty is true, continue only if its radio
	            if (!val && element.type == 'radio') {
	                continue;
	            }
	        }
	        else {
	            // value-less fields are ignored unless options.empty is true
	            if (!val) {
	                continue;
	            }
	        }

	        // multi select boxes
	        if (element.type === 'select-multiple') {
	            val = [];

	            var selectOptions = element.options;
	            var isSelectedOptions = false;
	            for (var j=0 ; j<selectOptions.length ; ++j) {
	                var option = selectOptions[j];
	                var allowedEmpty = options.empty && !option.value;
	                var hasValue = (option.value || allowedEmpty);
	                if (option.selected && hasValue) {
	                    isSelectedOptions = true;

	                    // If using a hash serializer be sure to add the
	                    // correct notation for an array in the multi-select
	                    // context. Here the name attribute on the select element
	                    // might be missing the trailing bracket pair. Both names
	                    // "foo" and "foo[]" should be arrays.
	                    if (options.hash && key.slice(key.length - 2) !== '[]') {
	                        result = serializer(result, key + '[]', option.value);
	                    }
	                    else {
	                        result = serializer(result, key, option.value);
	                    }
	                }
	            }

	            // Serialize if no selected options and options.empty is true
	            if (!isSelectedOptions && options.empty) {
	                result = serializer(result, key, '');
	            }

	            continue;
	        }

	        result = serializer(result, key, val);
	    }

	    // Check for all empty radio buttons and serialize them with key=""
	    if (options.empty) {
	        for (var key in radio_store) {
	            if (!radio_store[key]) {
	                result = serializer(result, key, '');
	            }
	        }
	    }

	    return result;
	}

	function parse_keys(string) {
	    var keys = [];
	    var prefix = /^([^\[\]]*)/;
	    var children = new RegExp(brackets);
	    var match = prefix.exec(string);

	    if (match[1]) {
	        keys.push(match[1]);
	    }

	    while ((match = children.exec(string)) !== null) {
	        keys.push(match[1]);
	    }

	    return keys;
	}

	function hash_assign(result, keys, value) {
	    if (keys.length === 0) {
	        result = value;
	        return result;
	    }

	    var key = keys.shift();
	    var between = key.match(/^\[(.+?)\]$/);

	    if (key === '[]') {
	        result = result || [];

	        if (Array.isArray(result)) {
	            result.push(hash_assign(null, keys, value));
	        }
	        else {
	            // This might be the result of bad name attributes like "[][foo]",
	            // in this case the original `result` object will already be
	            // assigned to an object literal. Rather than coerce the object to
	            // an array, or cause an exception the attribute "_values" is
	            // assigned as an array.
	            result._values = result._values || [];
	            result._values.push(hash_assign(null, keys, value));
	        }

	        return result;
	    }

	    // Key is an attribute name and can be assigned directly.
	    if (!between) {
	        result[key] = hash_assign(result[key], keys, value);
	    }
	    else {
	        var string = between[1];
	        // +var converts the variable into a number
	        // better than parseInt because it doesn't truncate away trailing
	        // letters and actually fails if whole thing is not a number
	        var index = +string;

	        // If the characters between the brackets is not a number it is an
	        // attribute name and can be assigned directly.
	        if (isNaN(index)) {
	            result = result || {};
	            result[string] = hash_assign(result[string], keys, value);
	        }
	        else {
	            result = result || [];
	            result[index] = hash_assign(result[index], keys, value);
	        }
	    }

	    return result;
	}

	// Object/hash encoding serializer.
	function hash_serializer(result, key, value) {
	    var matches = key.match(brackets);

	    // Has brackets? Use the recursive assignment function to walk the keys,
	    // construct any missing objects in the result tree and make the assignment
	    // at the end of the chain.
	    if (matches) {
	        var keys = parse_keys(key);
	        hash_assign(result, keys, value);
	    }
	    else {
	        // Non bracket notation can make assignments directly.
	        var existing = result[key];

	        // If the value has been assigned already (for instance when a radio and
	        // a checkbox have the same name attribute) convert the previous value
	        // into an array before pushing into it.
	        //
	        // NOTE: If this requirement were removed all hash creation and
	        // assignment could go through `hash_assign`.
	        if (existing) {
	            if (!Array.isArray(existing)) {
	                result[key] = [ existing ];
	            }

	            result[key].push(value);
	        }
	        else {
	            result[key] = value;
	        }
	    }

	    return result;
	}

	// urlform encoding serializer
	function str_serialize(result, key, value) {
	    // encode newlines as \r\n cause the html spec says so
	    value = value.replace(/(\r)?\n/g, '\r\n');
	    value = encodeURIComponent(value);

	    // spaces should be '+' rather than '%20'.
	    value = value.replace(/%20/g, '+');
	    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;
	}

	module.exports = serialize;


/***/ }

/******/ });